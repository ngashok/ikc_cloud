cscope 15 /home/ngashok/Projects/ikc_cloud/CLI               0001529549
	@cligen-master/build.c

2 c⁄° 
	gCLIGEN_BUILDSTR
[64]="2018.05.27 20:36 byÑoot on ubuntu";

3 c⁄° 
	gCLIGEN_VERSION
[64]="3.7.0-PRE";

	@cligen-master/cligen.h

41 
	~<°dio.h
>

42 
	~<√töë/ö.h
>

45 #i‚de‡
_CLIGEN_H_


46 
	#_CLIGEN_H_


	)

48 °ru˘ {
	ma
;} *
	t˛igí_h™dÀ
;

50 *
	t˛igí_h™dÀ
;

59 
	#CLIGEN_COMPAT_INT
 1

	)

61 
	~<˛igí/˛igí_buf.h
>

62 
	~<˛igí/˛igí_v¨.h
>

63 
	~<˛igí/˛igí_cvec.h
>

64 
	~<˛igí/˛igí_gí.h
>

65 
	~<˛igí/˛igí_h™dÀ.h
>

66 
	~<˛igí/˛igí_¥öt.h
>

67 
	~<˛igí/˛igí_ªad.h
>

68 
	~<˛igí/˛igí_io.h
>

69 
	~<˛igí/˛igí_ex∑nd.h
>

70 
	~<˛igí/˛igí_sy¡ax.h
>

71 
	~<˛igí/˛igí_utû.h
>

76 c⁄° 
CLIGEN_BUILDSTR
[];

77 c⁄° 
CLIGEN_VERSION
[];

	@cligen-master/cligen_buf.c

46 
	#CBUFLEN_START
 8*1024

	)

48 
	~<°dio.h
>

49 
	~<°dlib.h
>

50 
	~<°rög.h
>

52 
	~"˛igí_buf.h
"

56 
	scbuf
 {

57 *
	mcb_buf„r
;

58 
size_t
 
	mcb_buÊí
;

59 
size_t
 
	mcb_°æí
;

68 
cbuf
 *

69 
	$cbuf_√w
()

71 
cbuf
 *
cb
;

73 i‡((
cb
 = (
cbuf
*)
	`mÆloc
((*cb))Ë=
NULL
)

74  
NULL
;

75 
	`mem£t
(
cb
, 0, (*cb));

76 i‡((
cb
->
cb_buf„r
 = 
	`mÆloc
(
CBUFLEN_START
)Ë=
NULL
)

77  
NULL
;

78 
cb
->
cb_buÊí
 = 
CBUFLEN_START
;

79 
	`mem£t
(
cb
->
cb_buf„r
, 0, cb->
cb_buÊí
);

80 
cb
->
cb_°æí
 = 0;

81  
cb
;

82 
	}
}

88 
	$cbuf_‰ì
(
cbuf
 *
cb
)

90 i‡(
cb
->
cb_buf„r
)

91 
	`‰ì
(
cb
->
cb_buf„r
);

92 
	`‰ì
(
cb
);

93 
	}
}

99 
	$cbuf_gë
(
cbuf
 *
cb
)

101  
cb
->
cb_buf„r
;

102 
	}
}

109 
	$cbuf_Àn
(
cbuf
 *
cb
)

111  
cb
->
cb_°æí
;

112 
	}
}

119 
	$cbuf_buÊí
(
cbuf
 *
cb
)

121  
cb
->
cb_buÊí
;

122 
	}
}

128 
	$cbuf_ª£t
(
cbuf
 *
cb
)

130 
cb
->
cb_°æí
 = 0;

131 
cb
->
cb_buf„r
[0] = '\0';

132 
	}
}

141 
	$˝rötf
(
cbuf
 *
cb
,

142 c⁄° *
f‹m©
, ...)

144 
va_li°
 
≠
;

145 
diff
;

146 
ªtvÆ
;

148 
	`va_°¨t
(
≠
, 
f‹m©
);

149 
agaö
:

150 i‡(
cb
 =
NULL
)

152 
ªtvÆ
 = 
	`v¢¥ötf
(
cb
->
cb_buf„r
+cb->
cb_°æí
,

153 
cb
->
cb_buÊí
-cb->
cb_°æí
,

154 
f‹m©
, 
≠
);

155 i‡(
ªtvÆ
 < 0)

157 
diff
 = 
cb
->
cb_buÊí
 - (cb->
cb_°æí
 + 
ªtvÆ
 + 1);

158 i‡(
diff
 <= 0){

159 
cb
->
cb_buÊí
 *= 2;

160 i‡((
cb
->
cb_buf„r
 = 
	`ªÆloc
(cb->cb_buf„r, cb->
cb_buÊí
)Ë=
NULL
)

162 
	`va_íd
(
≠
);

163 
	`va_°¨t
(
≠
, 
f‹m©
);

164 
agaö
;

166 
cb
->
cb_°æí
 +
ªtvÆ
;

168 
	`va_íd
(
≠
);

169  
ªtvÆ
;

170 
	}
}

	@cligen-master/cligen_buf.h

47 #i‚de‡
_CLIGEN_BUF_H


48 
	#_CLIGEN_BUF_H


	)

50 
	~<°d¨g.h
>

55 
cbuf
 
	tcbuf
;

60 
cbuf
 *
cbuf_√w
();

61 
cbuf_‰ì
(
cbuf
 *
cb
);

62 *
cbuf_gë
(
cbuf
 *
cb
);

63 
cbuf_Àn
(
cbuf
 *
cb
);

64 
cbuf_buÊí
(
cbuf
 *
cb
);

65 
˝rötf
(
cbuf
 *
cb
, c⁄° *
f‹m©
, ...);

66 #i‡
deföed
(
__GNUC__
) && __GNUC__ >= 3

67 
	$˝rötf
(
cbuf
 *
cb
, c⁄° *
f‹m©
, ...Ë
	`__©åibuã__
 ((
	`f‹m©
 (
¥ötf
, 2, 3)));

69 
	`˝rötf
(
cbuf
 *
cb
, c⁄° *
f‹m©
, ...);

71 
	`cbuf_ª£t
(
cbuf
 *
cb
);

	@cligen-master/cligen_config.h

7 
	#CLIGEN_COMPAT_INT
 1

	)

12 
	#CLIGEN_REGFD
 1

	)

15 
	#CLIGEN_SUBMODE
 1

	)

18 
	#HAVE_INTTYPES_H
 1

	)

21 
	#HAVE_LIBM
 1

	)

27 
	#HAVE_MEMORY_H
 1

	)

30 
	#HAVE_REGEX_H
 1

	)

33 
	#HAVE_STDINT_H
 1

	)

36 
	#HAVE_STDLIB_H
 1

	)

39 
	#HAVE_STRINGS_H
 1

	)

42 
	#HAVE_STRING_H
 1

	)

45 
	#HAVE_STRSEP
 1

	)

48 
	#HAVE_STRVERSCMP
 1

	)

51 
	#HAVE_SYS_STAT_H
 1

	)

54 
	#HAVE_SYS_TYPES_H
 1

	)

57 
	#HAVE_TERMIOS_H
 1

	)

60 
	#HAVE_UNISTD_H
 1

	)

63 
	#PACKAGE_BUGREPORT
 ""

	)

66 
	#PACKAGE_NAME
 ""

	)

69 
	#PACKAGE_STRING
 ""

	)

72 
	#PACKAGE_TARNAME
 ""

	)

75 
	#PACKAGE_URL
 ""

	)

78 
	#PACKAGE_VERSION
 ""

	)

81 
	#STDC_HEADERS
 1

	)

85 
	#YYTEXT_POINTER
 1

	)

87 
	~<˛igí_cu°om.h
>

	@cligen-master/cligen_custom.h

37 °ru˘ {
	ma
;} *
	t˛igí_h™dÀ
;

39 *
	t˛igí_h™dÀ
;

	@cligen-master/cligen_cv.h

38 #i‚de‡
_CLIGEN_CV_H_


39 
	#_CLIGEN_CV_H_


	)

46 
	scg_v¨
 {

47 
cv_ty≥
 
	mv¨_ty≥
;

48 *
	mv¨_«me
;

49 *
	mv¨_show
;

50 
	mv¨_c⁄°
;

51 
	mv¨_Êag
 ;

53 
uöt8_t
 
	mv¨u_boﬁ
;

54 
öt8_t
 
	mv¨u_öt8
;

55 
öt16_t
 
	mv¨u_öt16
;

56 
öt32_t
 
	mv¨u_öt32
;

57 
öt64_t
 
	mv¨u_öt64
;

58 
uöt8_t
 
	mv¨u_uöt8
;

59 
uöt16_t
 
	mv¨u_uöt16
;

60 
uöt32_t
 
	mv¨u_uöt32
;

61 
uöt64_t
 
	mv¨u_uöt64
;

62 *
	mv¨u_°rög
;

63 *
	mv¨u_öãrÁ˚
;

65 
öt64_t
 
	mv¨dec64_i
;

66 
uöt8_t
 
	mv¨dec64_n
;

67 } 
	mv¨u_dec64
;

69 
ö_addr
 
	mv¨ùv4_ùv4addr
;

70 
uöt8_t
 
	mv¨ùv4_maskÀn
;

71 } 
	mv¨u_ùv4addr
;

73 
ö6_addr
 
	mv¨ùv6_ùv6addr
;

74 
uöt8_t
 
	mv¨ùv6_maskÀn
;

75 } 
	mv¨u_ùv6addr
;

76 
	mv¨u_maˇddr
[6];

78 *
	mv¨uæ_¥Ÿo
;

79 *
	mv¨uæ_addr
;

80 *
	mv¨uæ_∑th
;

81 *
	mv¨uæ_u£r
;

82 *
	mv¨uæ_∑sswd
;

83 } 
	mv¨u_uæ
;

84 
uuid_t
 
	mv¨u_uuid
;

85 
timevÆ
 
	mv¨u_time
;

86 } 
	mu
;

92 
	#v¨_boﬁ
 
u
.
v¨u_boﬁ


	)

93 
	#v¨_öt8
 
u
.
v¨u_öt8


	)

94 
	#v¨_öt16
 
u
.
v¨u_öt16


	)

95 
	#v¨_öt32
 
u
.
v¨u_öt32


	)

96 
	#v¨_öt64
 
u
.
v¨u_öt64


	)

97 
	#v¨_uöt8
 
u
.
v¨u_uöt8


	)

98 
	#v¨_uöt16
 
u
.
v¨u_uöt16


	)

99 
	#v¨_uöt32
 
u
.
v¨u_uöt32


	)

100 
	#v¨_uöt64
 
u
.
v¨u_uöt64


	)

101 
	#v¨_dec64_i
 
u
.
v¨u_dec64
.
v¨dec64_i


	)

102 
	#v¨_dec64_n
 
u
.
v¨u_dec64
.
v¨dec64_n


	)

103 
	#v¨_°rög
 
u
.
v¨u_°rög


	)

104 
	#v¨_void
 
u
.
v¨u_°rög


	)

105 
	#v¨_ª°
 
u
.
v¨u_°rög


	)

106 
	#v¨_öãrÁ˚
 
u
.
v¨u_°rög


	)

107 
	#v¨_maˇddr
 
u
.
v¨u_maˇddr


	)

108 
	#v¨_uuid
 
u
.
v¨u_uuid


	)

109 
	#v¨_time
 
u
.
v¨u_time


	)

110 
	#v¨_ùv4addr
 
u
.
v¨u_ùv4addr
.
v¨ùv4_ùv4addr


	)

111 
	#v¨_ùv4maskÀn
 
u
.
v¨u_ùv4addr
.
v¨ùv4_maskÀn


	)

112 
	#v¨_ùv6addr
 
u
.
v¨u_ùv6addr
.
v¨ùv6_ùv6addr


	)

113 
	#v¨_ùv6maskÀn
 
u
.
v¨u_ùv6addr
.
v¨ùv6_maskÀn


	)

114 
	#v¨_uæ¥Ÿo
 
u
.
v¨u_uæ
.
v¨uæ_¥Ÿo


	)

115 
	#v¨_uæaddr
 
u
.
v¨u_uæ
.
v¨uæ_addr


	)

116 
	#v¨_uæ∑th
 
u
.
v¨u_uæ
.
v¨uæ_∑th


	)

117 
	#v¨_uæu£r
 
u
.
v¨u_uæ
.
v¨uæ_u£r


	)

118 
	#v¨_uæ∑sswd
 
u
.
v¨u_uæ
.
v¨uæ_∑sswd


	)

	@cligen-master/cligen_cvec.c

37 
	~"˛igí_c⁄fig.h
"

39 
	~<°dio.h
>

40 
	~<°dlib.h
>

41 
	~<°döt.h
>

42 
	~<öây≥s.h
>

43 
	~<uni°d.h
>

44 
	~<sys/ty≥s.h
>

45 
	~<time.h
>

46 
	~<sys/sockë.h
>

47 
	~<√töë/ö.h
>

48 
	~<¨∑/öë.h
>

49 
	~<as£π.h
>

50 
	~<°rög.h
>

51 
	~<î∫o.h
>

53 
	~"˛igí_buf.h
"

54 
	~"˛igí_v¨.h
"

55 
	~"˛igí_cvec.h
"

56 
	~"˛igí_gí.h
"

57 
	~"˛igí_io.h
"

58 
	~"˛igí_m©ch.h
"

59 
	~"˛igí_cv.h
"

60 
	~"gëlöe.h
"

62 
	scvec
{

63 
cg_v¨
 *
	mvr_vec
;

64 
	mvr_Àn
;

65 *
	mvr_«me
;

69 
	#Æign4
(
s
Ë(((s)/4)*4 + 4)

	)

72 
ölöe
 * 
	$°rdup4
(*
°r
)

74 *
dup
;

75 
Àn
;

76 
Àn
 = 
	`Æign4
(
	`°æí
(
°r
)+1);

77 i‡((
dup
 = 
	`mÆloc
(
Àn
)Ë=
NULL
)

78  
NULL
;

79 
	`°∫˝y
(
dup
, 
°r
, 
Àn
);

80  
dup
;

81 
	}
}

88 
	gex˛udekeys
 = 0;

100 
cvec
 *

101 
	$cvec_√w
(
Àn
)

103 
cvec
 *
vr
;

105 i‡((
vr
 = 
	`mÆloc
((*vr))Ë=
NULL
)

106  
NULL
;

107 
	`mem£t
(
vr
, 0, (*vr));

108 i‡(
	`cvec_öô
(
vr
, 
Àn
) < 0){

109 
	`‰ì
(
vr
);

110  
NULL
;

112  
vr
;

113 
	}
}

120 
cvec
 *

121 
	$cvec_‰om_v¨
(
cg_v¨
 *
cv
)

123 
cvec
 *
√wvec
 = 
NULL
;

124 
cg_v¨
 *
èû
 = 
NULL
;

126 i‡(
cv
 && (
√wvec
 = 
	`cvec_√w
(0))) {

127 i‡((
èû
 = 
	`cvec_≠≥nd_v¨
(
√wvec
, 
cv
)Ë=
NULL
) {

128 
	`cvec_‰ì
(
√wvec
);

129 
√wvec
 = 
NULL
;

132  
√wvec
;

133 
	}
}

143 
	$cvec_‰ì
(
cvec
 *
cvv
)

145 
	`cvec_ª£t
(
cvv
);

146 
	`‰ì
(
cvv
);

148 
	}
}

160 
	$cvec_öô
(
cvec
 *
cvv
,

161 
Àn
)

163 
cvv
->
vr_Àn
 = 
Àn
;

164 i‡(
Àn
 && (
cvv
->
vr_vec
 = 
	`ˇŒoc
(cvv->
vr_Àn
, (
cg_v¨
))Ë=
NULL
)

167 
	}
}

175 
	$cvec_ª£t
(
cvec
 *
cvv
)

177 
cg_v¨
 *
cv
 = 
NULL
;

179 (
cv
 = 
	`cvec_óch
(
cvv
, cv)Ë!
NULL
)

180 
	`cv_ª£t
(
cv
);

181 i‡(
cvv
->
vr_vec
)

182 
	`‰ì
(
cvv
->
vr_vec
);

183 i‡(
cvv
->
vr_«me
)

184 
	`‰ì
(
cvv
->
vr_«me
);

185 
	`mem£t
(
cvv
, 0, (*cvv));

187 
	}
}

196 
cg_v¨
 *

197 
	$cvec_√xt
(
cvec
 *
cvv
,

198 
cg_v¨
 *
cv0
)

200 
cg_v¨
 *
cv
 = 
NULL
;

201 
i
;

203 i‡(
cv0
 =
NULL
)

204 
cv
 = 
cvv
->
vr_vec
;

206 
i
 = 
cv0
 - 
cvv
->
vr_vec
;

207 i‡(
i
 < 
cvv
->
vr_Àn
-1)

208 
cv
 = 
cv0
 + 1;

210  
cv
;

211 
	}
}

219 
cg_v¨
 *

220 
	$cvec_add
(
cvec
 *
cvv
,

221 
cv_ty≥
 
ty≥
)

223 
Àn
 = 
cvv
->
vr_Àn
 + 1;

224 
cg_v¨
 *
cv
;

226 i‡((
cvv
->
vr_vec
 = 
	`ªÆloc
(cvv->vr_vec, 
Àn
*(
cg_v¨
))Ë=
NULL
)

227  
NULL
;

228 
cvv
->
vr_Àn
 = 
Àn
;

229 
cv
 = 
	`cvec_i
(
cvv
, 
Àn
-1);

230 
	`mem£t
(
cv
, 0, (*cv));

231 
cv
->
v¨_ty≥
 = 
ty≥
;

232  
cv
;

233 
	}
}

241 
cg_v¨
 *

242 
	$cvec_≠≥nd_v¨
(
cvec
 *
cvv
,

243 
cg_v¨
 *
cv
)

245 
cg_v¨
 *
èû
 = 
NULL
;

247 i‡(
cvv
 && 
cv
 && (
èû
 = 
	`cvec_add
(cvv, 
	`cv_ty≥_gë
(cv)))) {

248 i‡(
	`cv_˝
(
èû
, 
cv
) < 0) {

249 
	`cvec_dñ
(
cvv
, 
èû
);

250 
èû
 = 
NULL
;

253  
èû
;

254 
	}
}

268 
	$cvec_dñ
(
cvec
 *
cvv
,

269 
cg_v¨
 *
dñ
)

271 
i
;

272 
cg_v¨
 *
cv
;

274 i‡(
	`cvec_Àn
(
cvv
) == 0)

277 
i
 = 0;

278 
cv
 = 
NULL
;

279 (
cv
 = 
	`cvec_óch
(
cvv
, cv)Ë!
NULL
) {

280 i‡(
cv
 =
dñ
)

282 
i
++;

284 i‡(
i
 >
	`cvec_Àn
(
cvv
))

285  
	`cvec_Àn
(
cvv
);

287 i‡(
i
 !
	`cvec_Àn
(
cvv
)-1)

288 
	`memmove
(&
cvv
->
vr_vec
[
i
], &cvv->vr_vec[i+1],

289 (
cvv
->
vr_Àn
-
i
-1Ë* (cvv->
vr_vec
[0]));

291 
cvv
->
vr_Àn
--;

292 
cvv
->
vr_vec
 = 
	`ªÆloc
(cvv->vr_vec, cvv->
vr_Àn
*(cvv->vr_vec[0]));

294  
	`cvec_Àn
(
cvv
);

295 
	}
}

301 
	$cvec_Àn
(
cvec
 *
cvv
)

303  
cvv
->
vr_Àn
;

304 
	}
}

310 
cg_v¨
 *

311 
	$cvec_i
(
cvec
 *
cvv
,

312 
i
)

314 i‡(
i
 < 
cvv
->
vr_Àn
)

315  &
cvv
->
vr_vec
[
i
];

316  
NULL
;

317 
	}
}

331 
cg_v¨
 *

332 
	$cvec_óch
(
cvec
 *
cvv
,

333 
cg_v¨
 *
¥ev
)

335 i‡(
¥ev
 =
NULL
){

336 i‡(
cvv
->
vr_Àn
 > 0)

337  &
cvv
->
vr_vec
[0];

339  
NULL
;

341  
	`cvec_√xt
(
cvv
, 
¥ev
);

342 
	}
}

354 
cg_v¨
 *

355 
	$cvec_óch1
(
cvec
 *
cvv
,

356 
cg_v¨
 *
¥ev
)

358 i‡(
¥ev
 =
NULL
){

359 i‡(
cvv
->
vr_Àn
 > 1)

360  &
cvv
->
vr_vec
[1];

362  
NULL
;

364  
	`cvec_√xt
(
cvv
, 
¥ev
);

365 
	}
}

375 
cvec
 *

376 
	$cvec_dup
(
cvec
 *
ﬁd
)

378 
cvec
 *
√w
;

379 
cg_v¨
 *
cv0
 = 
NULL
;

380 
cg_v¨
 *
cv1
;

381 
i
;

383 i‡((
√w
 = 
	`cvec_√w
(
ﬁd
->
vr_Àn
)Ë=
NULL
)

384  
NULL
;

385 i‡(
ﬁd
->
vr_«me
)

386 i‡((
√w
->
vr_«me
 = 
	`°rdup4
(
ﬁd
->vr_«me)Ë=
NULL
)

387  
NULL
;

388 
i
 = 0;

389 (
cv0
 = 
	`cvec_óch
(
ﬁd
, cv0)Ë!
NULL
) {

390 
cv1
 = 
	`cvec_i
(
√w
, 
i
++);

391 
	`cv_˝
(
cv1
, 
cv0
);

393  
√w
;

394 
	}
}

416 
	$cvec_m©ch
(
˛igí_h™dÀ
 
h
,

417 
cg_obj
 *
co_m©ch
,

418 *
cmd
,

419 
cvec
 *
cvv
)

421 
cg_obj
 *
co
;

422 
cg_v¨
 *
cv
;

423 
ƒ¨gs
;

424 
ƒÀvñs
;

425 
v
;

426 
j
;

427 *
vÆ
;

428 
Àvñ
;

429 
ªtvÆ
 = -1;

431 
ƒÀvñs
 = -1;

432 
ƒ¨gs
 = 0;

433 
	`mem£t
(
cvv
, 0, (*cvv));

436 
co
=
co_m©ch
; co; co=
	`co_up
(co)){

437 #ifde‡
nŸu£d


438 i‡(
co
->
co_t›
)

441 
ƒÀvñs
++;

442 
co
->
co_ty≥
){

443 
CO_VARIABLE
:

444 
ƒ¨gs
++;

446 
CO_COMMAND
:

447 i‡(!
ex˛udekeys
)

448 
ƒ¨gs
++;

450 
CO_REFERENCE
:

451 
	`Ârötf
(
°dîr
, "%s:Åy≥ shouldÇŸ bêREFERENCE\n", 
__FUNCTION__
);

452 
d⁄e
;

458 i‡(
	`cvec_öô
(
cvv
, 
ƒ¨gs
 + 1) < 0){

459 
	`Ârötf
(
°dîr
, "%s: cÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

460 
d⁄e
;

463 
cv
 = 
	`cvec_i
(
cvv
, 0);

464 
cv
->
v¨_ty≥
 = 
CGV_REST
;

465 
	`cv_°rög_£t
(
cv
, 
cmd
);

467 
v
 = 1;

468 
Àvñ
=0;Üevñ<=
ƒÀvñs
;Üevel++){

470 
j
=
ƒÀvñs
, 
co
=
co_m©ch
; j>
Àvñ
; j--)

471 
co
 = 
	`co_up
(co);

473 
cv
 = 
	`cvec_i
(
cvv
, 
v
);

474 
co
->
co_ty≥
){

475 
CO_VARIABLE
:

476 i‡(
co
->
co_vÆue
){

477 
vÆ
 = 
co
->
co_vÆue
;

478 
co
->
co_vÆue
 = 
NULL
;

481 i‡(
co
->
co_vty≥
 =
CGV_REST
)

482 
	`exåa˘_sub°rög_ª°
(
cmd
, 
Àvñ
, &
vÆ
);

484 
	`exåa˘_sub°rög
(
cmd
, 
Àvñ
, &
vÆ
);

485 
cv
->
v¨_ty≥
 = 
co
->
co_vty≥
;

486 
cv
->
v¨_«me
 = 
	`°rdup4
(
co
->
co_comm™d
);

487 i‡(
co
->
co_show
)

488 
cv
->
v¨_show
 = 
	`°rdup4
(
co
->
co_show
);

489 
cv
->
v¨_c⁄°
 = 
	`iskeyw‹d
(
co
);

490 i‡(
co
->
co_vty≥
 =
CGV_DEC64
)

491 
	`cv_dec64_n_£t
(
cv
, 
co
->
co_dec64_n
);

493 i‡(
	`cv_∑r£
(
vÆ
, 
cv
) < 0) {

495 
	`‰ì
 (
vÆ
);

496 
d⁄e
;

498 
	`‰ì
 (
vÆ
);

500 i‡(
co
->
co_å™¶©e_‚
 !
NULL
 &&

501 
co
->
	`co_å™¶©e_‚
(
h
, 
cv
) < 0)

502 
d⁄e
;

503 i‡(
co
->
co_vty≥
 =
CGV_REST
)

505 
v
++;

507 
CO_COMMAND
:

508 i‡(!
ex˛udekeys
){

509 
cv
->
v¨_«me
 = 
	`°rdup4
(
co
->
co_comm™d
);

510 
cv
->
v¨_ty≥
 = 
CGV_STRING
;

511 
	`cv_°rög_£t
(
cv
, 
co
->
co_comm™d
);

512 
cv
->
v¨_c⁄°
 = 1;

513 
v
++;

520 
ªtvÆ
 = 0;

521 
d⁄e
:

522  
ªtvÆ
;

523 
	}
}

533 
cvec
 *

534 
	$cvec_°¨t
(*
cmd
)

536 
cvec
 *cvec;

537 
cg_v¨
 *
cv
;

539 i‡((
cvec
 = 
	`cvec_√w
(1)Ë=
NULL
){

540 
	`Ârötf
(
°dîr
, "%s: cvec_√w: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

541  
NULL
;

543 
cv
 = 
	`cvec_i
(
cvec
, 0);

544 
cv
->
v¨_ty≥
 = 
CGV_REST
;

545 
	`cv_«me_£t
(
cv
, "cmd");

546 
	`cv_°rög_£t
(
cv
, 
cmd
);

547  
cvec
;

548 
	}
}

556 
	$cvec_¥öt
(
FILE
 *
f
,

557 
cvec
 *
cvv
)

559 
cg_v¨
 *
cv
 = 
NULL
;

560 *
«me
;

561 
i
 = 0;

563 (
cv
 = 
	`cvec_óch
(
cvv
, cv)Ë!
NULL
) {

564 
«me
 = 
	`cv_«me_gë
(
cv
);

565 i‡(
«me
)

566 
	`Ârötf
(
f
, "%d : %†", 
i
++, 
«me
);

568 
	`Ârötf
(
f
, "%d : ", 
i
++);

569 
	`cv_¥öt
(
f
, 
cv
);

570 
	`Ârötf
(
f
, "\n");

573 
	}
}

581 
	$cvec2cbuf
(
cbuf
 *
cb
,

582 
cvec
 *
cvv
)

584 
cg_v¨
 *
cv
 = 
NULL
;

585 
i
 = 0;

586 *
s
;

588 (
cv
 = 
	`cvec_óch
(
cvv
, cv)Ë!
NULL
) {

589 i‡((
s
 = 
	`cv2°r_dup
(
cv
)Ë=
NULL
)

591 
	`˝rötf
(
cb
, "%d : %†%s\n", 
i
++, 
	`cv_«me_gë
(
cv
), 
s
);

592 
	`‰ì
(
s
);

595 
	}
}

607 
cg_v¨
 *

608 
	$cvec_föd
(
cvec
 *
cvv
,

609 *
«me
)

611 
cg_v¨
 *
cv
 = 
NULL
;

613 (
cv
 = 
	`cvec_óch
(
cvv
, cv)Ë!
NULL
)

614 i‡(
cv
->
v¨_«me
 && 
	`°rcmp
(cv->v¨_«me, 
«me
) == 0)

615  
cv
;

616  
NULL
;

617 
	}
}

626 
cg_v¨
 *

627 
	$cvec_föd_v¨
(
cvec
 *
cvv
,

628 *
«me
)

630 
cg_v¨
 *
cv
 = 
NULL
;

632 (
cv
 = 
	`cvec_óch
(
cvv
, cv)Ë!
NULL
)

633 i‡(
cv
->
v¨_«me
 && 
	`°rcmp
(cv->v¨_«me, 
«me
Ë=0 && !cv->
v¨_c⁄°
)

634  
cv
;

635  
NULL
;

636 
	}
}

645 
cg_v¨
 *

646 
	$cvec_föd_keyw‹d
(
cvec
 *
cvv
,

647 *
«me
)

649 
cg_v¨
 *
cv
 = 
NULL
;

651 (
cv
 = 
	`cvec_óch
(
cvv
, cv)Ë!
NULL
)

652 i‡(
cv
->
v¨_«me
 && 
	`°rcmp
(cv->v¨_«me, 
«me
Ë=0 && cv->
v¨_c⁄°
)

653  
cv
;

654  
NULL
;

655 
	}
}

670 
	$cvec_föd_°r
(
cvec
 *
cvv
,

671 *
«me
)

673 
cg_v¨
 *
cv
;

675 i‡((
cv
 = 
	`cvec_föd
(
cvv
, 
«me
)Ë!
NULL
 && 
	`cv_is°rög
(cv->
v¨_ty≥
))

676  
	`cv_°rög_gë
(
cv
);

677  
NULL
;

678 
	}
}

686 
	$cvec_«me_gë
(
cvec
 *
cvv
)

688  
cvv
->
vr_«me
;

689 
	}
}

698 
	$cvec_«me_£t
(
cvec
 *
cvv
,

699 *
«me
)

701 *
s1
 = 
NULL
;

704 i‡(
«me
){

705 i‡((
s1
 = 
	`°rdup4
(
«me
)Ë=
NULL
)

706  
NULL
;

708 i‡(
cvv
->
vr_«me
 !
NULL
)

709 
	`‰ì
(
cvv
->
vr_«me
);

710 
cvv
->
vr_«me
 = 
s1
;

711  
s1
;

712 
	}
}

719 
	$cv_ex˛ude_keys
(
°©us
)

721 
ex˛udekeys
 = 
°©us
;

723 
	}
}

	@cligen-master/cligen_cvec.h

37 #i‚de‡
_CLIGEN_CVEC_H_


38 
	#_CLIGEN_CVEC_H_


	)

45 
cvec
 
	tcvec
;

51 
cvec
 *
cvec_√w
(
Àn
);

52 
cvec
 *
cvec_‰om_v¨
(
cg_v¨
 *
cv
);

53 
cvec_‰ì
(
cvec
 *
vr
);

54 
cvec_öô
(
cvec
 *
vr
, 
Àn
);

55 
cvec_ª£t
(
cvec
 *
vr
);

57 
cvec_Àn
(
cvec
 *
vr
);

58 
cg_v¨
 *
cvec_i
(
cvec
 *
vr
, 
i
);

59 
cg_v¨
 *
cvec_√xt
(
cvec
 *
vr
, cg_v¨ *
cv0
);

60 
cg_v¨
 *
cvec_add
(
cvec
 *
vr
, 
cv_ty≥
 
ty≥
);

61 
cg_v¨
 *
cvec_≠≥nd_v¨
(
cvec
 *
cvv
, cg_v¨ *
v¨
);

62 
cvec_dñ
(
cvec
 *
vr
, 
cg_v¨
 *
dñ
);

63 
cg_v¨
 *
cvec_óch
(
cvec
 *
vr
, cg_v¨ *
¥ev
);

64 
cg_v¨
 *
cvec_óch1
(
cvec
 *
vr
, cg_v¨ *
¥ev
);

65 
cvec
 *
cvec_dup
(cve¯*
ﬁd
);

66 
cvec_m©ch
(
˛igí_h™dÀ
 
h
, 
cg_obj
 *
co_m©ch
, *
cmd
, 
cvec
 *
vr
);

67 
cvec
 *
cvec_°¨t
(*
cmd
);

68 
cvec_¥öt
(
FILE
 *
f
, 
cvec
 *
vr
);

69 
cvec2cbuf
(
cbuf
 *
cb
, 
cvec
 *
cvv
);

70 
cg_v¨
 *
cvec_föd
(
cvec
 *
vr
, *
«me
);

71 
cg_v¨
 *
cvec_föd_v¨
(
cvec
 *
vr
, *
«me
);

72 
cg_v¨
 *
cvec_föd_keyw‹d
(
cvec
 *
vr
, *
«me
);

73 *
cvec_föd_°r
(
cvec
 *
vr
, *
«me
);

74 *
cvec_«me_gë
(
cvec
 *
vr
);

75 *
cvec_«me_£t
(
cvec
 *
vr
, *
«me
);

76 
cv_ex˛ude_keys
(
°©us
);

	@cligen-master/cligen_expand.c

36 
	~"˛igí_c⁄fig.h
"

38 
	~<°dio.h
>

39 
	~<°dlib.h
>

40 
	~<°rög.h
>

41 
	~<î∫o.h
>

42 
	~<as£π.h
>

43 
	~<√töë/ö.h
>

45 
	~"˛igí_buf.h
"

46 
	~"˛igí_v¨.h
"

47 
	~"˛igí_cvec.h
"

48 
	~"˛igí_gí.h
"

49 
	~"˛igí_h™dÀ.h
"

50 
	~"˛igí_¥öt.h
"

51 
	~"˛igí_ex∑nd.h
"

52 
	~"˛igí_sy¡ax.h
"

67 
	$co_ex∑nd_sub
(
cg_obj
 *
co
,

68 
cg_obj
 *
∑ª¡
,

69 
cg_obj
 **
c⁄p
)

71 
cg_obj
 *
c⁄
;

73 i‡((
c⁄
 = 
	`mÆloc
((
cg_obj
))Ë=
NULL
){

74 
	`Ârötf
(
°dîr
, "%s: mÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

77 
	`mem˝y
(
c⁄
, 
co
, (
cg_obj
));

79 
	`co_up_£t
(
c⁄
, 
∑ª¡
);

80 i‡(
co
->
co_comm™d
)

81 i‡((
c⁄
->
co_comm™d
 = 
	`°rdup
(
co
->co_comm™d)Ë=
NULL
){

82 
	`Ârötf
(
°dîr
, "%s: sådup: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

85 i‡(
co
->
co_cvec
)

86 
c⁄
->
co_cvec
 = 
	`cvec_dup
(
co
->co_cvec);

87 i‡(
co
->
co_u£rd©a
 && co->
co_u£æí
){

88 i‡((
c⁄
->
co_u£rd©a
 = 
	`mÆloc
(
co
->
co_u£æí
)Ë=
NULL
){

89 
	`Ârötf
(
°dîr
, "%s: mÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

92 
	`mem˝y
(
c⁄
->
co_u£rd©a
, 
co
->co_u£rd©a, co->
co_u£æí
);

94 i‡(
	`co_ˇŒback_c›y
(
co
->
co_ˇŒbacks
, &
c⁄
->co_callbacks) < 0)

96 i‡(
co
->
co_hñp
)

97 i‡((
c⁄
->
co_hñp
 = 
	`°rdup
(
co
->co_hñp)Ë=
NULL
){

98 
	`Ârötf
(
°dîr
, "%s: sådup: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

101 i‡(
co
->
co_mode
){

102 i‡((
c⁄
->
co_mode
 = 
	`°rdup
(
co
->co_mode)Ë=
NULL
){

103 
	`Ârötf
(
°dîr
, "%s: sådup: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

107 i‡(
co
->
co_ty≥
 =
CO_VARIABLE
){

108 i‡(
co
->
co_ex∑nd_‚_°r
)

109 i‡((
c⁄
->
co_ex∑nd_‚_°r
 = 
	`°rdup
(
co
->co_ex∑nd_‚_°r)Ë=
NULL
){

110 
	`Ârötf
(
°dîr
, "%s: sådup: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

113 i‡(
co
->
co_ex∑nd_‚_vec
)

114 i‡((
c⁄
->
co_ex∑nd_‚_vec
 = 
	`cvec_dup
(
co
->co_ex∑nd_‚_vec)Ë=
NULL
)

116 i‡(
co
->
co_å™¶©e_‚_°r
)

117 i‡((
c⁄
->
co_å™¶©e_‚_°r
 = 
	`°rdup
(
co
->co_å™¶©e_‚_°r)Ë=
NULL
){

118 
	`Ârötf
(
°dîr
, "%s: sådup: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

121 i‡(
co
->
co_show
)

122 i‡((
c⁄
->
co_show
 = 
	`°rdup
(
co
->co_show)Ë=
NULL
){

123 
	`Ârötf
(
°dîr
, "%s: sådup: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

126 i‡(
co
->
co_øngecv_low
)

127 i‡((
c⁄
->
co_øngecv_low
 = 
	`cv_dup
(
co
->co_øngecv_low)Ë=
NULL
)

129 i‡(
co
->
co_øngecv_high
)

130 i‡((
c⁄
->
co_øngecv_high
 = 
	`cv_dup
(
co
->co_øngecv_high)Ë=
NULL
)

132 i‡(
co
->
co_choi˚
)

133 i‡((
c⁄
->
co_choi˚
 = 
	`°rdup
(
co
->co_choi˚)Ë=
NULL
){

134 
	`Ârötf
(
°dîr
, "%s: sådup: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

137 i‡(
co
->
co_ªgex
)

138 i‡((
c⁄
->
co_ªgex
 = 
	`°rdup
(
co
->co_ªgex)Ë=
NULL
){

139 
	`Ârötf
(
°dîr
, "%s: sådup: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

143 
c⁄
->
co_ªf
 = 
co
;

144 *
c⁄p
 = 
c⁄
;

146 
	}
}

156 
	$å™sf‹m_v¨_to_cmd
(
cg_obj
 *
co
,

157 *
cmd
,

158 *
hñ±ext
)

160 i‡(
co
->
co_comm™d
)

161 
	`‰ì
(
co
->
co_comm™d
);

162 
co
->
co_comm™d
 = 
cmd
;

163 i‡(
hñ±ext
){

164 i‡(
co
->
co_hñp
)

165 
	`‰ì
(
co
->
co_hñp
);

166 
co
->
co_hñp
 = 
hñ±ext
;

168 i‡(
co
->
co_ex∑ndv_‚
)

169 
co
->
co_ex∑ndv_‚
 = 
NULL
;

170 i‡(
co
->
co_ex∑nd_‚_°r
){

171 
	`‰ì
(
co
->
co_ex∑nd_‚_°r
);

172 
co
->
co_ex∑nd_‚_°r
 = 
NULL
;

174 i‡(
co
->
co_ex∑nd_‚_vec
){

175 
	`cvec_‰ì
(
co
->
co_ex∑nd_‚_vec
);

176 
co
->
co_ex∑nd_‚_vec
 = 
NULL
;

178 i‡(
co
->
co_å™¶©e_‚_°r
){

179 
	`‰ì
(
co
->
co_å™¶©e_‚_°r
);

180 
co
->
co_å™¶©e_‚_°r
 = 
NULL
;

182 i‡(
co
->
co_show
){

183 
	`‰ì
(
co
->
co_show
);

184 
co
->
co_show
 = 
NULL
;

186 i‡(
co
->
co_øngecv_low
){

187 
	`cv_‰ì
(
co
->
co_øngecv_low
);

188 
co
->
co_øngecv_low
 = 
NULL
;

190 i‡(
co
->
co_øngecv_high
){

191 
	`cv_‰ì
(
co
->
co_øngecv_high
);

192 
co
->
co_øngecv_high
 = 
NULL
;

194 i‡(
co
->
co_choi˚
){

195 
	`‰ì
(
co
->
co_choi˚
);

196 
co
->
co_choi˚
 = 
NULL
;

198 i‡(
co
->
co_ªgex
){

199 
	`‰ì
(
co
->
co_ªgex
);

200 
co
->
co_ªgex
 = 
NULL
;

202 
co
->
co_ty≥
 = 
CO_COMMAND
;

204 
	}
}

222 
	$±_ˇŒback_ª„ªn˚
(
∑r£_åì
 
±
,

223 
cg_ˇŒback
 *
cc0
)

225 
i
;

226 
cg_obj
 *
co
;

227 
∑r£_åì
 *
±c
;

228 
ªtvÆ
 = -1;

229 
cg_ˇŒback
 *
cc
;

231 
i
=0; i<
±
.
±_Àn
; i++){

232 i‡((
co
 = 
±
.
±_vec
[
i
]Ë=
NULL
)

234 
±c
 = &
co
->
co_±
;

236 i‡(
±c
->
±_Àn
 &&Ötc->
±_vec
[0] =
NULL
){

238 i‡((
cc
 = 
co
->
co_ˇŒbacks
Ë=
NULL
){

239 i‡(
	`co_ˇŒback_c›y
(
cc0
, &
co
->
co_ˇŒbacks
) < 0)

243 #ifde‡
CALLBACK_SINGLEARG


244 
cc
->
cc_‚
 = 
cc0
->cc_fn;

246 
cc
->
cc_‚_vec
 = 
cc0
->cc_fn_vec;

247 i‡(
cc0
->
cc_‚_°r
){

248 i‡(
cc
->
cc_‚_°r
)

249 
	`‰ì
 (
cc
->
cc_‚_°r
);

250 
cc
->
cc_‚_°r
 = 
	`°rdup
(
cc0
->cc_fn_str);

254 i‡(
	`±_ˇŒback_ª„ªn˚
(
co
->
co_±
, 
cc0
) < 0)

255 
d⁄e
;

257 
ªtvÆ
 = 0;

258 
d⁄e
:

259  
ªtvÆ
;

260 
	}
}

265 
	$±_ª„ªn˚_åunc
(
∑r£_åì
 
±
)

267 
i
;

268 
cg_obj
 *
co
;

269 
ªtvÆ
 = -1;

271 
i
=0; i<
±
.
±_Àn
; i++){

272 i‡((
co
 = 
±
.
±_vec
[
i
]Ë=
NULL
)

274 i‡(
co
->
co_n⁄ãrmöÆ
)

275 i‡(
co
->
co_max
 && co->
co_√xt
[0] !
NULL
){

276 
	`co_ö£π
(&
co
->
co_±
, 
NULL
);

278 i‡(
	`±_ª„ªn˚_åunc
(
co
->
co_±
) < 0)

279 
d⁄e
;

281 
ªtvÆ
 = 0;

282 
d⁄e
:

283  
ªtvÆ
;

284 
	}
}

299 
	$±_ex∑nd_åìªf
(
˛igí_h™dÀ
 
h
,

300 
cg_obj
 *
c›ªv
,

301 
∑r£_åì
 *
±0
)

303 
i
, 
k
;

304 
cg_obj
 *
co
;

305 
∑r£_åì
 *
±ªf
;

306 
∑r£_åì
 
±1ªf
 = {0, };

307 
cg_obj
 *
cŸ
;

308 *
åì«me
;

309 
cg_obj
 *
c›ªv2
;

311 i‡(
±0
->
±_vec
 =
NULL
)

313 
agaö
:

314 
i
=0; i<
±0
->
±_Àn
; i++){

315 i‡((
co
 = 
±0
->
±_vec
[
i
]Ë=
NULL
)

318 i‡(
co
->
co_ty≥
 =
CO_REFERENCE
 && !co->
co_ªfd⁄e
){

321 
åì«me
 = 
co
->
co_comm™d
;

324 i‡((
±ªf
 = 
	`˛igí_åì_föd
(
h
, 
åì«me
)Ë=
NULL
){

325 
	`Ârötf
(
°dîr
, "CLIgen subtree '%s'Çot found\n",

326 
åì«me
);

331 
c›ªv2
 = 
	`co_up
(
co
);

333 i‡(
	`±_c›y
(*
±ªf
, 
c›ªv2
, &
±1ªf
) < 0){

334 
	`Ârötf
(
°dîr
, "%s: C›yögÖ¨£-åì\n", 
__FUNCTION__
);

338 i‡(
co
->
co_hide
 &&

339 
	`±_ª„ªn˚_åunc
(
±1ªf
) < 0)

342 i‡(
co
->
co_ˇŒbacks
 &&

343 
	`±_ˇŒback_ª„ªn˚
(
±1ªf
, 
co
->
co_ˇŒbacks
) < 0)

346 
k
=0; k<
±1ªf
.
±_Àn
; k++)

347 i‡((
cŸ
 = 
±1ªf
.
±_vec
[
k
]Ë!
NULL
){

348 
cŸ
->
co_åìªf
++;

349 i‡(
	`co_ö£π
(
±0
, 
cŸ
Ë=
NULL
)

354 
	`‰ì
(
±1ªf
.
±_vec
);

355 i‡(
c›ªv
 && c›ªv->
co_ªf
)

356 
c›ªv
->
co_ªf
->
co_±
 = coprev->co_pt;

358 
co
->
co_ªfd⁄e
 = 1;

359 
agaö
;

363 
	}
}

370 
	$±_ex∑nd_‚v
(
˛igí_h™dÀ
 
h
,

371 
cg_obj
 *
co
,

372 
cvec
 *
cvv
,

373 
∑r£_åì
 *
±n
,

374 
cg_obj
 *
∑ª¡
)

376 
ªtvÆ
 = -1;

377 
cvec
 *
comm™ds
 = 
	`cvec_√w
(0);

378 
cvec
 *
hñ±exts
 = 
	`cvec_√w
(0);

379 
cg_v¨
 *
cv
 = 
NULL
;

380 *
hñp°r
;

381 
cg_obj
 *
c⁄
;

382 
i
;

384 i‡((*
co
->
co_ex∑ndv_‚
)(

385 
	`˛igí_u£rh™dÀ
(
h
)?cligen_userhandle(h):h,

386 
co
->
co_ex∑nd_‚_°r
,

387 
cvv
,

388 
co
->
co_ex∑nd_‚_vec
,

389 
comm™ds
,

390 
hñ±exts
) < 0)

391 
d⁄e
;

392 
i
 = 0;

393 (
cv
 = 
	`cvec_óch
(
comm™ds
, cv)Ë!
NULL
) {

394 i‡(
i
 < 
	`cvec_Àn
(
hñ±exts
)){

395 
hñp°r
 = 
	`°rdup
(
	`cv_°rög_gë
(
	`cvec_i
(
hñ±exts
, 
i
)));

398 
hñp°r
 = 
NULL
;

399 
i
++;

400 
	`±_ªÆloc
(
±n
);

401 i‡(
	`co_ex∑nd_sub
(
co
, 
∑ª¡
,

402 &
±n
->
±_vec
[±n->
±_Àn
-1]) < 0)

403 
d⁄e
;

404 
c⁄
 = 
±n
->
±_vec
[±n->
±_Àn
-1];

405 i‡(
	`å™sf‹m_v¨_to_cmd
(
c⁄
,

406 
	`°rdup
(
	`cv_°rög_gë
(
cv
)),

407 
hñp°r
) < 0)

408 
d⁄e
;

410 i‡(
comm™ds
)

411 
	`cvec_‰ì
(
comm™ds
);

412 i‡(
hñ±exts
)

413 
	`cvec_‰ì
(
hñ±exts
);

414 
ªtvÆ
 = 0;

415 
d⁄e
:

416  
ªtvÆ
;

418 
	}
}

423 
	$±_ex∑nd_choi˚
(
cg_obj
 *
co
,

424 
∑r£_åì
 *
±n
,

425 
cg_obj
 *
∑ª¡
)

427 
ªtvÆ
 = -1;

428 *
ccmd
;

429 *
˝
 = 
NULL
;

430 *
c
;

431 
cg_obj
 *
c⁄
;

434 i‡(
co
->
co_choi˚
){

435 
˝
 = 
ccmd
 = 
	`°rdup
(
co
->
co_choi˚
);

436 (
c
 = 
	`°r£p
(&
ccmd
, ",|")Ë!
NULL
){

437 
	`±_ªÆloc
(
±n
);

438 i‡(
	`co_ex∑nd_sub
(
co
, 
∑ª¡
,

439 &
±n
->
±_vec
[±n->
±_Àn
-1]) < 0)

440 
d⁄e
;

441 
c⁄
 = 
±n
->
±_vec
[±n->
±_Àn
-1];

442 i‡(
	`å™sf‹m_v¨_to_cmd
(
c⁄
, 
	`°rdup
(
c
), 
NULL
) < 0)

443 
d⁄e
;

446 
ªtvÆ
 = 0;

447 
d⁄e
:

448 i‡(
˝
)

449 
	`‰ì
(
˝
);

450  
ªtvÆ
;

451 
	}
}

464 
	$±_ex∑nd_2
(
˛igí_h™dÀ
 
h
,

465 
∑r£_åì
 *
±r
,

466 
cvec
 *
cvv
,

467 
∑r£_åì
 *
±n
,

468 
hide
)

470 
i
;

471 
cg_obj
 *
co
;

472 
cg_obj
 *
∑ª¡
 = 
NULL
;

473 
ªtvÆ
 = -1;

475 
±n
->
±_Àn
 = 0;

476 
±n
->
±_vec
 = 
NULL
;

477 i‡(
±r
->
±_vec
 =
NULL
)

479 
i
=0; i<
±r
->
±_Àn
; i++){

480 i‡((
co
 = 
±r
->
±_vec
[
i
]Ë!
NULL
){

481 i‡(
	`co_vÆue_£t
(
co
, 
NULL
) < 0)

482 
d⁄e
;

483 i‡(
hide
 && 
co
->
co_hide
)

489 i‡(
co
->
co_ty≥
 =
CO_VARIABLE
 && co->
co_choi˚
 !
NULL
){

490 i‡(
	`±_ex∑nd_choi˚
(
co
, 
±n
, 
∑ª¡
) < 0)

491 
d⁄e
;

496 i‡(
co
->
co_ty≥
 =
CO_VARIABLE
 &&

497 
co
->
co_ex∑ndv_‚
 !
NULL
){

498 i‡(
	`±_ex∑nd_‚v
(
h
, 
co
, 
cvv
, 
±n
, 
∑ª¡
) < 0)

499 
d⁄e
;

503 
	`±_ªÆloc
(
±n
);

506 i‡(
	`co_ex∑nd_sub
(
co
, 
∑ª¡
,

507 &
±n
->
±_vec
[±n->
±_Àn
-1]) < 0)

508 
d⁄e
;

514 
	`±_ªÆloc
(
±n
);

517 
	`˛igí_∑r£åì_s‹t
(*
±n
, 1);

518 i‡(
	`˛igí_logsy¡ax
(
h
) > 0){

519 
	`Ârötf
(
°dîr
, "%s:\n", 
__FUNCTION__
);

520 
	`˛igí_¥öt
(
°dîr
, *
±n
, 0);

522 
ªtvÆ
 = 0;

523 
d⁄e
:

524  
ªtvÆ
;

525 
	}
}

532 
	$±_ex∑nd_åìªf_˛ónup
(
∑r£_åì
 *
±
)

534 
i
, 
j
;

535 
cg_obj
 *
co
;

537 i‡(
±
->
±_vec
 =
NULL
)

539 
i
=0; i<
±
->
±_Àn
; i++){

540 
agaö
:

541 i‡((
co
 = 
±
->
±_vec
[
i
]Ë!
NULL
){

542 i‡(
co
->
co_ªfd⁄e
)

543 
co
->
co_ªfd⁄e
 = 0;

544 i‡(
co
->
co_åìªf
){

545 
±
->
±_vec
[
i
] = 
NULL
;

546 
	`co_‰ì
(
co
, 1);

547 
j
=
i
; j<
±
->
±_Àn
-1; j++)

548 
±
->
±_vec
[
j
] =Öt->pt_vec[j+1];

549 
±
->
±_Àn
--;

550 i‡(
i
<
±
->
±_Àn
)

551 
agaö
;

556 i‡(
	`±_ex∑nd_åìªf_˛ónup
(&
co
->
co_±
) < 0)

561 
	}
}

568 
	$±_ex∑nd_˛ónup_2
(
∑r£_åì
 
±
)

570 
i
;

571 
cg_obj
 *
co
;

573 i‡(
±
.
±_vec
 =
NULL
)

575 
i
=0; i<
±
.
±_Àn
; i++){

576 i‡((
co
 = 
±
.
±_vec
[
i
]Ë!
NULL
){

577 i‡(
	`co_vÆue_£t
(
co
, 
NULL
) < 0)

579 i‡(
co
->
co_±_exp
.
±_vec
 !
NULL
){

580 i‡(
	`˛igí_∑r£åì_‰ì
(
co
->
co_±_exp
, 0) < 0)

582 
	`mem£t
(&
co
->
co_±_exp
, 0, (
∑r£_åì
));

584 i‡(
	`±_ex∑nd_˛ónup_2
(
co
->
co_±
) < 0)

589 
	}
}

598 
	$±_ex∑nd_add
(
cg_obj
 *
co
,

599 
∑r£_åì
 
±n
)

601 i‡(
co
->
co_±_exp
.
±_vec
 !
NULL
){

602 i‡(
	`˛igí_∑r£åì_‰ì
(
co
->
co_±_exp
, 0) < 0)

605 
co
->
co_±_exp
 = 
±n
;

607 
	}
}

624 
	$ª„ªn˚_∑th_m©ch
(
cg_obj
 *
co1
,

625 
∑r£_åì
 
±0
,

626 
cg_obj
 **
co0p
)

628 
cg_obj
 *
co0
, *
co
;

630 i‡(
co1
 =
NULL
)

632 i‡(
co1
->
co_åìªf
){

633 i‡((
co0
 = 
	`co_föd_⁄e
(
±0
, 
co1
->
co_comm™d
)Ë=
NULL
)

635 *
co0p
 = 
co0
;

638 i‡(
	`ª„ªn˚_∑th_m©ch
(
	`co_up
(
co1
), 
±0
, &
co
) < 0)

640 i‡((
co0
 = 
	`co_föd_⁄e
(
co
->
co_±
, 
co1
->
co_comm™d
)Ë=
NULL
)

642 *
co0p
 = 
co0
;

644 
	}
}

	@cligen-master/cligen_expand.h

37 #i‚de‡
_CLIGEN_EXPAND_H_


38 
	#_CLIGEN_EXPAND_H_


	)

46 
	#±_ex∑nd_1
(
h
, 
c›ªv
, 
±
Ë
	`±_ex∑nd_åìªf
(h, c›ªv,Öt)

	)

47 
	#±_ex∑nd_˛ónup_1
(
±
Ë
	`±_ex∑nd_åìªf_˛ónup
’t)

	)

52 
±_ex∑nd_åìªf
(
˛igí_h™dÀ
 
h
, 
cg_obj
 *
c›ªv
, 
∑r£_åì
 *
±
);

53 
±_ex∑nd_2
(
˛igí_h™dÀ
 
h
, 
∑r£_åì
 *
±
, 
cvec
 *cvec,Ö¨£_åì *
±n
, 
hide
);

54 
±_ex∑nd_åìªf_˛ónup
(
∑r£_åì
 *
±
);

55 
±_ex∑nd_˛ónup_2
(
∑r£_åì
 
±
);

56 
±_ex∑nd_add
(
cg_obj
 *
co
, 
∑r£_åì
 
±n
);

57 
ª„ªn˚_∑th_m©ch
(
cg_obj
 *
co1
, 
∑r£_åì
 
±0
, cg_obj **
co0p
);

58 
å™sf‹m_v¨_to_cmd
(
cg_obj
 *
co
, *
cmd
, *
commít
);

	@cligen-master/cligen_file.c

37 
	~<°dio.h
>

38 
	~<°dlib.h
>

39 
	~<°rög.h
>

40 
	~<î∫o.h
>

41 
	~<uni°d.h
>

42 
	~<sys/waô.h
>

43 
	~<sys/°©.h
>

44 
	~<√töë/ö.h
>

46 
	~<˛igí/˛igí.h
>

63 
	$˛igí_exec_cb
(
˛igí_h™dÀ
 
h™dÀ
, 
cvec
 *
cvv
, cve¯*
¨gv
)

65 
cg_v¨
 *
cv
 = 
NULL
;

66 
buf
[64];

67 
pid
;

68 
ªt
;

69 
°©us
;

71 i‡(
¨gv
 =
NULL
)

73 i‡((
pid
 = 
	`f‹k
()) == 0){

74 (
cv
 = 
	`cvec_óch1
(
cvv
, cv)Ë!
NULL
) {

75 i‡(
	`cv_c⁄°_gë
(
cv
))

77 
	`cv2°r
(
cv
, 
buf
, (buf)-1);

78 
	`£ãnv
(
	`cv_«me_gë
(
cv
), 
buf
, 1 );

80 
	`cv2°r
(
	`cvec_i
(
¨gv
, 0), 
buf
, (buf)-1);

81 
ªt
 = 
	`sy°em
(
buf
);

82 
	`exô
(0);

85 if(
	`waôpid
 (
pid
, &
°©us
, 0) ==Öid)

86 
ªt
 = 
	`WEXITSTATUS
(
°©us
);

88 
ªt
 = -1;

89  
ªt
;

90 
	}
}

95 
	$ˇŒback
(
˛igí_h™dÀ
 
h™dÀ
, 
cvec
 *
cvv
, cve¯*
¨gv
)

97 
i
 = 1;

98 
cg_v¨
 *
cv
;

99 
buf
[64];

101 
	`Ârötf
(
°dîr
, "fun˘i⁄: %s\n", 
	`˛igí_‚_°r_gë
(
h™dÀ
));

102 
	`Ârötf
(
°dîr
, "variables:\n");

103 
cv
 = 
NULL
;

104 (
cv
 = 
	`cvec_óch1
(
cvv
, cv)Ë!
NULL
) {

105 
	`cv2°r
(
cv
, 
buf
, (buf)-1);

106 
	`Ârötf
(
°dîr
, "\t%dÇame:%sÅype:%s value:%s\n",

107 
i
++,

108 
	`cv_«me_gë
(
cv
),

109 
	`cv_ty≥2°r
(
	`cv_ty≥_gë
(
cv
)),

110 
buf


113 i‡(
¨gv
){

114 
cv
 = 
NULL
;

115 
i
=0;

116 (
cv
 = 
	`cvec_óch
(
¨gv
, cv)Ë!
NULL
) {

117 
	`cv2°r
(
cv
, 
buf
, (buf)-1);

118 
	`Ârötf
(
°dîr
, "¨g %d: %s\n", 
i
++, 
buf
);

122 
	}
}

127 
cgv_‚°y≥_t
 *

128 
	$°r2‚
(*
«me
, *
¨g
, **
îr‹
)

130 *
îr‹
 = 
NULL
;

131 i‡(
	`°rcmp
(
«me
, "callback") == 0)

132  
ˇŒback
;

133 i‡(
	`°rcmp
(
«me
, "cligen_exec_cb") == 0)

134  
˛igí_exec_cb
;

135  
ˇŒback
;

136 
	}
}

142 
	$ußge
(*
¨gv
)

144 
	`Ârötf
(
°dîr
, "Ußge: %†[-h][-‡<fûíame>][-q][-p]\n", 
¨gv
);

145 
	`exô
(0);

146 
	}
}

150 
	$maö
(
¨gc
, *
¨gv
[])

152 
ªtvÆ
 = -1;

153 
∑r£_åì
 *
±
;

154 
FILE
 *
f
 = 
°dö
;

155 *
¨gv0
 = 
¨gv
[0];

156 *
fûíame
=
NULL
;

157 
cvec
 *
globÆs
;

158 
˛igí_h™dÀ
 
h
;

159 *
°r
;

160 
quô
 = 0;

161 
¥öt_sy¡ax
 = 0;

163 
¨gv
++;
¨gc
--;

164 ;(
¨gc
>0)&& *
¨gv
;árgc--,árgv++){

165 i‡(**
¨gv
 != '-')

167 (*
¨gv
)++;

168 i‡(
	`°æí
(*
¨gv
)==0)

169 
	`ußge
(
¨gv0
);

170 **
¨gv
) {

172 
	`ußge
(
¨gv0
);

175 
quô
++;

178 
¥öt_sy¡ax
++;

181 
¨gc
--;
¨gv
++;

182 
fûíame
 = *
¨gv
;

183 i‡((
f
 = 
	`f›í
(
fûíame
, "r")Ë=
NULL
){

184 
	`Ârötf
(
°dîr
, "f›í(%s): %s\n", 
fûíame
, 
	`°ªº‹
(
î∫o
));

185 
	`exô
(1);

189 
	`ußge
(
¨gv0
);

193 i‡((
h
 = 
	`˛igí_öô
()Ë=
NULL
)

194 
d⁄e
;

195 
	`˛igí_Àxiˇl‹dî_£t
(
h
, 1);

196 
	`˛igí_ign‹eˇ£_£t
(
h
, 1);

198 i‡((
globÆs
 = 
	`cvec_√w
(0)Ë=
NULL
)

199 
d⁄e
;

200 i‡(
	`˛igí_∑r£_fûe
(
h
, 
f
, 
fûíame
?fûíame:"°dö", 
NULL
, 
globÆs
) < 0)

201 
d⁄e
;

202 
±
 = 
	`˛igí_åì_i
(
h
, 0);

205 i‡(
±
 && 
	`˛igí_ˇŒbackv_°r2‚
(*±, 
°r2‚
, 
NULL
) < 0)

206 
d⁄e
;

207 i‡((
°r
 = 
	`cvec_föd_°r
(
globÆs
, "¥om±")Ë!
NULL
)

208 
	`˛igí_¥om±_£t
(
h
, 
°r
);

209 i‡((
°r
 = 
	`cvec_föd_°r
(
globÆs
, "èbmode")Ë!
NULL
)

210 
	`˛igí_èbmode_£t
(
h
, 
	`°rcmp
(
°r
,"long") == 0);

211 i‡((
°r
 = 
	`cvec_föd_°r
(
globÆs
, "commít")Ë!
NULL
)

212 
	`˛igí_commít_£t
(
h
, *
°r
);

213 i‡((
°r
 = 
	`cvec_föd_°r
(
globÆs
, "mode")Ë!
NULL
)

214 
	`˛igí_åì_a˘ive_£t
(
h
, 
°r
);

215 
	`cvec_‰ì
(
globÆs
);

217 i‡(
¥öt_sy¡ax
){

218 
	`˛igí_¥öt
(
°dout
, *
±
, 0);

219 
	`fÊush
(
°dout
);

221 i‡(
quô
)

222 
d⁄e
;

223 i‡(
	`˛igí_lo›
(
h
) < 0)

224 
d⁄e
;

225 
ªtvÆ
 = 0;

226 
d⁄e
:

227 
	`f˛o£
(
f
);

228 i‡(
h
)

229 
	`˛igí_exô
(
h
);

230  
ªtvÆ
;

231 
	}
}

	@cligen-master/cligen_gen.c

35 
	~"˛igí_c⁄fig.h
"

37 
	~<°dio.h
>

38 
	~<°dlib.h
>

39 
	~<°döt.h
>

40 
	~<°d¨g.h
>

41 
	~<öây≥s.h
>

42 
	~<uni°d.h
>

43 
	~<sys/ty≥s.h
>

44 
	~<sys/sockë.h
>

45 
	~<√töë/ö.h
>

46 
	~<¨∑/öë.h
>

47 
	~<as£π.h
>

48 
	~<˘y≥.h
>

49 
	#__USE_GNU


	)

50 
	~<°rög.h
>

51 
	~<î∫o.h
>

53 
	~"˛igí_buf.h
"

54 
	~"˛igí_v¨.h
"

55 
	~"˛igí_cvec.h
"

56 
	~"˛igí_gí.h
"

57 
	~"˛igí_io.h
"

58 
	~"˛igí_ªad.h
"

59 
	~"˛igí_∑r£.h
"

60 
	~"˛igí_h™dÀ.h
"

61 
	~"gëlöe.h
"

64 
±_‰ì1
(
∑r£_åì
, 
ªcursive
);

88 
	$cov_¥ef
(
cg_obj
 *
co
)

90 
¥ef
 = 0;

92 
co
->
co_vty≥
){

93 
CGV_ERR
:

94 
¥ef
 = 0;

97 
CGV_INT8
:

98 i‡(
co
->
co_ønge
)

99 
¥ef
 = 60;

101 
¥ef
 = 52;

103 
CGV_INT16
:

104 i‡(
co
->
co_ønge
)

105 
¥ef
 = 58;

107 
¥ef
 = 50;

109 
CGV_INT32
:

110 i‡(
co
->
co_ønge
)

111 
¥ef
 = 56;

113 
¥ef
 = 48;

115 
CGV_INT64
:

116 i‡(
co
->
co_ønge
)

117 
¥ef
 = 54;

119 
¥ef
 = 46;

121 
CGV_UINT8
:

122 i‡(
co
->
co_ønge
)

123 
¥ef
 = 59;

125 
¥ef
 = 51;

127 
CGV_UINT16
:

128 i‡(
co
->
co_ønge
)

129 
¥ef
 = 57;

131 
¥ef
 = 49;

133 
CGV_UINT32
:

134 i‡(
co
->
co_ønge
)

135 
¥ef
 = 55;

137 
¥ef
 = 47;

139 
CGV_UINT64
:

140 i‡(
co
->
co_ønge
)

141 
¥ef
 = 53;

143 
¥ef
 = 45;

145 
CGV_DEC64
:

146 
¥ef
 = 62;

148 
CGV_BOOL
:

149 
¥ef
 = 12;

151 
CGV_REST
:

152 
¥ef
 = 1;

154 
CGV_STRING
:

155 i‡(
co
->
co_ªgex
)

156 
¥ef
 = 7;

158 
¥ef
 = 5;

160 
CGV_INTERFACE
:

161 
¥ef
 = 10;

163 
CGV_IPV4ADDR
:

164 
CGV_IPV4PFX
:

165 
¥ef
 = 70;

167 
CGV_IPV6ADDR
:

168 
CGV_IPV6PFX
:

169 
¥ef
 = 71;

171 
CGV_MACADDR
:

172 
¥ef
 = 72;

174 
CGV_URL
:

175 
¥ef
 = 20;

177 
CGV_UUID
:

178 
¥ef
 = 73;

180 
CGV_TIME
:

181 
¥ef
 = 74;

183 
CGV_VOID
:

185 
CGV_EMPTY
:

188  
¥ef
;

189 
	}
}

203 
	$co_¥ef
(
cg_obj
 *
co
,

204 
exa˘
)

206 
¥ef
 = 0;;

208 
co
->
co_ty≥
){

209 
CO_COMMAND
:

210 i‡(
co
->
co_ªf
 && !
exa˘
)

211 
¥ef
 = 3;

213 
¥ef
 = 100;

215 
CO_VARIABLE
:

216 
¥ef
 = 
	`cov_¥ef
(
co
);

218 
CO_REFERENCE
:

222  
¥ef
;

223 
	}
}

235 
cg_obj
 *

236 
	$co_√w
(*
cmd
,

237 
cg_obj
 *
∑ª¡
)

239 
cg_obj
 *
co
;

241 i‡((
co
 = 
	`mÆloc
((
cg_obj
))Ë=
NULL
){

242 
	`≥º‹
("co_new: malloc");

243  
NULL
;

245 
	`mem£t
(
co
, 0, (
cg_obj
));

246 
co
->
co_ty≥
 = 
CO_COMMAND
;

247 
co
->
co_comm™d
 = 
	`°rdup
(
cmd
);

248 
	`co_up_£t
(
co
, 
∑ª¡
);

249 
co
->
co_max
 = 0;

250 
co
->
co_√xt
 = 
NULL
;

251 
co
->
co_dñimôî
 = ' ';

252 #ifde‡
nŸyë


253 
co
->
co_cv
 = 
	`cv_√w
(
CGV_ERR
);

255  
co
;

256 
	}
}

268 
cg_obj
 *

269 
	$cov_√w
(
cv_ty≥
 
cvty≥
,

270 
cg_obj
 *
∑ª¡
)

272 
cg_obj
 *
co
;

274 i‡((
co
 = 
	`mÆloc
((
cg_obj
))Ë=
NULL
){

275 
	`≥º‹
("co_new: malloc");

276  
NULL
;

278 
	`mem£t
(
co
, 0, (
cg_obj
));

279 
co
->
co_ty≥
 = 
CO_VARIABLE
;

280 
co
->
co_vty≥
 = 
cvty≥
;

281 i‡(
∑ª¡
)

282 
	`co_up_£t
(
co
, 
∑ª¡
);

283 
co
->
co_max
 = 0;

284 
co
->
co_√xt
 = 
NULL
;

285 
co
->
co_dñimôî
 = ' ';

286 
co
->
co_dec64_n
 = 
CGV_DEC64_N_DEFAULT
;

287 #ifde‡
nŸyë


288 
co
->
co_cv
 = 
	`cv_√w
(
CGV_ERR
);

290  
co
;

291 
	}
}

311 
	$±_ªÆloc
(
∑r£_åì
 *
±
)

313 
±
->
±_Àn
++;

315 i‡((
±
->
±_vec
 = 
	`ªÆloc
’t->±_vec, (±->
±_Àn
)*(
cg_obj
 *))) == 0){

316 
	`Ârötf
(
°dîr
, "%s:ÑóŒoc", 
__FUNCTION__
);

319 
±
->
±_vec
[±->
±_Àn
 - 1] = 
NULL
;

321 
	}
}

335 
	$co_ˇŒback_c›y
(
cg_ˇŒback
 *
cc0
,

336 
cg_ˇŒback
 **
c˙
)

338 
cg_ˇŒback
 *
cc
;

339 
cg_ˇŒback
 *
cc1
;

340 
cg_ˇŒback
 **
c˝
;

342 
c˝
 = 
c˙
;

343 
cc
 = 
cc0
; cc; cc=cc->
cc_√xt
){

344 i‡((
cc1
 = 
	`mÆloc
((*cc1))Ë=
NULL
){

345 
	`Ârötf
(
°dîr
, "%s: mÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

348 
	`mem£t
(
cc1
, 0, (*cc1));

349 #ifde‡
CALLBACK_SINGLEARG


350 
cc1
->
cc_‚
 = 
cc
->cc_fn;

352 
cc1
->
cc_‚_vec
 = 
cc
->cc_fn_vec;

353 i‡(
cc
->
cc_‚_°r
)

354 i‡((
cc1
->
cc_‚_°r
 = 
	`°rdup
(
cc
->cc_‚_°r)Ë=
NULL
){

355 
	`Ârötf
(
°dîr
, "%s: sådup: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

358 i‡(
cc
->
cc_cvec
 && ((
cc1
->cc_cve¯
	`cvec_dup
(cc->cc_cvec)Ë=
NULL
))

360 *
c˝
 = 
cc1
;

361 
c˝
 = &
cc1
->
cc_√xt
;

364 
	}
}

376 
	$co_c›y
(
cg_obj
 *
co
,

377 
cg_obj
 *
∑ª¡
,

378 
cg_obj
 **
c⁄p
)

380 
cg_obj
 *
c⁄
;

382 i‡((
c⁄
 = 
	`mÆloc
((
cg_obj
))Ë=
NULL
){

383 
	`Ârötf
(
°dîr
, "%s: mÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

386 
	`mem˝y
(
c⁄
, 
co
, (
cg_obj
));

387 
	`mem£t
(&
c⁄
->
co_±_push
, 0, (
∑r£_åì
));

388 
	`mem£t
(&
c⁄
->
co_±_exp
, 0, (
∑r£_åì
));

389 
c⁄
->
co_ªf
 = 
NULL
;

390 
c⁄
->
co_m¨k
 = 0;

391 
c⁄
->
co_ªfd⁄e
 = 0;

393 
	`co_up_£t
(
c⁄
, 
∑ª¡
);

394 i‡(
co
->
co_comm™d
)

395 i‡((
c⁄
->
co_comm™d
 = 
	`°rdup
(
co
->co_comm™d)Ë=
NULL
){

396 
	`Ârötf
(
°dîr
, "%s: sådup: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

399 i‡(
	`co_ˇŒback_c›y
(
co
->
co_ˇŒbacks
, &
c⁄
->co_callbacks) < 0)

401 i‡(
co
->
co_cvec
)

402 
c⁄
->
co_cvec
 = 
	`cvec_dup
(
co
->co_cvec);

403 i‡(
co
->
co_u£rd©a
 && co->
co_u£æí
){

404 i‡((
c⁄
->
co_u£rd©a
 = 
	`mÆloc
(
co
->
co_u£æí
)Ë=
NULL
){

405 
	`Ârötf
(
°dîr
, "%s: mÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

408 
	`mem˝y
(
c⁄
->
co_u£rd©a
, 
co
->co_u£rd©a, co->
co_u£æí
);

411 i‡(
co
->
co_√xt
)

412 i‡(
	`±_c›y
(
co
->
co_±
, 
c⁄
, &con->co_pt) < 0)

414 i‡(
co
->
co_hñp
)

415 i‡((
c⁄
->
co_hñp
 = 
	`°rdup
(
co
->co_hñp)Ë=
NULL
){

416 
	`Ârötf
(
°dîr
, "%s: sådup: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

419 i‡(
co
->
co_mode
){

420 i‡((
c⁄
->
co_mode
 = 
	`°rdup
(
co
->co_mode)Ë=
NULL
){

421 
	`Ârötf
(
°dîr
, "%s: sådup: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

425 i‡(
	`co_vÆue_£t
(
c⁄
, 
co
->
co_vÆue
) < 0)

428 i‡(
co
->
co_ty≥
 =
CO_VARIABLE
){

429 i‡(
co
->
co_ex∑nd_‚_°r
)

430 i‡((
c⁄
->
co_ex∑nd_‚_°r
 = 
	`°rdup
(
co
->co_ex∑nd_‚_°r)Ë=
NULL
){

431 
	`Ârötf
(
°dîr
, "%s: sådup: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

434 i‡(
co
->
co_å™¶©e_‚_°r
)

435 i‡((
c⁄
->
co_å™¶©e_‚_°r
 = 
	`°rdup
(
co
->co_å™¶©e_‚_°r)Ë=
NULL
){

436 
	`Ârötf
(
°dîr
, "%s: sådup: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

439 i‡(
co
->
co_show
)

440 i‡((
c⁄
->
co_show
 = 
	`°rdup
(
co
->co_show)Ë=
NULL
){

441 
	`Ârötf
(
°dîr
, "%s: sådup: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

444 i‡(
co
->
co_øngecv_low
)

445 i‡((
c⁄
->
co_øngecv_low
 = 
	`cv_dup
(
co
->co_øngecv_low)Ë=
NULL
)

447 i‡(
co
->
co_øngecv_high
)

448 i‡((
c⁄
->
co_øngecv_high
 = 
	`cv_dup
(
co
->co_øngecv_high)Ë=
NULL
)

450 i‡(
co
->
co_ex∑nd_‚_vec
)

451 i‡((
c⁄
->
co_ex∑nd_‚_vec
 = 
	`cvec_dup
(
co
->co_ex∑nd_‚_vec)Ë=
NULL
)

454 i‡(
co
->
co_choi˚
){

455 i‡((
c⁄
->
co_choi˚
 = 
	`°rdup
(
co
->co_choi˚)Ë=
NULL
){

456 
	`Ârötf
(
°dîr
, "%s: sådup: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

460 i‡(
co
->
co_ªgex
){

461 i‡((
c⁄
->
co_ªgex
 = 
	`°rdup
(
co
->co_ªgex)Ë=
NULL
){

462 
	`Ârötf
(
°dîr
, "%s: sådup: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

467 *
c⁄p
 = 
c⁄
;

469 
	}
}

483 
	$±_c›y
(
∑r£_åì
 
±
,

484 
cg_obj
 *
∑ª¡
,

485 
∑r£_åì
 *
±≈
)

487 
i
;

488 
j
;

489 
∑r£_åì
 
±n
 = {0,};

490 
cg_obj
 *
co
;

492 i‡(
±
.
±_vec
 =
NULL
){

493 *
±≈
 = 
±n
;

497 
i
=0; i<
±
.
±_Àn
; i++){

498 i‡((
co
 = 
±
.
±_vec
[
i
]Ë&& co->
co_åìªf
)

501 
±n
.
±_Àn
++;

504 i‡((
±n
.
±_vec
 = (
cg_obj
 **)
	`mÆloc
’ä.
±_Àn
*(cg_obj *))Ë=
NULL
){

505 
	`Ârötf
(
°dîr
, "%s: mÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

508 
j
=0;

509 
i
=0; i<
±
.
±_Àn
; i++){

510 i‡((
co
 = 
±
.
±_vec
[
i
]Ë!
NULL
){

511 i‡(!
co
->
co_åìªf
)

512 i‡(
	`co_c›y
(
co
, 
∑ª¡
, &
±n
.
±_vec
[
j
++]) < 0)

516 
±n
.
±_vec
[
j
++] = 
NULL
;

518 
i
=0; i<
±n
.
±_Àn
; i++){

519 i‡((
co
 = 
±n
.
±_vec
[
i
]Ë!
NULL
){

520 
	`as£π
(
co
->
co_åìªf
 == 0);

521 
	`as£π
(
co
->
co_m¨k
 == 0);

524 *
±≈
 = 
±n
;

526 
	}
}

544 
ölöe
 

545 
	$°r_cmp
(*
s1
,

546 *
s2
)

548 i‡(
s1
 =
NULL
 && 
s2
 == NULL)

550 i‡(
s1
 =
NULL
)

552 i‡(
s2
 =
NULL
)

558 #ifde‡ 
HAVE_STRVERSCMP


559 i‡(
	`˛igí_Àxiˇl‹dî
(
NULL
))

560  
	`°rvîscmp
(
s1
, 
s2
);

562  
	`˛igí_ign‹eˇ£
(
NULL
Ë? 
	`°rˇ£cmp
(
s1
, 
s2
Ë: 
	`°rcmp
(s1, s2);

564  
	`˛igí_ign‹eˇ£
(
NULL
Ë? 
	`°rˇ£cmp
(
s1
, 
s2
Ë: 
	`°rcmp
(s1, s2);

566 
	}
}

585 
	$co_eq
(
cg_obj
 *
co1
,

586 
cg_obj
 *
co2
)

588 
eq
;

591 
eq
 = !(
co1
->
co_ty≥
 =
co2
->co_type);

592 i‡(
eq
){

596 i‡(
co1
->
co_ty≥
 =
CO_REFERENCE
)

597 
eq
 = 1;

598 i‡(
co2
->
co_ty≥
 =
CO_REFERENCE
)

599 
eq
 = -1;

601 i‡(
co1
->
co_ty≥
 =
CO_COMMAND
){

602 i‡(
co2
->
co_vty≥
 =
CGV_STRING
 &&

603 
	`iskeyw‹d
(
co2
)){

604 i‡((
eq
 = 
	`°rcmp
(
co1
->
co_comm™d
, 
co2
->
co_keyw‹d
)) == 0)

605 
d⁄e
;

607 
eq
 = 
	`°rcmp
(
co1
->
co_comm™d
, 
co2
->co_command);

608 
d⁄e
;

611 i‡(
co1
->
co_vty≥
 =
CGV_STRING
 &&

612 
	`iskeyw‹d
(
co1
)){

613 
eq
 = 
	`°rcmp
(
co1
->
co_keyw‹d
, 
co2
->
co_comm™d
);

614 
d⁄e
;

616 
eq
 = 
	`°rcmp
(
co1
->
co_comm™d
, 
co2
->co_command);

617 
d⁄e
;

620 
d⁄e
;

622 
co1
->
co_ty≥
){

623 
CO_COMMAND
:

624 
CO_REFERENCE
:

625 
eq
 = 
	`°r_cmp
(
co1
->
co_comm™d
, 
co2
->co_command);

627 
CO_VARIABLE
:

628 
eq
 = (
co1
->
co_vty≥
 =
co2
->co_vtype)?0:(co1->co_vtype < co2->co_vtype)?-1:1;

630 i‡(
eq
 != 0)

631 
d⁄e
;

633 i‡(
co1
->
co_ex∑nd_‚_°r
!=
NULL
 || 
co2
->co_expand_fn_str!=NULL){

634 
eq
 = 
	`°r_cmp
(
co1
->
co_ex∑nd_‚_°r
, 
co2
->co_expand_fn_str);

635 
d⁄e
;

639 i‡(
co1
->
co_choi˚
!=
NULL
 || 
co2
->co_choice!=NULL){

640 
eq
 = 
	`°r_cmp
(
co1
->
co_choi˚
, 
co2
->co_choice);

641 
d⁄e
;

644 i‡(
co1
->
co_ªgex
!=
NULL
 || 
co2
->co_regex!=NULL){

645 
eq
 = 
	`°r_cmp
(
co1
->
co_ªgex
, 
co2
->co_regex);

646 
d⁄e
;

649 i‡(
	`cv_isöt
(
co1
->
co_vty≥
Ë|| 
	`cv_is°rög
(co1->co_vtype)) {

650 i‡((
eq
 = 
co1
->
co_ønge
 - 
co2
->co_range) != 0)

651 
d⁄e
;

653 i‡(
co1
->
co_ønge
){

654 i‡(
co1
->
co_øngecv_low
 && 
co2
->co_rangecv_low){

655 i‡((
eq
 = 
	`cv_cmp
(
co1
->
co_øngecv_low
, 
co2
->co_rangecv_low)) != 0)

656 
d⁄e
;

659 i‡(
co1
->
co_øngecv_low
 || 
co2
->co_rangecv_low){

660 
eq
 = 1;

661 
d⁄e
;

663 i‡(
co1
->
co_øngecv_high
 && 
co2
->co_rangecv_high){

664 i‡((
eq
 = 
	`cv_cmp
(
co1
->
co_øngecv_high
, 
co2
->co_rangecv_high)) != 0)

665 
d⁄e
;

668 i‡(
co1
->
co_øngecv_high
 || 
co2
->co_rangecv_high){

669 
eq
 = 1;

670 
d⁄e
;

672 
d⁄e
;

678 
d⁄e
:

679  
eq
;

680 
	}
}

690 
	$˛igí_∑r£åì_mîge
(
∑r£_åì
 *
±0
,

691 
cg_obj
 *
∑ª¡
,

692 
∑r£_åì
 
±1
)

694 
cg_obj
 *
co0
=
NULL
;

695 
cg_obj
 *
co1
;

696 
cg_obj
 *
co1c
;

697 
i
;

698 
j
;

699 
ªtvÆ
 = -1;

700 
exi°
;

702 
j
=0; j<
±1
.
±_Àn
; j++){

703 
co1
 = 
±1
.
±_vec
[
j
];

704 
exi°
 = 0;

705 
i
=0; i<
±0
->
±_Àn
; i++){

706 
co0
 = 
±0
->
±_vec
[
i
];

707 i‡(
co0
 =
NULL
 && 
co1
 == NULL){

708 
exi°
 = 1;

711 i‡(
co0
 && 
co1
 && 
	`co_eq
(co0, co1)==0){

712 
exi°
 = 1;

716 i‡(
co1
==
NULL
){

717 i‡(
exi°
)

719 i‡(
	`±_ªÆloc
(
±0
) < 0)

720 
d⁄e
;

721 
±0
->
±_vec
[±0->
±_Àn
-1]
NULL
;

724 i‡(
exi°
){

725 i‡(
	`˛igí_∑r£åì_mîge
(&
co0
->
co_±
, co0, 
co1
->co_pt) < 0)

726 
d⁄e
;

729 i‡(
	`±_ªÆloc
(
±0
) < 0)

730 
d⁄e
;

731 i‡(
	`co_c›y
(
co1
, 
∑ª¡
, &
co1c
) < 0)

732 
d⁄e
;

733 
±0
->
±_vec
[±0->
±_Àn
-1]
co1c
;

736 
	`˛igí_∑r£åì_s‹t
(*
±0
, 0);

737 
ªtvÆ
 = 0;

738 
d⁄e
:

739  
ªtvÆ
;

740 
	}
}

750 
	$co_cmp
(c⁄° * 
¨g1
,

751 c⁄° * 
¨g2
)

753 
cg_obj
* 
co1
 = *(cg_obj**)
¨g1
;

754 
cg_obj
* 
co2
 = *(cg_obj**)
¨g2
;

756 i‡(
co1
 =
NULL
){

757 i‡(
co2
 =
NULL
)

762 i‡(
co2
 =
NULL
)

765  
	`co_eq
(
co1
, 
co2
);

766 
	}
}

774 
	$˛igí_∑r£åì_s‹t
(
∑r£_åì
 
±
,

775 
ªcursive
)

777 
cg_obj
 *
co
;

778 
i
;

780 
	`qs‹t
(
±
.
±_vec
,Öt.
±_Àn
, (
cg_obj
*), 
co_cmp
);

781 
i
=0; i<
±
.
±_Àn
; i++){

782 i‡((
co
 = 
±
.
±_vec
[
i
]Ë=
NULL
)

784 i‡(
co
->
co_m¨k
 == 0){

785 
co
->
co_m¨k
 = 1;

786 i‡(
co
->
co_√xt
 && 
ªcursive
)

787 
	`˛igí_∑r£åì_s‹t
(
co
->
co_±
, 1);

788 
co
->
co_m¨k
 = 0;

791 
	}
}

804 
	$co_‰ì
(
cg_obj
 *
co
,

805 
ªcursive
)

807 
cg_ˇŒback
 *
cc
;

809 i‡(
ªcursive
 && 
co
->
co_√xt
)

810 
	`±_‰ì1
(
co
->
co_±
, 1);

811 i‡(
co
->
co_hñp
)

812 
	`‰ì
(
co
->
co_hñp
);

813 i‡(
co
->
co_comm™d
)

814 
	`‰ì
(
co
->
co_comm™d
);

815 i‡(
co
->
co_mode
)

816 
	`‰ì
(
co
->
co_mode
);

817 i‡(
co
->
co_vÆue
)

818 
	`‰ì
(
co
->
co_vÆue
);

819 i‡(
co
->
co_u£rd©a
)

820 
	`‰ì
(
co
->
co_u£rd©a
);

821 i‡(
co
->
co_cvec
)

822 
	`cvec_‰ì
(
co
->
co_cvec
);

823 (
cc
 = 
co
->
co_ˇŒbacks
Ë!
NULL
){

824 i‡(
cc
->
cc_cvec
)

825 
	`cvec_‰ì
(
cc
->
cc_cvec
);

826 i‡(
cc
->
cc_‚_°r
)

827 
	`‰ì
(
cc
->
cc_‚_°r
);

828 
co
->
co_ˇŒbacks
 = 
cc
->
cc_√xt
;

829 
	`‰ì
(
cc
);

831 i‡(
co
->
co_ty≥
 =
CO_VARIABLE
){

832 i‡(
co
->
co_ex∑nd_‚_°r
)

833 
	`‰ì
(
co
->
co_ex∑nd_‚_°r
);

834 i‡(
co
->
co_å™¶©e_‚_°r
)

835 
	`‰ì
(
co
->
co_å™¶©e_‚_°r
);

836 i‡(
co
->
co_show
)

837 
	`‰ì
(
co
->
co_show
);

838 i‡(
co
->
co_ex∑nd_‚_vec
)

839 
	`cvec_‰ì
(
co
->
co_ex∑nd_‚_vec
);

840 i‡(
co
->
co_choi˚
)

841 
	`‰ì
(
co
->
co_choi˚
);

842 i‡(
co
->
co_ªgex
)

843 
	`‰ì
(
co
->
co_ªgex
);

844 i‡(
co
->
co_øngecv_low
)

845 
	`cv_‰ì
(
co
->
co_øngecv_low
);

846 i‡(
co
->
co_øngecv_high
)

847 
	`cv_‰ì
(
co
->
co_øngecv_high
);

849 #ifde‡
nŸyë


850 i‡(
co
->
co_cv
)

851 
	`cv_‰ì
(
co
->
co_cv
);

853 
	`‰ì
(
co
);

855 
	}
}

864 
	$±_‰ì1
(
∑r£_åì
 
±
,

865 
ªcursive
)

867 
i
;

869 i‡(
±
.
±_vec
 =
NULL
)

871 
i
=0; i<
±
.
±_Àn
; i++)

872 i‡(
±
.
±_vec
[
i
])

873 
	`co_‰ì
(
±
.
±_vec
[
i
], 
ªcursive
);

874 i‡(
±
.
±_«me
)

875 
	`‰ì
(
±
.
±_«me
);

876 
±
.
±_«me
 = 
NULL
;

877 i‡(
±
.
±_vec
)

878 
	`‰ì
(
±
.
±_vec
);

879 
±
.
±_vec
 = 
NULL
;

880 
±
.
±_Àn
 = 0;

882 
	}
}

892 
	$˛igí_∑r£åì_‰ì
(
∑r£_åì
 
±
,

893 
ªcursive
)

895  
	`±_‰ì1
(
±
, 
ªcursive
);

896 
	}
}

907 
cg_obj
 *

908 
	$co_£¨ch1
(
∑r£_åì
 
±
,

909 *
«me
,

910 
low
,

911 
uµî
)

913 
mid
;

914 
cmp
;

915 
cg_obj
 *
co
;

917 i‡(
uµî
 < 
low
)

918  
NULL
;

919 
mid
 = (
low
 + 
uµî
) / 2;

920 i‡(
mid
 >
±
.
±_Àn
)

921  
NULL
;

922 
co
 = 
±
.
±_vec
[
mid
];

923 
cmp
 = 
	`°r_cmp
(
«me
, 
co
 ? co->
co_comm™d
 : 
NULL
);

924 i‡(
cmp
 < 0)

925  
	`co_£¨ch1
(
±
, 
«me
, 
low
, 
mid
-1);

926 i‡(
cmp
 > 0)

927  
	`co_£¨ch1
(
±
, 
«me
, 
mid
+1, 
uµî
);

929  
co
;

930 
	}
}

942 
	$co_ö£π_pos
(
∑r£_åì
 
±
,

943 
cg_obj
 *
co1
,

944 
low
,

945 
uµî
)

947 
mid
;

948 
cmp
;

949 
cg_obj
 *
co2
;

951 i‡(
uµî
 < 
low
)

952  
low
;

953 
mid
 = (
low
 + 
uµî
) / 2;

954 i‡(
mid
 >
±
.
±_Àn
)

955  
±
.
±_Àn
;

956 i‡(
co1
 =
NULL
)

958 
co2
 = 
±
.
±_vec
[
mid
];

959 i‡(
co2
 =
NULL
)

960 
cmp
 = 1;

962 
cmp
 = 
	`co_eq
(
co1
, 
co2
);

963 i‡(
cmp
 < 0)

964  
	`co_ö£π_pos
(
±
, 
co1
, 
low
, 
mid
-1);

965 i‡(
cmp
 > 0)

966  
	`co_ö£π_pos
(
±
, 
co1
, 
mid
+1, 
uµî
);

968  
mid
;

969 
	}
}

984 
cg_obj
*

985 
	$co_ö£π
(
∑r£_åì
 *
±
,

986 
cg_obj
 *
co1
)

988 
pos
;

989 
size_t
 
size
;

990 
cg_obj
 *
co2
;

993 
pos
 = 
	`co_ö£π_pos
(*
±
, 
co1
, 0,Öt->
±_Àn
);

995 i‡(
pos
 < 
±
->
±_Àn
){

996 
co2
 = 
±
->
±_vec
[
pos
];

997 i‡(
co1
 =
NULL
 && 
co2
==NULL)

998  
NULL
;

999 i‡(
co1
 && 
co2
 && 
	`co_eq
(co1, co2)==0){

1000 
	`˛igí_∑r£åì_mîge
(&
co2
->
co_±
, co2, 
co1
->co_pt);

1001 
	`co_‰ì
(
co1
, 1);

1002  
co2
;

1005 i‡(
	`±_ªÆloc
(
±
) < 0)

1006  
NULL
;

1007 i‡((
size
 = (
±
->
±_Àn
 - (
pos
+1))*(
cg_obj
*)) != 0)

1008 
	`memmove
(&
±
->
±_vec
[
pos
+1],

1009 &
±
->
±_vec
[
pos
],

1010 
size
);

1011 
±
->
±_vec
[
pos
] = 
co1
;

1012  
co1
;

1013 
	}
}

1025 
cg_obj
 *

1026 
	$co_föd_⁄e
(
∑r£_åì
 
±
,

1027 *
«me
)

1029  
	`co_£¨ch1
(
±
, 
«me
, 0,Öt.
±_Àn
);

1030 
	}
}

1040 
	$co_vÆue_£t
(
cg_obj
 *
co
,

1041 *
°r
)

1043 i‡(
co
->
co_vÆue
){

1044 
	`‰ì
(
co
->
co_vÆue
);

1045 
co
->
co_vÆue
 = 
NULL
;

1047 i‡(
°r
 !
NULL
)

1048 i‡((
co
->
co_vÆue
 = 
	`°rdup
(
°r
)Ë=
NULL
){

1049 
	`Ârötf
(
°dîr
, "%s: sådup: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

1053 
	}
}

1062 
	$˛igí_ªas⁄
(c⁄° *
fmt
, ...)

1064 *
ªas⁄
;

1065 
ªs
;

1066 
Àn
;

1067 
va_li°
 
≠
;

1069 
	`va_°¨t
 (
≠
, 
fmt
);

1070 
Àn
 = 
	`v¢¥ötf
(
NULL
, 0, 
fmt
, 
≠
);

1071 
Àn
++;

1072 
	`va_íd
 (
≠
);

1073 i‡((
ªas⁄
 = 
	`mÆloc
(
Àn
)Ë=
NULL
){

1074 
	`Ârötf
(
°dîr
, "%s: mÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

1075  
NULL
;

1077 
	`va_°¨t
 (
≠
, 
fmt
);

1079 i‡((
ªs
 = 
	`v¢¥ötf
(
ªas⁄
, 
Àn
, 
fmt
, 
≠
)) < 0){

1080 
	`‰ì
(
ªas⁄
);

1081 
ªas⁄
 = 
NULL
;

1083  
ªas⁄
;

1084 
	}
}

1097 
	$±_≠∂y
(
∑r£_åì
 
±
,

1098 
cg_≠∂y‚_t
 
‚
,

1099 *
¨g
)

1101 
cg_obj
 *
co
;

1102 
i
;

1103 
ªtvÆ
 = -1;

1105 i‡(
±
.
±_vec
 =
NULL
)

1107 
i
=0; i<
±
.
±_Àn
; i++){

1108 i‡((
co
 = 
±
.
±_vec
[
i
]Ë=
NULL
)

1110 i‡(
	`‚
(
co
, 
¨g
) < 0)

1111 
d⁄e
;

1112 i‡(
	`±_≠∂y
(
co
->
co_±
, 
‚
, 
¨g
) < 0)

1113 
d⁄e
;

1115 
ªtvÆ
 = 0;

1116 
d⁄e
:

1117  
ªtvÆ
;

1118 
	}
}

	@cligen-master/cligen_gen.h

35 #i‚de‡
_CLIGEN_GEN_H_


36 
	#_CLIGEN_GEN_H_


	)

38 
	#CLIGEN_DELIMITERS
 " \t"

	)

39 
	#CLIGEN_QUOTES
 "\""

	)

46 
	ecg_objty≥
{

47 
	mCO_COMMAND
,

48 
	mCO_VARIABLE
,

49 
	mCO_REFERENCE


58 (
	tcg_‚°y≥_t
)(
	t˛igí_h™dÀ
 
	th
, 
	tcvec
 *
	tv¨s
, 
	tcg_v¨
 *
	t¨g
);

59 (
	tcgv_‚°y≥_t
)(
	t˛igí_h™dÀ
 
	th
, 
	tcvec
 *
	tv¨s
, cve¯*
	t¨gv
);

66 (
	tex∑ndv_cb
)(
	t˛igí_h™dÀ
 
	th
,

67 *
	t«me
,

68 
	tcvec
 *
	tcvv
,

69 
	tcvec
 *
	t¨gv
,

70 
	tcvec
 *
	tcomm™ds
,

71 
	tcvec
 *
	thñ±exts


76 (
	tå™¶©e_cb_t
)(
	t˛igí_h™dÀ
 
	th
, 
	tcg_v¨
 *
	tcv
);

80 (
	t˛igí_su•_cb_t
)(*
	th
, *, , *);

84 (
	t˛igí_öãºu±_cb_t
)(
	t˛igí_h™dÀ
 
	th
);

101 
	s∑r£_åì
{

102 
cg_obj
 **
±_vec
;

103 
±_Àn
;

104 
∑r£_åì
 *
±_up
;

105 *
±_«me
;

107 
±_obj
;

111 
∑r£_åì
 
	t∑r£_åì
;

115 
	scg_ˇŒback
 {

116 
cg_ˇŒback
 *
cc_√xt
;

117 #ifde‡
CALLBACK_SINGLEARG


118 
cg_‚°y≥_t
 *
cc_‚
;

120 
cgv_‚°y≥_t
 *
cc_‚_vec
;

121 *
cc_‚_°r
;

122 
cvec
 *
cc_cvec
;

130 
	scg_v¨•ec
{

131 
cv_ty≥
 
cgs_vty≥
;

132 *
cgs_show
;

133 *
cgs_ex∑nd_‚_°r
;

134 
ex∑ndv_cb
 *
cgs_ex∑ndv_‚
;

135 
cvec
 *
cgs_ex∑nd_‚_vec
;

136 *
cgs_å™¶©e_‚_°r
;

137 
å™¶©e_cb_t
 *
cgs_å™¶©e_‚
;

138 *
cgs_choi˚
;

139 
cgs_ønge
;

140 
cg_v¨
 *
cgs_øngecv_low
;

141 
cg_v¨
 *
cgs_øngecv_high
;

142 *
cgs_ªgex
;

143 
uöt8_t
 
cgs_dec64_n
;

145 
cg_v¨•ec
 
	tcg_v¨•ec
;

148 
	#CGV_DEC64_N_DEFAULT
 2

	)

163 
	scg_obj
{

164 
∑r£_åì
 
co_±
;

165 
cg_obj
 *
co_¥ev
;

166 
cg_objty≥
 
co_ty≥
;

167 
co_dñimôî
;

168 *
co_comm™d
;

169 
cg_ˇŒback
 *
co_ˇŒbacks
;

170 
cvec
 *
co_cvec
;

171 
co_m¨k
;

172 *
co_hñp
;

173 #ifde‡
nŸu£d


174 
co_t›
;

176 
co_hide
;

177 *
co_mode
;

181 
∑r£_åì
 
co_±_exp
;

182 
cg_obj
 *
co_ªf
;

183 *
co_vÆue
;

186 *
co_u£rd©a
;

188 
size_t
 
co_u£æí
;

190 #ifde‡
nŸyë


191 
cg_v¨
 *
co_cv
;

193 
co_åìªf
;

194 
co_ªfd⁄e
;

198 
co_n⁄ãrmöÆ
;

201 
∑r£_åì
 
co_±_push
;

202 
co_pushed
;

206 °ru˘ { } 
cou_cmd
;

207 
cg_v¨•ec
 
cou_v¨
;

208 } 
u
;

210 
cg_obj
 
	tcg_obj
;

212 
cg_obj
** 
	t±_vec
;

215 (
	tcg_≠∂y‚_t
)(
	tcg_obj
 *
	tco
, *
	t¨g
);

218 
	#co2v¨•ec
(
co
Ë&(co)->
u
.
cou_v¨


	)

221 
	#co_√xt
 
co_±
.
±_vec


	)

222 
	#co_max
 
co_±
.
±_Àn


	)

223 
	#co_vty≥
 
u
.
cou_v¨
.
cgs_vty≥


	)

224 
	#co_show
 
u
.
cou_v¨
.
cgs_show


	)

225 
	#co_ex∑nd_‚_°r
 
u
.
cou_v¨
.
cgs_ex∑nd_‚_°r


	)

226 
	#co_ex∑ndv_‚
 
u
.
cou_v¨
.
cgs_ex∑ndv_‚


	)

227 
	#co_ex∑nd_‚_vec
 
u
.
cou_v¨
.
cgs_ex∑nd_‚_vec


	)

228 
	#co_å™¶©e_‚_°r
 
u
.
cou_v¨
.
cgs_å™¶©e_‚_°r


	)

229 
	#co_å™¶©e_‚
 
u
.
cou_v¨
.
cgs_å™¶©e_‚


	)

230 
	#co_choi˚
 
u
.
cou_v¨
.
cgs_choi˚


	)

231 
	#co_keyw‹d
 
u
.
cou_v¨
.
cgs_choi˚


	)

232 
	#co_ønge
 
u
.
cou_v¨
.
cgs_ønge


	)

233 
	#co_øngecv_low
 
u
.
cou_v¨
.
cgs_øngecv_low


	)

234 
	#co_øngecv_high
 
u
.
cou_v¨
.
cgs_øngecv_high


	)

235 
	#co_ªgex
 
u
.
cou_v¨
.
cgs_ªgex


	)

236 
	#co_dec64_n
 
u
.
cou_v¨
.
cgs_dec64_n


	)

238 
	#iskeyw‹d
(
CV
Ë((CV)->
co_choi˚
!=
NULL
 && 
	`°rchr
((CV)->co_choi˚, '|')==NULL)

	)

244 
ölöe
 
cg_obj
*

245 
	$co_up
(
cg_obj
 *
co
)

247  
co
->
co_¥ev
;

248 
	}
}

250 
ölöe
 

251 
	$co_up_£t
(
cg_obj
 *
co
, cg_obj *
c›
)

253 
co
->
co_¥ev
 = 
c›
;

255 
	}
}

257 
ölöe
 
∑r£_åì
*

258 
	$±_up
(
∑r£_åì
 *
±
)

260  
±
->
±_up
;

261 
	}
}

263 
ölöe
 

264 
	$±_up_£t
(
∑r£_åì
 *
±
,Ö¨£_åì *
±p
)

266 
±
->
±_up
 = 
±p
;

267 
±
->
±_obj
 = 0;

269 
	}
}

271 
ölöe
 
cg_obj
*

272 
	$co_up
(
cg_obj
 *
co
)

274 
∑r£_åì
 *
±
 = (∑r£_åì*)&
co
->
co_±
;

276 i‡(
±
->
±_obj
)

277  (
cg_obj
*)
	`±_up
(
±
);

279  
NULL
;

280 
	}
}

282 
ölöe
 

283 
	$co_up_£t
(
cg_obj
 *
co
, cg_obj *
c›
)

285 
ªtvÆ
;

286 
∑r£_åì
 *
±
 = (∑r£_åì*)&
co
->
co_±
;

288 
ªtvÆ
 = 
	`±_up_£t
(
±
, (
∑r£_åì
*)
c›
);

289 
±
->
±_obj
 = (
c›
 !
NULL
);

290  
ªtvÆ
;

291 
	}
}

295 
ölöe
 
cg_obj
*

296 
	$co_t›
(
cg_obj
 *
co0
)

298 
cg_obj
 *
co
 = 
co0
;

299 
cg_obj
 *
co1
;

301 (
co1
 = 
	`co_up
(
co
)Ë!
NULL
)

302 
co
 = 
co1
;

303  
co
;

304 
	}
}

309 
˛igí_∑r£åì_s‹t
(
∑r£_åì
 
±
, 
ªcursive
);

310 
cg_obj
 *
co_√w
(*
cmd
, cg_obj *
¥ev
);

311 
cg_obj
 *
cov_√w
(
cv_ty≥
 
cvty≥
, cg_obj *
¥ev
);

312 
co_¥ef
(
cg_obj
 *
co
, 
exa˘
);

313 
±_ªÆloc
(
∑r£_åì
 *);

314 
co_ˇŒback_c›y
(
cg_ˇŒback
 *
cc0
, cg_ˇŒback **
c˙
);

315 
co_c›y
(
cg_obj
 *
co
, cg_obj *
∑ª¡
, cg_obj **
c⁄p
);

316 
±_c›y
(
∑r£_åì
 
±
, 
cg_obj
 *
∑ª¡
,Ö¨£_åì *
±n
);

317 
˛igí_∑r£åì_mîge
(
∑r£_åì
 *
±0
, 
cg_obj
 *
∑ª¡0
,Ö¨£_åì 
±1
);

318 
˛igí_∑r£åì_‰ì
(
∑r£_åì
 
±
, 
ªcur£
);

319 
co_‰ì
(
cg_obj
 *
co
, 
ªcursive
);

320 
cg_obj
 *
co_ö£π
(
∑r£_åì
 *
±
, cg_obj *
co
);

321 
cg_obj
 *
co_föd_⁄e
(
∑r£_åì
 
±
, *
«me
);

322 
co_vÆue_£t
(
cg_obj
 *
co
, *
°r
);

323 *
˛igí_ªas⁄
(c⁄° *
fmt
, ...);

324 
±_≠∂y
(
∑r£_åì
 
±
, 
cg_≠∂y‚_t
 
‚
, *
¨g
);

	@cligen-master/cligen_handle.c

33 
	~"˛igí_c⁄fig.h
"

35 
	~<°dio.h
>

36 
	~<°dlib.h
>

37 
	~<°döt.h
>

38 
	~<°d¨g.h
>

39 
	~<öây≥s.h
>

40 
	~<uni°d.h
>

41 
	~<sys/ty≥s.h
>

42 
	~<sys/sockë.h
>

43 
	~<√töë/ö.h
>

44 
	~<¨∑/öë.h
>

45 
	~<as£π.h
>

46 
	~<˘y≥.h
>

47 
	#__USE_GNU


	)

48 
	~<°rög.h
>

49 
	~<î∫o.h
>

50 
	~<ãrmios.h
>

51 
	~<sig«l.h
>

52 
	~<sys/io˘l.h
>

54 
	~"˛igí_buf.h
"

55 
	~"˛igí_v¨.h
"

56 
	~"˛igí_cvec.h
"

57 
	~"˛igí_gí.h
"

58 
	~"˛igí_io.h
"

59 
	~"˛igí_h™dÀ.h
"

60 
	~"˛igí_ªad.h
"

61 
	~"˛igí_∑r£.h
"

62 
	~"gëlöe.h
"

65 
	#h™dÀ
(
h
Ë(
	`Ârötf
(
°dîr
, "%s\n", 
__FUNCTION__
), \

66 
	`as£π
(
	`˛igí_check
(
h
)==0), \

67 (
˛igí_h™dÀ
 *)(
h
))

	)

71 
	#h™dÀ
(
h
Ë(
	`as£π
(
	`˛igí_check
(h)==0),(
˛igí_h™dÀ
 *)(h))

	)

83 
	#TERM_ROWS_DEFAULT
 24

	)

84 
	#GETLINE_BUFLEN_DEFAULT
 64

	)

88 
	s∑r£_åì_li°
 {

89 
∑r£_åì_li°
 *
	m±l_√xt
;

90 
∑r£_åì
 
	m±l_∑r£åì
;

91 
	m±l_a˘ive
;

92 } 
	t∑r£_åì_li°
;

94 
	#CLIGEN_MAGIC
 0x56ab55Ø

	)

97 
	s˛igí_h™dÀ
{

98 
	mch_magic
;

99 
	mch_exôög
;

100 
	mch_commít
;

101 *
	mch_¥om±
;

102 
∑r£_åì_li°
 *
	mch_åì
;

103 *
	mch_åì«me_keyw‹d
;

104 
cg_obj
 *
	mch_co_m©ch
;

105 *
	mch_‚_°r
;

106 
	mch_com∂ëi⁄
;

107 *
	mch_nom©ch
;

108 
	mch_ãrmöÆ_rows
;

109 
	mch_ãrmöÆ_Àngth
;

110 
	mch_èbmode
;

112 
	mch_Àxiˇl‹dî
;

114 
	mch_ign‹eˇ£
;

119 *
	mch_buf
;

120 *
	mch_kûlbuf
;

122 
	mch_logsy¡ax
;

123 *
	mch_u£rh™dÀ
;

124 *
	mch_u£rd©a
;

130 
	$˛igí_gwösz
(
˛igí_h™dÀ
 
h
)

132 
wösize
 
ws
;

134 i‡(
	`io˘l
(0, 
TIOCGWINSZ
, &
ws
) == -1){

135 
	`≥º‹
("ioctl(STDIN_FILENO,TIOCGWINSZ)");

138 
	`˛igí_ãrmöÆrows_£t
(
h
, 
ws
.
ws_row
);

139 
	`˛igí_ãrmöÆ_Àngth_£t
(
h
, 
ws
.
ws_cﬁ
);

141 
	}
}

144 
	$sigwöch_h™dÀr
(
¨g
)

146 
	}
}

150 
˛igí_h™dÀ


151 
	$˛igí_öô
()

153 
˛igí_h™dÀ
 *
ch
;

154 
˛igí_h™dÀ
 
h
 = 
NULL
;

155 
siga˘i⁄
 
sigh
;

157 i‡((
ch
 = 
	`mÆloc
((*ch))Ë=
NULL
){

158 
	`Ârötf
(
°dîr
, "%s: mÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

159 
d⁄e
;

161 
	`mem£t
(
ch
, 0, (*ch));

162 
ch
->
ch_magic
 = 
CLIGEN_MAGIC
;

163 
h
 = (
˛igí_h™dÀ
)
ch
;

164 
	`˛igí_¥om±_£t
(
h
, 
CLIGEN_PROMPT_DEFAULT
);

166 i‡(
	`ißây
(0) && isatty(1)){

167 i‡(
	`˛igí_gwösz
(
h
) < 0)

168  
NULL
;

169 
	`˛igí_öãºu±_hook
(
h
, 
˛igí_gwösz
);

170 
	`mem£t
(&
sigh
, 0, (sigh));

171 
sigh
.
ß_h™dÀr
 = 
sigwöch_h™dÀr
;

172 i‡(
	`siga˘i⁄
(
SIGWINCH
, &
sigh
, 
NULL
) < 0){

173 
	`≥º‹
("sigaction");

174  
NULL
;

177 
	`˛úód_öô
(
h
);

178 
	`˛igí_buf_öô
(
h
);

180 
d⁄e
:

181  
h
;

182 
	}
}

188 
	$˛igí_exô
(
˛igí_h™dÀ
 
h
)

190 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

191 
∑r£_åì_li°
 *
±l
;

193 
	`gl_hi°˛ór
();

194 
	`˛igí_buf_˛ónup
(
h
);

195 i‡(
ch
->
ch_¥om±
)

196 
	`‰ì
(
ch
->
ch_¥om±
);

197 i‡(
ch
->
ch_nom©ch
)

198 
	`‰ì
(
ch
->
ch_nom©ch
);

199 i‡(
ch
->
ch_åì«me_keyw‹d
)

200 
	`‰ì
(
ch
->
ch_åì«me_keyw‹d
);

201 i‡(
ch
->
ch_‚_°r
)

202 
	`‰ì
(
ch
->
ch_‚_°r
);

203 (
±l
 = 
ch
->
ch_åì
Ë!
NULL
){

204 
ch
->
ch_åì
 = 
±l
->
±l_√xt
;

205 
	`˛igí_∑r£åì_‰ì
(
±l
->
±l_∑r£åì
, 1);

206 
	`‰ì
(
±l
);

208 
	`‰ì
(
ch
);

210 
	}
}

217 
	$˛igí_check
(
˛igí_h™dÀ
 
h
)

220 
˛igí_h™dÀ
 *
ch
 = (˛igí_h™dÀ *)(
h
);

222  
ch
->
ch_magic
 =
CLIGEN_MAGIC
 ? 0 : -1;

223 
	}
}

229 
	$˛igí_exôög
(
˛igí_h™dÀ
 
h
)

231 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

233  
ch
->
ch_exôög
;

234 
	}
}

240 
	$˛igí_exôög_£t
(
˛igí_h™dÀ
 
h
,

241 
°©us
)

243 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

245 
ch
->
ch_exôög
 = 
°©us
;

247 
	}
}

253 
	$˛igí_commít
(
˛igí_h™dÀ
 
h
)

255 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

257  
ch
->
ch_commít
;

258 
	}
}

264 
	$˛igí_commít_£t
(
˛igí_h™dÀ
 
h
,

265 
c
)

267 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

269 
ch
->
ch_commít
 = 
c
;

271 
	}
}

277 
	$˛igí_¥om±
(
˛igí_h™dÀ
 
h
)

279 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

281  
ch
->
ch_¥om±
;

282 
	}
}

289 
	$˛igí_¥om±_£t
(
˛igí_h™dÀ
 
h
,

290 *
¥om±
)

292 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

294 i‡(
ch
->
ch_¥om±
){

295 i‡(
	`°rcmp
(
¥om±
, 
ch
->
ch_¥om±
) == 0)

297 
	`‰ì
(
ch
->
ch_¥om±
);

298 
ch
->
ch_¥om±
 = 
NULL
;

300 i‡(
¥om±
){

301 i‡((
ch
->
ch_¥om±
 = 
	`°rdup
(
¥om±
)Ë=
NULL
)

305 
	}
}

312 
∑r£_åì
 *

313 
	$˛igí_åì_föd
(
˛igí_h™dÀ
 
h
,

314 *
«me
)

316 
∑r£_åì_li°
 *
±l
;

317 
∑r£_åì
 *
±
;

318 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

320 
±l
 = 
ch
->
ch_åì
;Öé;Öé =Öé->
±l_√xt
){

321 
±
 = &
±l
->
±l_∑r£åì
;

322 i‡(
	`°rcmp
(
±
->
±_«me
, 
«me
) == 0)

323  
±
;

325  
NULL
;

326 
	}
}

335 
	$˛igí_åì_add
(
˛igí_h™dÀ
 
h
,

336 *
«me
,

337 
∑r£_åì
 
±
)

339 
∑r£_åì_li°
 *
±l
;

340 
∑r£_åì_li°
 *
±œ°
;

341 
∑r£_åì
 *
±n
;

342 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

344 i‡((
±l
 = (
∑r£_åì_li°
 *)
	`mÆloc
((*±l))Ë=
NULL
){

345 
	`Ârötf
(
°dîr
, "%†mÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

348 
	`mem£t
(
±l
, 0, (*ptl));

349 
±l
->
±l_∑r£åì
 = 
±
;

350 
±n
 = &
±l
->
±l_∑r£åì
;

351 i‡((
±n
->
±_«me
 = 
	`°rdup
(
«me
)Ë=
NULL
){

352 
	`Ârötf
(
°dîr
, "%†°rdup: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

355 i‡((
±œ°
 = 
ch
->
ch_åì
Ë=
NULL
){

356 
±l
->
±l_a˘ive
++;

357 
ch
->
ch_åì
 = 
±l
;

360 
±œ°
->
±l_√xt
)

361 
±œ°
 =Öéa°->
±l_√xt
;

362 
±œ°
->
±l_√xt
 = 
±l
;

365 
	}
}

372 
	$˛igí_åì_dñ
(
˛igí_h™dÀ
 
h
,

373 *
«me
)

375 
∑r£_åì_li°
 *
±l
;

376 
∑r£_åì_li°
 **
±l_¥ev
;

377 
∑r£_åì
 *
±
;

378 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

380 
±l_¥ev
 = &
ch
->
ch_åì
, 
±l
 = *ptl_prev;

381 
±l
;

382 
±l_¥ev
 = &
±l
->
±l_√xt
,Ötl =Ötl->ptl_next){

383 
±
 = &
±l
->
±l_∑r£åì
;

384 i‡(
	`°rcmp
(
±
->
±_«me
, 
«me
) == 0){

385 *
±l_¥ev
 = 
±l
->
±l_√xt
;

386 
	`‰ì
(
±l
);

391 
	}
}

408 
∑r£_åì
 *

409 
	$˛igí_åì_óch
(
˛igí_h™dÀ
 
h
,

410 
∑r£_åì
 *
±0
)

412 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

413 
∑r£_åì_li°
 *
±l
;

414 
∑r£_åì
 *
±
;

415 
√xt
 = 0;

417 
±l
 = 
ch
->
ch_åì
;Öé;Öé =Öé->
±l_√xt
){

418 
±
 = &
±l
->
±l_∑r£åì
;

419 i‡(
±0
 =
NULL
 || 
√xt
)

420  
±
;

421 i‡(
±0
->
±_vec
 =
±
->pt_vec)

422 
√xt
++;

424  
NULL
;

425 
	}
}

431 
∑r£_åì
 *

432 
	$˛igí_åì_i
(
˛igí_h™dÀ
 
h
,

433 
i0
)

435 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

436 
∑r£_åì_li°
 *
±l
;

437 
i
;

439 
±l
 = 
ch
->
ch_åì
, 
i
=0;Öé;Öé =Öé->
±l_√xt
, i++)

440  &
±l
->
±l_∑r£åì
;

441  
NULL
;

442 
	}
}

447 
∑r£_åì
 *

448 
	$˛igí_åì_a˘ive_gë
(
˛igí_h™dÀ
 
h
)

450 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

451 
∑r£_åì_li°
 *
±l
;

453 
±l
 = 
ch
->
ch_åì
;Öé;Öé =Öé->
±l_√xt
)

454 i‡(
±l
->
±l_a˘ive
)

455  &
±l
->
±l_∑r£åì
;

456  
NULL
;

457 
	}
}

466 
	$˛igí_åì_a˘ive_£t
(
˛igí_h™dÀ
 
h
,

467 *
«me
)

469 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

470 
ªtvÆ
 = -1;

471 
∑r£_åì_li°
 *
±l
;

472 
∑r£_åì
 *
±
 = 
NULL
;

475 
±l
 = 
ch
->
ch_åì
;Öé;Öé =Öé->
±l_√xt
){

476 
±
 = &
±l
->
±l_∑r£åì
;

477 i‡(
	`°rcmp
(
«me
, 
±
->
±_«me
) == 0){

478 
±l
->
±l_a˘ive
 = 1;

482 i‡(
±l
 !
NULL
){

484 
±l
 = 
ch
->
ch_åì
;Öé;Öé =Öé->
±l_√xt
){

485 
±
 = &
±l
->
±l_∑r£åì
;

486 i‡(
	`°rcmp
(
«me
, 
±
->
±_«me
) != 0)

487 
±l
->
±l_a˘ive
 = 0;

489 
ªtvÆ
 = 0;

491  
ªtvÆ
;

492 
	}
}

494 
	#TREENAME_KEYWORD_DEFAULT
 "åì«me"

	)

504 
	$˛igí_åì«me_keyw‹d
(
˛igí_h™dÀ
 
h
)

506 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

508  
ch
->
ch_åì«me_keyw‹d
?ch->ch_åì«me_keyw‹d:
TREENAME_KEYWORD_DEFAULT
;

509 
	}
}

515 
	$˛igí_åì«me_keyw‹d_£t
(
˛igí_h™dÀ
 
h
,

516 *
åì«me
)

518 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

520 i‡(
ch
->
ch_åì«me_keyw‹d
){

521 
	`‰ì
(
ch
->
ch_åì«me_keyw‹d
);

522 
ch
->
ch_åì«me_keyw‹d
 = 
NULL
;

524 i‡(
åì«me
)

525 i‡((
ch
->
ch_åì«me_keyw‹d
 = 
	`°rdup
(
åì«me
)Ë=
NULL
)

528 
	}
}

537 
cg_obj
 *

538 
	$˛igí_co_m©ch
(
˛igí_h™dÀ
 
h
)

540 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

542  
ch
->
ch_co_m©ch
;

543 
	}
}

549 
	$˛igí_co_m©ch_£t
(
˛igí_h™dÀ
 
h
,

550 
cg_obj
 *
co
)

552 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

554 
ch
->
ch_co_m©ch
 = 
co
;

556 
	}
}

571 
	$˛igí_‚_°r_gë
(
˛igí_h™dÀ
 
h
)

573 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

575  
ch
->
ch_‚_°r
;

576 
	}
}

584 
	$˛igí_‚_°r_£t
(
˛igí_h™dÀ
 
h
,

585 *
‚_°r
)

587 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

589 i‡(
ch
->
ch_‚_°r
){

590 
	`‰ì
(
ch
->
ch_‚_°r
);

591 
ch
->
ch_‚_°r
 = 
NULL
;

593 i‡(
‚_°r
){

594 i‡((
ch
->
ch_‚_°r
 = 
	`°rdup
(
‚_°r
)Ë=
NULL
)

598 
	}
}

612 
	$˛igí_com∂ëi⁄
(
˛igí_h™dÀ
 
h
)

614 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

616  
ch
->
ch_com∂ëi⁄
;

617 
	}
}

625 
	$˛igí_com∂ëi⁄_£t
(
˛igí_h™dÀ
 
h
,

626 
mode
)

628 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

630 
ch
->
ch_com∂ëi⁄
 = 
mode
;

632 
	}
}

643 
	$˛igí_nom©ch
(
˛igí_h™dÀ
 
h
)

645 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

647  
ch
->
ch_nom©ch
;

648 
	}
}

655 
	$˛igí_nom©ch_£t
(
˛igí_h™dÀ
 
h
,

656 c⁄° *
fmt
, ...)

658 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

659 
ªs
;

660 
Àn
;

661 
va_li°
 
≠
;

663 i‡(
fmt
 =
NULL
){

664 i‡(
ch
->
ch_nom©ch
){

665 
	`‰ì
(
ch
->
ch_nom©ch
);

666 
ch
->
ch_nom©ch
 = 
NULL
;

670 
	`as£π
(
ch
->
ch_nom©ch
 =
NULL
);

671 
	`va_°¨t
 (
≠
, 
fmt
);

672 
Àn
 = 
	`v¢¥ötf
(
NULL
, 0, 
fmt
, 
≠
);

673 
Àn
++;

674 
	`va_íd
 (
≠
);

675 i‡((
ch
->
ch_nom©ch
 = 
	`mÆloc
(
Àn
)Ë=
NULL
){

676 
	`Ârötf
(
°dîr
, "%s: mÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

679 
	`va_°¨t
 (
≠
, 
fmt
);

680 
ªs
 = 
	`v¢¥ötf
(
ch
->
ch_nom©ch
, 
Àn
, 
fmt
, 
≠
);

681 
	`va_íd
 (
≠
);

683  
ªs
;

684 
	}
}

686 
	g_ãrmöÆrows
;

692 
	$˛igí_ãrmöÆrows
(
˛igí_h™dÀ
 
h
)

696  
_ãrmöÆrows
;

697 
	}
}

704 
	$˛igí_ãrmöÆrows_£t
(
˛igí_h™dÀ
 
h
,

705 
rows
)

707 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

709 
ch
->
ch_ãrmöÆ_rows
 = 
rows
;

710 
_ãrmöÆrows
 = 
rows
;

712 
	}
}

719 
	$˛igí_ãrmöÆ_Àngth
(
˛igí_h™dÀ
 
h
)

723  
	`gl_gëwidth
();

724 
	}
}

732 
	$˛igí_ãrmöÆ_Àngth_£t
(
˛igí_h™dÀ
 
h
,

733 
Àngth
)

735 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

737 
ch
->
ch_ãrmöÆ_Àngth
 = 
Àngth
;

738 i‡(
Àngth
 < 
TERM_MIN_SCREEN_WIDTH
)

739 
Àngth
 = 
TERM_MIN_SCREEN_WIDTH
;

740 
	`gl_£twidth
(
Àngth
);

742 
	}
}

751 
	$˛igí_löe_s¸ﬁlög
(
˛igí_h™dÀ
 
h
)

753  
	`gl_gës¸ﬁlög
();

754 
	}
}

763 
	$˛igí_löe_s¸ﬁlög_£t
(
˛igí_h™dÀ
 
h
,

764 
mode
)

766 
¥ev
 = 
	`gl_gës¸ﬁlög
();

768 
	`gl_£ts¸ﬁlög
(
mode
);

769  
¥ev
;

770 
	}
}

780 
	$˛igí_èbmode
(
˛igí_h™dÀ
 
h
)

782 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

784  
ch
->
ch_èbmode
;

785 
	}
}

807 
	$˛igí_èbmode_£t
(
˛igí_h™dÀ
 
h
,

808 
mode
)

810 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

812 
ch
->
ch_èbmode
 = 
mode
;

814 
	}
}

816 
	g_Àxiˇl‹dî
 = 0;

825 
	$˛igí_Àxiˇl‹dî
(
˛igí_h™dÀ
 
h
)

830  
_Àxiˇl‹dî
;

831 
	}
}

839 
	$˛igí_Àxiˇl‹dî_£t
(
˛igí_h™dÀ
 
h
,

840 
n
)

845 
_Àxiˇl‹dî
 = 
n
;

847 
	}
}

849 
	g_ign‹eˇ£
 = 0;

855 
	$˛igí_ign‹eˇ£
(
˛igí_h™dÀ
 
h
)

860  
_ign‹eˇ£
;

861 
	}
}

867 
	$˛igí_ign‹eˇ£_£t
(
˛igí_h™dÀ
 
h
,

868 
n
)

873 
_ign‹eˇ£
 = 
n
;

875 
	}
}

880 
	$˛igí_logsy¡ax
(
˛igí_h™dÀ
 
h
)

882 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

884  
ch
->
ch_logsy¡ax
;

885 
	}
}

890 
	$˛igí_logsy¡ax_£t
(
˛igí_h™dÀ
 
h
,

891 
n
)

893 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

895 
ch
->
ch_logsy¡ax
 = 
n
;

897 
	}
}

906 
	$˛igí_u£rh™dÀ
(
˛igí_h™dÀ
 
h
)

908 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

910  
ch
->
ch_u£rh™dÀ
;

911 
	}
}

917 
	$˛igí_u£rh™dÀ_£t
(
˛igí_h™dÀ
 
h
,

918 *
u£rh™dÀ
)

920 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

922 
ch
->
ch_u£rh™dÀ
 = 
u£rh™dÀ
;

924 
	}
}

926 
	g_gëlöe_bufsize
 = 
GETLINE_BUFLEN_DEFAULT
;

927 
	g_gëlöe_kûlbufsize
 = 
GETLINE_BUFLEN_DEFAULT
;

933 
	$˛igí_buf
(
˛igí_h™dÀ
 
h
)

935 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

937  
ch
->
ch_buf
;

938 
	}
}

944 
	$˛igí_kûlbuf
(
˛igí_h™dÀ
 
h
)

946 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

948  
ch
->
ch_kûlbuf
;

949 
	}
}

955 
	$˛igí_buf_size
(
˛igí_h™dÀ
 
h
)

957  
_gëlöe_bufsize
;

958 
	}
}

964 
	$˛igí_kûlbuf_size
(
˛igí_h™dÀ
 
h
)

966  
_gëlöe_kûlbufsize
;

967 
	}
}

973 
	$˛igí_buf_öô
(
˛igí_h™dÀ
 
h
)

975 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

977 i‡((
ch
->
ch_buf
 = 
	`mÆloc
(
_gëlöe_bufsize
)Ë=
NULL
){

978 
	`Ârötf
(
°dîr
, "%†mÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

981 
	`mem£t
(
ch
->
ch_buf
, 0, 
_gëlöe_bufsize
);

982 i‡((
ch
->
ch_kûlbuf
 = 
	`mÆloc
(
_gëlöe_kûlbufsize
)Ë=
NULL
){

983 
	`Ârötf
(
°dîr
, "%†mÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

986 
	`mem£t
(
ch
->
ch_kûlbuf
, 0, 
_gëlöe_kûlbufsize
);

988 
	}
}

999 
	$˛igí_buf_ö¸ó£
(
˛igí_h™dÀ
 
h
,

1000 
size_t
 
Àn1
)

1002 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

1003 
size_t
 
Àn0
 = 
_gëlöe_bufsize
;

1005 i‡(
_gëlöe_bufsize
 >
Àn1
 + 1)

1007 
_gëlöe_bufsize
 < 
Àn1
 + 1)

1008 
_gëlöe_bufsize
 *= 2;

1009 i‡((
ch
->
ch_buf
 = 
	`ªÆloc
(ch->ch_buf, 
_gëlöe_bufsize
)Ë=
NULL
){

1010 
	`Ârötf
(
°dîr
, "%†ªÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

1013 
	`mem£t
(
ch
->
ch_buf
+
Àn0
, 0, 
_gëlöe_bufsize
-len0);

1015 
	}
}

1022 
	$˛igí_kûlbuf_ö¸ó£
(
˛igí_h™dÀ
 
h
,

1023 
size_t
 
Àn1
)

1025 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

1026 
Àn0
 = 
_gëlöe_kûlbufsize
;

1028 i‡(
_gëlöe_kûlbufsize
 >
Àn1
 + 1)

1030 
_gëlöe_kûlbufsize
 < 
Àn1
 + 1)

1031 
_gëlöe_kûlbufsize
 *= 2;

1032 i‡((
ch
->
ch_kûlbuf
 = 
	`ªÆloc
(ch->ch_kûlbuf, 
_gëlöe_kûlbufsize
)Ë=
NULL
){

1033 
	`Ârötf
(
°dîr
, "%†ªÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

1036 
	`mem£t
(
ch
->
ch_kûlbuf
+
Àn0
, 0, 
_gëlöe_kûlbufsize
-len0);

1038 
	}
}

1044 
	$˛igí_buf_˛ónup
(
˛igí_h™dÀ
 
h
)

1046 
˛igí_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

1047 i‡(
ch
->
ch_buf
){

1048 
	`‰ì
(
ch
->
ch_buf
);

1049 
ch
->
ch_buf
 = 
NULL
;

1051 i‡(
ch
->
ch_kûlbuf
){

1052 
	`‰ì
(
ch
->
ch_kûlbuf
);

1053 
ch
->
ch_kûlbuf
 = 
NULL
;

1056 
	}
}

1065 
∑r£_åì
 *
	$˛igí_åì
(
˛igí_h™dÀ
 
h
,

1066 *
«me
)

1068  
	`˛igí_åì_föd
(
h
, 
«me
);

1069 
	}
}

	@cligen-master/cligen_handle.h

35 #i‚de‡
_CLIGEN_HANDLE_H_


36 
	#_CLIGEN_HANDLE_H_


	)

41 
	#CLIGEN_PROMPT_DEFAULT
 "˛i> "

	)

42 
	#TERM_MIN_SCREEN_WIDTH
 21

	)

47 
˛igí_h™dÀ
 
˛igí_öô
();

48 
˛igí_exô
(
˛igí_h™dÀ
);

49 
˛igí_check
(
˛igí_h™dÀ
 
h
);

51 
˛igí_exôög
(
˛igí_h™dÀ
 
h
);

52 
˛igí_exôög_£t
(
˛igí_h™dÀ
 
h
, 
°©us
);

54 
˛igí_commít
(
˛igí_h™dÀ
 
h
);

55 
˛igí_commít_£t
(
˛igí_h™dÀ
 
h
, 
c
);

57 * 
˛igí_¥om±
(
˛igí_h™dÀ
 
h
);

58 
˛igí_¥om±_£t
(
˛igí_h™dÀ
 
h
, *
¥om±
);

60 
∑r£_åì
 *
˛igí_åì_föd
(
˛igí_h™dÀ
 
h
, *
«me
);

61 
˛igí_åì_add
(
˛igí_h™dÀ
 
h
, *
«me
, 
∑r£_åì
 
±
);

62 
˛igí_åì_dñ
(
˛igí_h™dÀ
 
h
, *
«me
);

64 
∑r£_åì
 *
˛igí_åì_óch
(
˛igí_h™dÀ
 
h
,Ö¨£_åì *
±
);

65 
∑r£_åì
 *
˛igí_åì_i
(
˛igí_h™dÀ
 
h
, 
i
);

67 
∑r£_åì
 *
˛igí_åì_a˘ive_gë
(
˛igí_h™dÀ
 
h
);

68 
˛igí_åì_a˘ive_£t
(
˛igí_h™dÀ
 
h
, *
«me
);

70 *
˛igí_åì«me_keyw‹d
(
˛igí_h™dÀ
 
h
);

71 
˛igí_åì«me_keyw‹d_£t
(
˛igí_h™dÀ
 
h
, *
«me
);

74 
cg_obj
 *
˛igí_co_m©ch
(
˛igí_h™dÀ
 
h
);

75 
˛igí_co_m©ch_£t
(
˛igí_h™dÀ
 
h
, 
cg_obj
 *
co
);

77 *
˛igí_‚_°r_gë
(
˛igí_h™dÀ
 
h
);

78 
˛igí_‚_°r_£t
(
˛igí_h™dÀ
 
h
, *
‚_°r
);

80 
˛igí_com∂ëi⁄
(
˛igí_h™dÀ
 
h
);

81 
˛igí_com∂ëi⁄_£t
(
˛igí_h™dÀ
 
h
, 
mode
);

83 *
˛igí_nom©ch
(
˛igí_h™dÀ
 
h
);

84 
˛igí_nom©ch_£t
(
˛igí_h™dÀ
 
h
, c⁄° *
fmt
, ...);

86 
˛igí_ãrmöÆrows
(
˛igí_h™dÀ
 
h
);

87 
˛igí_ãrmöÆrows_£t
(
˛igí_h™dÀ
 
h
, 
rows
);

89 
˛igí_ãrmöÆ_Àngth
(
˛igí_h™dÀ
 
h
);

90 
˛igí_ãrmöÆ_Àngth_£t
(
˛igí_h™dÀ
 
h
, 
Àngth
);

92 
˛igí_löe_s¸ﬁlög
(
˛igí_h™dÀ
 
h
);

93 
˛igí_löe_s¸ﬁlög_£t
(
˛igí_h™dÀ
 
h
, 
mode
);

95 
˛igí_èbmode
(
˛igí_h™dÀ
 
h
);

96 
˛igí_èbmode_£t
(
˛igí_h™dÀ
 
h
, 
mode
);

98 *
˛igí_kûlbuf
(
˛igí_h™dÀ
 
h
);

100 *
˛igí_buf
(
˛igí_h™dÀ
 
h
);

101 
˛igí_buf_size
(
˛igí_h™dÀ
 
h
);

102 
˛igí_kûlbuf_size
(
˛igí_h™dÀ
 
h
);

103 
˛igí_buf_öô
(
˛igí_h™dÀ
 
h
);

104 
˛igí_buf_˛ónup
(
˛igí_h™dÀ
 
h
);

105 
˛igí_buf_ö¸ó£
(
˛igí_h™dÀ
 
h
, 
size_t
 
size
);

106 
˛igí_kûlbuf_ö¸ó£
(
˛igí_h™dÀ
 
h
, 
size_t
 
size
);

109 
˛igí_∑r£åì_ex∑nd
(
˛igí_h™dÀ
 
h
, 
∑r£_åì
 ***
±
, **
e_Àn
, **
e_i
);

111 
˛igí_Àxiˇl‹dî
(
˛igí_h™dÀ
 
h
);

112 
˛igí_Àxiˇl‹dî_£t
(
˛igí_h™dÀ
 
h
, 
n
);

113 
˛igí_ign‹eˇ£
(
˛igí_h™dÀ
 
h
);

114 
˛igí_ign‹eˇ£_£t
(
˛igí_h™dÀ
 
h
, 
n
);

116 
˛igí_logsy¡ax
(
˛igí_h™dÀ
 
h
);

117 
˛igí_logsy¡ax_£t
(
˛igí_h™dÀ
 
h
, 
n
);

119 *
˛igí_u£rh™dÀ
(
˛igí_h™dÀ
 
h
);

120 
˛igí_u£rh™dÀ_£t
(
˛igí_h™dÀ
 
h
, *
u£rh™dÀ
);

126 
∑r£_åì
 *
˛igí_åì
(
˛igí_h™dÀ
 
h
, *
«me
);

130 
ölöe
 *
	$˛igí_åì_a˘ive
(
˛igí_h™dÀ
 
h
){

131 
∑r£_åì
 *
±
;

132 i‡((
±
 = 
	`˛igí_åì_a˘ive_gë
(
h
)Ë!
NULL
)

133  
±
->
±_«me
;

134  
NULL
;

135 
	}
}

	@cligen-master/cligen_hello.c

37 
	~<°dio.h
>

38 
	~<°dlib.h
>

39 
	~<°rög.h
>

40 
	~<√töë/ö.h
>

42 
	~<˛igí/˛igí.h
>

47 
	$hñlo_cb
(
˛igí_h™dÀ
 
h
, 
cvec
 *
cvv
, cve¯*
¨gv
)

49 
cg_v¨
 *
cv
;

51 
cv
 = 
	`cvec_i
(
¨gv
, 0);

52 
	`¥ötf
("%s\n", 
	`cv_°rög_gë
(
cv
));

54 
	}
}

58 
cgv_‚°y≥_t
 *

59 
	$°r2‚
(*
«me
, *
¨g
, **
îr‹
)

61  
hñlo_cb
;

62 
	}
}

66 *
	ghñlo_sy¡ax
 = "prompt=\"hello> \";\n"

71 
	$maö
(
¨gc
, *
¨gv
[])

73 
ªtvÆ
 = -1;

74 
∑r£_åì
 *
±
;

75 
˛igí_h™dÀ
 
h
;

77 i‡((
h
 = 
	`˛igí_öô
()Ë=
NULL
)

78 
d⁄e
;

79 i‡(
	`˛igí_∑r£_°r
(
h
, 
hñlo_sy¡ax
, "hñlÿw‹ld", 
NULL
, NULL) < 0)

80 
d⁄e
;

82 
	`˛igí_¥om±_£t
(
h
, "hello> ");

83 
	`˛igí_commít_£t
(
h
, '#');

85 i‡((
±
 = 
	`˛igí_åì_i
(
h
, 0)Ë=
NULL
)

86 
d⁄e
;

88 i‡(
	`˛igí_ˇŒbackv_°r2‚
(*
±
, 
°r2‚
, 
NULL
) < 0)

89 
d⁄e
;

91 i‡(
	`˛igí_lo›
(
h
) < 0)

92 
d⁄e
;

93 
ªtvÆ
 = 0;

94 
d⁄e
:

95 i‡(
h
)

96 
	`˛igí_exô
(
h
);

97  
ªtvÆ
;

98 
	}
}

	@cligen-master/cligen_io.c

36 
	~"˛igí_c⁄fig.h
"

38 
	~<°dio.h
>

39 
	~<°dlib.h
>

40 
	~<°d¨g.h
>

41 
	~<sys/ty≥s.h
>

42 
	~<as£π.h
>

43 
	~<°rög.h
>

44 #i‚de‡
WIN32


45 
	~<uni°d.h
>

47 
	~<î∫o.h
>

48 
	~<sig«l.h
>

49 
	~<sys/ty≥s.h
>

50 
	~<sys/sockë.h
>

51 
	~<√töë/ö.h
>

52 
	~<√t/if.h
>

54 
	~"˛igí_buf.h
"

55 
	~"˛igí_v¨.h
"

56 
	~"˛igí_cvec.h
"

57 
	~"˛igí_gí.h
"

58 
	~"˛igí_h™dÀ.h
"

59 
	~"˛igí_ªad.h
"

60 
	~"˛igí_¥öt.h
"

61 
	~"˛igí_io.h
"

62 
	~"gëlöe.h
"

67 
	gd_löes
=0;

70 
	$˛i_ouçut_ª£t
()

72 
d_löes
 = 0;

74 
	}
}

83 
	$˛igí_ouçut
(
FILE
 *
f
, *
ãm∂©e
, ... )

85 
ªtvÆ
 = -1;

86 
va_li°
 
¨gs
;

87 *
buf
 = 
NULL
;

88 *
°¨t
;

89 *
íd
;

90 *
bu„nd
;

91 
c
;

92 
ãrm_rows
;

93 
Àn
;

95 
ãrm_rows
 = 
	`˛igí_ãrmöÆrows
(
NULL
);

98 
	`va_°¨t
(
¨gs
, 
ãm∂©e
);

99 
Àn
 = 
	`v¢¥ötf
(
NULL
, 0, 
ãm∂©e
, 
¨gs
);

100 
Àn
++;

101 
	`va_íd
(
¨gs
);

102 i‡((
buf
 = 
	`mÆloc
(
Àn
)Ë=
NULL
){

103 
	`Ârötf
(
°dîr
, "%s: mÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

104 
d⁄e
;

106 
	`va_°¨t
(
¨gs
, 
ãm∂©e
);

107 
	`v¢¥ötf
(
buf
, 
Àn
, 
ãm∂©e
, 
¨gs
);

108 
	`va_íd
(
¨gs
);

112 i‡((
ãrm_rows
Ë&& (
f
 =
°dout
)){

113 
°¨t
 = 
íd
 = 
buf
;

114 
bu„nd
 = 
buf
 + 
	`°æí
(buf);

115 
íd
 < 
bu„nd
){

116 
íd
 = 
	`°r°r
(
°¨t
, "\n");

117 i‡(
íd
) {

118 i‡(
d_löes
 >= 0)

119 
d_löes
++;

120 *
íd
 = '\0';

121 i‡(
d_löes
 > -1)

122 
	`Ârötf
(
f
, "%s\n", 
°¨t
);

124 i‡(
íd
 < 
bu„nd
)

125 
°¨t
 = 
íd
+1;

127 i‡(
d_löes
 >(
ãrm_rows
 -1)){

128 
	`gl_ch¨_öô
();

130 
	`Ârötf
(
f
, "--More--");

131 
c
 = 
	`fgëc
(
°dö
);

132 i‡(
c
 == '\n')

133 
d_löes
--;

134 i‡(
c
 == ' ')

135 
d_löes
 = 0;

136 i‡(
c
 == 'q' || c == 3)

137 
d_löes
 = -1;

138 i‡(
c
 == '?')

139 
	`Ârötf
(
f
, "CR for one moreÜine, SPACE forÇextÖage, qÅo quit\n");

141 
d_löes
 = 0;

142 
	`Ârötf
(
f
, "");

143 
	`gl_ch¨_˛ónup
();

148 i‡(
d_löes
 >=0 && *
°¨t
 != '\0')

149 
	`Ârötf
(
f
, "%s", 
°¨t
);

150 
íd
 = 
°¨t
 + 
	`°æí
(start);

151 
°¨t
 = 
íd
;

156 
	`Ârötf
(
f
, "%s", 
buf
);

158 
	`fÊush
(
f
);

159 
ªtvÆ
 = 0;

160 
d⁄e
:

161 i‡(
buf
)

162 
	`‰ì
(
buf
);

163  
ªtvÆ
;

164 
	}
}

166 #ifde‡
nŸyë


171 
	$˛i_ye¢o
 (c⁄° *
fmt
, ...)

173 
va_li°
 
≠
;

174 
buf
[1024];

176 
	`va_°¨t
 (
≠
, 
fmt
);

177 
	`v¢¥ötf
 (
buf
,  (buf)-1, 
fmt
, 
≠
);

178 
	`va_íd
 (
≠
);

179 
	`¥ötf
("%†[yes/no]: ", 
buf
);

180 i‡(
	`˛i_gë 
 (
buf
,  (buf)) == 0)

181 i‡(
	`°æí
 (
buf
Ë&& !
	`°∫ˇ£cmp
 (buf, "yes", strlen (buf)))

184 
	}
}

187 #i‡
CLIGEN_REGFD


191 
	$˛igí_ªgfd
(
fd
, 
˛igí_fd_cb_t
 *
cb
, *
¨g
)

193  
	`gl_ªgfd
(
fd
, 
cb
, 
¨g
);

194 
	}
}

197 
	$˛igí_uƒegfd
(
fd
)

199  
	`gl_uƒegfd
(
fd
);

200 
	}
}

204 
	$˛igí_ªdøw
(
˛igí_h™dÀ
 
h
)

206 
	`gl_ªdøw
(
h
);

207 
	}
}

212 
	$˛igí_su•_hook
(
˛igí_h™dÀ
 
h
,

213 
˛igí_su•_cb_t
 *
‚
)

215 
gl_su•_hook
 = 
‚
;

217 
	}
}

222 
	$˛igí_öãºu±_hook
(
˛igí_h™dÀ
 
h
,

223 
˛igí_öãºu±_cb_t
 *
‚
)

225 
gl_öãºu±_hook
 = 
‚
;

227 
	}
}

232 
	$˛igí_exôch¨_add
(
˛igí_h™dÀ
 
h
,

233 
c
)

235 
	`gl_exôch¨_add
(
c
);

236 
	}
}

245 
	$¥öt_hñp_löes
(
FILE
 *
fout
,

246 
±_vec
 
±vec
,

247 *
m©chvec
,

248 
size_t
 
m©chÀn
)

251 
ªtvÆ
 = -1;

252 
cg_obj
 *
co
;

253 *
cmd
;

254 
i
;

255 
cbuf
 *
cb
 = 
NULL
;

256 
cmd_hñp
 *
chvec
 = 
NULL
;

257 
cmd_hñp
 *
ch
;

258 
maxÀn
 = 0;

259 *
¥ev
 = 
NULL
;

260 
ƒcmd
 = 0;

261 
cﬁumn_width
;

262 
vi
;

264 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
){

265 
	`Ârötf
(
°dîr
, "cbuf_√w: %s\n", 
	`°ªº‹
(
î∫o
));

269 i‡((
chvec
 = 
	`ˇŒoc
(
m©chÀn
, (
cmd_hñp
))Ë==
NULL
){

270 
	`≥º‹
("calloc");

271 
d⁄e
;

273 
i
=0; i<
m©chÀn
; i++){

274 
vi
 = 
m©chvec
[
i
];

275 
co
 = 
±vec
[
vi
];

276 i‡(
co
->
co_comm™d
 =
NULL
)

278 
cmd
=
NULL
;

279 
co
->
co_ty≥
){

280 
CO_VARIABLE
:

281 
	`cbuf_ª£t
(
cb
);

282 
	`cov2cbuf
(
cb
, 
co
, 1);

283 i‡((
cmd
 = 
	`°rdup
(
	`cbuf_gë
(
cb
))Ë=
NULL
){

284 
	`≥º‹
("strdup");

285 
d⁄e
;

288 
CO_COMMAND
:

289 i‡((
cmd
 = 
	`°rdup
(
co
->
co_comm™d
)Ë=
NULL
){

290 
	`≥º‹
("strdup");

291 
d⁄e
;

298 i‡(
¥ev
 && 
	`°rcmp
(
cmd
,Örev)==0)

300 
ch
 = &
chvec
[
ƒcmd
++];

301 
ch
->
ch_cmd
 = 
cmd
;

302 
ch
->
ch_hñp
 = 
co
->
co_hñp
;

303 
¥ev
 = 
cmd
;

305 
maxÀn
 = 
	`°æí
(
cmd
)>maxlen?strlen(cmd):maxlen;

307 
maxÀn
++;

308 
cﬁumn_width
 = 
maxÀn
<
COLUMN_MIN_WIDTH
?COLUMN_MIN_WIDTH:maxlen;

310 
i
 = 0; i<
ƒcmd
; i++){

311 
ch
 = &
chvec
[
i
];

312 
	`Ârötf
(
fout
, " %*s %s\n",

313 -
cﬁumn_width
,

314 
ch
->
ch_cmd
,

315 
ch
->
ch_hñp
 ? ch->ch_help : "");

317 
	`fÊush
(
fout
);

318 
ªtvÆ
 = 0;

319 
d⁄e
:

320 i‡(
chvec
){

321 
i
=0; i<
ƒcmd
; i++){

322 i‡(
chvec
[
i
].
ch_cmd
)

323 
	`‰ì
(
chvec
[
i
].
ch_cmd
);

325 
	`‰ì
(
chvec
);

327 i‡(
cb
)

328 
	`cbuf_‰ì
(
cb
);

329  
ªtvÆ
;

330 
	}
}

337 
	$˛igí_hñp
(
FILE
 *
fout
,

338 
∑r£_åì
 
±
)

340 
ªtvÆ
 = -1;

341 
i
;

342 *
m©chvec
 = 
NULL
;

345 i‡((
m©chvec
 = 
	`ˇŒoc
(
±
.
±_Àn
, ())Ë=
NULL
){

346 
	`≥º‹
("calloc");

347 
d⁄e
;

349 
i
=0; i<
±
.
±_Àn
; i++)

350 
m©chvec
[
i
] = i;

351 i‡(
	`¥öt_hñp_löes
(
fout
, 
±
.
±_vec
, 
m©chvec
,Öt.
±_Àn
) < 0)

352 
d⁄e
;

353 
ªtvÆ
 = 0;

354 
d⁄e
:

355 i‡(
m©chvec
)

356 
	`‰ì
(
m©chvec
);

357  
ªtvÆ
;

358 
	}
}

	@cligen-master/cligen_io.h

36 #i‚de‡
_CLIGEN_IO_H_


37 
	#_CLIGEN_IO_H_


	)

43 
	#COLUMN_MIN_WIDTH
 21

	)

50 
	scmd_hñp
{

51 *
	mch_cmd
;

52 *
	mch_hñp
;

58 (
	t˛igí_fd_cb_t
)(, *);

63 
	`˛i_ouçut_ª£t
();

64 
	`˛igí_ouçut
(
FILE
 *
f
, *
ãm∂
, ... );

65 
	`˛igí_ªgfd
(
fd
, 
˛igí_fd_cb_t
 *
cb
, *
¨g
);

66 
	`˛igí_uƒegfd
(
fd
);

67 
	`˛igí_ªdøw
(
˛igí_h™dÀ
 
h
);

68 
	`˛igí_su•_hook
(
˛igí_h™dÀ
 
h
, 
˛igí_su•_cb_t
 *
‚
);

69 
	`˛igí_öãºu±_hook
(
˛igí_h™dÀ
 
h
, 
˛igí_öãºu±_cb_t
 *
‚
);

70 
	`˛igí_exôch¨_add
(
˛igí_h™dÀ
 
h
, 
c
);

71 
	`¥öt_hñp_löes
(
FILE
 *
fout
, 
±_vec
 
±vec
, *
m©chvec
, 
size_t
 
m©chÀn
);

74 
	`˛igí_hñp
(
FILE
 *
f
, 
∑r£_åì
 
±
);

	@cligen-master/cligen_match.c

36 
	~"˛igí_c⁄fig.h
"

38 
	~<°dio.h
>

39 
	~<°dlib.h
>

40 
	~<°d¨g.h
>

41 
	~<°rög.h
>

42 
	~<√tdb.h
>

43 
	~<î∫o.h
>

44 
	~<limôs.h
>

45 
	~<sys/ty≥s.h
>

46 
	~<as£π.h
>

48 
	#__USE_GNU


	)

49 
	~<˘y≥.h
>

50 #i‚de‡
isbœnk


51 
	#isbœnk
(
c
Ë(c==' ')

	)

53 
	~<sys/sockë.h
>

54 
	~<√töë/ö.h
>

55 
	~<¨∑/öë.h
>

57 
	~"˛igí_buf.h
"

58 
	~"˛igí_v¨.h
"

59 
	~"˛igí_cvec.h
"

60 
	~"˛igí_gí.h
"

61 
	~"˛igí_h™dÀ.h
"

62 
	~"˛igí_ex∑nd.h
"

63 
	~"˛igí_m©ch.h
"

65 #i‚de‡
MIN


66 
	#MIN
(
x
,
y
Ë((x)<(y)?(x):(y))

	)

70 
	g_m©ch_cgv¨_ßme
 = 0;

85 
	$m©ch_v¨übÀ
(
cg_obj
 *
co
,

86 *
°r
,

87 **
ªas⁄
)

89 
ªtvÆ
 = -1;

90 
cg_v¨
 *
cv
;

91 
cg_v¨•ec
 *
cs
;

93 
cs
 = &
co
->
u
.
cou_v¨
;

94 i‡((
cv
 = 
	`cv_√w
(
co
->
co_vty≥
)Ë=
NULL
)

95 
d⁄e
;

96 i‡(
co
->
co_vty≥
 =
CGV_DEC64
)

97 
	`cv_dec64_n_£t
(
cv
, 
cs
->
cgs_dec64_n
);

98 i‡((
ªtvÆ
 = 
	`cv_∑r£1
(
°r
, 
cv
, 
ªas⁄
)) <= 0)

99 
d⁄e
;

102 i‡((
ªtvÆ
 = 
	`cv_vÆid©e
(
cv
, 
cs
, 
ªas⁄
)) <= 0)

103 
d⁄e
;

105 
d⁄e
:

106 i‡(
cv
)

107 
	`cv_‰ì
(
cv
);

108  
ªtvÆ
;

109 
	}
}

124 
	$m©ch_obje˘
(*
°rög
,

125 
cg_obj
 *
co
,

126 *
exa˘
,

127 **
ªas⁄
)

129 
m©ch
 = 0;

131 *
exa˘
 = 0;

132 i‡(
co
==
NULL
)

134 
co
->
co_ty≥
){

135 
CO_COMMAND
:

136 i‡(
°rög
 =
NULL
)

137 
m©ch
++;

139 
m©ch
 = (
	`°∫cmp
(
co
->
co_comm™d
, 
°rög
, 
	`°æí
(string)) == 0);

140 *
exa˘
 = 
	`°æí
(
co
->
co_comm™d
Ë=°æí(
°rög
);

143 
CO_VARIABLE
:

144 i‡(
°rög
 =
NULL
)

145 
m©ch
++;

147 i‡((
m©ch
 = 
	`m©ch_v¨übÀ
(
co
, 
°rög
, 
ªas⁄
)) < 0)

150 
CO_REFERENCE
:

153  
m©ch
!=0 ? 1 : 0;

154 
	}
}

159 
	$m©ch_≥r„˘
(*
°rög
,

160 
cg_obj
 *
co
)

162  ((
co
->
co_ty≥
==
CO_COMMAND
) &&

163 (
	`°rcmp
(
°rög
, 
co
->
co_comm™d
)==0));

164 
	}
}

183 
	$√xt_tokí
(**
s0
,

184 **
tokí0
,

185 *
Àadög0
)

187 *
s
;

188 *
°
;

189 *
tokí
 = 
NULL
;

190 
size_t
 
Àn
;

191 
quŸe
=0;

192 
Àadög
=0;

194 
s
 = *
s0
;

195 i‡(
s
==
NULL
){

196 
	`Ârötf
(
°dîr
, "%s:ÇuŒ såög\n", 
__FUNCTION__
);

199 
s
=*
s0
; *s; s++){

200 i‡(
	`ödex
(
CLIGEN_DELIMITERS
, *
s
Ë=
NULL
)

202 
Àadög
++;

204 i‡(*
s
 && 
	`ödex
(
CLIGEN_QUOTES
, *sË!
NULL
){

205 
quŸe
++;

206 
s
++;

208 
°
=
s
;

209 ; *
s
; s++){

210 i‡(
quŸe
){

211 i‡(
	`ödex
(
CLIGEN_QUOTES
, *
s
Ë!
NULL
)

215 i‡(
	`ödex
(
CLIGEN_DELIMITERS
, *
s
Ë!
NULL
)

218 i‡(
quŸe
 && *
s
){

219 
s
++;

221 i‡(*
s
 && 
	`ödex
(
CLIGEN_DELIMITERS
, *sË=
NULL
){

224 
Àn
 = (
s
-
°
)-1;

227 i‡(
quŸe
){

228 
°
--;

230 
Àn
 = (
s
-
°
);

231 i‡(!
Àn
){

232 
tokí
 = 
NULL
;

233 *
s0
 = 
NULL
;

234 
d⁄e
;

237 i‡((
tokí
=
	`mÆloc
(
Àn
+1)Ë=
NULL
){

238 
	`Ârötf
(
°dîr
, "%s: mÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

241 
	`mem˝y
(
tokí
, 
°
, 
Àn
);

242 
tokí
[
Àn
] = '\0';

243 *
s0
 = 
s
;

244 
d⁄e
:

245 *
Àadög0
 = 
Àadög
;

246 *
tokí0
 = 
tokí
;

248 
	}
}

261 
	$comm™d_Àvñs
(*
°rög
)

263 
i
 = 0;

264 *
ss
 = 
	`°rdup
(
°rög
);

265 *
ss0
;

266 *
t
;

267 
åaû
;

269 
ss0
=
ss
;

270 i‡(
	`√xt_tokí
(&
ss
, &
t
, &
åaû
) < 0)

272 
t
){

273 
	`‰ì
(
t
);

274 i‡(
	`√xt_tokí
(&
ss
, &
t
, &
åaû
) < 0)

276 i‡(
t
 =
NULL
){

277 i‡(
åaû
)

278 
i
++;

281 
i
++;

283 
	`‰ì
(
ss0
);

286 
åaû
;

287 *
s0
 = 
	`°rdup
(
°rög
);

288 *
s
 = 
s0
;

289 
Àn
 = 
	`°æí
(
s0
);

291 
i
 = 0;

292 i‡(
s0
 =
NULL
){

293 
	`Ârötf
(
°dîr
, "%†°rdup: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

296 
s
 = 
	`°πok
(
s0
, 
CLIGEN_DELIMITERS
);

297 
s
){

299 i‡(
	`°æí
(
s
)){

300 i‡(
s
[0] == '\"'){

301 i‡(
	`°æí
(
s
)>1 && s[strlen(s)-1] == '\"')

307 
åaû
 = ((
s
 + 
	`°æí
(sËË< (
s0
 + 
Àn
));

308 
s
 = 
	`°πok
(
NULL
, 
CLIGEN_DELIMITERS
);

309 i‡(
s
 =
NULL
){

310 i‡(
åaû
)

311 
i
++;

314 
i
++;

316 
	`‰ì
(
s0
);

317 
	`Ârötf
(
°dîr
, "Should bêi=%d\n", 
i
);

320  
i
;

321 
	}
}

337 
	$exåa˘_sub°rög
(*
°rög0
,

338 
Àvñ
,

339 **
•
)

341 *
ss
;

342 
i
 = 0;

343 
åaû
;

344 *
ss0
;

345 *
t
;

347 
	`as£π
(
•
 && 
°rög0
);

348 *
•
 = 
NULL
;

349 i‡((
ss
 = 
	`°rdup
(
°rög0
)Ë=
NULL
){

350 
	`Ârötf
(
°dîr
, "exåa˘_sub°rög: sådup: %s\n", 
	`°ªº‹
(
î∫o
));

353 
ss0
=
ss
;

354 i‡(
	`√xt_tokí
(&
ss
, &
t
, &
åaû
) < 0)

356 
t
){

357 i‡(
i
==
Àvñ
){

358 *
•
 = 
	`°rdup
(
t
);

359 
	`‰ì
(
t
);

362 
	`‰ì
(
t
);

363 i‡(
	`√xt_tokí
(&
ss
, &
t
, &
åaû
) < 0)

365 i‡(
t
 =
NULL
){

366 i‡(
åaû
)

367 
i
++;

370 
i
++;

372 
	`‰ì
(
ss0
);

377 
	}
}

388 
	$exåa˘_sub°rög_ª°
(*
°rög0
,

389 
Àvñ
,

390 **
•
)

392 *
°rög
;

393 
Àn
 = 
	`°æí
(
°rög0
);

394 
i
 = 0;

395 *
s
;

396 
åaû
;

398 
	`as£π
(
•
 && 
°rög0
);

399 *
•
 = 
NULL
;

400 
°rög
 = 
	`°rdup
(
°rög0
);

401 
s
 = 
	`°πok
(
°rög
, 
CLIGEN_DELIMITERS
);

402 
s
){

403 i‡(
i
==
Àvñ
){

404 *
•
 = 
	`°rdup
(
°rög0
 + (
s
-
°rög
));

408 
åaû
 = ((
s
 + 
	`°æí
(sËË< (
°rög
 + 
Àn
));

409 
s
 = 
	`°πok
(
NULL
, 
CLIGEN_DELIMITERS
);

410 i‡(
s
 =
NULL
){

411 i‡(
åaû
)

412 
i
++;

415 
i
++;

417 
	`‰ì
(
°rög
);

419 
	}
}

449 
	$m©ch_∑âîn_ãrmöÆ
(
˛igí_h™dÀ
 
h
,

450 *
°rög0
,

451 
∑r£_åì
 
±
,

452 
Àvñ
,

453 
u£_¥ef
,

454 
±_vec
 *
±p
,

455 *
m©chv
[],

456 *
m©chÀn
,

457 **
ªas⁄0


460 *
°rög
;

461 
i
;

462 
m©ch
;

463 
m©ches
 = 0;

464 
¥e„ªn˚
 = 0;

465 
p
;

466 
cg_obj
 *
co
;

467 
cg_obj
 *
co_m©ch
;

468 
cg_obj
 *
co_‹ig
;

469 
exa˘
;

470 *
ªas⁄
;

471 
födªas⁄
;

473 
co_m©ch
 = 
NULL
;

474 i‡(
Àvñ
 > 
	`comm™d_Àvñs
(
°rög0
)){

475 
	`Ârötf
(
°dîr
, "%s:Üevel > command_level in %s\n",

476 
__FUNCTION__
, 
°rög0
);

480 
födªas⁄
 = 0;

481 i‡(
ªas⁄0
)

482 
i
=0; i<
±
.
±_Àn
; i++){

483 i‡((
co
 = 
±
.
±_vec
[
i
]Ë=
NULL
)

485 i‡(
co
->
co_ty≥
 !
CO_VARIABLE
){

486 
födªas⁄
 = 0;

489 
födªas⁄
++;

491 
	`exåa˘_sub°rög
(
°rög0
, 
Àvñ
, &
°rög
);

492 
i
=0; i<
±
.
±_Àn
; i++){

493 i‡((
co
 = 
±
.
±_vec
[
i
]Ë=
NULL
)

495 
ªas⁄
 = 
NULL
;

496 i‡((
m©ch
 = 
	`m©ch_obje˘
(
°rög
, 
co
, &
exa˘
, 
födªas⁄
?&
ªas⁄
:
NULL
)) < 0)

497 
îr‹
;

498 i‡(
m©ch
){

499 
	`as£π
(
ªas⁄
==
NULL
);

500 i‡(
u£_¥ef
){

501 
p
 = 
	`co_¥ef
(
co
, 
exa˘
);

502 i‡(
p
 < 
¥e„ªn˚
)

504 i‡(
p
 > 
¥e„ªn˚
){

505 
¥e„ªn˚
 = 
p
;

506 
m©ches
 = 0;

509 *
m©chÀn
 = *matchlen + 1;

510 i‡((*
m©chv
 = 
	`ªÆloc
(*m©chv, (*
m©chÀn
)*())Ë=
NULL
){

511 
	`Ârötf
(
°dîr
, "%s:ÑóŒoc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

514 
co_m©ch
 = 
co
;

515 (*
m©chv
)[
m©ches
++] = 
i
;

520 i‡(
ªas⁄
){

521 i‡(*
ªas⁄0
 =
NULL
)

522 *
ªas⁄0
 = 
ªas⁄
;

523 
ªas⁄
 = 
NULL
;

524 
födªas⁄
 = 0;

528 i‡(
m©ches
){

529 *
±p
 = 
±
.
±_vec
;

530 i‡(
ªas⁄0
 && *reason0){

531 
	`‰ì
(*
ªas⁄0
);

532 *
ªas⁄0
 = 
NULL
;

534 i‡(
m©ches
 == 1){

535 
	`as£π
(
co_m©ch
);

537 
co_‹ig
 = 
co_m©ch
->
co_ªf
?co_match->co_ref: co_match;

538 i‡(
co_m©ch
->
co_ty≥
 =
CO_COMMAND
 && 
co_‹ig
->co_ty≥ =
CO_VARIABLE
){

539 i‡(
	`co_vÆue_£t
(
co_‹ig
, 
co_m©ch
->
co_comm™d
) < 0)

540 
îr‹
;

545 *
m©chÀn
 = 
m©ches
;

546 i‡(
°rög
)

547 
	`‰ì
(
°rög
);

548  
m©ches
;

549 
îr‹
:

550 i‡(
°rög
)

551 
	`‰ì
(
°rög
);

553 
	}
}

563 
cg_v¨
 *

564 
	$add_cov_to_cvec
(
cg_obj
 *
co
,

565 *
cmd
,

566 
cvec
 *cvec)

568 
cg_v¨
 *
cv
 = 
NULL
;

570 i‡((
cv
 = 
	`cvec_add
(
cvec
, 
co
->
co_vty≥
)Ë=
NULL
)

571  
NULL
;

572 
	`cv_«me_£t
(
cv
, 
co
->
co_comm™d
);

573 
	`cv_c⁄°_£t
(
cv
, 
	`iskeyw‹d
(
co
));

574 i‡(
	`cv_∑r£
(
cmd
, 
cv
) < 0) {

575 
	`cv_ª£t
(
cv
);

576 
	`cvec_dñ
(
cvec
, 
cv
);

577  
NULL
;

579  
cv
;

580 
	}
}

605 
	$m©ch_∑âîn_node
(
˛igí_h™dÀ
 
h
,

606 *
°rög0
,

607 
∑r£_åì
 
±
,

608 
Àvñ
,

609 
u£_¥ef
,

610 
hide
,

611 
±_vec
 *
±p
,

612 *
m©chv
[],

613 *
m©chÀn
,

614 
cvec
 *cvec,

615 **
ªas⁄0


618 *
°rög
 = 
NULL
;

619 
i
;

620 
m©ch
;

621 
m©ches
 = 0;

622 
≥r„˘
 = 0;

623 
ªtvÆ
 = -1;

624 
cg_obj
 *
co
;

625 
cg_obj
 *
co_m©ch
;

626 
cg_obj
 *
co_‹ig
;

627 
ª°_m©ch
 = -1;

628 
cmd_Àvñs
;

629 
p
;

630 
¥e„ªn˚
 = 0;

631 
exa˘
;

632 *
ªas⁄
;

633 
födªas⁄
;

634 
∑r£_åì
 
±n
={0,};

635 
cg_v¨
 *
cv
 = 
NULL
;

637 
co_m©ch
 = 
NULL
;

638 i‡(
Àvñ
 > 
	`comm™d_Àvñs
(
°rög0
)){

639 
	`Ârötf
(
°dîr
, "%s:Üevel > command_level in %s\n",

640 
__FUNCTION__
, 
°rög0
);

644 
födªas⁄
 = 0;

645 i‡(
ªas⁄0
)

646 
i
=0; i<
±
.
±_Àn
; i++){

647 i‡((
co
 = 
±
.
±_vec
[
i
]Ë=
NULL
)

649 i‡(
co
->
co_ty≥
 !
CO_VARIABLE
){

650 
födªas⁄
 = 0;

653 
födªas⁄
++;

655 
	`exåa˘_sub°rög
(
°rög0
, 
Àvñ
, &
°rög
);

656 
i
=0; i<
±
.
±_Àn
; i++){

657 i‡((
co
 = 
±
.
±_vec
[
i
]Ë=
NULL
)

659 
ªas⁄
 = 
NULL
;

660 i‡((
m©ch
 = 
	`m©ch_obje˘
(
°rög
, 
co
, &
exa˘
, 
födªas⁄
?&
ªas⁄
:
NULL
)) < 0)

661 
îr‹
;

662 i‡(
m©ch
){

663 
	`as£π
(
ªas⁄
==
NULL
);

666 i‡(
co
->
co_ty≥
 =
CO_VARIABLE
 && co->
co_vty≥
 =
CGV_REST
)

667 
ª°_m©ch
 = 
i
;

668 i‡(
	`m©ch_≥r„˘
(
°rög
, 
co
)){

669 i‡(!
≥r„˘
){

670 
m©ches
 = 0;

671 
≥r„˘
 = 1;

675 i‡(
≥r„˘
)

677 i‡(1 || 
u£_¥ef
){

678 
p
 = 
	`co_¥ef
(
co
, 
exa˘
);

679 i‡(
p
 < 
¥e„ªn˚
)

681 i‡(
p
 > 
¥e„ªn˚
){

682 
¥e„ªn˚
 = 
p
;

683 
m©ches
 = 0;

687 
co_m©ch
 = 
co
;

688 
m©ches
++;

693 i‡(
ªas⁄
){

694 i‡(*
ªas⁄0
 =
NULL
)

695 *
ªas⁄0
 = 
ªas⁄
;

696 
ªas⁄
 = 
NULL
;

697 
födªas⁄
 = 0;

700 i‡(
m©ches
 !0 && 
ªas⁄0
 && *reason0){

701 
	`‰ì
(*
ªas⁄0
);

702 *
ªas⁄0
 = 
NULL
;

705 i‡(
m©ches
 != 1) {

706 #ifde‡
nŸ√eded


707 i‡(
m©ches
 == 0){

708 
	`˛igí_nom©ch_£t
(
h
, "Unrecognized command");

711 
	`˛igí_nom©ch_£t
(
h
, "Ambigious command");

713 
ªtvÆ
 = 0;

714 
quô
;

716 
	`as£π
(
co_m©ch
);

717 i‡((
cmd_Àvñs
 = 
	`comm™d_Àvñs
(
°rög0
)) < 0)

718 
îr‹
;

721 
co_‹ig
 = 
co_m©ch
->
co_ªf
?co_match->co_ref: co_match;

722 i‡(
	`±_ex∑nd_åìªf
(
h
, 
co_m©ch
, &co_m©ch->
co_±
) < 0)

723 
îr‹
;

725 i‡(
co_m©ch
->
co_ty≥
 =
CO_VARIABLE
){

726 i‡((
cv
 = 
	`add_cov_to_cvec
(
co_m©ch
, 
°rög
, 
cvec
)Ë=
NULL
)

727 
îr‹
;

730 i‡(
co_m©ch
->
co_ty≥
 =
CO_COMMAND
 && 
co_‹ig
->co_ty≥ =
CO_VARIABLE
)

731 i‡((
cv
 = 
	`add_cov_to_cvec
(
co_‹ig
, 
co_m©ch
->
co_comm™d
, 
cvec
)Ë=
NULL
)

732 
îr‹
;

733 i‡(
	`±_ex∑nd_2
(
h
, &
co_m©ch
->
co_±
, 
cvec
, &
±n
, 
hide
) < 0)

734 
îr‹
;

735 i‡(
Àvñ
+1 =
cmd_Àvñs
)

736 
ªtvÆ
 = 
	`m©ch_∑âîn_ãrmöÆ
(
h
,

737 
°rög0
, 
±n
,

738 
Àvñ
+1, 
u£_¥ef
,

739 
±p
, 
m©chv
, 
m©chÀn
, 
ªas⁄0
);

741 
ªtvÆ
 = 
	`m©ch_∑âîn_node
(
h
,

742 
°rög0
, 
±n
,

743 
Àvñ
+1, 
u£_¥ef
, 
hide
,

744 
±p
, 
m©chv
, 
m©chÀn
, 
cvec
, 
ªas⁄0
);

745 i‡(
	`±_ex∑nd_add
(
co_‹ig
, 
±n
) < 0)

746 
îr‹
;

748 i‡(
co_m©ch
->
co_ty≥
 =
CO_COMMAND
 && 
co_‹ig
->co_ty≥ =
CO_VARIABLE
)

749 i‡(
	`co_vÆue_£t
(
co_‹ig
, 
co_m©ch
->
co_comm™d
) < 0)

750 
îr‹
;

758 i‡(
ªtvÆ
 =0 && 
ª°_m©ch
 != -1){

759 
ªtvÆ
 = 1;

760 i‡(*
m©chÀn
 < 1){

761 *
m©chÀn
 = 1;

762 i‡((*
m©chv
 = 
	`ªÆloc
(*m©chv, (*
m©chÀn
)*())Ë=
NULL
){

763 
	`Ârötf
(
°dîr
, "%s:ÑóŒoc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

768 *
m©chÀn
 = 1;

769 *
±p
 = 
±
.
±_vec
;

770 (*
m©chv
)[0] = 
ª°_m©ch
;

772 
quô
:

773 i‡(
cv
){

774 
cv
 = 
	`cvec_i
(
cvec
, 
	`cvec_Àn
(cvec)-1);

775 
	`cv_ª£t
(
cv
);

776 
	`cvec_dñ
(
cvec
, 
cv
);

779 i‡(
°rög
)

780 
	`‰ì
(
°rög
);

781  
ªtvÆ
;

782 
îr‹
:

783 
ªtvÆ
 = -1;

784 
quô
;

785 
	}
}

812 
	$m©ch_∑âîn
(
˛igí_h™dÀ
 
h
,

813 *
°rög
,

814 
∑r£_åì
 
±
,

815 
u£_¥ef
,

816 
hide
,

817 
±_vec
 *
±p
,

818 *
m©chv
[],

819 *
m©chÀn
,

820 
cvec
 *cvec,

821 **
ªas⁄0
)

823 
ªtvÆ
;

824 
Àvñs
;

826 
	`as£π
(
±p
);

827 i‡((
Àvñs
 = 
	`comm™d_Àvñs
(
°rög
)) < 0)

829 i‡(
Àvñs
 == 0)

830 
ªtvÆ
 = 
	`m©ch_∑âîn_ãrmöÆ
(
h
,

831 
°rög
, 
±
, 0, 
u£_¥ef
,

832 
±p
, 
m©chv
, 
m©chÀn
,

833 
ªas⁄0
);

835 
ªtvÆ
 = 
	`m©ch_∑âîn_node
(
h
,

836 
°rög
, 
±
, 0, 
u£_¥ef
, 
hide
,

837 
±p
, 
m©chv
, 
m©chÀn
,

838 
cvec
,

839 
ªas⁄0
);

840  
ªtvÆ
;

841 
	}
}

859 
	$m©ch_∑âîn_exa˘
(
˛igí_h™dÀ
 
h
,

860 *
°rög
,

861 
∑r£_åì
 
±
,

862 
exa˘
,

863 
cvec
 *cvec,

864 
cg_obj
 **
m©ch_obj
)

866 
±_vec
 
ªs_±
;

867 
cg_obj
 *
co
;

868 
m©chÀn
 = 0;

869 *
m©chv
 = 
NULL
;

870 
i
;

871 
ªt
;

872 *
ªas⁄
 = 
NULL
;

875 i‡(
exa˘
)

876 
	`˛igí_nom©ch_£t
(
h
, 
NULL
);

877 i‡((
ªt
 = 
	`m©ch_∑âîn
(
h
, 
°rög
, 
±
, 1, 0, &
ªs_±
,

878 &
m©chv
, &
m©chÀn
, 
cvec
, &
ªas⁄
)) < 0)

880 i‡(
ªt
 == 0) {

881 i‡(
exa˘
){

882 i‡(
ªas⁄
 !
NULL
){

883 
	`˛igí_nom©ch_£t
(
h
, "%s", 
ªas⁄
);

884 
	`‰ì
(
ªas⁄
);

887 
	`˛igí_nom©ch_£t
(
h
, "Unknown command");

891 i‡(
ªt
 > 1){

893 
j
;

894 *
°rög1
;

895 
Ælv¨s
=1;

897 
	`exåa˘_sub°rög
(
°rög
, 
	`comm™d_Àvñs
(°rög), &
°rög1
);

898 
j
=0; j<
ªt
; j++){

899 
co
 = 
ªs_±
[
m©chv
[
j
]];

901 i‡(
co
->
co_ty≥
 =
CO_COMMAND
 && 
°rög1
 &&

902 
	`°rcmp
(
°rög1
, 
co
->
co_comm™d
)==0){

903 
ªt
 = 1;

904 
m©chv
[0] = m©chv[
j
];

907 i‡(
co
->
co_ty≥
 !
CO_VARIABLE
)

908 
Ælv¨s
 = 0;

911 i‡(
_m©ch_cgv¨_ßme
 && 
Ælv¨s
)

912 
ªt
 = 1;

913 i‡(
°rög1
)

914 
	`‰ì
(
°rög1
);

917 i‡(
ªt
 != 1){

918 i‡(
m©chv
)

919 
	`‰ì
(
m©chv
);

920  
ªt
;

924 
co
 = 
ªs_±
[*
m©chv
];

925 
	`‰ì
(
m©chv
);

926 
m©chv
 = 
NULL
;

931 i‡(
co
->
co_max
 == 0)

932 
d⁄e
;

933 
i
=0; i< 
co
->
co_max
; i++)

934 i‡(
co
->
co_√xt
[
i
] =
NULL
)

935 
d⁄e
;

939 
v¨übÀ
 = 0;

941 
co
->
co_max
 == 1){

942 
co
 = co->
co_√xt
[0];

943 i‡(
co
->
co_ty≥
 =
CO_VARIABLE
 && co->
co_vty≥
 !
CGV_REST
)

944 
v¨übÀ
++;

946 i‡(
co
->
co_max
)

948 i‡(
v¨übÀ
)

952 i‡(
exa˘
)

953 
	`˛igí_nom©ch_£t
(
h
, "Incomplete command");

956 
d⁄e
:

957 i‡(
m©ch_obj
)

958 *
m©ch_obj
 = 
co
;

960 
	}
}

975 
	$m©ch_com∂ëe
(
˛igí_h™dÀ
 
h
,

976 
∑r£_åì
 
±
,

977 **
°rögp
,

978 
size_t
 *
¶íp
,

979 
cvec
 *cvec)

981 
Àvñ
;

982 
¶í
;

983 
equÆ
;

984 
i
;

985 
j
;

986 
möm©ch
;

987 
cg_obj
 *
co
;

988 
cg_obj
 *
co1
 = 
NULL
;

989 *
°rög
;

990 *
s
;

991 *
ss
;

992 
±_vec
 
±1
;

993 
ƒ
;

994 
m©chÀn
 = 0;

995 *
m©chv
 = 
NULL
;

996 
mv
;

997 
≠≥nd
 = 0;

998 
ªtvÆ
 = -1;

1001 
°rög
 = *
°rögp
;

1002 
s
 = 
°rög
;

1003 (
	`°æí
(
s
Ë> 0Ë&& 
	`isbœnk
(*s))

1004 
s
++;

1005 
agaö
:

1006 
m©chÀn
 = 0;

1007 i‡((
ƒ
 = 
	`m©ch_∑âîn
(
h
, 
s
, 
±
, 0, 1, &
±1
, &
m©chv
, &
m©chÀn
, 
cvec
, 
NULL
)) < 0)

1008 
d⁄e
;

1009 i‡(
ƒ
==0){

1010 
ªtvÆ
 = 0;

1011 
d⁄e
;

1013 i‡((
Àvñ
 = 
	`comm™d_Àvñs
(
s
)) < 0)

1014 
d⁄e
;

1015 
	`exåa˘_sub°rög
(
s
, 
Àvñ
, &
ss
);

1016 
¶í
 = 
ss
?
	`°æí
(ss):0;

1017 i‡(
ss
)

1018 
	`‰ì
(
ss
);

1020 
möm©ch
 = 
¶í
;

1021 
equÆ
 = 1;

1022 
i
=0; i<
m©chÀn
; i++){

1023 
	`as£π
((
mv
 = 
m©chv
[
i
])!=-1);

1024 
co
 = 
±1
[
mv
];

1025 i‡(
co
 =
NULL
){

1026 
ªtvÆ
 = 0;

1027 
d⁄e
;

1029 i‡(
co
->
co_ty≥
 !
CO_COMMAND
)

1031 i‡(
co1
 =
NULL
){

1032 
möm©ch
 = 
	`°æí
(
co
->
co_comm™d
);

1033 
co1
 = 
co
;

1036 i‡(
	`°rcmp
(
co1
->
co_comm™d
, 
co
->co_command)==0)

1039 
equÆ
 = 0;

1040 
j
=0; j<
	`MIN
(
	`°æí
(
co1
->
co_comm™d
), såÀn(
co
->co_command)); j++)

1041 i‡(
co1
->
co_comm™d
[
j
] !
co
->co_command[j])

1043 
möm©ch
 = 
	`MIN
(möm©ch, 
j
);

1047 i‡(
co1
 =
NULL
){

1048 
ªtvÆ
 = 0;

1049 
d⁄e
;

1051 
	`°æí
(*
°rögp
Ë+ 
möm©ch
 - 
¶í
 >*
¶íp
){

1052 *
¶íp
 *= 2;

1053 i‡((*
°rögp
 = 
	`ªÆloc
(*°rögp, *
¶íp
)Ë=
NULL
){

1054 
	`Ârötf
(
°dîr
, "%†ªÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

1055 
d⁄e
;

1057 
°rög
 = *
°rögp
;

1059 
	`°∫ˇt
(
°rög
, &
co1
->
co_comm™d
[
¶í
], 
möm©ch
-slen);

1060 
≠≥nd
 =áµíd || 
möm©ch
-
¶í
;

1061 i‡(
equÆ
){

1062 
°rög
[
	`°æí
(string)+1] = '\0';

1063 
°rög
[
	`°æí
(°rög)] = 
co1
?co1->
co_dñimôî
:' ';

1064 
Àvñ
++;

1065 
¶í
 = 0;

1066 
co1
 = 
NULL
;

1067 i‡(
	`˛igí_com∂ëi⁄
(
h
) == 1){

1068 i‡(
m©chv
)

1069 
	`‰ì
(
m©chv
);

1070 
m©chv
 = 
NULL
;

1071 
agaö
;

1074 
ªtvÆ
 = 
≠≥nd
?1:0;

1075 
d⁄e
:

1076 i‡(
m©chv
)

1077 
	`‰ì
(
m©chv
);

1078  
ªtvÆ
;

1079 
	}
}

	@cligen-master/cligen_match.h

38 #i‚de‡
_CLIGEN_MATCH_H


39 
	#_CLIGEN_MATCH_H


	)

42 
	#MATCHVECTORLEN
 1024

	)

48 
_m©ch_cgv¨_ßme
;

53 
m©ch_∑âîn
(
˛igí_h™dÀ
 
h
, *, 
∑r£_åì
 , , , 
±_vec
 *,

54 **, *, 
cvec
 *, **);

55 
m©ch_∑âîn_exa˘
(
˛igí_h™dÀ
 
h
, *, 
∑r£_åì
, 
exa˘
, 
cvec
 *, 
cg_obj
 **);

56 
comm™d_Àvñs
(*
°rög
);

57 
exåa˘_sub°rög
(*
°rög0
, 
Àvñ
, **
•
);

58 
exåa˘_sub°rög_ª°
(*
°rög0
, 
Àvñ
, **
•
);

59 
m©ch_com∂ëe
(
˛igí_h™dÀ
 
h
, 
∑r£_åì
 
±
,

60 **
°rögp
, 
size_t
 *
¶í
, 
cvec
 *cvec);

	@cligen-master/cligen_parse.h

39 #i‚de‡
_CLIGEN_PARSE_H_


40 
	#_CLIGEN_PARSE_H_


	)

53 
	scgy_li°
{

54 
cgy_li°
 *
	m˛_√xt
;

55 
cg_obj
 *
	m˛_obj
;

58 
	scgy_°ack
{

59 
cgy_°ack
 *
	mcs_√xt
;

60 
cgy_li°
 *
	mcs_li°
;

61 
cgy_li°
 *
	mcs_ßved
;

67 
	s˛igí_∑r£_yacc
{

68 
˛igí_h™dÀ
 
	mya_h™dÀ
;

69 *
	mya_«me
;

70 *
	mya_åì«me
;

71 
	mya_löíum
;

72 *
	mya_∑r£_°rög
;

73 *
	mya_Àxbuf
;

74 
cvec
 *
	mya_globÆs
;

75 
cvec
 *
	mya_cvec
;

76 
cgy_°ack
 *
	mya_°ack
;

77 
cgy_li°
 *
	mya_li°
;

78 
cg_obj
 *
	mya_v¨
;

79 
cg_ˇŒback
 *
	mya_ˇŒbacks
;

80 
	mya_Àx_°©e
;

81 
	mya_Àx_°rög_°©e
;

84 
˛igí_∑r£_yacc
 
	t˛iyacc
;

89 *
˛igí_∑r£ãxt
;

95 
cgl_öô
(
˛iyacc
 *
ya
);

96 
cgl_exô
(
˛iyacc
 *
ya
);

98 
cgy_öô
(
˛iyacc
 *
ya
, 
cg_obj
 *
co_t›
);

99 
cgy_exô
(
˛iyacc
 *
ya
);

101 
˛igí_∑r£Àx
(*
_ya
);

102 
˛igí_∑r£∑r£
(*);

103 
˛igí_∑r£îr‹
(*
_ya
, *);

104 
˛igí_∑r£_debug
(
d
);

	@cligen-master/cligen_parse.tab.c

44 
	#YYBISON
 1

	)

47 
	#YYBISON_VERSION
 "3.0.4"

	)

50 
	#YYSKELETON_NAME
 "yacc.c"

	)

53 
	#YYPURE
 0

	)

56 
	#YYPUSH
 0

	)

59 
	#YYPULL
 1

	)

63 
	#yy∑r£
 
˛igí_∑r£∑r£


	)

64 
	#yyÀx
 
˛igí_∑r£Àx


	)

65 
	#yyîr‹
 
˛igí_∑r£îr‹


	)

66 
	#yydebug
 
˛igí_∑r£debug


	)

67 
	#yy√ºs
 
˛igí_∑r£√ºs


	)

69 
	#yylvÆ
 
˛igí_∑r£lvÆ


	)

70 
	#yych¨
 
˛igí_∑r£ch¨


	)

76 #i‚de‡
YY_NULLPTR


77 #i‡
deföed
 
__˝lu•lus
 && 201103L <= __cplusplus

78 
	#YY_NULLPTR
 
nuŒ±r


	)

80 
	#YY_NULLPTR
 0

	)

85 #ifde‡
YYERROR_VERBOSE


86 #unde‡
YYERROR_VERBOSE


87 
	#YYERROR_VERBOSE
 1

	)

89 
	#YYERROR_VERBOSE
 0

	)

94 #i‚de‡
YY_CLIGEN_PARSE_Y_TAB_H_INCLUDED


95 
	#YY_CLIGEN_PARSE_Y_TAB_H_INCLUDED


	)

97 #i‚de‡
YYDEBUG


98 
	#YYDEBUG
 0

	)

100 #i‡
YYDEBUG


101 
˛igí_∑r£debug
;

105 #i‚de‡
YYTOKENTYPE


106 
	#YYTOKENTYPE


	)

107 
	eyytokíty≥


109 
	mMY_EOF
 = 258,

110 
	mV_RANGE
 = 259,

111 
	mV_LENGTH
 = 260,

112 
	mV_CHOICE
 = 261,

113 
	mV_KEYWORD
 = 262,

114 
	mV_REGEXP
 = 263,

115 
	mV_FRACTION_DIGITS
 = 264,

116 
	mV_SHOW
 = 265,

117 
	mV_TREENAME
 = 266,

118 
	mV_TRANSLATE
 = 267,

119 
	mDOUBLEPARENT
 = 268,

120 
	mDQ
 = 269,

121 
	mDQP
 = 270,

122 
	mPDQ
 = 271,

123 
	mNAME
 = 272,

124 
	mNUMBER
 = 273,

125 
	mDECIMAL
 = 274,

126 
	mCHAR
 = 275

130 
	#MY_EOF
 258

	)

131 
	#V_RANGE
 259

	)

132 
	#V_LENGTH
 260

	)

133 
	#V_CHOICE
 261

	)

134 
	#V_KEYWORD
 262

	)

135 
	#V_REGEXP
 263

	)

136 
	#V_FRACTION_DIGITS
 264

	)

137 
	#V_SHOW
 265

	)

138 
	#V_TREENAME
 266

	)

139 
	#V_TRANSLATE
 267

	)

140 
	#DOUBLEPARENT
 268

	)

141 
	#DQ
 269

	)

142 
	#DQP
 270

	)

143 
	#PDQ
 271

	)

144 
	#NAME
 272

	)

145 
	#NUMBER
 273

	)

146 
	#DECIMAL
 274

	)

147 
	#CHAR
 275

	)

150 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


152 
	uYYSTYPE


156 
	mötvÆ
;

157 *
	m°rög
;

162 
YYSTYPE
 
	tYYSTYPE
;

163 
	#YYSTYPE_IS_TRIVIAL
 1

	)

164 
	#YYSTYPE_IS_DECLARED
 1

	)

168 
YYSTYPE
 
˛igí_∑r£lvÆ
;

170 
˛igí_∑r£∑r£
 (*
_ya
);

180 
	#_YA
 ((
˛iyacc
 *)
_ya
)

	)

183 
	#YY_
(
msgid
Ë
	)
msgid

185 
	~"˛igí_c⁄fig.h
"

187 
	~<°dio.h
>

188 
	~<°rög.h
>

189 
	~<°döt.h
>

190 
	~<°dlib.h
>

191 
	~<î∫o.h
>

192 
	~<limôs.h
>

193 
	~<as£π.h
>

194 
	~<sys/ty≥s.h
>

195 
	~<sys/sockë.h
>

196 
	~<√töë/ö.h
>

197 
	~<√t/if.h
>

199 
	~"˛igí_buf.h
"

200 
	~"˛igí_v¨.h
"

201 
	~"˛igí_cvec.h
"

202 
	~"˛igí_gí.h
"

203 
	~"˛igí_sy¡ax.h
"

204 
	~"˛igí_h™dÀ.h
"

205 
	~"˛igí_∑r£.h
"

207 
	gdebug
 = 0;

209 
˛igí_∑r£gë_löío
 ();

212 
	$˛igí_∑r£_debug
(
d
)

214 
debug
 = 
d
;

216 
	}
}

223 
	$˛igí_∑r£îr‹
(*
_ya
,

224 *
s
)

226 
	`Ârötf
(
°dîr
, "%s%s%d: Error: %s:át or before: '%s'\n",

227 
_YA
->
ya_«me
,

229 
_YA
->
ya_löíum
 ,

230 
s
,

231 
˛igí_∑r£ãxt
);

233 
	}
}

235 
	#˛igí_∑r£îr‹1
(
ya
, 
s
Ë
	`˛igí_∑r£îr‹
(ya, s)

	)

241 
cg_v¨
 *

242 
	$¸óã_cv
(
˛iyacc
 *
ya
,

243 *
ty≥
,

244 *
°r
)

246 
cg_v¨
 *
cv
 = 
NULL
;

248 i‡((
cv
 = 
	`cv_√w
(
CGV_STRING
)Ë=
NULL
){

249 
	`Ârötf
(
°dîr
, "mÆloc: %s\n", 
	`°ªº‹
(
î∫o
));

250 
d⁄e
;

252 i‡(
ty≥
){

253 i‡(
	`cv_ty≥_£t
(
cv
, 
	`cv_°r2ty≥
(
ty≥
)Ë=
CGV_ERR
){

254 
	`Ârötf
(
°dîr
, "%s:%d:Érror: No suchÅype: %s\n",

255 
ya
->
ya_«me
, ya->
ya_löíum
, 
ty≥
);

256 
	`cv_‰ì
(
cv
); cv = 
NULL
;

257 
d⁄e
;

260 i‡(
	`cv_∑r£
(
°r
, 
cv
) < 0){

261 
	`cv_‰ì
(
cv
); cv = 
NULL
;

262 
d⁄e
;

264 
d⁄e
:

265  
cv
;

266 
	}
}

272 
	$cgy_Êag
(
˛iyacc
 *
ya
,

273 *
v¨
)

275 
cgy_°ack
 *
cs
 = 
ya
->
ya_°ack
;

276 
cg_v¨
 *
cv
;

277 
ªtvÆ
 = -1;

279 i‡(
debug
)

280 
	`Ârötf
(
°dîr
, "%s: %†1\n", 
__FUNCTION__
, 
v¨
);

281 i‡(
cs
){

282 i‡(
ya
->
ya_cvec
 =
NULL
){

283 i‡((
ya
->
ya_cvec
 = 
	`cvec_√w
(0)Ë=
NULL
){

284 
	`Ârötf
(
°dîr
, "%s: cvec_√w:%s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

285 
d⁄e
;

288 i‡((
cv
 = 
	`cvec_add
(
ya
->
ya_cvec
, 
CGV_INT32
)Ë=
NULL
){

289 
	`Ârötf
(
°dîr
, "%s:ÑóŒoc:%s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

290 
d⁄e
;

292 
	`cv_«me_£t
(
cv
, 
v¨
);

293 
	`cv_öt32_£t
(
cv
, 1);

295 
ªtvÆ
 = 0;

296 
d⁄e
:

297  
ªtvÆ
;

298 
	}
}

308 
	$cgy_åì«me
(
˛iyacc
 *
ya
,

309 *
«me
)

311 
cg_obj
 *
co
 = 
NULL
;

312 
cg_obj
 *
cŸ
;

313 
cgy_li°
 *
˛
;

314 
ªtvÆ
 = -1;

315 
i
;

316 
∑r£_åì
 *
±
;

319 
˛
=
ya
->
ya_li°
; cl; c»˛->
˛_√xt
){

320 
co
 = 
˛
->
˛_obj
;

323 
cŸ
 = 
	`co_t›
(
co
);

324 
±
 = &
cŸ
->
co_±
;

326 i‡(
±
->
±_Àn
){

328 
i
=0; i<
±
->
±_Àn
; i++){

329 i‡((
co
=
±
->
±_vec
[
i
]Ë!
NULL
)

330 
	`co_up_£t
(
co
, 
NULL
);

332 i‡(
	`˛igí_åì_add
(
ya
->
ya_h™dÀ
, ya->
ya_åì«me
, *
±
) < 0)

333 
d⁄e
;

335 
	`mem£t
(
±
, 0, (*pt));

339 i‡(
ya
->
ya_åì«me
)

340 
	`‰ì
(
ya
->
ya_åì«me
);

341 i‡((
ya
->
ya_åì«me
 = 
	`°rdup
(
«me
)Ë=
NULL
){

342 
	`Ârötf
(
°dîr
, "%s: sådup: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

343 
d⁄e
;

345 
ªtvÆ
 = 0;

346 
d⁄e
:

347  
ªtvÆ
;

348 
	}
}

355 
	$cgy_assignmít
(
˛iyacc
 *
ya
,

356 *
v¨
,

357 *
vÆ
)

359 
cgy_°ack
 *
cs
 = 
ya
->
ya_°ack
;

360 
ªtvÆ
 = -1;

361 
cg_v¨
 *
cv
;

362 *
åì«me_keyw‹d
;

363 
˛igí_h™dÀ
 
h
 = 
ya
->
ya_h™dÀ
;

365 i‡(
debug
)

366 
	`Ârötf
(
°dîr
, "%s: %s=%s\n", 
__FUNCTION__
, 
v¨
, 
vÆ
);

367 i‡(
cs
 =
NULL
){

368 
	`Ârötf
(
°dîr
, "%s: Eº‹, sèck shouldÇŸ bêNULL\n", 
__FUNCTION__
);

370 i‡(
cs
->
cs_√xt
 !
NULL
){

371 i‡(
ya
->
ya_cvec
 =
NULL
)

372 i‡((
ya
->
ya_cvec
 = 
	`cvec_√w
(0)Ë=
NULL
){

373 
	`Ârötf
(
°dîr
, "%s: cvec_√w:%s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

374 
d⁄e
;

376 i‡((
cv
 = 
	`cvec_add
(
ya
->
ya_cvec
, 
CGV_STRING
)Ë=
NULL
){

377 
	`Ârötf
(
°dîr
, "%s:ÑóŒoc:%s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

378 
d⁄e
;

380 
	`cv_«me_£t
(
cv
, 
v¨
);

381 i‡(
	`cv_∑r£
(
vÆ
, 
cv
) < 0)

382 
d⁄e
;

385 
åì«me_keyw‹d
 = 
	`˛igí_åì«me_keyw‹d
(
h
);

386 i‡(
	`°rcmp
(
v¨
, 
åì«me_keyw‹d
) == 0){

387 i‡(
	`cgy_åì«me
(
ya
, 
vÆ
) < 0)

388 
d⁄e
;

391 i‡((
cv
 = 
	`cvec_add
(
ya
->
ya_globÆs
, 
CGV_STRING
)Ë=
NULL
){

392 
	`Ârötf
(
°dîr
, "%s:ÑóŒoc:%s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

393 
d⁄e
;

395 
	`cv_«me_£t
(
cv
, 
v¨
);

396 i‡(
	`cv_∑r£
(
vÆ
, 
cv
) < 0)

397 
d⁄e
;

400 
ªtvÆ
 = 0;

401 
d⁄e
:

402  
ªtvÆ
;

403 
	}
}

409 
	$cgy_ˇŒback
(
˛iyacc
 *
ya
,

410 *
cb_°r
)

412 
cgy_°ack
 *
cs
 = 
ya
->
ya_°ack
;

413 
cg_ˇŒback
 *
cc
, **
c˝
;

415 i‡(
debug
)

416 
	`Ârötf
(
°dîr
, "%s: %s\n", 
__FUNCTION__
, 
cb_°r
);

417 i‡(
cs
 =
NULL
)

419 
c˝
 = &
ya
->
ya_ˇŒbacks
;

420 *
c˝
 !
NULL
)

421 
c˝
 = &((*c˝)->
cc_√xt
);

422 i‡((
cc
 = 
	`mÆloc
((*cc))Ë=
NULL
){

423 
	`Ârötf
(
°dîr
, "%s: mÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

424 
	`˛igí_∑r£îr‹1
(
ya
, "Allocating cligen callback");

427 
	`mem£t
(
cc
, 0, (*cc));

428 
cc
->
cc_‚_°r
 = 
cb_°r
;

429 *
c˝
 = 
cc
;

431 
	}
}

437 
	$cgy_ˇŒback_¨g
(
˛iyacc
 *
ya
,

438 *
ty≥
,

439 *
¨g
)

441 
ªtvÆ
 = -1;

442 
cg_ˇŒback
 *
cc
;

443 
cg_ˇŒback
 *
c˛a°
;

444 
cg_v¨
 *
cv
 = 
NULL
;

446 
c˛a°
 = 
NULL
;

447 
cc
=
ya
->
ya_ˇŒbacks
; cc; cc=cc->
cc_√xt
)

448 
c˛a°
 = 
cc
;

449 i‡(
c˛a°
){

450 i‡((
cv
 = 
	`¸óã_cv
(
ya
, 
ty≥
, 
¨g
)Ë=
NULL
)

451 
d⁄e
;

452 i‡(
c˛a°
->
cc_cvec
)

453 
	`cvec_≠≥nd_v¨
(
c˛a°
->
cc_cvec
, 
cv
);

455 
c˛a°
->
cc_cvec
 = 
	`cvec_‰om_v¨
(
cv
);

457 
ªtvÆ
 = 0;

458 
d⁄e
:

459 i‡(
cv
)

460 
	`cv_‰ì
(
cv
);

461  
ªtvÆ
;

462 
	}
}

468 
	$ex∑nd_¨g
(
˛iyacc
 *
ya
,

469 *
ty≥
,

470 *
¨g
)

472 
ªtvÆ
 = -1;

473 
cg_v¨
 *
cv
 = 
NULL
;

475 i‡((
cv
 = 
	`¸óã_cv
(
ya
, 
ty≥
, 
¨g
)Ë=
NULL
)

476 
d⁄e
;

477 i‡(
ya
->
ya_v¨
->
co_ex∑nd_‚_vec
)

478 
	`cvec_≠≥nd_v¨
(
ya
->
ya_v¨
->
co_ex∑nd_‚_vec
, 
cv
);

480 
ya
->
ya_v¨
->
co_ex∑nd_‚_vec
 = 
	`cvec_‰om_v¨
(
cv
);

481 
ªtvÆ
 = 0;

482 
d⁄e
:

483 i‡(
cv
)

484 
	`cv_‰ì
(
cv
);

485  
ªtvÆ
;

486 
	}
}

492 
	$ex∑nd_‚
(
˛iyacc
 *
ya
,

493 *
‚
)

495 
ya
->
ya_v¨
->
co_ex∑nd_‚_°r
 = 
‚
;

497 
	}
}

500 
	$cg_å™¶©e
(
˛iyacc
 *
ya
,

501 *
‚
)

503 
ya
->
ya_v¨
->
co_å™¶©e_‚_°r
 = 
‚
;

505 
	}
}

508 
	$cgy_li°_push
(
cg_obj
 *
co
,

509 
cgy_li°
 **
˛0
)

511 
cgy_li°
 *
˛
;

513 i‡(
debug
)

514 
	`Ârötf
(
°dîr
, "%s\n", 
__FUNCTION__
);

515 i‡((
˛
 = 
	`mÆloc
((*˛))Ë=
NULL
) {

516 
	`Ârötf
(
°dîr
, "%s: mÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

519 
˛
->
˛_√xt
 = *
˛0
;

520 
˛
->
˛_obj
 = 
co
;

521 *
˛0
 = 
˛
;

523 
	}
}

529 
	$cgy_li°_dñëe
(
cgy_li°
 **
˛0
)

531 
cgy_li°
 *
˛
;

533 (
˛
 = *
˛0
Ë!
NULL
){

534 *
˛0
 = 
˛
->
˛_√xt
;

535 
	`‰ì
(
˛
);

538 
	}
}

549 
cg_obj
 *

550 
	$cgy_v¨_¸óã
(
˛iyacc
 *
ya
)

552 
cg_obj
 *
co
;

555 i‡((
co
 = 
	`cov_√w
(
CGV_ERR
, 
NULL
)) == NULL){

556 
	`Ârötf
(
°dîr
, "%s: mÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

557 
	`˛igí_∑r£îr‹1
(
ya
, "Allocating cligen object");

558  
NULL
;

560 i‡(
debug
)

561 
	`Ârötf
(
°dîr
, "%s:Öª\n", 
__FUNCTION__
);

562  
co
;

563 
	}
}

570 
	$cgy_v¨_«me_ty≥
(
˛iyacc
 *
ya
,

571 *
«me
,

572 *
ty≥
)

574 
ya
->
ya_v¨
->
co_comm™d
 = 
«me
;

575 i‡((
ya
->
ya_v¨
->
co_vty≥
 = 
	`cv_°r2ty≥
(
ty≥
)Ë=
CGV_ERR
){

576 
	`˛igí_∑r£îr‹1
(
ya
, "InvalidÅype");

577 
	`Ârötf
(
°dîr
, "%s: InvÆidÅy≥: %s\n", 
__FUNCTION__
, 
ty≥
);

581 
	}
}

591 
	$cgy_v¨_po°
(
˛iyacc
 *
ya
)

593 
cgy_li°
 *
˛
;

594 
cg_obj
 *
coc
;

595 
cg_obj
 *
c›¨ít
;

596 
cg_obj
 *
co
;

597 
cg_obj
 *
coy
 = 
ya
->
ya_v¨
;

600 i‡(
coy
->
co_vty≥
 =
CGV_ERR
)

601 
coy
->
co_vty≥
 = 
	`cv_°r2ty≥
(coy->
co_comm™d
);

603 i‡(
debug
)

604 
	`Ârötf
(
°dîr
, "%s: cmd:%†vty≥:%d\n", 
__FUNCTION__
,

605 
coy
->
co_comm™d
,

606 
coy
->
co_vty≥
 );

607 i‡(
coy
->
co_vty≥
 =
CGV_ERR
){

608 
	`˛igí_∑r£îr‹1
(
ya
, "Wrong or unassigned variableÅype");

612 i‡(
ya
->
ya_›t
){

613 i‡(
ya
->
ya_°ack
 =
NULL
){

614 
	`Ârötf
(
°dîr
, "Optionállowed only within () or []\n");

617 
˛
 = 
ya
->
ya_°ack
->
cs_li°
;

621 
˛
 = 
ya
->
ya_li°
;

622 ; 
˛
; c»˛->
˛_√xt
){

623 
c›¨ít
 = 
˛
->
˛_obj
;

624 i‡(
˛
->
˛_√xt
){

625 i‡(
	`co_c›y
(
coy
, 
c›¨ít
, &
coc
) < 0)

629 
coc
 = 
coy
;

630 
	`co_up_£t
(
coc
, 
c›¨ít
);

631 i‡((
co
 = 
	`co_ö£π
(&
c›¨ít
->
co_±
, 
coc
)Ë=
NULL
)

633 
˛
->
˛_obj
 = 
co
;

636 
	}
}

647 
	$cgy_cmd
(
˛iyacc
 *
ya
,

648 *
cmd
)

650 
cgy_li°
 *
˛
;

651 
cg_obj
 *
c›
;

652 
cg_obj
 *
c⁄ew
;

653 
cg_obj
 *
co
;

655 
˛
=
ya
->
ya_li°
; cl; c»˛->
˛_√xt
){

656 
c›
 = 
˛
->
˛_obj
;

657 i‡(
debug
)

658 
	`Ârötf
(
°dîr
, "%s: %sÖarent:%s\n",

659 
__FUNCTION__
, 
cmd
, 
c›
->
co_comm™d
);

660 i‡((
c⁄ew
 = 
	`co_√w
(
cmd
, 
c›
)Ë=
NULL
) {

661 
	`˛igí_∑r£îr‹1
(
ya
, "Allocating cligen object");

664 i‡((
co
 = 
	`co_ö£π
(&
c›
->
co_±
, 
c⁄ew
)Ë=
NULL
)

666 
˛
->
˛_obj
 = 
co
;

669 
	}
}

678 
	$cgy_ª„ªn˚
(
˛iyacc
 *
ya
,

679 *
«me
)

681 
cgy_li°
 *
˛
;

682 
cg_obj
 *
c›
;

683 
cg_obj
 *
cŸ
;

685 
˛
=
ya
->
ya_li°
; cl; c»˛->
˛_√xt
){

687 
c›
 = 
˛
->
˛_obj
;

688 i‡((
cŸ
 = 
	`co_√w
(
«me
, 
c›
)Ë=
NULL
) {

689 
	`˛igí_∑r£îr‹1
(
ya
, "Allocating cligen object");

692 
cŸ
->
co_ty≥
 = 
CO_REFERENCE
;

693 i‡((
cŸ
 = 
	`co_ö£π
(&
c›
->
co_±
, cŸ)Ë=
NULL
)

698 
˛
->
˛_obj
 = 
cŸ
;

701 
	}
}

709 
	$cgy_commít
(
˛iyacc
 *
ya
,

710 *
commít
)

712 
cgy_li°
 *
˛
;

713 
cg_obj
 *
co
;

715 
˛
 = 
ya
->
ya_li°
; cl; c»˛->
˛_√xt
){

716 
co
 = 
˛
->
˛_obj
;

717 i‡(
co
->
co_hñp
 =
NULL
)

718 i‡((
co
->
co_hñp
 = 
	`°rdup
(
commít
)Ë=
NULL
){

719 
	`˛igí_∑r£îr‹1
(
ya
, "Allocating comment");

724 
	}
}

730 
	$cgy_choi˚_mîge
(
˛iyacc
 *
ya
,

731 *
°r
,

732 *
≠p
)

734 
Àn
;

735 *
s
;

737 
Àn
 = 
	`°æí
(
°r
)+°æí(
≠p
) + 2;

738 i‡((
s
 = 
	`ªÆloc
(
°r
, 
Àn
)Ë=
NULL
) {

739 
	`Ârötf
(
°dîr
, "%s:ÑóŒoc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

740  
NULL
;

742 
	`°∫ˇt
(
s
, "|", 
Àn
-1);

743 
	`°∫ˇt
(
s
, 
≠p
, 
Àn
-1);

744  
s
;

745 
	}
}

755 
	$cgy_ãrmöÆ
(
˛iyacc
 *
ya
)

757 
cgy_li°
 *
˛
;

758 
cg_obj
 *
co
;

759 
i
;

760 
cg_ˇŒback
 *
cc
, **
c˝
;

761 
ªtvÆ
 = -1;

763 
˛
 = 
ya
->
ya_li°
; cl; c»˛->
˛_√xt
){

764 
co
 = 
˛
->
˛_obj
;

766 i‡(
ya
->
ya_ˇŒbacks
){

767 
c˝
 = &
co
->
co_ˇŒbacks
;

768 *
c˝
 !
NULL
)

769 
c˝
 = &((*c˝)->
cc_√xt
);

770 i‡(
	`co_ˇŒback_c›y
(
ya
->
ya_ˇŒbacks
, 
c˝
) < 0)

771 
d⁄e
;

774 i‡(
ya
->
ya_cvec
){

775 #ifde‡
nŸyë


776 i‡((
cv
 = 
	`cvec_föd_v¨
(
ya
->
ya_cvec
, "auth")Ë!
NULL
)

777 
co
->
co_auth
 = 
	`°rdup
(
	`cv_°rög_gë
(
cv
));

779 i‡(
	`cvec_föd_v¨
(
ya
->
ya_cvec
, "hide"Ë!
NULL
)

780 
co
->
co_hide
 = 1;

782 i‡((
co
->
co_cvec
 = 
	`cvec_dup
(
ya
->
ya_cvec
)Ë=
NULL
){

783 
	`Ârötf
(
°dîr
, "%s: cvec_dup: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

784 
d⁄e
;

788 
i
=0; i<
co
->
co_max
; i++)

789 i‡(
co
->
co_√xt
[
i
]==
NULL
)

791 i‡(
i
 =
co
->
co_max
)

792 
	`co_ö£π
(&
co
->
co_±
, 
NULL
);

795 (
cc
 = 
ya
->
ya_ˇŒbacks
Ë!
NULL
){

796 i‡(
cc
->
cc_cvec
)

797 
	`cvec_‰ì
(
cc
->
cc_cvec
);

798 i‡(
cc
->
cc_‚_°r
)

799 
	`‰ì
(
cc
->
cc_‚_°r
);

800 
ya
->
ya_ˇŒbacks
 = 
cc
->
cc_√xt
;

801 
	`‰ì
(
cc
);

803 i‡(
ya
->
ya_cvec
){

804 
	`cvec_‰ì
(
ya
->
ya_cvec
);

805 
ya
->
ya_cvec
 = 
NULL
;

807 
ªtvÆ
 = 0;

808 
d⁄e
:

809  
ªtvÆ
;

810 
	}
}

816 
	$˘x_push
(
˛iyacc
 *
ya
)

818 
cgy_li°
 *
˛
;

819 
cgy_°ack
 *
cs
;

821 i‡(
debug
)

822 
	`Ârötf
(
°dîr
, "%s\n", 
__FUNCTION__
);

823 i‡((
cs
 = 
	`mÆloc
((*cs))Ë=
NULL
) {

824 
	`Ârötf
(
°dîr
, "%s: mÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

827 
	`mem£t
(
cs
, 0, (*cs));

828 
cs
->
cs_√xt
 = 
ya
->
ya_°ack
;

829 
ya
->
ya_°ack
 = 
cs
;

830 
˛
 = 
ya
->
ya_li°
; cl; c»˛->
˛_√xt
){

831 i‡(
	`cgy_li°_push
(
˛
->
˛_obj
, &
cs
->
cs_li°
) < 0)

835 
	}
}

843 
	$˘x_≥ek_sw≠
(
˛iyacc
 *
ya
)

845 
cgy_°ack
 *
cs
;

846 
cgy_li°
 *
˛
;

847 
cg_obj
 *
co
;

849 i‡(
debug
)

850 
	`Ârötf
(
°dîr
, "%s\n", 
__FUNCTION__
);

851 i‡((
cs
 = 
ya
->
ya_°ack
Ë=
NULL
){

853 
	`˛igí_∑r£îr‹1
(
ya
, "No surrounding () or []");

856 
	`cgy_li°_dñëe
(&
ya
->
ya_li°
);

860 
˛
 = 
ya
->
ya_li°
; cl; c»˛->
˛_√xt
){

861 
co
 = 
˛
->
˛_obj
;

862 i‡(
	`cgy_li°_push
(
co
, &
cs
->
cs_ßved
) < 0)

865 
	`cgy_li°_dñëe
(&
ya
->
ya_li°
);

866 
˛
 = 
cs
->
cs_li°
; cl; c»˛->
˛_√xt
){

867 
co
 = 
˛
->
˛_obj
;

868 i‡(
	`cgy_li°_push
(
co
, &
ya
->
ya_li°
) < 0)

872 
	}
}

880 
	$˘x_≥ek_sw≠2
(
˛iyacc
 *
ya
)

882 
cgy_°ack
 *
cs
;

883 
cgy_li°
 *
˛
;

884 
cg_obj
 *
co
;

886 i‡(
debug
)

887 
	`Ârötf
(
°dîr
, "%s\n", 
__FUNCTION__
);

888 i‡((
cs
 = 
ya
->
ya_°ack
Ë=
NULL
){

890 
	`˛igí_∑r£îr‹1
(
ya
, "No surrounding () or []");

893 
	`cgy_li°_dñëe
(&
ya
->
ya_li°
);

897 
	`cgy_li°_dñëe
(&
ya
->
ya_li°
);

898 
˛
 = 
cs
->
cs_li°
; cl; c»˛->
˛_√xt
){

899 
co
 = 
˛
->
˛_obj
;

900 i‡(
	`cgy_li°_push
(
co
, &
ya
->
ya_li°
) < 0)

904 
	}
}

907 
	$dñëe_°ack_ñemít
(
cgy_°ack
 *
cs
)

909 
	`cgy_li°_dñëe
(&
cs
->
cs_li°
);

910 
	`cgy_li°_dñëe
(&
cs
->
cs_ßved
);

911 
	`‰ì
(
cs
);

914 
	}
}

923 
	$˘x_p›_add
(
˛iyacc
 *
ya
)

925 
cgy_°ack
 *
cs
;

926 
cgy_li°
 *
˛
;

927 
cg_obj
 *
co
;

929 i‡(
debug
)

930 
	`Ârötf
(
°dîr
, "%s\n", 
__FUNCTION__
);

931 i‡((
cs
 = 
ya
->
ya_°ack
Ë=
NULL
){

932 
	`Ârötf
(
°dîr
, "%s: cgy_°ackÉm±y\n", 
__FUNCTION__
);

935 
ya
->
ya_°ack
 = 
cs
->
cs_√xt
;

937 
˛
 = 
cs
->
cs_li°
; cl; c»˛->
˛_√xt
){

938 
co
 = 
˛
->
˛_obj
;

939 i‡(
	`cgy_li°_push
(
co
, &
ya
->
ya_li°
) < 0)

942 
˛
 = 
cs
->
cs_ßved
; cl; c»˛->
˛_√xt
){

943 
co
 = 
˛
->
˛_obj
;

944 i‡(
	`cgy_li°_push
(
co
, &
ya
->
ya_li°
) < 0)

947 
	`dñëe_°ack_ñemít
(
cs
);

949 
	}
}

956 
	$˘x_p›
(
˛iyacc
 *
ya
)

958 
cgy_°ack
 *
cs
;

959 
cgy_li°
 *
˛
;

960 
cg_obj
 *
co
;

962 i‡(
debug
)

963 
	`Ârötf
(
°dîr
, "%s\n", 
__FUNCTION__
);

964 i‡((
cs
 = 
ya
->
ya_°ack
Ë=
NULL
){

965 
	`Ârötf
(
°dîr
, "%s: cgy_°ackÉm±y\n", 
__FUNCTION__
);

968 
ya
->
ya_°ack
 = 
cs
->
cs_√xt
;

969 
˛
 = 
cs
->
cs_ßved
; cl; c»˛->
˛_√xt
){

970 
co
 = 
˛
->
˛_obj
;

971 i‡(
	`cgy_li°_push
(
co
, &
ya
->
ya_li°
) < 0)

974 
	`dñëe_°ack_ñemít
(
cs
);

976 
	}
}

982 
	$cg_ªgexp
(
˛iyacc
 *
ya
,

983 *
rx
)

985 
ya
->
ya_v¨
->
co_ªgex
 = 
rx
;

986 
ya
->
ya_v¨
->
co_vty≥
=
CGV_STRING
;

988 
	}
}

999 
	$cg_mömax
(
˛iyacc
 *
ya
,

1000 *
mö°r
,

1001 *
max°r
,

1002 
cg_obj
 *
yv
,

1003 
cv_ty≥
 
cvty≥
)

1005 
ªtvÆ
 = -1;

1006 *
ªas⁄
 = 
NULL
;

1007 
cg_v¨
 *
cv
;

1008 
cvªt
;

1010 i‡(
mö°r
 !
NULL
){

1011 i‡((
cv
 = 
	`cv_√w
(
cvty≥
)Ë=
NULL
){

1012 
	`Ârötf
(
°dîr
, "cv_√w %s\n", 
	`°ªº‹
(
î∫o
));

1013 
d⁄e
;

1015 i‡(
	`cv_«me_£t
(
cv
, "ønge_low"Ë=
NULL
){

1016 
	`Ârötf
(
°dîr
, "cv_«me_£à%s\n", 
	`°ªº‹
(
î∫o
));

1017 
d⁄e
;

1019 i‡(
yv
->
co_vty≥
 =
CGV_DEC64
)

1020 
	`cv_dec64_n_£t
(
cv
, 
yv
->
co_dec64_n
);

1021 i‡((
cvªt
 = 
	`cv_∑r£1
(
mö°r
, 
cv
, &
ªas⁄
)) < 0){

1022 
	`Ârötf
(
°dîr
, "cv_∑r£1 %s\n", 
	`°ªº‹
(
î∫o
));

1023 
d⁄e
;

1025 i‡(
cvªt
 == 0){

1026 
	`˛igí_∑r£îr‹1
(
ya
, 
ªas⁄
);

1027 
	`‰ì
(
ªas⁄
);

1028 
d⁄e
;

1030 
yv
->
co_øngecv_low
 = 
cv
;

1032 i‡((
cv
 = 
	`cv_√w
(
cvty≥
)Ë=
NULL
){

1033 
	`Ârötf
(
°dîr
, "cv_√w %s\n", 
	`°ªº‹
(
î∫o
));

1034 
d⁄e
;

1036 i‡(
	`cv_«me_£t
(
cv
, "ønge_high"Ë=
NULL
){

1037 
	`Ârötf
(
°dîr
, "cv_«me_£à%s\n", 
	`°ªº‹
(
î∫o
));

1038 
d⁄e
;

1040 i‡(
yv
->
co_vty≥
 =
CGV_DEC64
)

1041 
	`cv_dec64_n_£t
(
cv
, 
yv
->
co_dec64_n
);

1042 i‡((
cvªt
 = 
	`cv_∑r£1
(
max°r
, 
cv
, &
ªas⁄
)) < 0){

1043 
	`Ârötf
(
°dîr
, "cv_∑r£1 %s\n", 
	`°ªº‹
(
î∫o
));

1044 
d⁄e
;

1046 i‡(
cvªt
 == 0){

1047 
	`˛igí_∑r£îr‹1
(
ya
, 
ªas⁄
);

1048 
	`‰ì
(
ªas⁄
);

1049 
d⁄e
;

1051 
yv
->
co_øngecv_high
 = 
cv
;

1053 
ya
->
ya_v¨
->
co_ønge
++;

1054 
ªtvÆ
 = 0;

1055 
d⁄e
:

1056  
ªtvÆ
;

1057 
	}
}

1066 
	$cg_Àngth
(
˛iyacc
 *
ya
,

1067 *
mö°r
,

1068 *
max°r
)

1070 
cg_obj
 *
yv
;

1072 i‡((
yv
 = 
ya
->
ya_v¨
Ë=
NULL
){

1073 
	`Ârötf
(
°dîr
, "No var obj");

1076  
	`cg_mömax
(
ya
, 
mö°r
, 
max°r
, 
yv
, 
CGV_UINT64
);

1077 
	}
}

1083 
	$cg_ønge
(
˛iyacc
 *
ya
,

1084 *
mö°r
,

1085 *
max°r
)

1087 
cg_obj
 *
yv
;

1089 i‡((
yv
 = 
ya
->
ya_v¨
Ë=
NULL
){

1090 
	`Ârötf
(
°dîr
, "No var obj");

1093  
	`cg_mömax
(
ya
, 
mö°r
, 
max°r
, 
yv
, yv->
co_vty≥
);

1094 
	}
}

1100 
	$cg_dec64_n
(
˛iyacc
 *
ya
,

1101 *
‰a˘i⁄_digôs
)

1103 
cg_obj
 *
yv
;

1104 *
ªas⁄
 = 
NULL
;

1106 i‡((
yv
 = 
ya
->
ya_v¨
Ë=
NULL
){

1107 
	`Ârötf
(
°dîr
, "No var obj");

1110 i‡(
	`∑r£_uöt8
(
‰a˘i⁄_digôs
, &
yv
->
co_dec64_n
, 
NULL
) != 1){

1111 
	`˛igí_∑r£îr‹1
(
ya
, 
ªas⁄
);

1115 
	}
}

1121 
	$cgy_öô
(
˛iyacc
 *
ya
,

1122 
cg_obj
 *
co_t›
)

1124 i‡(
debug
)

1125 
	`Ârötf
(
°dîr
, "%s\n", 
__FUNCTION__
);

1127 i‡(
	`cgy_li°_push
(
co_t›
, &
ya
->
ya_li°
) < 0)

1129 i‡(
	`˘x_push
(
ya
) < 0)

1132 
	}
}

1138 
	$cgy_exô
(
˛iyacc
 *
ya
)

1140 
cgy_°ack
 *
cs
;

1142 i‡(
debug
)

1143 
	`Ârötf
(
°dîr
, "%s\n", 
__FUNCTION__
);

1145 
ya
->
ya_v¨
 = 
NULL
;

1146 
	`cgy_li°_dñëe
(&
ya
->
ya_li°
);

1147 if((
cs
 = 
ya
->
ya_°ack
Ë!
NULL
){

1148 
	`dñëe_°ack_ñemít
(
cs
);

1150 
	`Ârötf
(
°dîr
, "%s:%d:Érror:Üacking () or []át or before: '%s'\n",

1151 
ya
->
ya_«me
,

1152 
ya
->
ya_löíum
,

1153 
ya
->
ya_∑r£_°rög


1159 
	}
}

1168 #ifde‡
YYTYPE_UINT8


1169 
YYTYPE_UINT8
 
	tyyty≥_uöt8
;

1171 
	tyyty≥_uöt8
;

1174 #ifde‡
YYTYPE_INT8


1175 
YYTYPE_INT8
 
	tyyty≥_öt8
;

1177 sig√d 
	tyyty≥_öt8
;

1180 #ifde‡
YYTYPE_UINT16


1181 
YYTYPE_UINT16
 
	tyyty≥_uöt16
;

1183 
	tyyty≥_uöt16
;

1186 #ifde‡
YYTYPE_INT16


1187 
YYTYPE_INT16
 
	tyyty≥_öt16
;

1189 
	tyyty≥_öt16
;

1192 #i‚de‡
YYSIZE_T


1193 #ifde‡
__SIZE_TYPE__


1194 
	#YYSIZE_T
 
__SIZE_TYPE__


	)

1195 #ñi‡
deföed
 
size_t


1196 
	#YYSIZE_T
 
size_t


	)

1197 #ñi‡! 
deföed
 
YYSIZE_T


1198 
	~<°ddef.h
>

1199 
	#YYSIZE_T
 
size_t


	)

1201 
	#YYSIZE_T
 

	)

1205 
	#YYSIZE_MAXIMUM
 ((
YYSIZE_T
Ë-1)

	)

1207 #i‚de‡
YY_


1208 #i‡
deföed
 
YYENABLE_NLS
 && YYENABLE_NLS

1209 #i‡
ENABLE_NLS


1210 
	~<liböé.h
>

1211 
	#YY_
(
Msgid
Ë
	`dgëãxt
 ("bis⁄-ru¡ime", Msgid)

	)

1214 #i‚de‡
YY_


1215 
	#YY_
(
Msgid
Ë
	)
Msgid

1219 #i‚de‡
YY_ATTRIBUTE


1220 #i‡(
deföed
 
__GNUC__
 \

1221 && (2 < 
	g__GNUC__
 || (__GNUC__ =2 && 96 <
__GNUC_MINOR__
))) \

1222 || 
deföed
 
__SUNPRO_C
 && 0x5110 <= __SUNPRO_C

1223 
	#YY_ATTRIBUTE
(
S≥c
Ë
	`__©åibuã__
(S≥c)

	)

1225 
	#YY_ATTRIBUTE
(
S≥c
Ë

	)

1229 #i‚de‡
YY_ATTRIBUTE_PURE


1230 
	#YY_ATTRIBUTE_PURE
 
	`YY_ATTRIBUTE
 ((
__puª__
))

	)

1233 #i‚de‡
YY_ATTRIBUTE_UNUSED


1234 
	#YY_ATTRIBUTE_UNUSED
 
	`YY_ATTRIBUTE
 ((
__unu£d__
))

	)

1237 #i‡!
deföed
 
_N‹ëu∫
 \

1238 && (!
deföed
 
__STDC_VERSION__
 || __STDC_VERSION__ < 201112)

1239 #i‡
deföed
 
_MSC_VER
 && 1200 <= _MSC_VER

1240 
	#_N‹ëu∫
 
	`__de˛•ec
 (
n‹ëu∫
)

	)

1242 
	#_N‹ëu∫
 
	`YY_ATTRIBUTE
 ((
__n‹ëu∫__
))

	)

1247 #i‡! 
deföed
 
löt
 || deföed 
__GNUC__


1248 
	#YYUSE
(
E
Ë((Ë(E))

	)

1250 
	#YYUSE
(
E
Ë

	)

1253 #i‡
deföed
 
__GNUC__
 && 407 <__GNUC__ * 100 + 
__GNUC_MINOR__


1255 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
 \

1256 
	`_Pøgma
 ("GCC diagnosticÖush") \

1257 
	`_Pøgma
 ("GCC diagnostic ignored \"-Wuninitialized\"")\

1258 
	`_Pøgma
 ("GCC dügno°i¯ign‹ed \"-Wmaybe-unöôülized\"")

	)

1259 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END
 \

1260 
	`_Pøgma
 ("GCC dügno°i¯p›")

	)

1262 
	#YY_INITIAL_VALUE
(
VÆue
Ë
	)
Value

1264 #i‚de‡
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1265 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


	)

1266 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END


	)

1268 #i‚de‡
YY_INITIAL_VALUE


1269 
	#YY_INITIAL_VALUE
(
VÆue
Ë

	)

1273 #i‡! 
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


1277 #ifde‡
YYSTACK_USE_ALLOCA


1278 #i‡
YYSTACK_USE_ALLOCA


1279 #ifde‡
__GNUC__


1280 
	#YYSTACK_ALLOC
 
__buûtö_Æloˇ


	)

1281 #ñi‡
deföed
 
__BUILTIN_VA_ARG_INCR


1282 
	~<Æloˇ.h
>

1283 #ñi‡
deföed
 
_AIX


1284 
	#YYSTACK_ALLOC
 
__Æloˇ


	)

1285 #ñi‡
deföed
 
_MSC_VER


1286 
	~<mÆloc.h
>

1287 
	#Æloˇ
 
_Æloˇ


	)

1289 
	#YYSTACK_ALLOC
 
Æloˇ


	)

1290 #i‡! 
deföed
 
_ALLOCA_H
 && ! deföed 
EXIT_SUCCESS


1291 
	~<°dlib.h
>

1293 #i‚de‡
EXIT_SUCCESS


1294 
	#EXIT_SUCCESS
 0

	)

1301 #ifde‡
YYSTACK_ALLOC


1303 
	#YYSTACK_FREE
(
På
Ëdÿ{ ; } 0)

	)

1304 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


1309 
	#YYSTACK_ALLOC_MAXIMUM
 4032

	)

1312 
	#YYSTACK_ALLOC
 
YYMALLOC


	)

1313 
	#YYSTACK_FREE
 
YYFREE


	)

1314 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


1315 
	#YYSTACK_ALLOC_MAXIMUM
 
YYSIZE_MAXIMUM


	)

1317 #i‡(
deföed
 
__˝lu•lus
 && ! deföed 
EXIT_SUCCESS
 \

1318 && ! ((
deföed
 
	gYYMALLOC
 || deföed 
	gmÆloc
) \

1319 && (
deföed
 
	gYYFREE
 || deföed 
	g‰ì
)))

1320 
	~<°dlib.h
>

1321 #i‚de‡
EXIT_SUCCESS


1322 
	#EXIT_SUCCESS
 0

	)

1325 #i‚de‡
YYMALLOC


1326 
	#YYMALLOC
 
mÆloc


	)

1327 #i‡! 
deföed
 
mÆloc
 && ! deföed 
EXIT_SUCCESS


1328 *
mÆloc
 (
YYSIZE_T
);

1331 #i‚de‡
YYFREE


1332 
	#YYFREE
 
‰ì


	)

1333 #i‡! 
deföed
 
‰ì
 && ! deföed 
EXIT_SUCCESS


1334 
‰ì
 (*);

1341 #i‡(! 
deföed
 
yyovîÊow
 \

1342 && (! 
deföed
 
	g__˝lu•lus
 \

1343 || (
deföed
 
	gYYSTYPE_IS_TRIVIAL
 && YYSTYPE_IS_TRIVIAL)))

1346 
	uyyÆloc


1348 
yyty≥_öt16
 
	myyss_Æloc
;

1349 
YYSTYPE
 
	myyvs_Æloc
;

1353 
	#YYSTACK_GAP_MAXIMUM
 ( (
yyÆloc
Ë- 1)

	)

1357 
	#YYSTACK_BYTES
(
N
) \

1358 ((
N
Ë* ( (
yyty≥_öt16
Ë+  (
YYSTYPE
)) \

1359 + 
YYSTACK_GAP_MAXIMUM
)

	)

1361 
	#YYCOPY_NEEDED
 1

	)

1368 
	#YYSTACK_RELOCATE
(
Sèck_Æloc
, 
Sèck
) \

1371 
YYSIZE_T
 
yy√wbyãs
; \

1372 
	`YYCOPY
 (&
yy±r
->
Sèck_Æloc
, 
Sèck
, 
yysize
); \

1373 
Sèck
 = &
yy±r
->
Sèck_Æloc
; \

1374 
yy√wbyãs
 = 
yy°acksize
 *  (*
Sèck
Ë+ 
YYSTACK_GAP_MAXIMUM
; \

1375 
yy±r
 +
yy√wbyãs
 /  (*yyptr); \

1377 0)

	)

1381 #i‡
deföed
 
YYCOPY_NEEDED
 && YYCOPY_NEEDED

1384 #i‚de‡
YYCOPY


1385 #i‡
deföed
 
__GNUC__
 && 1 < __GNUC__

1386 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

1387 
	`__buûtö_mem˝y
 (
D°
, 
Src
, (
Cou¡
Ë*  (*(Src)))

	)

1389 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

1392 
YYSIZE_T
 
yyi
; \

1393 
yyi
 = 0; yyò< (
Cou¡
); yyi++) \

1394 (
D°
)[
yyi
] = (
Src
)[yyi]; \

1396 0)

	)

1402 
	#YYFINAL
 3

	)

1404 
	#YYLAST
 174

	)

1407 
	#YYNTOKENS
 36

	)

1409 
	#YYNNTS
 40

	)

1411 
	#YYNRULES
 86

	)

1413 
	#YYNSTATES
 155

	)

1417 
	#YYUNDEFTOK
 2

	)

1418 
	#YYMAXUTOK
 275

	)

1420 
	#YYTRANSLATE
(
YYX
) \

1421 ((Ë(
YYX
Ë<
YYMAXUTOK
 ? 
yyå™¶©e
[YYX] : 
YYUNDEFTOK
)

	)

1425 c⁄° 
yyty≥_uöt8
 
	gyyå™¶©e
[] =

1457 #i‡
YYDEBUG


1459 c⁄° 
yyty≥_uöt16
 
	gyyæöe
[] =

1473 #i‡
YYDEBUG
 || 
YYERROR_VERBOSE
 || 0

1476 c⁄° *c⁄° 
	gyyäame
[] =

1488 "choi˚s", "ch¨£q", 
YY_NULLPTR


1492 #ifde‡
YYPRINT


1495 c⁄° 
yyty≥_uöt16
 
	gyytoknum
[] =

1504 
	#YYPACT_NINF
 -98

	)

1506 
	#yy∑˘_vÆue_is_deÁu…
(
Yy°©e
) \

1507 (!!((
Yy°©e
Ë=(-98)))

	)

1509 
	#YYTABLE_NINF
 -26

	)

1511 
	#yyèbÀ_vÆue_is_îr‹
(
YyèbÀ_vÆue
) \

1512 0

	)

1516 c⁄° 
yyty≥_öt16
 
	gyy∑˘
[] =

1539 c⁄° 
yyty≥_uöt8
 
	gyydeÁ˘
[] =

1560 c⁄° 
yyty≥_öt8
 
	gyypgŸo
[] =

1569 c⁄° 
yyty≥_öt8
 
	gyydefgŸo
[] =

1580 c⁄° 
yyty≥_öt16
 
	gyyèbÀ
[] =

1602 c⁄° 
yyty≥_öt16
 
	gyycheck
[] =

1626 c⁄° 
yyty≥_uöt8
 
	gyy°os
[] =

1647 c⁄° 
yyty≥_uöt8
 
	gyyr1
[] =

1661 c⁄° 
yyty≥_uöt8
 
	gyyr2
[] =

1675 
	#yyîrok
 (
yyîr°©us
 = 0)

	)

1676 
	#yy˛órö
 (
yych¨
 = 
YYEMPTY
)

	)

1677 
	#YYEMPTY
 (-2)

	)

1678 
	#YYEOF
 0

	)

1680 
	#YYACCEPT
 
yyac˚±œb


	)

1681 
	#YYABORT
 
yyab‹éab


	)

1682 
	#YYERROR
 
yyîr‹œb


	)

1685 
	#YYRECOVERING
(Ë(!!
yyîr°©us
)

	)

1687 
	#YYBACKUP
(
Tokí
, 
VÆue
) \

1689 i‡(
yych¨
 =
YYEMPTY
) \

1691 
yych¨
 = (
Tokí
); \

1692 
yylvÆ
 = (
VÆue
); \

1693 
	`YYPOPSTACK
 (
yyÀn
); \

1694 
yy°©e
 = *
yys•
; \

1695 
yybackup
; \

1699 
	`yyîr‹
 (
_ya
, 
	`YY_
("syntaxÉrror: cannot back up")); \

1700 
YYERROR
; \

1702 0)

	)

1705 
	#YYTERROR
 1

	)

1706 
	#YYERRCODE
 256

	)

1711 #i‡
YYDEBUG


1713 #i‚de‡
YYFPRINTF


1714 
	~<°dio.h
>

1715 
	#YYFPRINTF
 
Ârötf


	)

1718 
	#YYDPRINTF
(
Args
) \

1720 i‡(
yydebug
) \

1721 
YYFPRINTF
 
Args
; \

1722 } 0)

	)

1725 #i‚de‡
YY_LOCATION_PRINT


1726 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
Ë((Ë0)

	)

1730 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
) \

1732 i‡(
yydebug
) \

1734 
	`YYFPRINTF
 (
°dîr
, "%†", 
TôÀ
); \

1735 
	`yy_symbﬁ_¥öt
 (
°dîr
, \

1736 
Ty≥
, 
VÆue
, 
_ya
); \

1737 
	`YYFPRINTF
 (
°dîr
, "\n"); \

1739 } 0)

	)

1747 
	$yy_symbﬁ_vÆue_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
, *
_ya
)

1749 
FILE
 *
yyo
 = 
yyouçut
;

1750 
	`YYUSE
 (
yyo
);

1751 
	`YYUSE
 (
_ya
);

1752 i‡(!
yyvÆuï
)

1754 #ifde‡
YYPRINT


1755 i‡(
yyty≥
 < 
YYNTOKENS
)

1756 
	`YYPRINT
 (
yyouçut
, 
yytoknum
[
yyty≥
], *
yyvÆuï
);

1758 
	`YYUSE
 (
yyty≥
);

1759 
	}
}

1767 
	$yy_symbﬁ_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
, *
_ya
)

1769 
	`YYFPRINTF
 (
yyouçut
, "%s %s (",

1770 
yyty≥
 < 
YYNTOKENS
 ? "tokí" : "¡îm", 
yyäame
[yytype]);

1772 
	`yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
, 
_ya
);

1773 
	`YYFPRINTF
 (
yyouçut
, ")");

1774 
	}
}

1782 
	$yy_°ack_¥öt
 (
yyty≥_öt16
 *
yybŸtom
, yyty≥_öt16 *
yyt›
)

1784 
	`YYFPRINTF
 (
°dîr
, "StackÇow");

1785 ; 
yybŸtom
 <
yyt›
; yybottom++)

1787 
yybŸ
 = *
yybŸtom
;

1788 
	`YYFPRINTF
 (
°dîr
, " %d", 
yybŸ
);

1790 
	`YYFPRINTF
 (
°dîr
, "\n");

1791 
	}
}

1793 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
) \

1795 i‡(
yydebug
) \

1796 
	`yy_°ack_¥öt
 ((
BŸtom
), (
T›
)); \

1797 } 0)

	)

1805 
	$yy_ªdu˚_¥öt
 (
yyty≥_öt16
 *
yys•
, 
YYSTYPE
 *
yyv•
, 
yyruÀ
, *
_ya
)

1807 
yy o
 = 
yyæöe
[
yyruÀ
];

1808 
yyƒhs
 = 
yyr2
[
yyruÀ
];

1809 
yyi
;

1810 
	`YYFPRINTF
 (
°dîr
, "Reducing stack byÑule %d (line %lu):\n",

1811 
yyruÀ
 - 1, 
yy o
);

1813 
yyi
 = 0; yyò< 
yyƒhs
; yyi++)

1815 
	`YYFPRINTF
 (
°dîr
, " $%d = ", 
yyi
 + 1);

1816 
	`yy_symbﬁ_¥öt
 (
°dîr
,

1817 
yy°os
[
yys•
[
yyi
 + 1 - 
yyƒhs
]],

1818 &(
yyv•
[(
yyi
 + 1Ë- (
yyƒhs
)])

1819 , 
_ya
);

1820 
	`YYFPRINTF
 (
°dîr
, "\n");

1822 
	}
}

1824 
	#YY_REDUCE_PRINT
(
RuÀ
) \

1826 i‡(
yydebug
) \

1827 
	`yy_ªdu˚_¥öt
 (
yys•
, 
yyv•
, 
RuÀ
, 
_ya
); \

1828 } 0)

	)

1832 
	gyydebug
;

1834 
	#YYDPRINTF
(
Args
)

	)

1835 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
)

	)

1836 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
)

	)

1837 
	#YY_REDUCE_PRINT
(
RuÀ
)

	)

1842 #i‚de‡
YYINITDEPTH


1843 
	#YYINITDEPTH
 200

	)

1853 #i‚de‡
YYMAXDEPTH


1854 
	#YYMAXDEPTH
 10000

	)

1858 #i‡
YYERROR_VERBOSE


1860 #i‚de‡
yy°æí


1861 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H


1862 
	#yy°æí
 
°æí


	)

1865 
YYSIZE_T


1866 
	$yy°æí
 (c⁄° *
yy°r
)

1868 
YYSIZE_T
 
yyÀn
;

1869 
yyÀn
 = 0; 
yy°r
[yylen]; yylen++)

1871  
yyÀn
;

1872 
	}
}

1876 #i‚de‡
yy°p˝y


1877 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H
 && deföed 
_GNU_SOURCE


1878 
	#yy°p˝y
 
°p˝y


	)

1883 
	$yy°p˝y
 (*
yyde°
, c⁄° *
yy§c
)

1885 *
yyd
 = 
yyde°
;

1886 c⁄° *
yys
 = 
yy§c
;

1888 (*
yyd
++ = *
yys
++) != '\0')

1891  
yyd
 - 1;

1892 
	}
}

1896 #i‚de‡
yyäamîr


1904 
YYSIZE_T


1905 
	$yyäamîr
 (*
yyªs
, c⁄° *
yy°r
)

1907 i‡(*
yy°r
 == '"')

1909 
YYSIZE_T
 
yyn
 = 0;

1910 c⁄° *
yyp
 = 
yy°r
;

1913 *++
yyp
)

1917 
do_nŸ_°rù_quŸes
;

1920 i‡(*++
yyp
 != '\\')

1921 
do_nŸ_°rù_quŸes
;

1924 i‡(
yyªs
)

1925 
yyªs
[
yyn
] = *
yyp
;

1926 
yyn
++;

1930 i‡(
yyªs
)

1931 
yyªs
[
yyn
] = '\0';

1932  
yyn
;

1934 
do_nŸ_°rù_quŸes
: ;

1937 i‡(! 
yyªs
)

1938  
	`yy°æí
 (
yy°r
);

1940  
	`yy°p˝y
 (
yyªs
, 
yy°r
) - yyres;

1941 
	}
}

1953 
	$yysy¡ax_îr‹
 (
YYSIZE_T
 *
yymsg_Æloc
, **
yymsg
,

1954 
yyty≥_öt16
 *
yys•
, 
yytokí
)

1956 
YYSIZE_T
 
yysize0
 = 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yytokí
]);

1957 
YYSIZE_T
 
yysize
 = 
yysize0
;

1958 íum { 
YYERROR_VERBOSE_ARGS_MAXIMUM
 = 5 };

1960 c⁄° *
yyf‹m©
 = 
YY_NULLPTR
;

1962 c⁄° *
yy¨g
[
YYERROR_VERBOSE_ARGS_MAXIMUM
];

1965 
yycou¡
 = 0;

1990 i‡(
yytokí
 !
YYEMPTY
)

1992 
yyn
 = 
yy∑˘
[*
yys•
];

1993 
yy¨g
[
yycou¡
++] = 
yyäame
[
yytokí
];

1994 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1999 
yyxbegö
 = 
yyn
 < 0 ? -yyn : 0;

2001 
yychecklim
 = 
YYLAST
 - 
yyn
 + 1;

2002 
yyxíd
 = 
yychecklim
 < 
YYNTOKENS
 ? yychecklim : YYNTOKENS;

2003 
yyx
;

2005 
yyx
 = 
yyxbegö
; yyx < 
yyxíd
; ++yyx)

2006 i‡(
yycheck
[
yyx
 + 
yyn
] =yyx && yyx !
YYTERROR


2007 && !
	`yyèbÀ_vÆue_is_îr‹
 (
yyèbÀ
[
yyx
 + 
yyn
]))

2009 i‡(
yycou¡
 =
YYERROR_VERBOSE_ARGS_MAXIMUM
)

2011 
yycou¡
 = 1;

2012 
yysize
 = 
yysize0
;

2015 
yy¨g
[
yycou¡
++] = 
yyäame
[
yyx
];

2017 
YYSIZE_T
 
yysize1
 = 
yysize
 + 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yyx
]);

2018 i‡(! (
yysize
 <
yysize1


2019 && 
yysize1
 <
YYSTACK_ALLOC_MAXIMUM
))

2021 
yysize
 = 
yysize1
;

2027 
yycou¡
)

2029 
	#YYCASE_
(
N
, 
S
) \

2030 
N
: \

2031 
yyf‹m©
 = 
S
; \

2032 

	)

2033 
	`YYCASE_
(0, 
	`YY_
("syntaxÉrror"));

2034 
	`YYCASE_
(1, 
	`YY_
("syntaxÉrror, unexpected %s"));

2035 
	`YYCASE_
(2, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s"));

2036 
	`YYCASE_
(3, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s"));

2037 
	`YYCASE_
(4, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s"));

2038 
	`YYCASE_
(5, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s or %s"));

2039 #unde‡
YYCASE_


2043 
YYSIZE_T
 
yysize1
 = 
yysize
 + 
	`yy°æí
 (
yyf‹m©
);

2044 i‡(! (
yysize
 <
yysize1
 && yysize1 <
YYSTACK_ALLOC_MAXIMUM
))

2046 
yysize
 = 
yysize1
;

2049 i‡(*
yymsg_Æloc
 < 
yysize
)

2051 *
yymsg_Æloc
 = 2 * 
yysize
;

2052 i‡(! (
yysize
 <*
yymsg_Æloc


2053 && *
yymsg_Æloc
 <
YYSTACK_ALLOC_MAXIMUM
))

2054 *
yymsg_Æloc
 = 
YYSTACK_ALLOC_MAXIMUM
;

2062 *
yyp
 = *
yymsg
;

2063 
yyi
 = 0;

2064 (*
yyp
 = *
yyf‹m©
) != '\0')

2065 i‡(*
yyp
 ='%' && 
yyf‹m©
[1] ='s' && 
yyi
 < 
yycou¡
)

2067 
yyp
 +
	`yyäamîr
 (yyp, 
yy¨g
[
yyi
++]);

2068 
yyf‹m©
 += 2;

2072 
yyp
++;

2073 
yyf‹m©
++;

2077 
	}
}

2085 
	$yyde°ru˘
 (c⁄° *
yymsg
, 
yyty≥
, 
YYSTYPE
 *
yyvÆuï
, *
_ya
)

2087 
	`YYUSE
 (
yyvÆuï
);

2088 
	`YYUSE
 (
_ya
);

2089 i‡(!
yymsg
)

2090 
yymsg
 = "Deleting";

2091 
	`YY_SYMBOL_PRINT
 (
yymsg
, 
yyty≥
, 
yyvÆuï
, 
yyloˇti⁄p
);

2093 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


2094 
	`YYUSE
 (
yyty≥
);

2095 
YY_IGNORE_MAYBE_UNINITIALIZED_END


2096 
	}
}

2102 
	gyych¨
;

2105 
YYSTYPE
 
	gyylvÆ
;

2107 
	gyy√ºs
;

2115 
	$yy∑r£
 (*
_ya
)

2117 
yy°©e
;

2119 
yyîr°©us
;

2129 
yyty≥_öt16
 
yysß
[
YYINITDEPTH
];

2130 
yyty≥_öt16
 *
yyss
;

2131 
yyty≥_öt16
 *
yys•
;

2134 
YYSTYPE
 
yyvß
[
YYINITDEPTH
];

2135 
YYSTYPE
 *
yyvs
;

2136 
YYSTYPE
 *
yyv•
;

2138 
YYSIZE_T
 
yy°acksize
;

2140 
yyn
;

2141 
yyªsu…
;

2143 
yytokí
 = 0;

2146 
YYSTYPE
 
yyvÆ
;

2148 #i‡
YYERROR_VERBOSE


2150 
yymsgbuf
[128];

2151 *
yymsg
 = 
yymsgbuf
;

2152 
YYSIZE_T
 
yymsg_Æloc
 =  
yymsgbuf
;

2155 
	#YYPOPSTACK
(
N
Ë(
yyv•
 -(N), 
yys•
 -(N))

	)

2159 
yyÀn
 = 0;

2161 
yys•
 = 
yyss
 = 
yysß
;

2162 
yyv•
 = 
yyvs
 = 
yyvß
;

2163 
yy°acksize
 = 
YYINITDEPTH
;

2165 
	`YYDPRINTF
 ((
°dîr
, "StartingÖarse\n"));

2167 
yy°©e
 = 0;

2168 
yyîr°©us
 = 0;

2169 
yy√ºs
 = 0;

2170 
yych¨
 = 
YYEMPTY
;

2171 
yy£t°©e
;

2176 
yy√w°©e
:

2179 
yys•
++;

2181 
yy£t°©e
:

2182 *
yys•
 = 
yy°©e
;

2184 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

2187 
YYSIZE_T
 
yysize
 = 
yys•
 - 
yyss
 + 1;

2189 #ifde‡
yyovîÊow


2194 
YYSTYPE
 *
yyvs1
 = 
yyvs
;

2195 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

2201 
	`yyovîÊow
 (
	`YY_
("memoryÉxhausted"),

2202 &
yyss1
, 
yysize
 *  (*
yys•
),

2203 &
yyvs1
, 
yysize
 *  (*
yyv•
),

2204 &
yy°acksize
);

2206 
yyss
 = 
yyss1
;

2207 
yyvs
 = 
yyvs1
;

2210 #i‚de‡
YYSTACK_RELOCATE


2211 
yyexhau°edœb
;

2214 i‡(
YYMAXDEPTH
 <
yy°acksize
)

2215 
yyexhau°edœb
;

2216 
yy°acksize
 *= 2;

2217 i‡(
YYMAXDEPTH
 < 
yy°acksize
)

2218 
yy°acksize
 = 
YYMAXDEPTH
;

2221 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

2222 
yyÆloc
 *
yy±r
 =

2223 (
yyÆloc
 *Ë
	`YYSTACK_ALLOC
 (
	`YYSTACK_BYTES
 (
yy°acksize
));

2224 i‡(! 
yy±r
)

2225 
yyexhau°edœb
;

2226 
	`YYSTACK_RELOCATE
 (
yyss_Æloc
, 
yyss
);

2227 
	`YYSTACK_RELOCATE
 (
yyvs_Æloc
, 
yyvs
);

2228 #unde‡
YYSTACK_RELOCATE


2229 i‡(
yyss1
 !
yysß
)

2230 
	`YYSTACK_FREE
 (
yyss1
);

2235 
yys•
 = 
yyss
 + 
yysize
 - 1;

2236 
yyv•
 = 
yyvs
 + 
yysize
 - 1;

2238 
	`YYDPRINTF
 ((
°dîr
, "Stack size increasedÅo %lu\n",

2239 (Ë
yy°acksize
));

2241 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

2242 
YYABORT
;

2245 
	`YYDPRINTF
 ((
°dîr
, "E¡îög sèã %d\n", 
yy°©e
));

2247 i‡(
yy°©e
 =
YYFINAL
)

2248 
YYACCEPT
;

2250 
yybackup
;

2255 
yybackup
:

2261 
yyn
 = 
yy∑˘
[
yy°©e
];

2262 i‡(
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

2263 
yydeÁu…
;

2268 i‡(
yych¨
 =
YYEMPTY
)

2270 
	`YYDPRINTF
 ((
°dîr
, "ReadingáÅoken: "));

2271 
yych¨
 = 
	`yyÀx
 (
_ya
);

2274 i‡(
yych¨
 <
YYEOF
)

2276 
yych¨
 = 
yytokí
 = 
YYEOF
;

2277 
	`YYDPRINTF
 ((
°dîr
, "NowátÉnd of input.\n"));

2281 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

2282 
	`YY_SYMBOL_PRINT
 ("Nexàtokí is", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

2287 
yyn
 +
yytokí
;

2288 i‡(
yyn
 < 0 || 
YYLAST
 < yy¿|| 
yycheck
[yyn] !
yytokí
)

2289 
yydeÁu…
;

2290 
yyn
 = 
yyèbÀ
[yyn];

2291 i‡(
yyn
 <= 0)

2293 i‡(
	`yyèbÀ_vÆue_is_îr‹
 (
yyn
))

2294 
yyîæab
;

2295 
yyn
 = -yyn;

2296 
yyªdu˚
;

2301 i‡(
yyîr°©us
)

2302 
yyîr°©us
--;

2305 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

2308 
yych¨
 = 
YYEMPTY
;

2310 
yy°©e
 = 
yyn
;

2311 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


2312 *++
yyv•
 = 
yylvÆ
;

2313 
YY_IGNORE_MAYBE_UNINITIALIZED_END


2315 
yy√w°©e
;

2321 
yydeÁu…
:

2322 
yyn
 = 
yydeÁ˘
[
yy°©e
];

2323 i‡(
yyn
 == 0)

2324 
yyîæab
;

2325 
yyªdu˚
;

2331 
yyªdu˚
:

2333 
yyÀn
 = 
yyr2
[
yyn
];

2343 
yyvÆ
 = 
yyv•
[1-
yyÀn
];

2346 
	`YY_REDUCE_PRINT
 (
yyn
);

2347 
yyn
)

2351 {if(
debug
)
	`¥ötf
("fûe->löes\n"); 
YYACCEPT
;}

2358 if(
debug
)
	`¥ötf
("lines->linesÜine\n");

2365 { if(
debug
)
	`¥ötf
("lines->\n"); }

2371 { i‡(
debug
Ë
	`¥ötf
("line->decltopÜine1\n"); }

2377 { i‡(
debug
Ë
	`Ârötf
(
°dîr
, "line->assignment ;\n"); }

2383 { i‡(
debug
Ë
	`¥ötf
("line1->line2\n"); }

2389 { i‡(
debug
Ë
	`¥ötf
("line1->',' optionsÜine2\n"); }

2395 { i‡(
debug
Ë
	`¥ötf
("löe2->';'\n"); i‡(
	`cgy_ãrmöÆ
(
_ya
Ë< 0Ë
YYERROR
;i‡(
	`˘x_≥ek_sw≠2
(_ya) < 0) YYERROR; }

2401 {i‡(
	`˘x_push
(
_ya
Ë< 0Ë
YYERROR
; }

2407 { i‡(
debug
Ë
	`¥ötf
("löe2->'{'Üöe†'}'\n");i‡(
	`˘x_p›
(
_ya
Ë< 0Ë
YYERROR
;i‡(
	`˘x_≥ek_sw≠2
(_ya) < 0) YYERROR; }

2413 { i‡(
	`cgy_ãrmöÆ
(
_ya
Ë< 0Ë
YYERROR
; }

2419 { i‡(
	`˘x_push
(
_ya
Ë< 0Ë
YYERROR
; }

2425 { i‡(
debug
Ë
	`¥ötf
("löe2->';' '{'Üöe†'}'\n");i‡(
	`˘x_p›
(
_ya
Ë< 0Ë
YYERROR
;i‡(
	`˘x_≥ek_sw≠2
(_ya) < 0) YYERROR; }

2431 {i‡(
debug
)
	`¥ötf
("options->options , option\n");}

2437 {i‡(
debug
)
	`¥ötf
("options->option\n");}

2443 {i‡(
debug
)
	`¥ötf
("option->callback\n");}

2449 {i‡(
debug
)
	`¥ötf
("option->flag\n");}

2455 {i‡(
debug
)
	`¥ötf
("option->assignment\n");}

2461 {
	`cgy_assignmít
(
_ya
, (
yyv•
[-4].
°rög
),(yyv•[-1].°rög));
	`‰ì
((yyvsp[-4].string)); free((yyvsp[-1].string));}

2467 {
	`cgy_Êag
(
_ya
, (
yyv•
[0].
°rög
));
	`‰ì
((yyvsp[0].string));}

2473 {i‡(
	`cgy_ˇŒback
(
_ya
, (
yyv•
[0].
°rög
)Ë< 0Ë
YYERROR
;}

2479 { i‡((
yyv•
[0].
°rög
Ë&& 
	`cgy_ˇŒback_¨g
(
_ya
, (yyv•[-1].°rög), (yyv•[0].°rög)Ë< 0Ë
YYERROR
;

2480 i‡((
yyv•
[-1].
°rög
)Ë
	`‰ì
((yyvsp[-1].string)); if ((yyvsp[0].string)) free((yyvsp[0].string));

2487 { (
yyvÆ
.
°rög
)=
NULL
; }

2493 { (
yyvÆ
.
°rög
)=(
yyv•
[-1].string); }

2499 { (
yyvÆ
.
°rög
)=(
yyv•
[0].string); }

2505 { (
yyvÆ
.
°rög
Ë(
yyv•
[-1].string); }

2511 { (
yyvÆ
.
°rög
Ë
NULL
; }

2517 {i‡(
debug
)
	`Ârötf
(
°dîr
, "decltop->decllist\n");}

2523 {i‡(
debug
)
	`Ârötf
(
°dîr
, "decltop->declcomp\n");}

2529 {i‡(
debug
)
	`Ârötf
(
°dîr
, "decllist->decltop declcomp\n");}

2535 { i‡(
	`˘x_≥ek_sw≠
(
_ya
Ë< 0Ë
YYERROR
;}

2541 {i‡(
debug
)
	`Ârötf
(
°dîr
, "decllist->decltop | declcomp\n");}

2547 { i‡(
	`˘x_push
(
_ya
Ë< 0Ë
YYERROR
; }

2553 { i‡(
	`˘x_p›
(
_ya
Ë< 0Ë
YYERROR
; i‡(
debug
)
	`Ârötf
(
°dîr
, "declcomp->(decltop)\n");}

2559 { i‡(
	`˘x_push
(
_ya
Ë< 0Ë
YYERROR
; }

2565 { i‡(
	`˘x_p›_add
(
_ya
Ë< 0Ë
YYERROR
; }

2571 {i‡(
debug
)
	`Ârötf
(
°dîr
, "declcomp->[decltop]\n");}

2577 {i‡(
debug
)
	`Ârötf
(
°dîr
, "declcomp->decl\n");}

2583 {i‡(
debug
)
	`Ârötf
(
°dîr
, "decl->cmd\n");}

2589 { i‡(
debug
)
	`Ârötf
(
°dîr
, "de˛->cmd (\" commíà\")\n");i‡(
	`cgy_commít
(
_ya
, (
yyv•
[-1].
°rög
)Ë< 0Ë
YYERROR
; 
	`‰ì
((yyvsp[-1].string));}

2595 { i‡(
debug
)
	`Ârötf
(
°dîr
, "decl->cmd (\"\")\n");}

2601 { i‡(
debug
)
	`Ârötf
(
°dîr
, "cmd->NAME(%s)\n", (
yyv•
[0].
°rög
));i‡(
	`cgy_cmd
(
_ya
, (yyv•[0].°rög)Ë< 0Ë
YYERROR
; 
	`‰ì
((yyvsp[0].string)); }

2607 { i‡(
debug
)
	`Ârötf
(
°dîr
, "cmd->@NAME\n");i‡(
	`cgy_ª„ªn˚
(
_ya
, (
yyv•
[0].
°rög
)Ë< 0Ë
YYERROR
; 
	`‰ì
((yyvsp[0].string)); }

2613 { i‡((
_YA
->
ya_v¨
 = 
	`cgy_v¨_¸óã
(_YA)Ë=
NULL
Ë
YYERROR
; }

2619 { i‡(
	`cgy_v¨_po°
(
_ya
Ë< 0Ë
YYERROR
; }

2625 { i‡(
	`cgy_v¨_«me_ty≥
(
_ya
, (
yyv•
[0].
°rög
), (yyv•[0].°rög))<0Ë
YYERROR
; }

2631 { i‡(
	`cgy_v¨_«me_ty≥
(
_ya
, (
yyv•
[-2].
°rög
), (yyv•[0].°rög))<0Ë
YYERROR
; 
	`‰ì
((yyvsp[0].string)); }

2637 { i‡(
	`cgy_v¨_«me_ty≥
(
_ya
, (
yyv•
[-1].
°rög
), (yyv•[-1].°rög)Ë< 0Ë
YYERROR
; }

2643 { i‡(
	`cgy_v¨_«me_ty≥
(
_ya
, (
yyv•
[-3].
°rög
), (yyv•[-1].°rög)Ë< 0Ë
YYERROR
; 
	`‰ì
((yyvsp[-1].string)); }

2649 { (
yyvÆ
.
°rög
Ë(
yyv•
[0].string); }

2655 { 
	`ex∑nd_‚
(
_ya
, (
yyv•
[-2].
°rög
)); }

2661 { 
	`ex∑nd_‚
(
_ya
, (
yyv•
[-3].
°rög
)); }

2668 
_YA
->
ya_v¨
->
co_show
 = (
yyv•
[0].
°rög
);

2676 i‡(
	`cg_ønge
(
_ya
, (
yyv•
[-3].
°rög
), (yyv•[-1].°rög)Ë< 0Ë
YYERROR
; 
	`‰ì
((yyvsp[-3].string)); free((yyvsp[-1].string));

2684 i‡(
	`cg_ønge
(
_ya
, 
NULL
, (
yyv•
[-1].
°rög
)Ë< 0Ë
YYERROR
; 
	`‰ì
((yyvsp[-1].string));

2692 i‡(
	`cg_Àngth
(
_ya
, (
yyv•
[-3].
°rög
), (yyv•[-1].°rög)Ë< 0Ë
YYERROR
; 
	`‰ì
((yyvsp[-3].string)); free((yyvsp[-1].string));

2700 i‡(
	`cg_Àngth
(
_ya
, 
NULL
, (
yyv•
[-1].
°rög
)Ë< 0Ë
YYERROR
; 
	`‰ì
((yyvsp[-1].string));

2708 i‡(
	`cg_dec64_n
(
_ya
, (
yyv•
[0].
°rög
)Ë< 0Ë
YYERROR
; 
	`‰ì
((yyvsp[0].string));

2715 { 
_YA
->
ya_v¨
->
co_choi˚
 = (
yyv•
[0].
°rög
); }

2722 
_YA
->
ya_v¨
->
co_keyw‹d
 = (
yyv•
[0].
°rög
);

2723 
_YA
->
ya_v¨
->
co_vty≥
=
CGV_STRING
;

2730 { 
	`cg_ªgexp
(
_ya
, (
yyv•
[-1].
°rög
)); }

2736 { 
	`cg_å™¶©e
(
_ya
, (
yyv•
[-2].
°rög
)); }

2742 { 
	`ex∑nd_¨g
(
_ya
, "°rög", (
yyv•
[-1].
°rög
)); 
	`‰ì
((yyvsp[-1].string)); }

2748 { i‡((
yyv•
[0].
°rög
Ë&& 
	`cgy_ˇŒback_¨g
(
_ya
, (yyv•[-1].°rög), (yyv•[0].°rög)Ë< 0Ë
YYERROR
;

2749 i‡((
yyv•
[-1].
°rög
)Ë
	`‰ì
((yyvsp[-1].string)); if ((yyvsp[0].string)) free((yyvsp[0].string));

2756 { (
yyvÆ
.
°rög
Ë(
yyv•
[0].string);}

2762 { (
yyvÆ
.
°rög
Ë(
yyv•
[0].string);}

2768 { (
yyvÆ
.
°rög
Ë(
yyv•
[0].string);}

2774 { (
yyvÆ
.
°rög
Ë
	`cgy_choi˚_mîge
(
_ya
, (
yyv•
[-2].°rög), (yyv•[0].°rög)); 
	`‰ì
((yyvsp[0].string));}

2780 { (
yyvÆ
.
°rög
Ë
	`cgy_choi˚_mîge
(
_ya
, (
yyv•
[-2].°rög), (yyv•[0].°rög)); 
	`‰ì
((yyvsp[0].string));}

2786 { (
yyvÆ
.
°rög
Ë
	`cgy_choi˚_mîge
(
_ya
, (
yyv•
[-2].°rög), (yyv•[0].°rög)); 
	`‰ì
((yyvsp[0].string));}

2793 
Àn
 = 
	`°æí
((
yyv•
[-1].
°rög
));

2794 (
yyvÆ
.
°rög
Ë
	`ªÆloc
((
yyv•
[-1].°rög), 
Àn
+
	`°æí
((yyvsp[0].string)) +1);

2795 
	`•rötf
((
yyvÆ
.
°rög
)+
Àn
, "%s", (
yyv•
[0].string));

2796 
	`‰ì
((
yyv•
[0].
°rög
));

2803 {(
yyvÆ
.
°rög
)=(
yyv•
[0].string);}

2822 
	`YY_SYMBOL_PRINT
 ("-> $$ =", 
yyr1
[
yyn
], &
yyvÆ
, &
yyloc
);

2824 
	`YYPOPSTACK
 (
yyÀn
);

2825 
yyÀn
 = 0;

2826 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2828 *++
yyv•
 = 
yyvÆ
;

2834 
yyn
 = 
yyr1
[yyn];

2836 
yy°©e
 = 
yypgŸo
[
yyn
 - 
YYNTOKENS
] + *
yys•
;

2837 i‡(0 <
yy°©e
 && yy°©ê<
YYLAST
 && 
yycheck
[yy°©e] =*
yys•
)

2838 
yy°©e
 = 
yyèbÀ
[yystate];

2840 
yy°©e
 = 
yydefgŸo
[
yyn
 - 
YYNTOKENS
];

2842 
yy√w°©e
;

2848 
yyîæab
:

2851 
yytokí
 = 
yych¨
 =
YYEMPTY
 ? YYEMPTY : 
	`YYTRANSLATE
 (yychar);

2854 i‡(!
yyîr°©us
)

2856 ++
yy√ºs
;

2857 #i‡! 
YYERROR_VERBOSE


2858 
	`yyîr‹
 (
_ya
, 
	`YY_
("syntaxÉrror"));

2860 
	#YYSYNTAX_ERROR
 
	`yysy¡ax_îr‹
 (&
yymsg_Æloc
, &
yymsg
, \

2861 
yys•
, 
yytokí
)

	)

2863 c⁄° *
yymsgp
 = 
	`YY_
("syntaxÉrror");

2864 
yysy¡ax_îr‹_°©us
;

2865 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

2866 i‡(
yysy¡ax_îr‹_°©us
 == 0)

2867 
yymsgp
 = 
yymsg
;

2868 i‡(
yysy¡ax_îr‹_°©us
 == 1)

2870 i‡(
yymsg
 !
yymsgbuf
)

2871 
	`YYSTACK_FREE
 (
yymsg
);

2872 
yymsg
 = (*Ë
	`YYSTACK_ALLOC
 (
yymsg_Æloc
);

2873 i‡(!
yymsg
)

2875 
yymsg
 = 
yymsgbuf
;

2876 
yymsg_Æloc
 =  
yymsgbuf
;

2877 
yysy¡ax_îr‹_°©us
 = 2;

2881 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

2882 
yymsgp
 = 
yymsg
;

2885 
	`yyîr‹
 (
_ya
, 
yymsgp
);

2886 i‡(
yysy¡ax_îr‹_°©us
 == 2)

2887 
yyexhau°edœb
;

2889 #unde‡
YYSYNTAX_ERROR


2895 i‡(
yyîr°©us
 == 3)

2900 i‡(
yych¨
 <
YYEOF
)

2903 i‡(
yych¨
 =
YYEOF
)

2904 
YYABORT
;

2908 
	`yyde°ru˘
 ("Error: discarding",

2909 
yytokí
, &
yylvÆ
, 
_ya
);

2910 
yych¨
 = 
YYEMPTY
;

2916 
yyîæab1
;

2922 
yyîr‹œb
:

2928 
yyîr‹œb
;

2932 
	`YYPOPSTACK
 (
yyÀn
);

2933 
yyÀn
 = 0;

2934 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2935 
yy°©e
 = *
yys•
;

2936 
yyîæab1
;

2942 
yyîæab1
:

2943 
yyîr°©us
 = 3;

2947 
yyn
 = 
yy∑˘
[
yy°©e
];

2948 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

2950 
yyn
 +
YYTERROR
;

2951 i‡(0 <
yyn
 && yy¿<
YYLAST
 && 
yycheck
[yyn] =
YYTERROR
)

2953 
yyn
 = 
yyèbÀ
[yyn];

2954 i‡(0 < 
yyn
)

2960 i‡(
yys•
 =
yyss
)

2961 
YYABORT
;

2964 
	`yyde°ru˘
 ("Error:Öopping",

2965 
yy°os
[
yy°©e
], 
yyv•
, 
_ya
);

2966 
	`YYPOPSTACK
 (1);

2967 
yy°©e
 = *
yys•
;

2968 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2971 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


2972 *++
yyv•
 = 
yylvÆ
;

2973 
YY_IGNORE_MAYBE_UNINITIALIZED_END


2977 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yy°os
[
yyn
], 
yyv•
, 
yyl•
);

2979 
yy°©e
 = 
yyn
;

2980 
yy√w°©e
;

2986 
yyac˚±œb
:

2987 
yyªsu…
 = 0;

2988 
yyªtu∫
;

2993 
yyab‹éab
:

2994 
yyªsu…
 = 1;

2995 
yyªtu∫
;

2997 #i‡!
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


3001 
yyexhau°edœb
:

3002 
	`yyîr‹
 (
_ya
, 
	`YY_
("memoryÉxhausted"));

3003 
yyªsu…
 = 2;

3007 
yyªtu∫
:

3008 i‡(
yych¨
 !
YYEMPTY
)

3012 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

3013 
	`yyde°ru˘
 ("Cleanup: discardingÜookahead",

3014 
yytokí
, &
yylvÆ
, 
_ya
);

3018 
	`YYPOPSTACK
 (
yyÀn
);

3019 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

3020 
yys•
 !
yyss
)

3022 
	`yyde°ru˘
 ("Cleanup:Öopping",

3023 
yy°os
[*
yys•
], 
yyv•
, 
_ya
);

3024 
	`YYPOPSTACK
 (1);

3026 #i‚de‡
yyovîÊow


3027 i‡(
yyss
 !
yysß
)

3028 
	`YYSTACK_FREE
 (
yyss
);

3030 #i‡
YYERROR_VERBOSE


3031 i‡(
yymsg
 !
yymsgbuf
)

3032 
	`YYSTACK_FREE
 (
yymsg
);

3034  
yyªsu…
;

3035 
	}
}

	@cligen-master/cligen_parse.tab.h

33 #i‚de‡
YY_CLIGEN_PARSE_Y_TAB_H_INCLUDED


34 
	#YY_CLIGEN_PARSE_Y_TAB_H_INCLUDED


	)

36 #i‚de‡
YYDEBUG


37 
	#YYDEBUG
 0

	)

39 #i‡
YYDEBUG


40 
˛igí_∑r£debug
;

44 #i‚de‡
YYTOKENTYPE


45 
	#YYTOKENTYPE


	)

46 
	eyytokíty≥


48 
	mMY_EOF
 = 258,

49 
	mV_RANGE
 = 259,

50 
	mV_LENGTH
 = 260,

51 
	mV_CHOICE
 = 261,

52 
	mV_KEYWORD
 = 262,

53 
	mV_REGEXP
 = 263,

54 
	mV_FRACTION_DIGITS
 = 264,

55 
	mV_SHOW
 = 265,

56 
	mV_TREENAME
 = 266,

57 
	mV_TRANSLATE
 = 267,

58 
	mDOUBLEPARENT
 = 268,

59 
	mDQ
 = 269,

60 
	mDQP
 = 270,

61 
	mPDQ
 = 271,

62 
	mNAME
 = 272,

63 
	mNUMBER
 = 273,

64 
	mDECIMAL
 = 274,

65 
	mCHAR
 = 275

69 
	#MY_EOF
 258

	)

70 
	#V_RANGE
 259

	)

71 
	#V_LENGTH
 260

	)

72 
	#V_CHOICE
 261

	)

73 
	#V_KEYWORD
 262

	)

74 
	#V_REGEXP
 263

	)

75 
	#V_FRACTION_DIGITS
 264

	)

76 
	#V_SHOW
 265

	)

77 
	#V_TREENAME
 266

	)

78 
	#V_TRANSLATE
 267

	)

79 
	#DOUBLEPARENT
 268

	)

80 
	#DQ
 269

	)

81 
	#DQP
 270

	)

82 
	#PDQ
 271

	)

83 
	#NAME
 272

	)

84 
	#NUMBER
 273

	)

85 
	#DECIMAL
 274

	)

86 
	#CHAR
 275

	)

89 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


91 
	uYYSTYPE


95 
	mötvÆ
;

96 *
	m°rög
;

101 
YYSTYPE
 
	tYYSTYPE
;

102 
	#YYSTYPE_IS_TRIVIAL
 1

	)

103 
	#YYSTYPE_IS_DECLARED
 1

	)

107 
YYSTYPE
 
˛igí_∑r£lvÆ
;

109 
˛igí_∑r£∑r£
 (*
_ya
);

	@cligen-master/cligen_print.c

33 
	~"˛igí_c⁄fig.h
"

35 
	~<°dio.h
>

36 
	~<°dlib.h
>

37 
	~<°döt.h
>

38 
	~<°rög.h
>

39 
	~<î∫o.h
>

40 
	~<as£π.h
>

41 
	~<öây≥s.h
>

42 
	~<uni°d.h
>

43 
	~<sys/ty≥s.h
>

44 
	~<sys/sockë.h
>

45 
	~<√töë/ö.h
>

46 
	~<¨∑/öë.h
>

48 
	~"˛igí_buf.h
"

49 
	~"˛igí_v¨.h
"

50 
	~"˛igí_cvec.h
"

51 
	~"˛igí_gí.h
"

52 
	~"˛igí_¥öt.h
"

54 
	#VARIABLE_PRE
 '<'

	)

55 
	#VARIABLE_POST
 '>'

	)

59 
±2cbuf
(
cbuf
 *
cb
, 
∑r£_åì
 
±
, 
Àvñ
, 
brõf
);

79 
	$cov2cbuf
(
cbuf
 *
cb
,

80 
cg_obj
 *
co
,

81 
brõf
)

83 
ªtvÆ
 = -1;

85 i‡(
co
->
co_choi˚
){

86 i‡(
	`°rchr
(
co
->
co_choi˚
, '|'))

87 
	`˝rötf
(
cb
, "(%s)", 
co
->
co_choi˚
);

89 
	`˝rötf
(
cb
, "%s", 
co
->
co_choi˚
);

92 i‡(
brõf
)

93 
	`˝rötf
(
cb
, "%c%s%c", 
VARIABLE_PRE
,

94 
co
->
co_show
 ? co->co_show : co->
co_comm™d
,

95 
VARIABLE_POST
);

97 
	`˝rötf
(
cb
, "%c%s:%s", 
VARIABLE_PRE
, 
co
->
co_comm™d
, 
	`cv_ty≥2°r
(co->
co_vty≥
));

98 i‡(
co
->
co_ønge
){

99 i‡(
	`cv_isöt
(
co
->
co_vty≥
))

100 
	`˝rötf
(
cb
, "Ñange[");

102 
	`˝rötf
(
cb
, "Üength[");

103 i‡(
co
->
co_øngecv_low
){

104 
	`cv2cbuf
(
co
->
co_øngecv_low
, 
cb
);

105 
	`˝rötf
(
cb
, ":");

107 i‡(
co
->
co_øngecv_high
){

108 
	`cv2cbuf
(
co
->
co_øngecv_high
, 
cb
);

110 
	`˝rötf
(
cb
, "]");

112 i‡(
co
->
co_show
)

113 
	`˝rötf
(
cb
, " show:\"%s\"", 
co
->
co_show
);

114 i‡(
co
->
co_ex∑nd_‚_°r
){

115 
	`˝rötf
(
cb
, " %s(\"", 
co
->
co_ex∑nd_‚_°r
);

116 i‡(
co
->
co_ex∑nd_‚_vec
)

117 
	`cvec2cbuf
(
cb
, 
co
->
co_ex∑nd_‚_vec
);

118 
	`˝rötf
(
cb
, "\")");

120 i‡(
co
->
co_ªgex
)

121 
	`˝rötf
(
cb
, "Ñegexp:\"%s\"", 
co
->
co_ªgex
);

122 i‡(
co
->
co_å™¶©e_‚_°r
)

123 
	`˝rötf
(
cb
, "Åøn¶©e:%s()", 
co
->
co_å™¶©e_‚_°r
);

124 
	`˝rötf
(
cb
, "%c", 
VARIABLE_POST
);

127 
ªtvÆ
 = 0;

130  
ªtvÆ
;

131 
	}
}

136 
	$ãrmöÆ
(
cg_obj
 *
co
)

138  ((
co
->
co_±
.
±_Àn
>0 && co->co_±.
±_vec
[0] =
NULL
) ||

139 
co
->
co_±
.
±_Àn
 == 0);

140 
	}
}

145 
	$co2cbuf
(
cbuf
 *
cb
,

146 
cg_obj
 *
co
,

147 
m¨göÆ
,

148 
brõf
)

150 
ªtvÆ
 = -1;

151 
cg_ˇŒback
 *
cc
;

153 
co
->
co_ty≥
){

154 
CO_COMMAND
:

155 i‡(
co
->
co_comm™d
)

156 
	`˝rötf
(
cb
, "%s", 
co
->
co_comm™d
);

158 
CO_REFERENCE
:

159 i‡(
co
->
co_comm™d
)

160 
	`˝rötf
(
cb
, "@%s", 
co
->
co_comm™d
);

162 
CO_VARIABLE
:

163 
	`cov2cbuf
(
cb
, 
co
, 
brõf
);

166 i‡(
brõf
 == 0){

167 i‡(
co
->
co_hñp
)

168 
	`˝rötf
(
cb
, "(\"%s\")", 
co
->
co_hñp
);

169 i‡(
co
->
co_hide
)

170 
	`˝rötf
(
cb
, ", hide");

171 
cc
 = 
co
->
co_ˇŒbacks
; cc; cc=cc->
cc_√xt
){

172 i‡(
cc
->
cc_‚_°r
){

173 
	`˝rötf
(
cb
, ", %s(", 
cc
->
cc_‚_°r
);

174 i‡(
cc
->
cc_cvec
)

175 
	`cvec2cbuf
(
cb
, 
cc
->
cc_cvec
);

176 
	`˝rötf
(
cb
, ")");

180 i‡(
	`ãrmöÆ
(
co
))

181 
	`˝rötf
(
cb
, ";");

182 i‡(
co
->
co_±
.
±_Àn
>1)

183 
	`˝rötf
(
cb
, "{\n");

185 i‡(
co
->
co_±
.
±_Àn
==1 && co->co_±.
±_vec
[0] !
NULL
)

186 
	`˝rötf
(
cb
, " ");

188 
	`˝rötf
(
cb
, "\n");

189 i‡(
	`±2cbuf
(
cb
, 
co
->
co_±
, 
m¨göÆ
+3, 
brõf
) < 0)

190 
d⁄e
;

191 i‡(
co
->
co_±
.
±_Àn
>1){

192 
	`˝rötf
(
cb
, "%*s", 
m¨göÆ
, "");

193 
	`˝rötf
(
cb
, "}\n");

195 
ªtvÆ
 = 0;

196 
d⁄e
:

197  
ªtvÆ
;

198 
	}
}

207 
	$±2cbuf
(
cbuf
 *
cb
,

208 
∑r£_åì
 
±
,

209 
m¨göÆ
,

210 
brõf
)

212 
ªtvÆ
 = -1;

213 
i
;

215 
i
=0; i<
±
.
±_Àn
; i++){

216 i‡(
±
.
±_vec
[
i
] =
NULL
){

219 i‡(
±
.
±_Àn
 > 1)

220 
	`˝rötf
(
cb
, "%*s", 
m¨göÆ
, "");

221 i‡(
	`co2cbuf
(
cb
, 
±
.
±_vec
[
i
], 
m¨göÆ
, 
brõf
) < 0)

222 
d⁄e
;

224 
ªtvÆ
 = 0;

225 
d⁄e
:

226  
ªtvÆ
;

227 
	}
}

245 
	$˛igí_¥öt
(
FILE
 *
f
,

246 
∑r£_åì
 
±
,

247 
brõf
)

249 
ªtvÆ
 = -1;

250 
cbuf
 *
cb
 = 
NULL
;

252 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
){

253 
	`Ârötf
(
°dîr
, "cbuf_√w: %s\n", 
	`°ªº‹
(
î∫o
));

254 
d⁄e
;

256 i‡(
	`±2cbuf
(
cb
, 
±
, 0, 
brõf
) < 0)

257 
d⁄e
;

258 
	`Ârötf
(
f
, "%s", 
	`cbuf_gë
(
cb
));

259 
ªtvÆ
 = 0;

260 
d⁄e
:

261 i‡(
cb
)

262 
	`cbuf_‰ì
(
cb
);

263  
ªtvÆ
;

264 
	}
}

275 
	$˛igí_¥öt_obj
(
FILE
 *
f
,

276 
cg_obj
 *
co
,

277 
brõf
)

279 
ªtvÆ
 = -1;

280 
cbuf
 *
cb
 = 
NULL
;

282 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
){

283 
	`Ârötf
(
°dîr
, "cbuf_√w: %s\n", 
	`°ªº‹
(
î∫o
));

284 
d⁄e
;

286 i‡(
	`co2cbuf
(
cb
, 
co
, 0, 
brõf
) < 0)

287 
d⁄e
;

288 
	`Ârötf
(
f
, "%s", 
	`cbuf_gë
(
cb
));

289 
ªtvÆ
 = 0;

290 
d⁄e
:

291 i‡(
cb
)

292 
	`cbuf_‰ì
(
cb
);

293  
ªtvÆ
;

294 
	}
}

	@cligen-master/cligen_print.h

34 #i‚de‡
_CLIGEN_PRINT_H_


35 
	#_CLIGEN_PRINT_H_


	)

40 
cov2cbuf
(
cbuf
 *
cb
, 
cg_obj
 *
co
, 
brõf
);

41 
˛igí_¥öt
(
FILE
 *
f
, 
∑r£_åì
 
±
, 
brõf
);

42 
˛igí_¥öt_obj
(
FILE
 *
f
, 
cg_obj
 *
co
, 
brõf
);

	@cligen-master/cligen_read.c

36 
	~"˛igí_c⁄fig.h
"

38 
	~<°dio.h
>

39 
	~<°dlib.h
>

40 
	~<°döt.h
>

41 
	~<°rög.h
>

42 
	~<î∫o.h
>

43 
	~<sys/ty≥s.h
>

44 
	~<sys/°©.h
>

45 #ifde‡
WIN32


46 
	~<wösock2.h
>

48 
	~<sys/io˘l.h
>

49 
	~<sys/sockë.h
>

50 
	~<√töë/ö.h
>

51 
	~<¨∑/öë.h
>

52 
	~<uni°d.h
>

53 
	~<ãrmios.h
>

54 
	~<f˙é.h
>

56 
	#__USE_GNU


	)

57 
	~<˘y≥.h
>

58 
	~<as£π.h
>

60 #i‚de‡
isbœnk


61 
	#isbœnk
(
c
Ë(c==' ')

	)

64 
	~"˛igí_buf.h
"

65 
	~"˛igí_v¨.h
"

66 
	~"˛igí_cvec.h
"

67 
	~"˛igí_gí.h
"

68 
	~"˛igí_h™dÀ.h
"

69 
	~"˛igí_¥öt.h
"

70 
	~"˛igí_io.h
"

71 
	~"˛igí_m©ch.h
"

72 
	~"˛igí_ex∑nd.h
"

73 
	~"˛igí_ªad.h
"

74 
	~"gëlöe.h
"

79 
show_hñp_cﬁumns
(
˛igí_h™dÀ
 
h
, 
FILE
 *
fout
, *
s
, 
∑r£_åì
 
±
, 
cvec
 *cvec);

80 
show_hñp_löe
(
˛igí_h™dÀ
 
h
, 
FILE
 *
fout
, *
s
, 
∑r£_åì
 
±
, 
cvec
 *);

81 
com∂ëe
(
˛igí_h™dÀ
 
h
, *
À≈
, 
∑r£_åì
 
±
, 
cvec
 *cvec);

93 
	$˛i_qm¨k_hook
(
˛igí_h™dÀ
 
h
,

94 *
°rög
)

96 
ªtvÆ
 = -1;

97 
∑r£_åì
 *
±
=
NULL
;

98 
∑r£_åì
 
±n
={0,};

99 
cvec
 *cve¯
NULL
;

101 
	`Âuts
 ("\n", 
°dout
);

102 i‡((
±
 = 
	`˛igí_åì_a˘ive_gë
(
h
)Ë=
NULL
)

103 
ok
;

104 i‡(
	`±_ex∑nd_åìªf
(
h
, 
NULL
, 
±
) < 0)

105 
d⁄e
;

106 i‡((
cvec
 = 
	`cvec_°¨t
(
°rög
)Ë=
NULL
)

107 
d⁄e
;

108 i‡(
	`±_ex∑nd_2
(
h
, 
±
, 
cvec
, &
±n
, 1) < 0)

110 i‡(
	`show_hñp_löe
(
h
, 
°dout
, 
°rög
, 
±n
, 
cvec
) <0)

111 
d⁄e
;

112 
ok
:

113 
ªtvÆ
 = 0;

114 
d⁄e
:

115 i‡(
cvec
)

116 
	`cvec_‰ì
(
cvec
);

117 i‡(
	`˛igí_∑r£åì_‰ì
(
±n
, 0) < 0)

119 i‡(
±
 && 
	`±_ex∑nd_˛ónup_2
(*pt) < 0)

121 i‡(
±
 && 
	`±_ex∑nd_åìªf_˛ónup
(pt) < 0)

123  
ªtvÆ
;

124 
	}
}

138 
	$˛i_èb_hook
(
˛igí_h™dÀ
 
h
,

139 *
curs‹p
)

141 
ªtvÆ
 = -1;

142 
ﬁd_curs‹
;

143 
∑r£_åì
 *
±
;

144 
∑r£_åì
 
±n
={0,};

145 
cvec
 *cve¯
NULL
;

147 
ﬁd_curs‹
 = *
curs‹p
;

148 i‡((
±
 = 
	`˛igí_åì_a˘ive_gë
(
h
)Ë=
NULL
)

149 
ok
;

150 i‡(
	`±_ex∑nd_åìªf
(
h
, 
NULL
, 
±
) < 0)

151 
d⁄e
;

152 i‡((
cvec
 = 
	`cvec_°¨t
(
	`˛igí_buf
(
h
))Ë=
NULL
)

153 
d⁄e
;

154 i‡(
	`±_ex∑nd_2
(
h
, 
±
, 
cvec
, &
±n
, 1) < 0)

155 
d⁄e
;

157 i‡(
	`com∂ëe
(
h
, 
curs‹p
, 
±n
, 
cvec
) < 0)

158 
d⁄e
;

160 i‡(
ﬁd_curs‹
 =*
curs‹p
) {

161 
	`Âuts
 ("\n", 
°dout
);

162 i‡(
	`˛igí_èbmode
(
h
) == 1){

163 i‡(
	`show_hñp_löe
(
h
, 
°dout
, 
	`˛igí_buf
(h), 
±n
, 
cvec
) < 0)

164 
d⁄e
;

167 i‡(
	`show_hñp_cﬁumns
(
h
, 
°dout
, 
	`˛igí_buf
(h), 
±n
, 
cvec
) < 0)

168 
d⁄e
;

172 
ok
:

173 
ªtvÆ
 = 0;

174 
d⁄e
:

175 i‡(
cvec
)

176 
	`cvec_‰ì
(
cvec
);

177 i‡(
	`˛igí_∑r£åì_‰ì
(
±n
, 0) < 0)

179 i‡(
±
 && 
	`±_ex∑nd_˛ónup_2
(*pt) < 0)

181 i‡(
±
 && 
	`±_ex∑nd_åìªf_˛ónup
(pt) < 0)

183  
ªtvÆ
;

184 
	}
}

189 
	$˛úód_öô
(
˛igí_h™dÀ
 
h
)

191 
gl_qm¨k_hook
 = 
˛i_qm¨k_hook
;

192 
gl_èb_hook
 = 
˛i_èb_hook
;

193 
	}
}

200 
	$cﬁumn_¥öt
(
FILE
 *
fout
,

201 
˙r
,

202 
cw
,

203 
cmd_hñp
 *
chvec
,

204 
Àn
,

205 
Àvñ
)

207 
ªtvÆ
 = -1;

208 
li
;

209 
ci
;

210 
löír
;

211 
cmd_hñp
 *
ch
;

213 
löír
 = (
Àn
-1)/
˙r
 + 1;

214 
ci
=0, 
li
 = 0;Üò< 
löír
;Üi++) {

215 (
ci
 < 
˙r
Ë&& (
li
*˙r+cò< 
Àn
)) {

216 
ch
 = &
chvec
[
li
*
˙r
+
ci
];

217 
	`Ârötf
 (
fout
, " %*s",

218 -(
cw
-1),

219 
ch
->
ch_cmd
);

220 
ci
++;

222 
ci
 = 0;

223 
	`Ârötf
(
fout
, "\n");

225 
	`fÊush
(
fout
);

226 
ªtvÆ
 = 0;

228  
ªtvÆ
;

229 
	}
}

242 
	$show_hñp_cﬁumns
(
˛igí_h™dÀ
 
h
,

243 
FILE
 *
fout
,

244 *
°rög
,

245 
∑r£_åì
 
±
,

246 
cvec
 *cvec)

248 
ªtvÆ
 = -1;

249 
ƒ
 = 0;

250 
Àvñ
;

251 
±_vec
 
±1
;

252 
m©chÀn
 = 0;

253 *
m©chvec
 = 
NULL
;

254 
vi
;

255 
i
;

256 
ƒcmd
 = 0;

257 
cmd_hñp
 *
chvec
 = 
NULL
;

258 
cmd_hñp
 *
ch
;

259 
cg_obj
 *
co
;

260 
cbuf
 *
cb
 = 
NULL
;

261 *
cmd
;

262 *
¥ev
 = 
NULL
;

263 
maxÀn
 = 0;

264 
cﬁumn_width
;

265 
cﬁumn_ƒ
;

266 
ª°
;

268 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
){

269 
	`Ârötf
(
°dîr
, "cbuf_√w: %s\n", 
	`°ªº‹
(
î∫o
));

272 i‡(
°rög
 !
NULL
){

273 i‡((
ƒ
 = 
	`m©ch_∑âîn
(
h
, 
°rög
, 
±
, 0, 1,

274 &
±1
, &
m©chvec
, &
m©chÀn
, 
cvec
, 
NULL
)) < 0)

275 
d⁄e
;

277 i‡((
Àvñ
 = 
	`comm™d_Àvñs
(
°rög
)) < 0)

278 
d⁄e
;

279 i‡(
ƒ
>0){

281 i‡((
chvec
 = 
	`ˇŒoc
(
m©chÀn
, (
cmd_hñp
))Ë==
NULL
){

282 
	`Ârötf
(
°dîr
, "%†ˇŒoc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

283 
d⁄e
;

285 
ƒcmd
 = 0;

286 
i
 = 0; i<
m©chÀn
; i++){

287 
vi
=
m©chvec
[
i
];

288 i‡((
co
 = 
±1
[
vi
]Ë=
NULL
)

290 i‡(
co
->
co_comm™d
 =
NULL
)

292 
cmd
 = 
NULL
;

293 
co
->
co_ty≥
){

294 
CO_VARIABLE
:

295 
	`cbuf_ª£t
(
cb
);

296 
	`cov2cbuf
(
cb
, 
co
, 1);

297 
cmd
 = 
	`cbuf_gë
(
cb
);

299 
CO_COMMAND
:

300 
cmd
 = 
co
->
co_comm™d
;

302 
CO_REFERENCE
:

306 i‡(
cmd
 =
NULL
 || 
	`°æí
(cmd)==0)

308 i‡(
¥ev
 && 
	`°rcmp
(
cmd
,Örev)==0)

310 
ch
 = &
chvec
[
ƒcmd
++];

311 i‡((
ch
->
ch_cmd
 = 
	`°rdup
(
cmd
)Ë=
NULL
){

312 
	`Ârötf
(
°dîr
, "%†°rdup: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

313 
d⁄e
;

315 
¥ev
 = 
ch
->
ch_cmd
;

316 
maxÀn
 = 
	`°æí
(
cmd
)>maxlen?strlen(cmd):maxlen;

318 
maxÀn
++;

319 
cﬁumn_width
 = 
maxÀn
<
COLUMN_MIN_WIDTH
?COLUMN_MIN_WIDTH:maxlen;

320 
cﬁumn_ƒ
 = 
	`˛igí_ãrmöÆ_Àngth
(
h
)/
cﬁumn_width
;

321 i‡(
cﬁumn_ƒ
 < 1)

322 
cﬁumn_ƒ
 = 1;

323 
ª°
 = 
	`˛igí_ãrmöÆ_Àngth
(
h
)%
cﬁumn_width
;

324 
cﬁumn_width
 +
ª°
/
cﬁumn_ƒ
;

325 i‡(
	`cﬁumn_¥öt
(
fout
,

326 
cﬁumn_ƒ
,

327 
cﬁumn_width
,

328 
chvec
,

329 
ƒcmd
,

330 
Àvñ
) < 0)

331 
d⁄e
;

334 
ªtvÆ
 = 0;

335 
d⁄e
:

336 i‡(
chvec
){

337 
i
=0; i<
ƒcmd
; i++){

338 i‡(
chvec
[
i
].
ch_cmd
)

339 
	`‰ì
(
chvec
[
i
].
ch_cmd
);

341 
	`‰ì
(
chvec
);

343 i‡(
cb
)

344 
	`cbuf_‰ì
(
cb
);

345 i‡(
m©chvec
)

346 
	`‰ì
(
m©chvec
);

347  
ªtvÆ
;

348 
	}
}

372 
	$show_hñp_löe
(
˛igí_h™dÀ
 
h
,

373 
FILE
 *
fout
,

374 *
°rög
,

375 
∑r£_åì
 
±
,

376 
cvec
 *cvec)

378 
ªtvÆ
 = -1;

379 
ƒ
 = 0;

380 
Àvñ
;

381 
±_vec
 
±1
;

382 *
tmp
;

383 *
tmµ
;

384 
m©chÀn
 = 0;

385 *
m©chvec
 = 
NULL
;

386 
ªs
;

389 i‡(
°rög
 !
NULL
){

390 i‡((
ƒ
 = 
	`m©ch_∑âîn
(
h
, 
°rög
, 
±
, 0, 1, &
±1
, &
m©chvec
, &
m©chÀn
, 
cvec
, 
NULL
)) < 0)

391 
d⁄e
;

393 i‡((
Àvñ
 = 
	`comm™d_Àvñs
(
°rög
)) < 0)

394 
d⁄e
;

400 i‡(
	`°æí
(
°rög
Ë&& 
	`isbœnk
(string[strlen(string)-1])){

401 i‡((
tmµ
 = 
tmp
 = 
	`°rdup
(
°rög
)Ë=
NULL
){

402 
	`Ârötf
(
°dîr
, "%†°rdup: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

403 
d⁄e
;

405 
	`˛i_åim
(&
tmµ
, 
	`˛igí_commít
(
h
));

411 i‡((
ªs
 = 
	`m©ch_∑âîn_exa˘
(
h
, 
tmµ
, 
±
, 0, 
cvec
, 
NULL
)) < 0){

412 
	`‰ì
(
tmp
);

413 
d⁄e
;

416 i‡(
ªs
) {

417 
	`Ârötf
 (
fout
, " <cr>\n");

418 
	`fÊush
(
fout
);

420 
	`‰ì
 (
tmp
);

428 i‡(
m©chvec
){

429 
	`‰ì
(
m©chvec
);

430 
m©chvec
 = 
NULL
;

433 i‡((
ƒ
 = 
	`m©ch_∑âîn
(
h
, 
°rög
, 
±
, 0, 1, &
±1
, &
m©chvec
, &
m©chÀn
, 
cvec
, 
NULL
)) < 0)

435 
d⁄e
;

437 i‡(!
ƒ
){

438 
ªtvÆ
 = 0;

439 
d⁄e
;

441 i‡(
	`¥öt_hñp_löes
(
fout
, 
±1
, 
m©chvec
, 
m©chÀn
) < 0)

442 
d⁄e
;

443 
ªtvÆ
 = 0;

444 
d⁄e
:

445 i‡(
m©chvec
)

446 
	`‰ì
(
m©chvec
);

447  
ªtvÆ
;

448 
	}
}

461 
	$com∂ëe
(
˛igí_h™dÀ
 
h
,

462 *
curs‹p
,

463 
∑r£_åì
 
±
,

464 
cvec
 *cvec)

466 
ªtvÆ
 = -1;

467 *
°rög
;

468 *
s
 = 
NULL
;

469 
size_t
 
¶í
;

470 
curs‹
 = *
curs‹p
;

471 
i
, 
n
;

472 
exåa
;

474 
°rög
 = 
	`˛igí_buf
(
h
);

475 i‡(
°rög
 =
NULL
){

476 
	`Ârötf
(
°dîr
, "%†I≈uà°rög NULL\n", 
__FUNCTION__
);

477 
d⁄e
;

479 
¶í
 = 
	`˛igí_buf_size
(
h
);

480 i‡((
s
 = 
	`mÆloc
(
¶í
)Ë=
NULL
){

481 
	`Ârötf
(
°dîr
, "%†mÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

482 
d⁄e
;

484 
	`°∫˝y
(
s
, 
°rög
, 
¶í
);

485 
s
[
curs‹
] = '\0';

486 i‡(
	`m©ch_com∂ëe
(
h
, 
±
, &
s
, &
¶í
, 
cvec
) < 0)

487 
d⁄e
;

488 
exåa
 = 
	`°æí
(
s
Ë- 
curs‹
;

489 i‡(
exåa
){

490 
	`˛igí_buf_ö¸ó£
(
h
, 
	`°æí
(
s
));

491 
°rög
 = 
	`˛igí_buf
(
h
);

492 
n
 = 
	`°æí
(
°rög
Ë- 
curs‹
;

493 
	`˛igí_buf_ö¸ó£
(
h
, 
	`°æí
(
°rög
)+
curs‹
+
n
);

494 
°rög
 = 
	`˛igí_buf
(
h
);

495 
i
=
curs‹
+
n
; i>=cursor; i--)

496 
°rög
[
i
 + 
exåa
] = string[i];

497 
	`°∫˝y
(
°rög
 + 
curs‹
, 
s
 + curs‹, 
exåa
);

498 *
curs‹p
 +
exåa
;

500 
ªtvÆ
 = 0;

501 
d⁄e
:

502 i‡(
s
)

503 
	`‰ì
(
s
);

504  
ªtvÆ
;

505 
	}
}

513 
	$˛i_åim
 (**
löe
,

514 
commít
)

516 
poöt
;

517 
whôe•a˚
 = 0;

518 *
s
 = *
löe
;

519 *
s1
 = 
s
;

521 i‡(!
	`ißscii
(
commít
))

522 
commít
 = 0;

523 
poöt
 = 0;Öoöà<
	`°æí
(
s
) ;Öoint++) {

524 i‡(
commít
 && 
s
[
poöt
] == comment){

525 *
s1
++ = '\n';

526 *
s1
++ = '\0';

530 i‡(
	`isbœnk
(
s
[
poöt
])) {

531 i‡(
whôe•a˚
)

534 
whôe•a˚
 = 1;

535 *
s1
++ = ' ';

538 
whôe•a˚
 = 0;

539 *
s1
++ = 
s
[
poöt
];

544 (
	`°æí
(
s
Ë> 0Ë&& 
	`isbœnk
(*s))

545 
s
++;

548 (
	`°æí
(
s
Ë> 0Ë&& (
	`isbœnk
(*(s+strlen(s)-1)) || *(s+strlen(s)-1) == '\n'))

549 *(
s
 + 
	`°æí
(s) - 1) = '\0';

552 *
löe
 = 
s
;

553 
	}
}

580 
	$˛úód_∑r£
 (
˛igí_h™dÀ
 
h
,

581 *
°rög
,

582 
∑r£_åì
 *
±
,

583 
cg_obj
 **
co_‹ig
,

584 
cvec
 *
cvv
)

586 
ªtvÆ
 = -1;

587 
cg_obj
 *
m©ch_obj
;

588 
∑r£_åì
 
±n
={0,};

589 
cvec
 *cve¯
NULL
;

591 i‡(
	`˛igí_logsy¡ax
(
h
) > 0){

592 
	`Ârötf
(
°dîr
, "%s:\n", 
__FUNCTION__
);

593 
	`˛igí_¥öt
(
°dîr
, *
±
, 0);

595 
	`˛i_åim
 (&
°rög
, 
	`˛igí_commít
(
h
));

596 i‡(
	`±_ex∑nd_åìªf
(
h
, 
NULL
, 
±
) < 0)

597 
d⁄e
;

598 i‡((
cvec
 = 
	`cvec_°¨t
(
°rög
)Ë=
NULL
)

599 
d⁄e
;

600 i‡(
	`±_ex∑nd_2
(
h
, 
±
, 
cvec
, &
±n
, 0) < 0)

601 
d⁄e
;

602 i‡((
ªtvÆ
 = 
	`m©ch_∑âîn_exa˘
(
h
, 
°rög
, 
±n
, 1, 
cvec
, &
m©ch_obj
)) < 0)

603 
d⁄e
;

605 i‡(
ªtvÆ
 =
CG_MATCH
){

606 i‡(
m©ch_obj
 && m©ch_obj->
co_ªf
)

607 *
co_‹ig
 = 
m©ch_obj
->
co_ªf
;

609 *
co_‹ig
 = 
m©ch_obj
;

610 i‡(
	`cvec_m©ch
(
h
, *
co_‹ig
, 
°rög
, 
cvv
) < 0){

611 
ªtvÆ
 = 
CG_ERROR
;

612 
d⁄e
;

615 
d⁄e
:

616 i‡(
cvec
)

617 
	`cvec_‰ì
(
cvec
);

618 i‡(
	`˛igí_∑r£åì_‰ì
(
±n
, 0) < 0)

620 i‡(
	`±_ex∑nd_˛ónup_2
(*
±
) < 0)

621  
CG_ERROR
;

622  
ªtvÆ
;

623 
	}
}

632 
	$˛úód
(
˛igí_h™dÀ
 
h
)

634 *
°rög
;

637 
°rög
 = 
NULL
;

638 i‡(
	`gl_gëlöe
(
h
, &
°rög
) < 0)

639 
d⁄e
;

640 
	`˛i_åim
(&
°rög
, 
	`˛igí_commít
(
h
));

641 } 
	`°æí
(
°rög
Ë=0 && !
	`gl_eof
());

642 i‡(
	`gl_eof
()){

643 
°rög
 = 
NULL
;

644 
d⁄e
;

646 
	`gl_hi°add
(
°rög
);

647 
d⁄e
:

648  
°rög
;

649 
	}
}

651 #ifde‡
nŸu£d


670 
	$˛úód_gëlöe
(
˛igí_h™dÀ
 
h
,

671 **
löe
,

672 
cg_obj
 **
m©ch_obj
,

673 
cvec
 *
cvv
)

675 *
°rög
;

677 
°rög
 = 
	`˛úód
(
h
);

678 i‡(
°rög
 =
NULL
)

679  
CG_EOF
;

681 *
löe
 = 
°rög
;

682  
	`˛úód_∑r£
(
h
, 
°rög
, 
m©ch_obj
, 
cvv
);

683 
	}
}

704 
	$˛úód_evÆ
(
˛igí_h™dÀ
 
h
,

705 **
löe
,

706 *
cb_ªtvÆ
)

708 
cg_obj
 *
m©ch
;

709 
ªtvÆ
 = 
CG_ERROR
;

710 
cvec
 *
cvv
;

711 
∑r£_åì
 *
±
 = 
NULL
;

713 i‡(
h
 =
NULL
){

714 
	`Ârötf
(
°dîr
, "Illegal cligen handle\n");

715 
d⁄e
;

717 i‡((*
löe
 = 
	`˛úód
(
h
)Ë=
NULL
){

718 
ªtvÆ
 = 
CG_EOF
;

719 
d⁄e
;

721 i‡((
±
 = 
	`˛igí_åì_a˘ive_gë
(
h
)Ë=
NULL
){

722 
	`Ârötf
(
°dîr
, "NoáctiveÖarse-tree found\n");

723 
d⁄e
;;

725 i‡((
cvv
 = 
	`cvec_√w
(0)Ë=
NULL
){

726 
	`Ârötf
(
°dîr
, "%s: cvec_√w: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

727 
d⁄e
;;

729 i‡((
ªtvÆ
 = 
	`˛úód_∑r£
(
h
, *
löe
, 
±
, &
m©ch
, 
cvv
)Ë=
CG_MATCH
)

730 *
cb_ªtvÆ
 = 
	`˛igí_evÆ
(
h
, 
m©ch
, 
cvv
);

731 
	`cvec_‰ì
(
cvv
);

732 
d⁄e
:

734 i‡(
±
 && 
	`±_ex∑nd_åìªf_˛ónup
(pt) < 0)

735 
ªtvÆ
 = -1;

736  
ªtvÆ
;

737 
	}
}

753 
	$˛igí_evÆ
(
˛igí_h™dÀ
 
h
,

754 
cg_obj
 *
co
,

755 
cvec
 *
cvv
)

757 
cg_ˇŒback
 *
cc
;

758 
ªtvÆ
 = 0;

759 
cvec
 *
¨gv
;

761 i‡(
h
)

762 
	`˛igí_co_m©ch_£t
(
h
, 
co
);

763 
cc
 = 
co
->
co_ˇŒbacks
; cc; cc=cc->
cc_√xt
){

765 i‡(
cc
->
cc_‚_vec
){

766 
¨gv
 = 
cc
->
cc_cvec
 ? 
	`cvec_dup
(cc->cc_cvecË: 
NULL
;

767 
	`˛igí_‚_°r_£t
(
h
, 
cc
->
cc_‚_°r
);

768 i‡((
ªtvÆ
 = (*
cc
->
cc_‚_vec
)(

769 
	`˛igí_u£rh™dÀ
(
h
)?cligen_userhandle(h):h,

770 
cvv
,

771 
¨gv
)) < 0){

772 i‡(
¨gv
 !
NULL
)

773 
	`cvec_‰ì
(
¨gv
);

774 
	`˛igí_‚_°r_£t
(
h
, 
NULL
);

777 i‡(
¨gv
 !
NULL
)

778 
	`cvec_‰ì
(
¨gv
);

779 
	`˛igí_‚_°r_£t
(
h
, 
NULL
);

781 #ifde‡
CALLBACK_SINGLEARG


783 i‡(
cc
->
cc_‚
){

784 
cg_v¨
 *
cv
;

785 
¨gv
 = 
cc
->
cc_cvec
 ? 
	`cvec_dup
(cc->cc_cvecË: 
NULL
;

786 
	`˛igí_‚_°r_£t
(
h
, 
cc
->
cc_‚_°r
);

787 
cv
 = 
¨gv
?
	`cvec_i
◊rgv,0):
NULL
;

788 i‡((
ªtvÆ
 = (*
cc
->
cc_‚
)(

789 
	`˛igí_u£rh™dÀ
(
h
)?cligen_userhandle(h):h,

790 
cvv
,

791 
cv
)) < 0){

792 i‡(
¨gv
 !
NULL
)

793 
	`cvec_‰ì
(
¨gv
);

794 
	`˛igí_‚_°r_£t
(
h
, 
NULL
);

797 i‡(
¨gv
 !
NULL
)

798 
	`cvec_‰ì
(
¨gv
);

799 
	`˛igí_‚_°r_£t
(
h
, 
NULL
);

803  
ªtvÆ
;

804 
	}
}

808 
	$˛igí_echo_off
()

810 
ãrmios
 
£âögs
;

812 
	`tcgë©å
(
STDIN_FILENO
, &
£âögs
);

813 
£âögs
.
c_lÊag
 &(~
ECHO
);

814 
	`tc£èâr
(
STDIN_FILENO
,
TCSANOW
,&
£âögs
);

816 
	}
}

820 
	$˛igí_echo_⁄
()

822 
ãrmios
 
£âögs
;

824 
	`tcgë©å
(0, &
£âögs
);

825 
£âögs
.
c_lÊag
 |
ECHO
;

826 
	`tc£èâr
(0,
TCSANOW
,&
£âögs
);

828 
	}
}

839 
	$˛igí_m©ch_cgv¨_ßme
(
Êag
)

841 
ﬁdvÆ
 = 
_m©ch_cgv¨_ßme
;

843 
_m©ch_cgv¨_ßme
 = 
Êag
;

844  
ﬁdvÆ
;

845 
	}
}

	@cligen-master/cligen_read.h

38 #i‚de‡
_CLIGEN_READ_H_


39 
	#_CLIGEN_READ_H_


	)

48 
	e˛igí_ªsu…
{

49 
	mCG_EOF
 = -2,

50 
	mCG_ERROR
 = -1,

51 
	mCG_NOMATCH
 = 0,

52 
	mCG_MATCH
 = 1,

58 
˛úód_öô
(
˛igí_h™dÀ
 
h
);

59 *
˛úód
(
˛igí_h™dÀ
 
h
);

60 
˛i_åim
 (**
löe
, 
commít
);

61 
˛úód_∑r£
(
˛igí_h™dÀ
 
h
, *, 
∑r£_åì
 *
±
, 
cg_obj
 **, 
cvec
 *
vr
);

62 
˛úód_evÆ
(
˛igí_h™dÀ
 
h
, **
löe
, *
cb_ªt
);

63 
˛igí_evÆ
(
˛igí_h™dÀ
 
h
, 
cg_obj
 *
co_m©ch
, 
cvec
 *
vr
);

64 
˛igí_echo_⁄
();

65 
˛igí_echo_off
();

66 
˛igí_m©ch_cgv¨_ßme
(
Êag
);

	@cligen-master/cligen_syntax.c

33 
	~"˛igí_c⁄fig.h
"

35 
	~<°dio.h
>

36 
	~<°dlib.h
>

37 
	~<°rög.h
>

38 
	~<uni°d.h
>

39 
	~<î∫o.h
>

40 
	~<as£π.h
>

41 
	~<√töë/ö.h
>

43 
	~"˛igí_buf.h
"

44 
	~"˛igí_v¨.h
"

45 
	~"˛igí_cvec.h
"

46 
	~"˛igí_gí.h
"

47 
	~"˛igí_∑r£.h
"

48 
	~"˛igí_h™dÀ.h
"

49 
	~"˛igí_ªad.h
"

50 
	~"˛igí_sy¡ax.h
"

73 
	$˛igí_∑r£_°r
(
˛igí_h™dÀ
 
h
,

74 *
°r
,

75 *
«me
,

76 
∑r£_åì
 *
±
,

77 
cvec
 *
vr


80 
ªtvÆ
 = -1;

81 
i
;

82 
˛iyacc
 
ya
 = {0,};

83 
cg_obj
 *
co
;

84 
cg_obj
 
co0
;

85 
cg_obj
 *
co_t›
 = &
co0
;

87 
	`mem£t
(&
co0
, 0, (co0));

88 
ya
.
ya_h™dÀ
 = 
h
;

89 
ya
.
ya_«me
 = 
«me
;

90 
ya
.
ya_åì«me
 = 
	`°rdup
(
«me
);

91 
ya
.
ya_löíum
 = 1;

92 
ya
.
ya_∑r£_°rög
 = 
°r
;

93 
ya
.
ya_°ack
 = 
NULL
;

94 i‡(
±
)

95 
co_t›
->
co_±
 = *
±
;

96 i‡(
vr
)

97 
ya
.
ya_globÆs
 = 
vr
;

99 i‡((
ya
.
ya_globÆs
 = 
	`cvec_√w
(0)Ë=
NULL
){

100 
	`Ârötf
(
°dîr
, "%s: mÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

101 
d⁄e
;

103 i‡(
	`°æí
(
°r
)){

104 i‡(
	`cgl_öô
(&
ya
) < 0)

105 
d⁄e
;

106 i‡(
	`cgy_öô
(&
ya
, 
co_t›
) < 0)

107 
d⁄e
;

108 i‡(
	`˛igí_∑r£∑r£
(&
ya
) != 0) {

109 
	`cgy_exô
(&
ya
);

110 
	`cgl_exô
(&
ya
);

111 
d⁄e
;

114 i‡(
±
 =
NULL
){

115 
i
=0; i<
co_t›
->
co_max
; i++){

116 i‡((
co
=
co_t›
->
co_√xt
[
i
]Ë!
NULL
)

117 
	`co_up_£t
(
co
, 
NULL
);

119 i‡(
	`˛igí_åì_add
(
ya
.
ya_h™dÀ
, ya.
ya_åì«me
, 
co_t›
->
co_±
) < 0)

120 
d⁄e
;

121 
	`mem£t
(&
co_t›
->
co_±
, 0, (
∑r£_åì
));

123 i‡(
	`cgy_exô
(&
ya
) < 0)

124 
d⁄e
;

125 i‡(
	`cgl_exô
(&
ya
) < 0)

126 
d⁄e
;

128 i‡(
vr
)

129 
vr

ya
.
ya_globÆs
;

131 
	`cvec_‰ì
(
ya
.
ya_globÆs
);

135 i‡(
±
)

136 *
±
 = 
co_t›
->
co_±
;

137 
i
=0; i<
co_t›
->
co_max
; i++){

138 
co
=
co_t›
->
co_√xt
[
i
];

139 i‡(
co
)

140 
	`co_up_£t
(
co
, 
NULL
);

142 
ªtvÆ
 = 0;

143 
d⁄e
:

144 i‡(
ya
.
ya_åì«me
)

145 
	`‰ì
 (
ya
.
ya_åì«me
);

146  
ªtvÆ
;

148 
	}
}

155 
	$˛igí_∑r£_fûe
(
˛igí_h™dÀ
 
h
,

156 
FILE
 *
f
,

157 *
«me
,

158 
∑r£_åì
 *
±
,

159 
cvec
 *
globÆs
)

161 *
buf
;

162 
i
;

163 
c
;

164 
Àn
;

165 
ªtvÆ
 = -1;

167 
Àn
 = 1024;

168 i‡((
buf
 = 
	`mÆloc
(
Àn
)Ë=
NULL
){

169 
	`≥º‹
("pt_file malloc");

172 
	`mem£t
(
buf
, 0, 
Àn
);

174 
i
 = 0;

176 i‡((
c
 = 
	`fgëc
(
f
)Ë=
EOF
)

178 i‡(
Àn
==
i
){

179 i‡((
buf
 = 
	`ªÆloc
(buf, 2*
Àn
)Ë=
NULL
){

180 
	`Ârötf
(
°dîr
, "%s:ÑóŒoc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

181 
d⁄e
;

183 
	`mem£t
(
buf
+
Àn
, 0,Üen);

184 
Àn
 *= 2;

186 
buf
[
i
++] = ()(
c
&0xff);

188 i‡(
	`˛igí_∑r£_°r
(
h
, 
buf
, 
«me
, 
±
, 
globÆs
) < 0)

189 
d⁄e
;

190 
ªtvÆ
 = 0;

191 
d⁄e
:

192 i‡(
buf
)

193 
	`‰ì
(
buf
);

194  
ªtvÆ
;

195 
	}
}

197 #ifde‡
CALLBACK_SINGLEARG


226 
	$˛igí_ˇŒback_°r2‚
(
∑r£_åì
 
±
, 
cg_°r2‚_t
 *
°r2‚
, *
¨g
)

228 
ªtvÆ
 = -1;

229 
cg_obj
 *
co
;

230 *
ˇŒback_îr
 = 
NULL
;

231 
cg_ˇŒback
 *
cc
;

232 
i
;

234 
i
=0; i<
±
.
±_Àn
; i++)

235 i‡((
co
 = 
±
.
±_vec
[
i
]Ë!
NULL
){

236 
cc
 = 
co
->
co_ˇŒbacks
; cc; cc=cc->
cc_√xt
){

237 i‡(
cc
->
cc_‚_°r
 !
NULL
 && cc->
cc_‚
 == NULL){

239 
cc
->
cc_‚
 = 
	`°r2‚
(cc->
cc_‚_°r
, 
¨g
, &
ˇŒback_îr
);

240 i‡(
ˇŒback_îr
 !
NULL
){

241 
	`Ârötf
(
°dîr
, "%s:Érror: No such function: %s (%s)\n",

242 
__FUNCTION__
, 
cc
->
cc_‚_°r
, 
ˇŒback_îr
);

243 
d⁄e
;

248 i‡(
	`˛igí_ˇŒback_°r2‚
(
co
->
co_±
, 
°r2‚
, 
¨g
) < 0)

249 
d⁄e
;

251 
ªtvÆ
 = 0;

252 
d⁄e
:

253  
ªtvÆ
;

254 
	}
}

285 
	$˛igí_ˇŒbackv_°r2‚
(
∑r£_åì
 
±
,

286 
cgv_°r2‚_t
 *
°r2‚
,

287 *
¨g
)

289 
ªtvÆ
 = -1;

290 
cg_obj
 *
co
;

291 *
ˇŒback_îr
 = 
NULL
;

292 
cg_ˇŒback
 *
cc
;

293 
i
;

295 
i
=0; i<
±
.
±_Àn
; i++)

296 i‡((
co
 = 
±
.
±_vec
[
i
]Ë!
NULL
){

297 
cc
 = 
co
->
co_ˇŒbacks
; cc; cc=cc->
cc_√xt
){

298 i‡(
cc
->
cc_‚_°r
 !
NULL
 && cc->
cc_‚_vec
 == NULL){

300 
cc
->
cc_‚_vec
 = 
	`°r2‚
(cc->
cc_‚_°r
, 
¨g
, &
ˇŒback_îr
);

301 i‡(
ˇŒback_îr
 !
NULL
){

302 
	`Ârötf
(
°dîr
, "%s:Érror: No such function: %s (%s)\n",

303 
__FUNCTION__
, 
cc
->
cc_‚_°r
, 
ˇŒback_îr
);

304 
d⁄e
;

309 i‡(
	`˛igí_ˇŒbackv_°r2‚
(
co
->
co_±
, 
°r2‚
, 
¨g
) < 0)

310 
d⁄e
;

312 
ªtvÆ
 = 0;

313 
d⁄e
:

314  
ªtvÆ
;

315 
	}
}

339 
	$˛igí_ex∑ndv_°r2‚
(
∑r£_åì
 
±
,

340 
ex∑ndv_°r2‚_t
 *
°r2‚
,

341 *
¨g
)

343 
ªtvÆ
 = -1;

344 
cg_obj
 *
co
;

345 *
ˇŒback_îr
 = 
NULL
;

346 
i
;

348 
i
=0; i<
±
.
±_Àn
; i++){

349 i‡((
co
 = 
±
.
±_vec
[
i
]Ë!
NULL
){

350 i‡(
co
->
co_ex∑nd_‚_°r
 !
NULL
 && co->
co_ex∑ndv_‚
 == NULL){

352 
co
->
co_ex∑ndv_‚
 = 
	`°r2‚
(co->
co_ex∑nd_‚_°r
, 
¨g
, &
ˇŒback_îr
);

353 i‡(
ˇŒback_îr
 !
NULL
){

354 
	`Ârötf
(
°dîr
, "%s:Érror: No such function: %s\n",

355 
__FUNCTION__
, 
co
->
co_ex∑nd_‚_°r
);

356 
d⁄e
;

360 i‡(
	`˛igí_ex∑ndv_°r2‚
(
co
->
co_±
, 
°r2‚
, 
¨g
) < 0)

361 
d⁄e
;

364 
ªtvÆ
 = 0;

365 
d⁄e
:

366  
ªtvÆ
;

367 
	}
}

376 
	$˛igí_å™¶©e_°r2‚
(
∑r£_åì
 
±
,

377 
å™¶©e_°r2‚_t
 *
°r2‚
,

378 *
¨g
)

380 
ªtvÆ
 = -1;

381 
cg_obj
 *
co
;

382 *
ˇŒback_îr
 = 
NULL
;

383 
i
;

385 
i
=0; i<
±
.
±_Àn
; i++){

386 i‡((
co
 = 
±
.
±_vec
[
i
]Ë!
NULL
){

387 i‡(
co
->
co_å™¶©e_‚_°r
 !
NULL
 && co->
co_å™¶©e_‚
 == NULL){

389 
co
->
co_å™¶©e_‚
 = 
	`°r2‚
(co->
co_å™¶©e_‚_°r
, 
¨g
, &
ˇŒback_îr
);

390 i‡(
ˇŒback_îr
 !
NULL
){

391 
	`Ârötf
(
°dîr
, "%s:Érror: No such function: %s\n",

392 
__FUNCTION__
, 
co
->
co_å™¶©e_‚_°r
);

393 
d⁄e
;

397 i‡(
	`˛igí_å™¶©e_°r2‚
(
co
->
co_±
, 
°r2‚
, 
¨g
) < 0)

398 
d⁄e
;

401 
ªtvÆ
 = 0;

402 
d⁄e
:

403  
ªtvÆ
;

404 
	}
}

	@cligen-master/cligen_syntax.h

35 #i‚de‡
_CLIGEN_SYNTAX_H_


36 
	#_CLIGEN_SYNTAX_H_


	)

50 
	gcg_‚°y≥_t
 *(
	tcg_°r2‚_t
)(*
	t°r
, *
	t¨g
, **
	tîr
);

53 
	gcgv_‚°y≥_t
 *(
	tcgv_°r2‚_t
)(*
	t°r
, *
	t¨g
, **
	tîr
);

56 
	gex∑ndv_cb
 *(
	tex∑ndv_°r2‚_t
)(*
	t°r
, *
	t¨g
, **
	tîr
);

59 
	gå™¶©e_cb_t
 *(
	tå™¶©e_°r2‚_t
)(*
	t°r
, *
	t¨g
, **
	tîr
);

65 
˛igí_∑r£_°r
(
˛igí_h™dÀ
 
h
,

66 *
°r
,

67 *
«me
,

68 
∑r£_åì
 *
±
,

69 
cvec
 *
globÆs
);

71 
˛igí_∑r£_fûe
(
˛igí_h™dÀ
 
h
,

72 
FILE
 *
f
,

73 *
«me
,

74 
∑r£_åì
 *
obsﬁëe
,

75 
cvec
 *
globÆs
);

77 
˛igí_∑r£_löe
(
˛igí_h™dÀ
 
h
,

78 
löíum
,

79 
cg_obj
 *
co_t›
,

80 *
fûíame
,

81 *
°rög
,

82 *
ˇŒback_°r
,

83 
cg_‚°y≥_t
 *
ˇŒback
,

84 
cg_v¨
 *
¨g
,

85 
hide
);

87 
˛igí_ˇŒback_°r2‚
(
∑r£_åì
, 
cg_°r2‚_t
 *
°r2‚
, *
¨g
);

88 
˛igí_ˇŒbackv_°r2‚
(
∑r£_åì
 
±
, 
cgv_°r2‚_t
 *
°r2‚
, *
¨g
);

89 
˛igí_ex∑ndv_°r2‚
(
∑r£_åì
 
±
, 
ex∑ndv_°r2‚_t
 *
°r2‚
, *
¨g
);

90 
˛igí_å™¶©e_°r2‚
(
∑r£_åì
 
±
, 
å™¶©e_°r2‚_t
 *
°r2‚
, *
¨g
);

91 
˛igí_∑r£_debug
(
d
);

	@cligen-master/cligen_tutorial.c

37 
	~<°dio.h
>

38 
	~<°dlib.h
>

39 
	~<°rög.h
>

40 
	~<î∫o.h
>

41 
	~<√töë/ö.h
>

43 
	~<˛igí/˛igí.h
>

48 
	$hñlo
(
˛igí_h™dÀ
 
h
, 
cvec
 *
cvv
, cve¯*
¨gv
)

50 
cg_v¨
 *
cv
;

52 
cv
 = 
	`cvec_i
(
¨gv
, 0);

53 
	`¥ötf
("%s\n", 
	`cv_°rög_gë
(
cv
));

55 
	}
}

60 
	$cb
(
˛igí_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
)

62 
i
=1;

63 
cg_v¨
 *
cv
;

64 
buf
[64];

66 
	`Ârötf
(
°dîr
, "variables:\n");

67 
cv
 = 
NULL
;

68 (
cv
 = 
	`cvec_óch1
(
v¨s
, cv)Ë!
NULL
) {

69 
	`cv2°r
(
cv
, 
buf
, (buf)-1);

70 
	`Ârötf
(
°dîr
, "\t%dÇame:%sÅype:%s value:%s\n",

71 
i
,

72 
	`cv_«me_gë
(
cv
),

73 
	`cv_ty≥2°r
(
	`cv_ty≥_gë
(
cv
)),

74 
buf


78 
cv
 = 
NULL
;

79 
i
=0;

80 i‡(
¨gv
)

81 (
cv
 = 
	`cvec_óch
(
¨gv
, cv)Ë!
NULL
) {

82 
	`cv2°r
(
cv
, 
buf
, (buf)-1);

83 
	`Ârötf
(
°dîr
, "¨g %d: %s\n", 
i
++, 
buf
);

86 
	}
}

91 
	$Àâîs
(
˛igí_h™dÀ
 
h
, 
cvec
 *
cvv
, cve¯*
¨gv
)

93 *
°r
;

94 
cg_v¨
 *
cv
;

96 i‡((
°r
 = 
	`cvec_föd_°r
(
cvv
, "ˇ")Ë!
NULL
)

97 
	`¥ötf
("%s\n", 
°r
);

98 i‡((
cv
 = 
	`cvec_föd
(
cvv
, "öt")Ë!
NULL
)

99 
	`¥ötf
("%d\n", 
	`cv_öt32_gë
(
cv
));

100 i‡((
°r
 = 
	`cvec_föd_°r
(
cvv
, "cb")Ë!
NULL
)

101 
	`¥ötf
("%s\n", 
°r
);

102 i‡((
°r
 = 
	`cvec_föd_°r
(
cvv
, "dd")Ë!
NULL
)

103 
	`¥ötf
("%s\n", 
°r
);

104 i‡((
°r
 = 
	`cvec_föd_°r
(
cvv
, "ì")Ë!
NULL
)

105 
	`¥ötf
("%s\n", 
°r
);

107 
	}
}

113 
	$£¸ë
(
˛igí_h™dÀ
 
h
, 
cvec
 *
cvv
, cve¯*
¨gv
)

115 
cg_v¨
 *
cv
;

117 
cv
 = 
	`cvec_i
(
¨gv
, 0);

118 
	`¥ötf
("Thi†i†®hiddí comm™d: %s\n", 
	`cv_°rög_gë
(
cv
));

120 
	}
}

126 
	$£çrom±
(
˛igí_h™dÀ
 
h
, 
cvec
 *
cvv
, cve¯*
¨gv
)

128 *
°r
;

130 i‡((
°r
 = 
	`cvec_föd_°r
(
cvv
, "√w")Ë!
NULL
)

131 
	`˛igí_¥om±_£t
(
h
, 
°r
);

133 
	}
}

138 
	$quô
(
˛igí_h™dÀ
 
h
, 
cvec
 *
cvv
, cve¯*
¨gv
)

140 
	`˛igí_exôög_£t
(
h
, 1);

142 
	}
}

147 
	$ch™gëªe
(
˛igí_h™dÀ
 
h
, 
cvec
 *
cvv
, cve¯*
¨gv
)

149 
cg_v¨
 *
cv
;

150 *
åì«me
;

152 
cv
 = 
	`cvec_i
(
¨gv
, 0);

153 
åì«me
 = 
	`cv_°rög_gë
(
cv
);

154  
	`˛igí_åì_a˘ive_£t
(
h
, 
åì«me
);

155 
	}
}

160 
	$unknown
(
˛igí_h™dÀ
 
h
, 
cvec
 *
cvv
, cve¯*
¨gv
)

162 
cg_v¨
 *
cv
 = 
	`cvec_i
(
cvv
, 0);

164 
	`Ârötf
(
°dîr
, "Thêcomm™d ha†nÿassig√d cÆlback: %s\n", 
	`cv_°rög_gë
(
cv
));

166 
	}
}

172 
cgv_‚°y≥_t
 *

173 
	$°r2‚
(*
«me
, *
¨g
, **
îr‹
)

175 *
îr‹
 = 
NULL
;

176 i‡(
	`°rcmp
(
«me
, "hello") == 0)

177  
hñlo
;

178 i‡(
	`°rcmp
(
«me
, "cb") == 0)

179  
cb
;

180 i‡(
	`°rcmp
(
«me
, "add") == 0)

181  
cb
;

182 i‡(
	`°rcmp
(
«me
, "del") == 0)

183  
cb
;

184 i‡(
	`°rcmp
(
«me
, "letters") == 0)

185  
Àâîs
;

186 i‡(
	`°rcmp
(
«me
, "secret") == 0)

187  
£¸ë
;

188 i‡(
	`°rcmp
(
«me
, "setprompt") == 0)

189  
£çrom±
;

190 i‡(
	`°rcmp
(
«me
, "quit") == 0)

191  
quô
;

192 i‡(
	`°rcmp
(
«me
, "changetree") == 0)

193  
ch™gëªe
;

194  
unknown
;

195 
	}
}

205 
	$˛i_ex∑nd_cb
(
˛igí_h™dÀ
 
h
,

206 *
‚_°r
,

207 
cvec
 *
cvv
,

208 
cvec
 *
¨gv
,

209 
cvec
 *
comm™ds
,

210 
cvec
 *
hñ±exts
)

212 
	`cvec_add_°rög
(
comm™ds
, 
NULL
, "eth0");

213 
	`cvec_add_°rög
(
comm™ds
, 
NULL
, "eth1");

214 
	`cvec_add_°rög
(
hñ±exts
, 
NULL
, "Interface A");

215 
	`cvec_add_°rög
(
hñ±exts
, 
NULL
, "Interface B");

217 
	}
}

221 
ex∑ndv_cb
 *

222 
	$°r2‚_exp
(*
«me
, *
¨g
, **
îr‹
)

224  
˛i_ex∑nd_cb
;

225 
	}
}

231 
	$öc°r
(
˛igí_h™dÀ
 
h
,

232 
cg_v¨
 *
cv
)

234 *
°r
;

235 
i
;

237 i‡(
	`cv_ty≥_gë
(
cv
Ë!
CGV_STRING
)

239 
°r
 = 
	`cv_°rög_gë
(
cv
);

240 
i
=0; i<
	`°æí
(
°r
); i++)

241 
°r
[
i
]++;

243 
	}
}

249 
å™¶©e_cb_t
 *

250 
	$°r2‚_å™s
(*
«me
,

251 *
¨g
,

252 **
îr‹
)

254 i‡(
	`°rcmp
(
«me
, "incstr") == 0)

255  
öc°r
;

256  
NULL
;

257 
	}
}

263 
	$ußge
(*
¨gv
)

265 
	`Ârötf
(
°dîr
, "Ußge: %†[-h][-‡<fûíame>]\n", 
¨gv
);

266 
	`exô
(0);

267 
	}
}

271 
	$maö
(
¨gc
, *
¨gv
[])

273 
˛igí_h™dÀ
 
h
;

274 
ªtvÆ
 = -1;

275 
∑r£_åì
 *
±
;

276 
FILE
 *
f
 = 
°dö
;

277 *
¨gv0
 = 
¨gv
[0];

278 *
fûíame
=
NULL
;

279 
cvec
 *
globÆs
;

280 *
°r
;

282 
¨gv
++;
¨gc
--;

283 ;(
¨gc
>0)&& *
¨gv
;árgc--,árgv++){

284 i‡(**
¨gv
 != '-')

286 (*
¨gv
)++;

287 i‡(
	`°æí
(*
¨gv
)==0)

288 
	`ußge
(
¨gv0
);

289 **
¨gv
) {

291 
	`ußge
(
¨gv0
);

294 
¨gc
--;
¨gv
++;

295 
fûíame
 = *
¨gv
;

296 i‡((
f
 = 
	`f›í
(
fûíame
, "r")Ë=
NULL
){

297 
	`Ârötf
(
°dîr
, "f›í %s: %s\n", 
fûíame
, 
	`°ªº‹
(
î∫o
));

298 
	`exô
(1);

302 
	`ußge
(
¨gv0
);

306 i‡((
h
 = 
	`˛igí_öô
()Ë=
NULL
)

307 
d⁄e
;

308 i‡((
globÆs
 = 
	`cvec_√w
(0)Ë=
NULL
)

309 
d⁄e
;

310 i‡(
	`˛igí_∑r£_fûe
(
h
, 
f
, 
fûíame
, 
NULL
, 
globÆs
) < 0)

311 
d⁄e
;

312 
±
 = 
NULL
;

313 (
±
 = 
	`˛igí_åì_óch
(
h
,Öt)Ë!
NULL
) {

314 i‡(
	`˛igí_ˇŒbackv_°r2‚
(*
±
, 
°r2‚
, 
NULL
) < 0)

315 
d⁄e
;

316 i‡(
	`˛igí_ex∑ndv_°r2‚
(*
±
, 
°r2‚_exp
, 
NULL
) < 0)

317 
d⁄e
;

318 i‡(
	`˛igí_å™¶©e_°r2‚
(*
±
, 
°r2‚_å™s
, 
NULL
) < 0)

319 
d⁄e
;

321 i‡((
°r
 = 
	`cvec_föd_°r
(
globÆs
, "¥om±")Ë!
NULL
)

322 
	`˛igí_¥om±_£t
(
h
, 
°r
);

323 i‡((
°r
 = 
	`cvec_föd_°r
(
globÆs
, "commít")Ë!
NULL
)

324 
	`˛igí_commít_£t
(
h
, *
°r
);

325 i‡((
°r
 = 
	`cvec_föd_°r
(
globÆs
, "èbmode")Ë!
NULL
)

326 
	`˛igí_èbmode_£t
(
h
, 
	`°rcmp
(
°r
,"long") == 0);

327 
	`cvec_‰ì
(
globÆs
);

328 
±
 = 
NULL
;

329 (
±
 = 
	`˛igí_åì_óch
(
h
,Öt)Ë!
NULL
) {

330 
	`¥ötf
("Syntax:\n");

331 
	`˛igí_¥öt
(
°dout
, *
±
, 0);

333 
	`fÊush
(
°dout
);

335 i‡(
	`˛igí_lo›
(
h
) < 0)

336 
d⁄e
;

337 
ªtvÆ
 = 0;

338 
d⁄e
:

339 
	`f˛o£
(
f
);

340 i‡(
h
)

341 
	`˛igí_exô
(
h
);

342  
ªtvÆ
;

343 
	}
}

	@cligen-master/cligen_util.c

37 
	~"˛igí_c⁄fig.h
"

39 
	~<°dio.h
>

40 
	~<°dlib.h
>

41 
	~<sys/ty≥s.h
>

42 
	~<as£π.h
>

43 
	~<°rög.h
>

44 
	~<uni°d.h
>

45 
	~<î∫o.h
>

46 
	~<sig«l.h
>

47 
	~<sys/ty≥s.h
>

48 
	~<sys/sockë.h
>

49 
	~<√töë/ö.h
>

50 
	~<√t/if.h
>

52 
	~"˛igí_buf.h
"

53 
	~"˛igí_v¨.h
"

54 
	~"˛igí_cvec.h
"

55 
	~"˛igí_gí.h
"

56 
	~"˛igí_h™dÀ.h
"

57 
	~"˛igí_ªad.h
"

58 
	~"˛igí_utû.h
"

71 
	$cvec_add_°rög
(
cvec
 *
cvv
,

72 *
«me
,

73 *
vÆ
)

75 
cg_v¨
 *
cv
;

76 
ªtvÆ
 = -1;

78 i‡((
cv
 = 
	`cvec_add
(
cvv
, 
CGV_STRING
)Ë=
NULL
)

79 
d⁄e
;

80 i‡(
«me
)

81 
	`cv_«me_£t
(
cv
, 
«me
);

82 
	`cv_°rög_£t
(
cv
, 
vÆ
);

83 
ªtvÆ
 = 0;

84 
d⁄e
:

85  
ªtvÆ
;

86 
	}
}

95 
	$˛igí_lo›
(
˛igí_h™dÀ
 
h
)

97 
ªtvÆ
 = -1;

98 *
löe
;

99 
ˇŒback_ªt
 = 0;

100 
ªt
;

103 !
	`˛igí_exôög
(
h
)){

104 
ªt
 = 
	`˛úód_evÆ
(
h
, &
löe
, &
ˇŒback_ªt
);

105 
ªt
){

106 
CG_EOF
:

107 
d⁄e
;

109 
CG_ERROR
:

110 
	`¥ötf
("CLIÑeadÉrror\n");

111 
d⁄e
;

112 
CG_NOMATCH
:

113 
	`¥ötf
("CLI sy¡axÉº‹ in: \"%s\": %s\n", 
löe
, 
	`˛igí_nom©ch
(
h
));

115 
CG_MATCH
:

116 i‡(
ˇŒback_ªt
 < 0)

117 
	`¥ötf
("CLI callbackÉrror\n");

120 
	`¥ötf
("Ambigous command\n");

124 
ªtvÆ
 = 0;

125 
d⁄e
:

126  
ªtvÆ
;

127 
	}
}

	@cligen-master/cligen_util.h

39 #i‚de‡
_CLIGEN_UTIL_H_


40 
	#_CLIGEN_UTIL_H_


	)

45 
cvec_add_°rög
(
cvec
 *
cvv
, *
«me
, *
vÆ
);

47 
˛igí_lo›
(
˛igí_h™dÀ
 
h
);

	@cligen-master/cligen_var.c

39 
	~"˛igí_c⁄fig.h
"

41 
	~<°dio.h
>

42 
	~<°dlib.h
>

43 
	~<°döt.h
>

44 
	~<limôs.h
>

45 
	~<öây≥s.h
>

46 
	~<uni°d.h
>

47 
	~<sys/ty≥s.h
>

48 
	~<time.h
>

49 
	~<sys/time.h
>

50 
	~<sys/sockë.h
>

51 
	~<√töë/ö.h
>

52 
	~<¨∑/öë.h
>

53 
	~<as£π.h
>

54 
	~<°rög.h
>

55 
	~<î∫o.h
>

56 
	~<m©h.h
>

57 #ifde‡
HAVE_REGEX_H


58 
	~<ªgex.h
>

61 
	~"˛igí_buf.h
"

62 
	~"˛igí_v¨.h
"

63 
	~"˛igí_cvec.h
"

64 
	~"˛igí_gí.h
"

65 
	~"˛igí_io.h
"

66 
	~"˛igí_m©ch.h
"

67 
	~"˛igí_cv.h
"

68 
	~"gëlöe.h
"

73 *
	gcg_uæ¥Ÿo°r
[] = {

74 
NULL
,

82 
NULL


90 
	$cv_«me_gë
(
cg_v¨
 *
cv
)

92  
cv
->
v¨_«me
;

93 
	}
}

103 
	$cv_«me_£t
(
cg_v¨
 *
cv
,

104 *
s0
)

106 *
s1
 = 
NULL
;

109 i‡(
s0
){

110 i‡((
s1
 = 
	`°rdup
(
s0
)Ë=
NULL
)

111  
NULL
;

113 i‡(
cv
->
v¨_«me
 !
NULL
)

114 
	`‰ì
(
cv
->
v¨_«me
);

115 
cv
->
v¨_«me
 = 
s1
;

116  
s1
;

117 
	}
}

123 
cv_ty≥


124 
	$cv_ty≥_gë
(
cg_v¨
 *
cv
)

126  
cv
->
v¨_ty≥
;

127 
	}
}

134 
cv_ty≥


135 
	$cv_ty≥_£t
(
cg_v¨
 *
cv
,

136 
cv_ty≥
 
x
)

138  (
cv
->
v¨_ty≥
 = 
x
);

139 
	}
}

146 
	$cv_c⁄°_gë
(
cg_v¨
 *
cv
)

148  
cv
->
v¨_c⁄°
;

149 
	}
}

158 
	$cv_c⁄°_£t
(
cg_v¨
 *
cv
,

159 
c
)

161  (
cv
->
v¨_c⁄°
 = 
c
);

162 
	}
}

168 
	$cv_Êag
(
cg_v¨
 *
cv
,

169 
mask
)

171  
cv
->
v¨_Êag
 & 
mask
;

172 
	}
}

178 
	$cv_Êag_˛r
(
cg_v¨
 *
cv
,

179 
mask
)

181  
cv
->
v¨_Êag
 ^
mask
;

182 
	}
}

188 
	$cv_Êag_£t
(
cg_v¨
 *
cv
,

189 
mask
)

191  
cv
->
v¨_Êag
 |
mask
;

192 
	}
}

198 
	$cv_vÆue_gë
(
cg_v¨
 *
cv
)

200  &
cv
->
u
;

201 
	}
}

207 
	$cv_boﬁ_gë
(
cg_v¨
 *
cv
)

209  ((
cv
)->
u
.
v¨u_boﬁ
);

210 
	}
}

216 
	$cv_boﬁ_£t
(
cg_v¨
 *
cv
,

217 
x
)

219  (
cv
->
u
.
v¨u_boﬁ
 = 
x
);

220 
	}
}

225 
öt8_t


226 
	$cv_öt8_gë
(
cg_v¨
 *
cv
)

228  ((
cv
)->
u
.
v¨u_öt8
);

229 
	}
}

234 
öt8_t


235 
	$cv_öt8_£t
(
cg_v¨
 *
cv
,

236 
öt8_t
 
x
)

238  (
cv
->
u
.
v¨u_öt8
 = 
x
);

239 
	}
}

244 
öt16_t


245 
	$cv_öt16_gë
(
cg_v¨
 *
cv
)

247  ((
cv
)->
u
.
v¨u_öt16
);

248 
	}
}

253 
öt16_t


254 
	$cv_öt16_£t
(
cg_v¨
 *
cv
,

255 
öt16_t
 
x
)

257  (
cv
->
u
.
v¨u_öt16
 = 
x
);

258 
	}
}

263 
öt32_t


264 
	$cv_öt32_gë
(
cg_v¨
 *
cv
)

266  ((
cv
)->
u
.
v¨u_öt32
);

267 
	}
}

272 
öt32_t


273 
	$cv_öt32_£t
(
cg_v¨
 *
cv
,

274 
öt32_t
 
x
)

276  (
cv
->
u
.
v¨u_öt32
 = 
x
);

277 
	}
}

282 
öt64_t


283 
	$cv_öt64_gë
(
cg_v¨
 *
cv
)

285  ((
cv
)->
u
.
v¨u_öt64
);

286 
	}
}

291 
öt64_t


292 
	$cv_öt64_£t
(
cg_v¨
 *
cv
,

293 
öt64_t
 
x
)

295  (
cv
->
u
.
v¨u_öt64
 = 
x
);

296 
	}
}

301 
uöt8_t


302 
	$cv_uöt8_gë
(
cg_v¨
 *
cv
)

304  ((
cv
)->
u
.
v¨u_uöt8
);

305 
	}
}

310 
uöt8_t


311 
	$cv_uöt8_£t
(
cg_v¨
 *
cv
,

312 
uöt8_t
 
x
)

314  (
cv
->
u
.
v¨u_uöt8
 = 
x
);

315 
	}
}

320 
uöt16_t


321 
	$cv_uöt16_gë
(
cg_v¨
 *
cv
)

323  ((
cv
)->
u
.
v¨u_uöt16
);

324 
	}
}

329 
uöt16_t


330 
	$cv_uöt16_£t
(
cg_v¨
 *
cv
,

331 
uöt16_t
 
x
)

333  (
cv
->
u
.
v¨u_uöt16
 = 
x
);

334 
	}
}

339 
uöt32_t


340 
	$cv_uöt32_gë
(
cg_v¨
 *
cv
)

342  ((
cv
)->
u
.
v¨u_uöt32
);

343 
	}
}

348 
uöt32_t


349 
	$cv_uöt32_£t
(
cg_v¨
 *
cv
,

350 
uöt32_t
 
x
)

352  (
cv
->
u
.
v¨u_uöt32
 = 
x
);

353 
	}
}

358 
uöt64_t


359 
	$cv_uöt64_gë
(
cg_v¨
 *
cv
)

361  ((
cv
)->
u
.
v¨u_uöt64
);

362 
	}
}

367 
uöt64_t


368 
	$cv_uöt64_£t
(
cg_v¨
 *
cv
,

369 
uöt64_t
 
x
)

371  (
cv
->
u
.
v¨u_uöt64
 = 
x
);

372 
	}
}

377 
uöt8_t


378 
	$cv_dec64_n_gë
(
cg_v¨
 *
cv
)

380  ((
cv
)->
v¨_dec64_n
);

381 
	}
}

387 
uöt8_t


388 
	$cv_dec64_n_£t
(
cg_v¨
 *
cv
,

389 
uöt8_t
 
x
)

391  (
cv
->
v¨_dec64_n
 = 
x
);

392 
	}
}

397 
öt64_t


398 
	$cv_dec64_i_gë
(
cg_v¨
 *
cv
)

400  ((
cv
)->
v¨_dec64_i
);

401 
	}
}

406 
öt64_t


407 
	$cv_dec64_i_£t
(
cg_v¨
 *
cv
,

408 
öt64_t
 
x
)

410  (
cv
->
v¨_dec64_i
 = 
x
);

411 
	}
}

419 
	$cv_°rög_gë
(
cg_v¨
 *
cv
)

421  ((
cv
)->
u
.
v¨u_°rög
);

422 
	}
}

428 
	$cv_°rög_£t
(
cg_v¨
 *
cv
,

429 *
s0
)

431 *
s1
 = 
NULL
;

434 i‡(
s0
){

435 i‡((
s1
 = 
	`°rdup
(
s0
)Ë=
NULL
)

436  
NULL
;

438 i‡(
cv
->
u
.
v¨u_°rög
 !
NULL
)

439 
	`‰ì
(
cv
->
u
.
v¨u_°rög
);

440 
cv
->
u
.
v¨u_°rög
 = 
s1
;

441  
s1
;

442 
	}
}

447 
ö_addr
 *

448 
	$cv_ùv4addr_gë
(
cg_v¨
 *
cv
)

450  &
cv
->
u
.
v¨u_ùv4addr
.
v¨ùv4_ùv4addr
;

451 
	}
}

456 
uöt8_t


457 
	$cv_ùv4maskÀn_gë
(
cg_v¨
 *
cv
)

459  
cv
->
u
.
v¨u_ùv4addr
.
v¨ùv4_maskÀn
;

460 
	}
}

465 
ö6_addr
 *

466 
	$cv_ùv6addr_gë
(
cg_v¨
 *
cv
)

468  &
cv
->
u
.
v¨u_ùv6addr
.
v¨ùv6_ùv6addr
;

469 
	}
}

474 
uöt8_t


475 
	$cv_ùv6maskÀn_gë
(
cg_v¨
 *
cv
)

477  
cv
->
u
.
v¨u_ùv6addr
.
v¨ùv6_maskÀn
;

478 
	}
}

486 
	$cv_mac_gë
(
cg_v¨
 *
cv
)

488  
cv
->
u
.
v¨u_maˇddr
;

489 
	}
}

497 
	$cv_uuid_gë
(
cg_v¨
 *
cv
)

499  
cv
->
u
.
v¨u_uuid
;

500 
	}
}

506 
	$cv_uuid_£t
(
cg_v¨
 *
cv
,

507 *
u
)

509 
	`mem˝y
((*)&
cv
->
u
.
v¨u_uuid
, u, 16);

510  
cv
->
u
.
v¨u_uuid
;

511 
	}
}

516 
timevÆ


517 
	$cv_time_gë
(
cg_v¨
 *
cv
)

519  
cv
->
u
.
v¨u_time
;

520 
	}
}

526 
timevÆ


527 
	$cv_time_£t
(
cg_v¨
 *
cv
,

528 
timevÆ
 
t
)

530 
cv
->
u
.
v¨u_time
 = 
t
;

531  
t
;

532 
	}
}

540 
	$cv_uæ¥Ÿo_gë
(
cg_v¨
 *
cv
)

542  (
cv
)->
u
.
v¨u_uæ
.
v¨uæ_¥Ÿo
;

543 
	}
}

550 
	$cv_uæ¥Ÿo_£t
(
cg_v¨
 *
cv
,

551 *
s0
)

553 *
s1
 = 
NULL
;

556 i‡(
s0
){

557 i‡((
s1
 = 
	`°rdup
(
s0
)Ë=
NULL
)

558  
NULL
;

560 i‡(
cv
->
u
.
v¨u_uæ
.
v¨uæ_¥Ÿo
 !
NULL
)

561 
	`‰ì
(
cv
->
u
.
v¨u_uæ
.
v¨uæ_¥Ÿo
);

562 
cv
->
u
.
v¨u_uæ
.
v¨uæ_¥Ÿo
 = 
s1
;

563  
s1
;

564 
	}
}

572 
	$cv_uæaddr_gë
(
cg_v¨
 *
cv
)

574  (
cv
)->
u
.
v¨u_uæ
.
v¨uæ_addr
;

575 
	}
}

582 
	$cv_uæaddr_£t
(
cg_v¨
 *
cv
,

583 *
s0
)

585 *
s1
 = 
NULL
;

588 i‡(
s0
){

589 i‡((
s1
 = 
	`°rdup
(
s0
)Ë=
NULL
)

590  
NULL
;

592 i‡(
cv
->
u
.
v¨u_uæ
.
v¨uæ_addr
 !
NULL
)

593 
	`‰ì
(
cv
->
u
.
v¨u_uæ
.
v¨uæ_addr
);

594 
cv
->
u
.
v¨u_uæ
.
v¨uæ_addr
 = 
s1
;

595  
s1
;

596 
	}
}

604 
	$cv_uæ∑th_gë
(
cg_v¨
 *
cv
)

606  (
cv
)->
u
.
v¨u_uæ
.
v¨uæ_∑th
;

607 
	}
}

614 
	$cv_uæ∑th_£t
(
cg_v¨
 *
cv
,

615 *
s0
)

617 *
s1
 = 
NULL
;

620 i‡(
s0
){

621 i‡((
s1
 = 
	`°rdup
(
s0
)Ë=
NULL
)

622  
NULL
;

624 i‡(
cv
->
u
.
v¨u_uæ
.
v¨uæ_∑th
 !
NULL
)

625 
	`‰ì
(
cv
->
u
.
v¨u_uæ
.
v¨uæ_∑th
);

626 
cv
->
u
.
v¨u_uæ
.
v¨uæ_∑th
 = 
s1
;

627  
s1
;

628 
	}
}

636 
	$cv_uæu£r_gë
(
cg_v¨
 *
cv
)

638  (
cv
)->
u
.
v¨u_uæ
.
v¨uæ_u£r
;

639 
	}
}

646 
	$cv_uæu£r_£t
(
cg_v¨
 *
cv
,

647 *
s0
)

649 *
s1
 = 
NULL
;

652 i‡(
s0
){

653 i‡((
s1
 = 
	`°rdup
(
s0
)Ë=
NULL
)

654  
NULL
;

656 i‡(
cv
->
u
.
v¨u_uæ
.
v¨uæ_u£r
 !
NULL
)

657 
	`‰ì
(
cv
->
u
.
v¨u_uæ
.
v¨uæ_u£r
);

658 
cv
->
u
.
v¨u_uæ
.
v¨uæ_u£r
 = 
s1
;

659  
s1
;

660 
	}
}

668 
	$cv_uæ∑sswd_gë
(
cg_v¨
 *
cv
)

670  (
cv
)->
u
.
v¨u_uæ
.
v¨uæ_∑sswd
;

671 
	}
}

678 
	$cv_uæ∑sswd_£t
(
cg_v¨
 *
cv
,

679 *
s0
)

681 *
s1
 = 
NULL
;

684 i‡(
s0
){

685 i‡((
s1
 = 
	`°rdup
(
s0
)Ë=
NULL
)

686  
NULL
;

688 i‡(
cv
->
u
.
v¨u_uæ
.
v¨uæ_∑sswd
 !
NULL
)

689 
	`‰ì
(
cv
->
u
.
v¨u_uæ
.
v¨uæ_∑sswd
);

690 
cv
->
u
.
v¨u_uæ
.
v¨uæ_∑sswd
 = 
s1
;

691  
s1
;

692 
	}
}

704 
	$∑r£_öt8
(*
°r
,

705 
öt8_t
 *
vÆ
,

706 **
ªas⁄
)

708 
öt64_t
 
i
;

709 
ªtvÆ
;

711 i‡((
ªtvÆ
 = 
	`∑r£_öt64
(
°r
, &
i
, 
ªas⁄
)) != 1)

712 
d⁄e
;

713 i‡(
i
 > 127 || i < -128){

714 i‡(
ªas⁄
 !
NULL
)

715 i‡((*
ªas⁄
 = 
	`˛igí_ªas⁄
("%†i†ouào‡ønge—y≥ i†öt8)", 
°r
)Ë=
NULL
){

716 
ªtvÆ
 = -1;

717 
d⁄e
;

719 
ªtvÆ
 = 0;

720 
d⁄e
;

722 *
vÆ
 = (
öt8_t
)
i
;

723 
d⁄e
:

724  
ªtvÆ
;

725 
	}
}

736 
	$∑r£_öt16
(*
°r
,

737 
öt16_t
 *
vÆ
,

738 **
ªas⁄
)

740 
öt64_t
 
i
;

741 
ªtvÆ
;

743 i‡((
ªtvÆ
 = 
	`∑r£_öt64
(
°r
, &
i
, 
ªas⁄
)) != 1)

744 
d⁄e
;

745 i‡(
i
 > 32676 || i < -32768){

746 i‡(
ªas⁄
 !
NULL
)

747 i‡((*
ªas⁄
 = 
	`˛igí_ªas⁄
("%†i†ouào‡ønge—y≥ i†öt16)", 
°r
)Ë=
NULL
){

748 
ªtvÆ
 = -1;

749 
d⁄e
;

751 
ªtvÆ
 = 0;

752 
d⁄e
;

754 *
vÆ
 = (
öt16_t
)
i
;

755 
d⁄e
:

756  
ªtvÆ
;

757 
	}
}

768 
	$∑r£_öt32
(*
°r
,

769 
öt32_t
 *
vÆ
,

770 **
ªas⁄
)

772 
öt64_t
 
i
;

773 
ªtvÆ
;

775 i‡((
ªtvÆ
 = 
	`∑r£_öt64
(
°r
, &
i
, 
ªas⁄
)) != 1)

776 
d⁄e
;

777 i‡(
i
 > 
INT_MAX
 || i < 
INT_MIN
){

778 i‡(
ªas⁄
 !
NULL
)

779 i‡((*
ªas⁄
 = 
	`˛igí_ªas⁄
("%†i†ouào‡ønge—y≥ i†öt32)", 
°r
)Ë=
NULL
){

780 
ªtvÆ
 = -1;

781 
d⁄e
;

783 
ªtvÆ
 = 0;

784 
d⁄e
;

786 *
vÆ
 = (
öt32_t
)
i
;

787 
d⁄e
:

788  
ªtvÆ
;

789 
	}
}

804 
	$∑r£_öt64_ba£
(*
°r
,

805 
ba£
,

806 
öt64_t
 *
vÆ
,

807 **
ªas⁄
)

809 
öt64_t
 
i
;

810 *
ï
;

811 
ªtvÆ
 = -1;

813 
î∫o
 = 0;

814 
i
 = 
	`°πﬁl
(
°r
, &
ï
, 
ba£
);

815 i‡(
°r
[0] ='\0' || *
ï
 != '\0'){

816 i‡(
ªas⁄
 !
NULL
)

817 i‡((*
ªas⁄
 = 
	`˛igí_ªas⁄
("'%s' i†nŸáÇumbî", 
°r
)Ë=
NULL
){

818 
ªtvÆ
 = -1;

819 
d⁄e
;

821 
ªtvÆ
 = 0;

822 
d⁄e
;

824 i‡(
î∫o
 != 0){

825 i‡((
i
 =
INT64_MIN
 || i =
INT64_MAX
Ë&& 
î∫o
 =
ERANGE
){

826 
î∫o
 = 0;

827 i‡(
ªas⁄
 !
NULL
)

828 i‡((*
ªas⁄
 = 
	`˛igí_ªas⁄
("%†i†ouào‡øngê—y≥ i†öt64)", 
°r
)Ë=
NULL
){

829 
ªtvÆ
 = -1;

830 
d⁄e
;

832 
ªtvÆ
 = 0;

833 
d⁄e
;

836 i‡((*
ªas⁄
 = 
	`˛igí_ªas⁄
("%s: %s", 
°r
, 
	`°ªº‹
(
î∫o
))Ë=
NULL
){

837 
î∫o
 = 0;

838 
ªtvÆ
 = -1;

839 
d⁄e
;

842 
î∫o
 = 0;

844 *
vÆ
 = 
i
;

845 
ªtvÆ
 = 1;

846 
d⁄e
:

847  
ªtvÆ
;

848 
	}
}

859 
	$∑r£_öt64
(*
°r
,

860 
öt64_t
 *
vÆ
,

861 **
ªas⁄
)

863  
	`∑r£_öt64_ba£
(
°r
, 0, 
vÆ
, 
ªas⁄
);

864 
	}
}

876 
	$∑r£_uöt8
(*
°r
,

877 
uöt8_t
 *
vÆ
,

878 **
ªas⁄
)

880 
uöt64_t
 
i
;

881 
ªtvÆ
;

883 i‡((
ªtvÆ
 = 
	`∑r£_uöt64
(
°r
, &
i
, 
ªas⁄
)) != 1)

884 
d⁄e
;

885 i‡(
i
 > 255){

886 i‡(
ªas⁄
 !
NULL
)

887 i‡((*
ªas⁄
 = 
	`˛igí_ªas⁄
("%†i†ouào‡ønge—y≥ i†uöt8)", 
°r
)Ë=
NULL
){

888 
ªtvÆ
 = -1;

889 
d⁄e
;

891 
ªtvÆ
 = 0;

892 
d⁄e
;

894 *
vÆ
 = (
uöt8_t
)
i
;

895 
d⁄e
:

896  
ªtvÆ
;

897 
	}
}

908 
	$∑r£_uöt16
(*
°r
,

909 
uöt16_t
 *
vÆ
,

910 **
ªas⁄
)

912 
uöt64_t
 
i
;

913 
ªtvÆ
;

915 i‡((
ªtvÆ
 = 
	`∑r£_uöt64
(
°r
, &
i
, 
ªas⁄
)) != 1)

916 
d⁄e
;

917 i‡(
i
 > 65535){

918 i‡(
ªas⁄
 !
NULL
)

919 i‡((*
ªas⁄
 = 
	`˛igí_ªas⁄
("%†i†ouào‡ønge—y≥ i†uöt16)", 
°r
)Ë=
NULL
){

920 
ªtvÆ
 = -1;

921 
d⁄e
;

923 
ªtvÆ
 = 0;

924 
d⁄e
;

926 *
vÆ
 = (
uöt16_t
)
i
;

927 
d⁄e
:

928  
ªtvÆ
;

929 
	}
}

940 
	$∑r£_uöt32
(*
°r
,

941 
uöt32_t
 *
vÆ
,

942 **
ªas⁄
)

944 
uöt64_t
 
i
;

945 
ªtvÆ
;

947 i‡((
ªtvÆ
 = 
	`∑r£_uöt64
(
°r
, &
i
, 
ªas⁄
)) != 1)

948 
d⁄e
;

949 i‡(
i
 > 
UINT_MAX
){

950 i‡(
ªas⁄
 !
NULL
)

951 i‡((*
ªas⁄
 = 
	`˛igí_ªas⁄
("%†i†ouào‡ønge—y≥ i†uöt32)", 
°r
)Ë=
NULL
){

952 
ªtvÆ
 = -1;

953 
d⁄e
;

955 
ªtvÆ
 = 0;

956 
d⁄e
;

958 *
vÆ
 = (
uöt32_t
)
i
;

959 
d⁄e
:

960  
ªtvÆ
;

962 
	}
}

974 
	$∑r£_uöt64
(*
°r
,

975 
uöt64_t
 *
vÆ
,

976 **
ªas⁄
)

978 
uöt64_t
 
i
;

979 *
ï
;

980 
ªtvÆ
 = -1;

982 
î∫o
 = 0;

983 
i
 = 
	`°πouŒ
(
°r
, &
ï
, 0);

984 i‡(
°r
[0] ='\0' || *
ï
 != '\0'){

985 i‡(
ªas⁄
 !
NULL
)

986 i‡((*
ªas⁄
 = 
	`˛igí_ªas⁄
("'%s' i†nŸáÇumbî", 
°r
)Ë=
NULL
){

987 
ªtvÆ
 = -1;

988 
d⁄e
;

990 
ªtvÆ
 = 0;

991 
d⁄e
;

993 i‡(
î∫o
 != 0){

994 i‡(
i
 =
UINT64_MAX
 && 
î∫o
 =
ERANGE
){

995 i‡(
ªas⁄
 !
NULL
)

996 i‡((*
ªas⁄
 = 
	`˛igí_ªas⁄
("%†i†ouào‡øngê—y≥ i†uöt64)", 
°r
)Ë=
NULL
){

997 
ªtvÆ
 = -1;

998 
d⁄e
;

1000 
ªtvÆ
 = 0;

1001 
d⁄e
;

1004 i‡((*
ªas⁄
 = 
	`˛igí_ªas⁄
("%s: %s", 
°r
, 
	`°ªº‹
(
î∫o
))Ë=
NULL
){

1005 
ªtvÆ
 = -1;

1006 
d⁄e
;

1008 
ªtvÆ
 = 0;

1009 
d⁄e
;

1013 i‡(
	`°rchr
(
°r
, '-'Ë!
NULL
){

1014 i‡(
ªas⁄
 !
NULL
)

1015 i‡((*
ªas⁄
 = 
	`˛igí_ªas⁄
("%†i†ouào‡øngê—y≥ i†uöt64)", 
°r
)Ë=
NULL
){

1016 
ªtvÆ
 = -1;

1017 
d⁄e
;

1019 
ªtvÆ
 = 0;

1020 
d⁄e
;

1022 *
vÆ
 = 
i
;

1023 
ªtvÆ
 = 1;

1024 
d⁄e
:

1025  
ªtvÆ
;

1026 
	}
}

1038 
	$∑r£_dec64
(*
°r
,

1039 
uöt8_t
 
n
,

1040 
öt64_t
 *
dec64_i
,

1041 **
ªas⁄
)

1043 
ªtvÆ
 = 1;

1044 *
s0
 = 
NULL
;

1045 *
s1
;

1046 *
s2
;

1047 *
ss
 = 
NULL
;

1048 
Àn1
;

1049 
Àn2
 = 0;

1050 
i
;

1061 i‡(
n
<=0 ||Ç>18){

1062 i‡(
ªas⁄
 !
NULL
)

1063 i‡((*
ªas⁄
 = 
	`˛igí_ªas⁄
("%s: fø˘i⁄-digô=%d giví buàshould bêö i¡îvÆ [1:18]", 
__FUNCTION__
, 
n
)Ë=
NULL
){

1064 
d⁄e
;

1066 
ªtvÆ
 = 0;

1067 
d⁄e
;

1069 i‡((
s0
 = 
	`°rdup
(
°r
)Ë=
NULL
){

1070 
ªtvÆ
 = -1;

1071 
d⁄e
;

1073 
s2
 = 
s0
;

1074 
s1
 = 
	`°r£p
(&
s2
, ".");

1075 
Àn1
 = 
	`°æí
(
s1
);

1076 i‡((
ss
 = 
	`mÆloc
(
	`°æí
(
°r
)+
n
+2)Ë=
NULL
){

1077 
ªtvÆ
 = -1;

1078 
d⁄e
;

1080 
	`mem˝y
(
ss
, 
s1
, 
Àn1
);

1087 i‡(
s2
){

1088 
Àn2
 = 
	`°æí
(
s2
);

1089 i‡(
Àn2
 > 
n
){

1090 i‡(
ªas⁄
 !
NULL
)

1091 i‡((*
ªas⁄
 = 
	`˛igí_ªas⁄
("%†ha†%d fø˘i⁄-digô†buàmay o∆y havê%d", 
°r
, 
Àn2
, 
n
)Ë=
NULL
){

1092 
ªtvÆ
 = -1;

1093 
d⁄e
;

1095 
ªtvÆ
 = 0;

1096 
d⁄e
;

1098 
	`mem˝y
(
ss
+
Àn1
, 
s2
, 
Àn2
);

1103 
i
=
Àn1
+
Àn2
; i<Àn1+
n
; i++)

1104 
ss
[
i
] = '0';

1105 
ss
[
Àn1
+
n
] = '\0';

1107 i‡((
ªtvÆ
 = 
	`∑r£_öt64_ba£
(
ss
, 10, 
dec64_i
, 
ªas⁄
)) != 1)

1108 
d⁄e
;

1109 
d⁄e
:

1110 i‡(
s0
)

1111 
	`‰ì
(
s0
);

1112 i‡(
ss
)

1113 
	`‰ì
(
ss
);

1114  
ªtvÆ
;

1115 
	}
}

1126 
	$∑r£_boﬁ
(*
°r
,

1127 
uöt8_t
 *
vÆ
,

1128 **
ªas⁄
)

1130 
i
;

1131 
ªtvÆ
 = 1;

1133 i‡(
	`°rcmp
(
°r
, "true") == 0 || strcmp(str, "on") == 0)

1134 
i
 = 1;

1136 i‡(
	`°rcmp
(
°r
, "false") == 0 || strcmp(str, "off") == 0)

1137 
i
 = 0;

1139 i‡(
ªas⁄
)

1140 i‡((*
ªas⁄
 = 
	`˛igí_ªas⁄
("'%s' i†nŸá boﬁó¿vÆue", 
°r
)Ë=
NULL
){

1141 
ªtvÆ
 = -1;

1142 
d⁄e
;

1144 
ªtvÆ
 = 0;

1145 
d⁄e
;

1147 *
vÆ
 = 
i
;

1148 
d⁄e
:

1149  
ªtvÆ
;

1150 
	}
}

1161 
	$∑r£_ùv4addr
(*
°r
,

1162 
ö_addr
 *
vÆ
,

1163 **
ªas⁄
)

1165 
ªtvÆ
 = -1;

1167 i‡((
ªtvÆ
 = 
	`öë_±⁄
(
AF_INET
, 
°r
, 
vÆ
)) < 0)

1168 
d⁄e
;

1169 i‡(
ªtvÆ
 =0 && 
ªas⁄
)

1170 i‡((*
ªas⁄
 = 
	`˛igí_ªas⁄
("InvÆid IPv4áddªss")Ë=
NULL
)

1171 
ªtvÆ
 = -1;

1172 
d⁄e
:

1173  
ªtvÆ
;

1174 
	}
}

1185 
	$∑r£_ùv6addr
(*
°r
,

1186 
ö6_addr
 *
vÆ
,

1187 **
ªas⁄
)

1189 
ªtvÆ
 = -1;

1191 i‡((
ªtvÆ
 = 
	`öë_±⁄
(
AF_INET6
, 
°r
, 
vÆ
)) < 0)

1192 
d⁄e
;

1193 i‡(
ªtvÆ
 =0 && 
ªas⁄
)

1194 i‡((*
ªas⁄
 = 
	`˛igí_ªas⁄
("InvÆid IPv6áddªss")Ë=
NULL
)

1195 
ªtvÆ
 = -1;

1196 
d⁄e
:

1197  
ªtvÆ
;

1198 
	}
}

1205 
	#MACADDR_STRLEN
 17

	)

1207 
	$∑r£_maˇddr
(*
°r
,

1208 
addr
[6],

1209 **
ªas⁄
)

1211 
s
[
MACADDR_STRLEN
+1], *
s1
, *
s2
;

1212 
i
=0;

1213 
tmp
;

1214 
ªtvÆ
 = -1;

1216 i‡((
°r
 =
NULL
Ë|| 
	`°æí
(°rË> 
MACADDR_STRLEN
){

1217 
ªtvÆ
 = 0;

1218 i‡(
ªas⁄
 && (*ªas⁄ = 
	`˛igí_ªas⁄
("%s: InvÆid maˇddªss", 
°r
)Ë=
NULL
)

1219 
ªtvÆ
 = -1;

1220 
d⁄e
;

1222 
	`°∫˝y
(
s
, 
°r
, 
MACADDR_STRLEN
+1);

1223 
s2
 = 
s
;

1224 #ifde‡
HAVE_STRSEP


1225 (
s1
 = 
	`°r£p
(&
s2
, ":")Ë!
NULL
)

1227 (
s1
 = 
	`°πok
((
i
==0?
s2
:
NULL
),":")) != NULL)

1230 i‡(
	`ssˇnf
(
s1
, "%x", &
tmp
) < 1)

1232 i‡(
tmp
 < 0 || 255 <Åmp){

1233 
ªtvÆ
 = 0;

1234 i‡(
ªas⁄
 && (*ªas⁄ = 
	`˛igí_ªas⁄
("%s: InvÆid maˇddªss", 
°r
)Ë=
NULL
)

1235 
ªtvÆ
 = -1;

1236 
d⁄e
;

1238 
addr
[
i
++] = (
uöt8_t
)
tmp
;

1240 i‡(
i
!=6){

1241 
ªtvÆ
 = 0;

1242 i‡(
ªas⁄
 &&

1243 (*
ªas⁄
 = 
	`˛igí_ªas⁄
("%s: InvÆid maˇddr", 
°r
)Ë=
NULL
){

1244 
ªtvÆ
 = -1;

1245 
d⁄e
;

1247 
d⁄e
;

1249 
ªtvÆ
 = 1;

1250 
d⁄e
:

1251  
ªtvÆ
;

1252 
	}
}

1263 
	$∑r£_uæ
(*
uæ
,

1264 
cg_v¨
 *
cv
,

1265 **
ªas⁄
)

1267 *
°r0
;

1268 *
°r
;

1269 *
tmp
;

1270 *
tmp2
;

1271 
ªtvÆ
 = -1;

1273 i‡((
°r0
 = 
	`°rdup
(
uæ
)Ë=
NULL
)

1274 
d⁄e
;

1275 
°r
 = 
°r0
;

1276 i‡((
tmp
 = 
	`°rchr
(
°r
, ':')Ë=
NULL
)

1277 
w¨n
;

1278 i‡(
	`°∫cmp
(
tmp
, "://", 3))

1279 
w¨n
;

1280 *
tmp
 = '\0';

1281 
cv
->
v¨_uæ¥Ÿo
 = 
	`°rdup
(
°r
);

1282 
°r
 = 
tmp
+3;

1283 i‡((
tmp
 = 
	`°rchr
(
°r
, '@')Ë!
NULL
){

1285 *
tmp
 = '\0';

1286 i‡((
tmp2
 = 
	`°rchr
(
°r
, ':')Ë!
NULL
){

1288 *
tmp2
 = '\0';

1289 
cv
->
v¨_uæ∑sswd
 = 
	`°rdup
(
tmp2
+1);

1292 
cv
->
v¨_uæ∑sswd
 = 
	`°rdup
("");

1293 
cv
->
v¨_uæu£r
 = 
	`°rdup
(
°r
);

1294 
°r
 = 
tmp
+1;

1297 
cv
->
v¨_uæu£r
 = 
	`°rdup
("");

1298 
cv
->
v¨_uæ∑sswd
 = 
	`°rdup
("");

1300 i‡((
tmp
 = 
	`°rchr
(
°r
, '/')Ë!
NULL
)

1301 *
tmp
 = '\0';

1302 
cv
->
v¨_uæaddr
 = 
	`°rdup
(
°r
);

1303 i‡(
tmp
){

1304 
°r
 = 
tmp
+1;

1305 
cv
->
v¨_uæ∑th
 = 
	`°rdup
(
°r
);

1308 
cv
->
v¨_uæ∑th
 = 
	`°rdup
("");

1309 
ªtvÆ
 = 1;

1310 
d⁄e
:

1311 i‡(
°r0
)

1312 
	`‰ì
(
°r0
);

1313  
ªtvÆ
;

1314 
w¨n
:

1315 i‡(
ªas⁄
 && (*ªas⁄ = 
	`˛igí_ªas⁄
("%s: InvÆid URL", 
uæ
)Ë=
NULL
)

1317 i‡(
°r0
)

1318 
	`‰ì
(
°r0
);

1320 
	}
}

1326 
	$°r2uæ¥Ÿo
(*
°r
)

1328 
¥Ÿo
;

1330 
¥Ÿo
 = 1;;Öroto++){

1331 i‡(
cg_uæ¥Ÿo°r
[
¥Ÿo
] =
NULL
)

1333 i‡(
	`°rcmp
 (
°r
, 
cg_uæ¥Ÿo°r
[
¥Ÿo
]) == 0)

1334  
¥Ÿo
;

1337 
	}
}

1347 
	$uuid2°r
(
uuid_t
 
u
,

1348 *
fmt
,

1349 
Àn
)

1351 
	`¢¥ötf
(
fmt
, 
Àn
,

1354 
u
[0]&0xff, u[1]&0xff, u[2]&0xff, u[3]&0xff,

1355 
u
[4]&0xff, u[5]&0xff, u[6]&0xff, u[7]&0xff,

1356 
u
[8]&0xff, u[9]&0xff, u[10]&0xff, u[11]&0xff,

1357 
u
[12]&0xff, u[13]&0xff, u[14]&0xff, u[15]&0xff);

1359 
	}
}

1364 
	$toöt
(
c
)

1366 i‡(
c
 >= '0' && c <= '9')

1367  
c
 - '0';

1368 i‡(
c
 >= 'A' && c <= 'F')

1369  10 + 
c
 - 'A';

1370 i‡(
c
 >= 'a' && c <= 'f')

1371  10 + 
c
 - 'a';

1373 
	}
}

1383 
	$°r2uuid
(*
ö
,

1384 
uuid_t
 
u
)

1386 
i
 = 0, 
j
 = 0, 
k
;

1387 
a
, 
b
;

1388 
ªtvÆ
 = -1;

1390 i‡(
	`°æí
(
ö
) != 36)

1392 
k
=0; k<4; k++){

1393 
a
 = 
	`toöt
(
ö
[
j
++]);

1394 
b
 = 
	`toöt
(
ö
[
j
++]);

1395 i‡(
a
 < 0 || 
b
 < 0)

1396 
d⁄e
;

1397 
u
[
i
++] = (
a
 << 4Ë| 
b
;

1399 i‡(
ö
[
j
++] != '-')

1400 
d⁄e
;

1401 
k
=0; k<2; k++){

1402 
a
 = 
	`toöt
(
ö
[
j
++]); 
b
 =Åoint(in[j++]);

1403 i‡(
a
 < 0 || 
b
 < 0)

1404 
d⁄e
;

1405 
u
[
i
++] = (
a
 << 4Ë| 
b
;

1407 i‡(
ö
[
j
++] != '-')

1408 
d⁄e
;

1409 
k
=0; k<2; k++){

1410 
a
 = 
	`toöt
(
ö
[
j
++]); 
b
 =Åoint(in[j++]);

1411 i‡(
a
 < 0 || 
b
 < 0)

1412 
d⁄e
;

1413 
u
[
i
++] = (
a
 << 4Ë| 
b
;

1415 i‡(
ö
[
j
++] != '-')

1416 
d⁄e
;

1417 
k
=0; k<2; k++){

1418 
a
 = 
	`toöt
(
ö
[
j
++]); 
b
 =Åoint(in[j++]);

1419 i‡(
a
 < 0 || 
b
 < 0)

1420 
d⁄e
;

1421 
u
[
i
++] = (
a
 << 4Ë| 
b
;

1423 i‡(
ö
[
j
++] != '-')

1424 
d⁄e
;

1425 
k
=0; k<6; k++){

1426 
a
 = 
	`toöt
(
ö
[
j
++]); 
b
 =Åoint(in[j++]);

1427 i‡(
a
 < 0 || 
b
 < 0)

1428 
d⁄e
;

1429 
u
[
i
++] = (
a
 << 4Ë| 
b
;

1431 i‡(
ö
[
j
] != '\0')

1432 
d⁄e
;

1433 
ªtvÆ
 = 0;

1434 
d⁄e
:

1435  
ªtvÆ
;

1436 
	}
}

1441 
	$todig
(
c
)

1443 i‡(
c
 >= '0' && c <= '9')

1444  
c
 - '0';

1446 
	}
}

1457 
	$t⁄um
(
n
,

1458 *
s
)

1460 
i
;

1461 
a
;

1462 
sum
 = 0;

1463 
ªtvÆ
 = -1;

1465 
i
=0; i<
n
; i++){

1466 i‡((
a
 = 
	`todig
(
s
[
i
])) < 0)

1467 
d⁄e
;

1468 
sum
 *= 10;

1469 
sum
 +
a
;

1471 
ªtvÆ
 = 
sum
;

1472 
d⁄e
:

1473  
ªtvÆ
;

1474 
	}
}

1495 
	$°r2time
(*
ö
,

1496 
timevÆ
 *
tv
)

1498 
ªtvÆ
 = -1;

1499 
i
 = 0;

1500 
j
;

1501 
Àn
;

1502 
yór
;

1503 
m⁄th
;

1504 
day
;

1505 
hour
;

1506 
mö
;

1507 
£c
;

1508 
u£c
 = 0;

1509 
tm
 *tm;

1510 
time_t
 
t
;

1512 i‡((
yór
 = 
	`t⁄um
(4, &
ö
[
i
])) < 0)

1513 
d⁄e
;

1514 i‡(
yór
 < 1970 || year > 2104)

1515 
d⁄e
;

1516 
i
 += 4;

1517 i‡(
ö
[
i
++] != '-')

1518 
d⁄e
;

1519 i‡((
m⁄th
 = 
	`t⁄um
(2, &
ö
[
i
])) < 0)

1520 
d⁄e
;

1521 i‡(
m⁄th
 < 1 || month > 12)

1522 
d⁄e
;

1523 
i
 += 2;

1524 i‡(
ö
[
i
++] != '-')

1525 
d⁄e
;

1526 i‡((
day
 = 
	`t⁄um
(2, &
ö
[
i
])) < 0)

1527 
d⁄e
;

1528 i‡(
day
 < 1 || day > 31)

1529 
d⁄e
;

1530 
i
 += 2;

1531 i‡(
ö
[
i
] != 'T' && in[i] != ' ')

1532 
d⁄e
;

1533 
i
++;

1534 i‡((
hour
 = 
	`t⁄um
(2, &
ö
[
i
])) < 0)

1535 
d⁄e
;

1536 i‡(
hour
 > 23)

1537 
d⁄e
;

1538 
i
 += 2;

1539 i‡(
ö
[
i
++] != ':')

1540 
d⁄e
;

1541 i‡((
mö
 = 
	`t⁄um
(2, &
ö
[
i
])) < 0)

1542 
d⁄e
;

1543 i‡(
mö
 > 59)

1544 
d⁄e
;

1545 
i
 += 2;

1546 i‡(
ö
[
i
++] != ':')

1547 
d⁄e
;

1548 i‡((
£c
 = 
	`t⁄um
(2, &
ö
[
i
])) < 0)

1549 
d⁄e
;

1550 i‡(
£c
 > 59)

1551 
d⁄e
;

1552 
i
 += 2;

1553 i‡(
ö
[
i
] == '\0')

1554 
mkd©e
;

1555 i‡(
ö
[
i
++] != '.')

1556 
d⁄e
;

1557 
Àn
 = 
	`°æí
(&
ö
[
i
]);

1558 i‡(
Àn
 > 6 ||Üen < 1)

1559 
d⁄e
;

1560 i‡((
u£c
 = 
	`t⁄um
(
Àn
, &
ö
[
i
])) < 0)

1561 
d⁄e
;

1562 
j
=0; j<6-
Àn
; j++)

1563 
u£c
 *= 10;

1564 i‡(
u£c
 > 999999)

1565 
d⁄e
;

1566 
i
 +
Àn
;

1567 i‡(
ö
[
i
] != '\0')

1568 
d⁄e
;

1569 
mkd©e
:

1570 i‡((
tm
 = 
	`ˇŒoc
(1, (tm))Ë=
NULL
){

1571 
	`Ârötf
(
°dîr
, "ˇŒoc: %s\n", 
	`°ªº‹
(
î∫o
));

1572 
d⁄e
;

1574 
tm
->
tm_yór
 = 
yór
 - 1900;

1575 
tm
->
tm_m⁄
 = 
m⁄th
 - 1;

1576 
tm
->
tm_mday
 = 
day
;

1577 
tm
->
tm_hour
 = 
hour
;

1578 
tm
->
tm_mö
 = 
mö
;

1579 
tm
->
tm_£c
 = 
£c
;

1580 i‡((
t
 = 
	`mktime
(
tm
)) < 0)

1581 
d⁄e
;

1588 i‡(
tm
->
tm_isd°
)

1589 
t
 += 3600;

1592 #ifde‡
löux


1593 
t
 =Å - 
timez⁄e
;

1596 
timevÆ
 
tv
;

1597 
timez⁄e
 
tz
;

1598 
	`gëtimeofday
(&
tv
, &
tz
);

1599 
t
 =Å - 
tz
.
tz_möuãswe°
*60;

1602 
	`‰ì
(
tm
);

1603 
tv
->
tv_£c
 = 
t
;

1604 
tv
->
tv_u£c
 = 
u£c
;

1605 
ªtvÆ
 = 0;

1606 
d⁄e
:

1607  
ªtvÆ
;

1608 
	}
}

1619 
	$time2°r
(
timevÆ
 
tv
,

1620 *
fmt
,

1621 
Àn
)

1623 
ªtvÆ
 = -1;

1624 
tm
 *tm;

1626 
tm
 = 
	`gmtime
((
time_t
*)&
tv
.
tv_£c
);

1627 i‡(
	`¢¥ötf
(
fmt
, 
Àn
, "%04d-%02d-%02dT%02d:%02d:%02d.%06ld",

1628 
tm
->
tm_yór
+1900,Åm->
tm_m⁄
+1,Åm->
tm_mday
,Åm->
tm_hour
,

1629 
tm
->
tm_mö
,Åm->
tm_£c
, 
tv
.
tv_u£c
) < 0)

1630 
d⁄e
;

1631 
ªtvÆ
 = 0;

1632 
d⁄e
:

1633  
ªtvÆ
;

1634 
	}
}

1641 
cv_ty≥


1642 
	$cv_°r2ty≥
(*
°r
)

1644 i‡(
	`°rcmp
(
°r
, "int8") == 0)

1645  
CGV_INT8
;

1646 i‡(
	`°rcmp
(
°r
, "int16") == 0)

1647  
CGV_INT16
;

1648 i‡(
	`°rcmp
(
°r
, "int32") == 0)

1649  
CGV_INT32
;

1650 i‡(
	`°rcmp
(
°r
, "int64") == 0)

1651  
CGV_INT64
;

1652 i‡(
	`°rcmp
(
°r
, "uint8") == 0)

1653  
CGV_UINT8
;

1654 i‡(
	`°rcmp
(
°r
, "uint16") == 0)

1655  
CGV_UINT16
;

1656 i‡(
	`°rcmp
(
°r
, "uint32") == 0)

1657  
CGV_UINT32
;

1658 i‡(
	`°rcmp
(
°r
, "uint64") == 0)

1659  
CGV_UINT64
;

1660 #ifde‡
CLIGEN_COMPAT_INT


1661 i‡(
	`°rcmp
(
°r
, "number") == 0 || strcmp(str, "int") == 0)

1662  
CGV_INT32
;

1663 i‡(
	`°rcmp
(
°r
, "long") == 0)

1664  
CGV_INT64
;

1666 i‡(
	`°rcmp
(
°r
, "decimal64") == 0)

1667  
CGV_DEC64
;

1668 i‡(
	`°rcmp
(
°r
, "bool") == 0)

1669  
CGV_BOOL
;

1670 i‡(
	`°rcmp
(
°r
, "string") == 0)

1671  
CGV_STRING
;

1672 i‡(
	`°rcmp
(
°r
, "rest") == 0)

1673  
CGV_REST
;

1674 i‡(
	`°rcmp
(
°r
, "interface") == 0)

1675  
CGV_INTERFACE
;

1676 i‡(
	`°rcmp
(
°r
,"ipaddr") == 0 || strcmp(str,"ipv4addr") == 0)

1677  
CGV_IPV4ADDR
;

1678 i‡(
	`°rcmp
(
°r
,"ipv4prefix") == 0)

1679  
CGV_IPV4PFX
;

1680 i‡(
	`°rcmp
(
°r
,"ipv6addr") == 0)

1681  
CGV_IPV6ADDR
;

1682 i‡(
	`°rcmp
(
°r
,"ipv6prefix") == 0)

1683  
CGV_IPV6PFX
;

1684 i‡(
	`°rcmp
(
°r
,"macaddr") == 0)

1685  
CGV_MACADDR
;

1686 i‡(
	`°rcmp
(
°r
,"url") == 0)

1687  
CGV_URL
;

1688 i‡(
	`°rcmp
(
°r
,"uuid") == 0)

1689  
CGV_UUID
;

1690 i‡(
	`°rcmp
(
°r
,"time") == 0)

1691  
CGV_TIME
;

1692 i‡(
	`°rcmp
(
°r
,"void") == 0)

1693  
CGV_VOID
;

1694 i‡(
	`°rcmp
(
°r
,"empty") == 0)

1695  
CGV_EMPTY
;

1696  
CGV_ERR
;

1697 
	}
}

1705 
	$cv_ty≥2°r
(
cv_ty≥
 
ty≥
)

1707 *
°r
 = 
NULL
;

1708 
ty≥
){

1709 
CGV_ERR
:

1710 
°r
="err";

1712 
CGV_INT8
:

1713 
°r
="int8";

1715 
CGV_INT16
:

1716 
°r
="int16";

1718 
CGV_INT32
:

1719 
°r
="int32";

1721 
CGV_INT64
:

1722 
°r
="int64";

1724 
CGV_UINT8
:

1725 
°r
="uint8";

1727 
CGV_UINT16
:

1728 
°r
="uint16";

1730 
CGV_UINT32
:

1731 
°r
="uint32";

1733 
CGV_UINT64
:

1734 
°r
="uint64";

1736 
CGV_DEC64
:

1737 
°r
="decimal64";

1739 
CGV_BOOL
:

1740 
°r
="bool";

1742 
CGV_STRING
:

1743 
°r
="string";

1745 
CGV_REST
:

1746 
°r
="rest";

1748 
CGV_INTERFACE
:

1749 
°r
="interface";

1751 
CGV_IPV4ADDR
:

1752 
°r
="ipv4addr";

1754 
CGV_IPV4PFX
:

1755 
°r
="ipv4prefix";

1757 
CGV_IPV6ADDR
:

1758 
°r
="ipv6addr";

1760 
CGV_IPV6PFX
:

1761 
°r
="ipv6prefix";

1763 
CGV_MACADDR
:

1764 
°r
="macaddr";

1766 
CGV_URL
:

1767 
°r
="url";

1769 
CGV_UUID
:

1770 
°r
="uuid";

1772 
CGV_TIME
:

1773 
°r
="time";

1775 
CGV_VOID
:

1776 
°r
="void";

1778 
CGV_EMPTY
:

1779 
°r
="empty";

1782 
	`Ârötf
(
°dîr
, "%s: invÆidÅy≥: %d\n", 
__FUNCTION__
, 
ty≥
);

1785  
°r
;

1786 
	}
}

1797 
	$cv_Àn
(
cg_v¨
 *
cv
)

1799 
Àn
 = 0;

1801 
cv
->
v¨_ty≥
){

1802 
CGV_INT8
:

1803 
Àn
 = (
cv
->
v¨_öt8
);

1805 
CGV_INT16
:

1806 
Àn
 = (
cv
->
v¨_öt16
);

1808 
CGV_INT32
:

1809 
Àn
 = (
cv
->
v¨_öt32
);

1811 
CGV_INT64
:

1812 
Àn
 = (
cv
->
v¨_öt64
);

1814 
CGV_UINT8
:

1815 
Àn
 = (
cv
->
v¨_uöt8
);

1817 
CGV_UINT16
:

1818 
Àn
 = (
cv
->
v¨_uöt16
);

1820 
CGV_UINT32
:

1821 
Àn
 = (
cv
->
v¨_uöt32
);

1823 
CGV_UINT64
:

1824 
Àn
 = (
cv
->
v¨_uöt64
);

1826 
CGV_DEC64
:

1827 
Àn
 = (
cv
->
v¨_dec64_i
Ë+ (cv->
v¨_dec64_n
);

1829 
CGV_BOOL
:

1830 
Àn
 = (
cv
->
v¨_boﬁ
);

1832 
CGV_REST
:

1833 
Àn
 = (
cv
->
v¨_ª°
 ? 
	`°æí
(cv->var_rest) : 0) + 1;

1835 
CGV_STRING
:

1836 
Àn
 = (
cv
->
v¨_°rög
 ? 
	`°æí
(cv->var_string) : 0) + 1;

1838 
CGV_INTERFACE
:

1839 
Àn
 = (
cv
->
v¨_öãrÁ˚
 ? 
	`°æí
(cv->var_interface) : 0) + 1;

1841 
CGV_IPV4ADDR
:

1842 
Àn
 = (
cv
->
v¨_ùv4addr
);

1844 
CGV_IPV4PFX
:

1845 
Àn
 = (
cv
->
u
.
v¨u_ùv4addr
);

1847 
CGV_IPV6ADDR
:

1848 
Àn
 = (
cv
->
v¨_ùv6addr
);

1850 
CGV_IPV6PFX
:

1851 
Àn
 = (
cv
->
u
.
v¨u_ùv6addr
);

1853 
CGV_MACADDR
:

1854 
Àn
 = (
cv
->
v¨_maˇddr
);

1856 
CGV_URL
:

1857 
Àn
 = (
cv
->
v¨_uæ¥Ÿo
 ? 
	`°æí
(cv->var_urlproto):0) + 1 +

1858 (
cv
->
v¨_uæaddr
 ? 
	`°æí
(cv->var_urladdr):0) + 1 +

1859 (
cv
->
v¨_uæ∑th
 ? 
	`°æí
(cv->var_urlpath):0) + 1 +

1860 (
cv
->
v¨_uæu£r
 ? 
	`°æí
(cv->var_urluser):0) + 1 +

1861 (
cv
->
v¨_uæ∑sswd
 ? 
	`°æí
(cv->var_urlpasswd):0) + 1;

1863 
CGV_UUID
:

1864 
Àn
 = (
cv
->
v¨_uuid
);

1866 
CGV_TIME
:

1867 
Àn
 = (
cv
->
v¨_time
);

1869 
CGV_VOID
:

1870 
Àn
 = (*);

1872 
CGV_EMPTY
:

1873 
Àn
 = 0;

1878  
Àn
;

1879 
	}
}

1890 
	$cv_dec64_¥öt
(
cg_v¨
 *
cv
,

1891 *
s0
,

1892 *
s0Àn
)

1894 
i
;

1895 
uöt8_t
 
n
 = 
cv
->
v¨_dec64_n
;;

1896 
Àn
;

1897 
öt64_t
 
di
;

1899 
	`as£π
(0<
n
 &&Ç<19);

1901 
di
 = 
	`cv_dec64_i_gë
(
cv
);

1902 i‡(
di
<0)

1903 
di
 = -di;

1904 
Àn
 = 
	`¢¥ötf
(
s0
, *
s0Àn
, "%0*" 
PRId64
, 
n
+1, 
di
);

1905 
	`as£π
(
Àn
>=
n
);

1906 *
s0Àn
 -
Àn
;

1910 
i
=
Àn
; i>ˆí-
n
; i--)

1911 
s0
[
i
+1] = s0[i];

1912 (*
s0Àn
)--;

1913 
s0
[
Àn
-
n
] = '.';

1915 i‡(
	`cv_dec64_i_gë
(
cv
)<0){

1916 
i
=
Àn
+1; i>=0; i--)

1917 
s0
[
i
+1] = s0[i];

1918 
s0
[0] = '-';

1919 (*
s0Àn
)--;

1922 
	}
}

1929 
	$cv2cbuf
(
cg_v¨
 *
cv
,

1930 
cbuf
 *
cb
)

1932 
°øddr
[
INET6_ADDRSTRLEN
];

1933 
ss
[64];

1934 
s¶í
 = (
ss
);

1935 
uuid°r
[37];

1936 
time°r
[27];

1938 
cv
->
v¨_ty≥
){

1939 
CGV_INT8
:

1940 
	`˝rötf
(
cb
, "%" 
PRId8
, 
cv
->
v¨_öt8
);

1942 
CGV_INT16
:

1943 
	`˝rötf
(
cb
, "%" 
PRId16
, 
cv
->
v¨_öt16
);

1945 
CGV_INT32
:

1946 
	`˝rötf
(
cb
, "%" 
PRId32
, 
cv
->
v¨_öt32
);

1948 
CGV_INT64
:

1949 
	`˝rötf
(
cb
, "%" 
PRId64
, 
cv
->
v¨_öt64
);

1951 
CGV_UINT8
:

1952 
	`˝rötf
(
cb
, "%" 
PRIu8
, 
cv
->
v¨_uöt8
);

1954 
CGV_UINT16
:

1955 
	`˝rötf
(
cb
, "%" 
PRIu16
, 
cv
->
v¨_uöt16
);

1957 
CGV_UINT32
:

1958 
	`˝rötf
(
cb
, "%" 
PRIu32
, 
cv
->
v¨_uöt32
);

1960 
CGV_UINT64
:

1961 
	`˝rötf
(
cb
, "%" 
PRIu64
, 
cv
->
v¨_uöt64
);

1963 
CGV_DEC64
:

1964 
	`cv_dec64_¥öt
(
cv
, 
ss
, &
s¶í
);

1965 
	`˝rötf
(
cb
, "%s", 
ss
);

1967 
CGV_BOOL
:

1968 i‡(
cv
->
v¨_boﬁ
)

1969 
	`˝rötf
(
cb
, "true");

1971 
	`˝rötf
(
cb
, "false");

1973 
CGV_REST
:

1974 
	`˝rötf
(
cb
, "%s", 
cv
->
v¨_ª°
);

1976 
CGV_STRING
:

1977 
	`˝rötf
(
cb
, "%s", 
cv
->
v¨_°rög
);

1979 
CGV_INTERFACE
:

1980 
	`˝rötf
(
cb
, "%s", 
cv
->
v¨_öãrÁ˚
);

1982 
CGV_IPV4ADDR
:

1983 
	`˝rötf
(
cb
, "%s", 
	`öë_¡ﬂ
(
cv
->
v¨_ùv4addr
));

1985 
CGV_IPV4PFX
:

1986 
	`˝rötf
(
cb
, "%s/%u",

1987 
	`öë_¡ﬂ
 (
cv
->
v¨_ùv4addr
),

1988 
cv
->
v¨_ùv4maskÀn
);

1990 
CGV_IPV6ADDR
:

1991 i‡(
	`öë_¡›
(
AF_INET6
, &
cv
->
v¨_ùv6addr
, 
°øddr
, (straddr)) < 0){

1992 
	`Ârötf
(
°dîr
, "öë_¡›: %s\n", 
	`°ªº‹
(
î∫o
));

1995 
	`˝rötf
(
cb
, "%s", 
°øddr
);

1997 
CGV_IPV6PFX
:

1998 i‡(
	`öë_¡›
(
AF_INET6
, &
cv
->
v¨_ùv6addr
, 
°øddr
, (straddr)) < 0){

1999 
	`Ârötf
(
°dîr
, "öë_¡›: %s\n", 
	`°ªº‹
(
î∫o
));

2002 
	`˝rötf
(
cb
, "%s/%u", 
°øddr
, 
cv
->
v¨_ùv6maskÀn
);

2004 
CGV_MACADDR
:

2005 
	`˝rötf
(
cb
, "%02x:%02x:%02x:%02x:%02x:%02x",

2006 (
uöt8_t
)
cv
->
v¨_maˇddr
[0],

2007 (
uöt8_t
)
cv
->
v¨_maˇddr
[1],

2008 (
uöt8_t
)
cv
->
v¨_maˇddr
[2],

2009 (
uöt8_t
)
cv
->
v¨_maˇddr
[3],

2010 (
uöt8_t
)
cv
->
v¨_maˇddr
[4],

2011 (
uöt8_t
)
cv
->
v¨_maˇddr
[5]);

2013 
CGV_URL
:

2014 
	`˝rötf
(
cb
, "%s://%s%s%s%s%s/%s",

2015 
cv
->
v¨_uæ¥Ÿo
,

2016 
cv
->
v¨_uæu£r
,

2017 
	`°æí
(
cv
->
v¨_uæ∑sswd
)?":":"",

2018 
cv
->
v¨_uæ∑sswd
,

2019 
	`°æí
(
cv
->
v¨_uæu£r
)||°æí(cv->
v¨_uæ∑sswd
)?"@":"",

2020 
cv
->
v¨_uæaddr
,

2021 
cv
->
v¨_uæ∑th


2024 
CGV_UUID
:

2025 
	`uuid2°r
(
cv
->
v¨_uuid
, 
uuid°r
, (uuidstr));

2026 
	`˝rötf
(
cb
, "%s", 
uuid°r
);

2028 
CGV_TIME
:

2029 
	`time2°r
(
cv
->
v¨_time
, 
time°r
, (timestr));

2030 
	`˝rötf
(
cb
, "%s", 
time°r
);

2032 
CGV_VOID
:

2033 
CGV_EMPTY
:

2039 
	}
}

2058 
	$cv2°r
(
cg_v¨
 *
cv
,

2059 *
°r
,

2060 
size_t
 
size
)

2062 
Àn
 = 0;

2063 
°øddr
[
INET6_ADDRSTRLEN
];

2064 
ss
[64];

2065 
s¶í
 = (
ss
);

2066 
uuid°r
[37];

2067 
time°r
[27];

2069 
cv
->
v¨_ty≥
){

2070 
CGV_INT8
:

2071 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%" 
PRId8
, 
cv
->
v¨_öt8
);

2073 
CGV_INT16
:

2074 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%" 
PRId16
, 
cv
->
v¨_öt16
);

2076 
CGV_INT32
:

2077 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%" 
PRId32
, 
cv
->
v¨_öt32
);

2079 
CGV_INT64
:

2080 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%" 
PRId64
, 
cv
->
v¨_öt64
);

2082 
CGV_UINT8
:

2083 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%" 
PRIu8
, 
cv
->
v¨_uöt8
);

2085 
CGV_UINT16
:

2086 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%" 
PRIu16
, 
cv
->
v¨_uöt16
);

2088 
CGV_UINT32
:

2089 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%" 
PRIu32
, 
cv
->
v¨_uöt32
);

2091 
CGV_UINT64
:

2092 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%" 
PRIu64
, 
cv
->
v¨_uöt64
);

2094 
CGV_DEC64
:

2095 
	`cv_dec64_¥öt
(
cv
, 
ss
, &
s¶í
);

2096 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%s", 
ss
);

2098 
CGV_BOOL
:

2099 i‡(
cv
->
v¨_boﬁ
)

2100 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "true");

2102 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "false");

2104 
CGV_REST
:

2105 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%s", 
cv
->
v¨_ª°
);

2107 
CGV_STRING
:

2108 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%s", 
cv
->
v¨_°rög
);

2110 
CGV_INTERFACE
:

2111 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%s", 
cv
->
v¨_öãrÁ˚
);

2113 
CGV_IPV4ADDR
:

2114 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%s", 
	`öë_¡ﬂ
(
cv
->
v¨_ùv4addr
));

2116 
CGV_IPV4PFX
:

2117 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%s/%u",

2118 
	`öë_¡ﬂ
 (
cv
->
v¨_ùv4addr
),

2119 
cv
->
v¨_ùv4maskÀn
);

2121 
CGV_IPV6ADDR
:

2122 i‡(
	`öë_¡›
(
AF_INET6
, &
cv
->
v¨_ùv6addr
, 
°øddr
, (straddr)) < 0){

2123 
	`Ârötf
(
°dîr
, "öë_¡›: %s\n", 
	`°ªº‹
(
î∫o
));

2126 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%s", 
°øddr
);

2128 
CGV_IPV6PFX
:

2129 i‡(
	`öë_¡›
(
AF_INET6
, &
cv
->
v¨_ùv6addr
, 
°øddr
, (straddr)) < 0){

2130 
	`Ârötf
(
°dîr
, "öë_¡›: %s\n", 
	`°ªº‹
(
î∫o
));

2133 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%s/%u", 
°øddr
, 
cv
->
v¨_ùv6maskÀn
);

2135 
CGV_MACADDR
:

2136 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%02x:%02x:%02x:%02x:%02x:%02x",

2137 (
uöt8_t
)
cv
->
v¨_maˇddr
[0],

2138 (
uöt8_t
)
cv
->
v¨_maˇddr
[1],

2139 (
uöt8_t
)
cv
->
v¨_maˇddr
[2],

2140 (
uöt8_t
)
cv
->
v¨_maˇddr
[3],

2141 (
uöt8_t
)
cv
->
v¨_maˇddr
[4],

2142 (
uöt8_t
)
cv
->
v¨_maˇddr
[5]);

2145 
CGV_URL
:

2146 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%s://%s%s%s%s%s/%s",

2147 
cv
->
v¨_uæ¥Ÿo
,

2148 
cv
->
v¨_uæu£r
,

2149 
	`°æí
(
cv
->
v¨_uæ∑sswd
)?":":"",

2150 
cv
->
v¨_uæ∑sswd
,

2151 
	`°æí
(
cv
->
v¨_uæu£r
)||°æí(cv->
v¨_uæ∑sswd
)?"@":"",

2152 
cv
->
v¨_uæaddr
,

2153 
cv
->
v¨_uæ∑th


2156 
CGV_UUID
:

2157 
	`uuid2°r
(
cv
->
v¨_uuid
, 
uuid°r
, (uuidstr));

2158 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%s", 
uuid°r
);

2160 
CGV_TIME
:

2161 
	`time2°r
(
cv
->
v¨_time
, 
time°r
, (timestr));

2162 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%s", 
time°r
);

2164 
CGV_VOID
:

2165 
CGV_EMPTY
:

2170  
Àn
;

2171 
	}
}

2180 
	$cv2°r_dup
(
cg_v¨
 *
cv
)

2182 
Àn
;

2183 *
°r
;

2185 i‡((
Àn
 = 
	`cv2°r
 (
cv
, 
NULL
, 0)) < 0)

2186  
NULL
;

2187 i‡((
°r
 = (*)
	`mÆloc
 (
Àn
+1)Ë=
NULL
)

2188  
NULL
;

2189 
	`mem£t
 (
°r
, '\0', 
Àn
+1);

2190 i‡((
	`cv2°r
(
cv
, 
°r
, 
Àn
+1)) < 0){

2191 
	`‰ì
(
°r
);

2192  
NULL
;

2194  
°r
;

2195 
	}
}

2202 
	$cv_¥öt
(
FILE
 *
f
,

2203 
cg_v¨
 *
cv
)

2205 
Àn
 = 0;

2206 
°øddr
[
INET6_ADDRSTRLEN
];

2207 
ss
[64];

2208 
s¶í
 = (
ss
);

2209 
uuid°r
[37];

2210 
time°r
[27];

2212 
cv
->
v¨_ty≥
){

2213 
CGV_INT8
:

2214 
	`Ârötf
(
f
, "%" 
PRId8
, 
cv
->
v¨_öt8
);

2216 
CGV_INT16
:

2217 
	`Ârötf
(
f
, "%" 
PRId16
, 
cv
->
v¨_öt16
);

2219 
CGV_INT32
:

2220 
	`Ârötf
(
f
, "%" 
PRId32
, 
cv
->
v¨_öt32
);

2222 
CGV_INT64
:

2223 
	`Ârötf
(
f
, "%" 
PRId64
, 
cv
->
v¨_öt64
);

2225 
CGV_UINT8
:

2226 
	`Ârötf
(
f
, "%" 
PRIu8
, 
cv
->
v¨_uöt8
);

2228 
CGV_UINT16
:

2229 
	`Ârötf
(
f
, "%" 
PRIu16
, 
cv
->
v¨_uöt16
);

2231 
CGV_UINT32
:

2232 
	`Ârötf
(
f
, "%" 
PRIu32
, 
cv
->
v¨_uöt32
);

2234 
CGV_UINT64
:

2235 
	`Ârötf
(
f
, "%" 
PRIu64
, 
cv
->
v¨_uöt64
);

2237 
CGV_DEC64
:

2238 
	`cv_dec64_¥öt
(
cv
, 
ss
, &
s¶í
);

2239 
	`Ârötf
(
f
, "%s", 
ss
);

2241 
CGV_BOOL
:

2242 i‡(
cv
->
v¨_boﬁ
)

2243 
	`Ârötf
(
f
, "true");

2245 
	`Ârötf
(
f
, "false");

2247 
CGV_REST
:

2248 
	`Ârötf
(
f
, "%s", 
cv
->
v¨_ª°
);

2250 
CGV_STRING
:

2251 
	`Ârötf
(
f
, "\"%s\"", 
cv
->
v¨_°rög
);

2253 
CGV_INTERFACE
:

2254 
	`Ârötf
(
f
, "\"%s\"", 
cv
->
v¨_öãrÁ˚
);

2256 
CGV_IPV4ADDR
:

2257 
	`Ârötf
(
f
, "%s", 
	`öë_¡ﬂ
(
cv
->
v¨_ùv4addr
));

2259 
CGV_IPV4PFX
:

2260 
	`Ârötf
(
f
, "%s/%d", 
	`öë_¡ﬂ
(
cv
->
v¨_ùv4addr
), cv->
v¨_ùv4maskÀn
);

2262 
CGV_IPV6ADDR
:

2263 i‡(
	`öë_¡›
(
AF_INET6
, &
cv
->
v¨_ùv6addr
, 
°øddr
, (straddr)) < 0){

2264 
	`Ârötf
(
°dîr
, "öë_¡›: %s\n", 
	`°ªº‹
(
î∫o
));

2267 
	`Ârötf
(
f
, "%s", 
°øddr
);

2269 
CGV_IPV6PFX
:

2270 i‡(
	`öë_¡›
(
AF_INET6
, &
cv
->
v¨_ùv6addr
, 
°øddr
, (straddr)) < 0){

2271 
	`Ârötf
(
°dîr
, "öë_¡›: %s\n", 
	`°ªº‹
(
î∫o
));

2274 
	`Ârötf
(
f
, "%s/%d", 
°øddr
, 
cv
->
v¨_ùv4maskÀn
);

2276 
CGV_MACADDR
:

2277 
	`Ârötf
(
f
, "%02x:%02x:%02x:%02x:%02x:%02x",

2278 
cv
->
v¨_maˇddr
[0],

2279 
cv
->
v¨_maˇddr
[1],

2280 
cv
->
v¨_maˇddr
[2],

2281 
cv
->
v¨_maˇddr
[3],

2282 
cv
->
v¨_maˇddr
[4],

2283 
cv
->
v¨_maˇddr
[5]);

2286 
CGV_URL
:

2287 
	`Ârötf
(
f
, "%s://%s%s%s%s%s/%s",

2288 
cv
->
v¨_uæ¥Ÿo
,

2289 
cv
->
v¨_uæu£r
,

2290 
	`°æí
(
cv
->
v¨_uæ∑sswd
)?":":"",

2291 
cv
->
v¨_uæ∑sswd
,

2292 
	`°æí
(
cv
->
v¨_uæu£r
)||°æí(cv->
v¨_uæ∑sswd
)?"@":"",

2293 
cv
->
v¨_uæaddr
,

2294 
cv
->
v¨_uæ∑th


2297 
CGV_UUID
:

2298 
	`uuid2°r
(
cv
->
v¨_uuid
, 
uuid°r
, (uuidstr));

2299 
	`Ârötf
(
f
, "%s", 
uuid°r
);

2301 
CGV_TIME
:

2302 
	`time2°r
(
cv
->
v¨_time
, 
time°r
, (timestr));

2303 
	`Ârötf
(
f
, "%s", 
time°r
);

2305 
CGV_VOID
:

2306 
CGV_EMPTY
:

2311  
Àn
;

2312 
	}
}

2324 
	$cvty≥_max2°r
(
cv_ty≥
 
ty≥
,

2325 *
°r
,

2326 
size_t
 
size
)

2328 
Àn
 = 0;

2330 
ty≥
){

2331 
CGV_INT8
:

2332 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%" 
PRId8
, 
INT8_MAX
);

2334 
CGV_INT16
:

2335 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%" 
PRId16
, 
INT16_MAX
);

2337 
CGV_INT32
:

2338 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%" 
PRId32
, 
INT32_MAX
);

2340 
CGV_INT64
:

2341 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%" 
PRId64
, 
INT64_MAX
);

2343 
CGV_UINT8
:

2344 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%" 
PRIu8
, 
UINT8_MAX
);

2346 
CGV_UINT16
:

2347 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%" 
PRIu16
, 
UINT16_MAX
);

2349 
CGV_UINT32
:

2350 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%" 
PRIu32
, 
UINT32_MAX
);

2352 
CGV_UINT64
:

2353 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%" 
PRIu64
, 
UINT64_MAX
);

2355 
CGV_DEC64
:

2356 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "%" 
PRId64
 ".0", 
INT64_MAX
);

2358 
CGV_BOOL
:

2359 
Àn
 = 
	`¢¥ötf
(
°r
, 
size
, "true");

2364  
Àn
;

2365 
	}
}

2375 
	$cvty≥_max2°r_dup
(
cv_ty≥
 
ty≥
)

2377 
Àn
;

2378 *
°r
;

2380 i‡((
Àn
 = 
	`cvty≥_max2°r
(
ty≥
, 
NULL
, 0)) < 0)

2381  
NULL
;

2382 i‡((
°r
 = (*)
	`mÆloc
 (
Àn
+1)Ë=
NULL
)

2383  
NULL
;

2384 
	`mem£t
 (
°r
, '\0', 
Àn
+1);

2385 i‡((
	`cvty≥_max2°r
(
ty≥
, 
°r
, 
Àn
+1)) < 0){

2386 
	`‰ì
(
°r
);

2387  
NULL
;

2389  
°r
;

2390 
	}
}

2421 
	$cv_∑r£1
(*
°r0
,

2422 
cg_v¨
 *
cv
,

2423 **
ªas⁄
)

2425 
ªtvÆ
 = -1;

2426 *
°r
;

2427 *
mask
;

2428 
maskÀn
;

2430 i‡(
ªas⁄
 && (*ªas⁄ !
NULL
)){

2431 
	`Ârötf
(
°dîr
, "reason must be NULL on calling");

2434 i‡((
°r
 = 
	`°rdup
(
°r0
)Ë=
NULL
)

2435 
d⁄e
;

2436 
cv
->
v¨_ty≥
) {

2437 
CGV_INT8
:

2438 
ªtvÆ
 = 
	`∑r£_öt8
(
°r
, &
cv
->
v¨_öt8
, 
ªas⁄
);

2440 
CGV_INT16
:

2441 
ªtvÆ
 = 
	`∑r£_öt16
(
°r
, &
cv
->
v¨_öt16
, 
ªas⁄
);

2443 
CGV_INT32
:

2444 
ªtvÆ
 = 
	`∑r£_öt32
(
°r
, &
cv
->
v¨_öt32
, 
ªas⁄
);

2446 
CGV_INT64
:

2447 
ªtvÆ
 = 
	`∑r£_öt64
(
°r
, &
cv
->
v¨_öt64
, 
ªas⁄
);

2449 
CGV_UINT8
:

2450 
ªtvÆ
 = 
	`∑r£_uöt8
(
°r
, &
cv
->
v¨_uöt8
, 
ªas⁄
);

2452 
CGV_UINT16
:

2453 
ªtvÆ
 = 
	`∑r£_uöt16
(
°r
, &
cv
->
v¨_uöt16
, 
ªas⁄
);

2455 
CGV_UINT32
:

2456 
ªtvÆ
 = 
	`∑r£_uöt32
(
°r
, &
cv
->
v¨_uöt32
, 
ªas⁄
);

2458 
CGV_UINT64
:

2459 
ªtvÆ
 = 
	`∑r£_uöt64
(
°r
, &
cv
->
v¨_uöt64
, 
ªas⁄
);

2461 
CGV_DEC64
:

2462 
ªtvÆ
 = 
	`∑r£_dec64
(
°r
, 
	`cv_dec64_n_gë
(
cv
), &cv->
v¨_dec64_i
, 
ªas⁄
);

2464 
CGV_BOOL
:

2465 
ªtvÆ
 = 
	`∑r£_boﬁ
(
°r
, &
cv
->
v¨_boﬁ
, 
ªas⁄
);

2467 
CGV_REST
:

2468 i‡(
cv
->
v¨_ª°
)

2469 
	`‰ì
(
cv
->
v¨_ª°
);

2470 i‡((
cv
->
v¨_ª°
 = 
	`°rdup
(
°r
)Ë=
NULL
)

2471 
d⁄e
;

2472 
ªtvÆ
 = 1;

2474 
CGV_STRING
:

2475 i‡(
cv
->
v¨_°rög
)

2476 
	`‰ì
(
cv
->
v¨_°rög
);

2477 i‡((
cv
->
v¨_°rög
 = 
	`°rdup
(
°r
)Ë=
NULL
)

2478 
d⁄e
;

2479 
ªtvÆ
 = 1;

2481 
CGV_INTERFACE
:

2482 i‡(
cv
->
v¨_öãrÁ˚
)

2483 
	`‰ì
(
cv
->
v¨_öãrÁ˚
);

2484 i‡((
cv
->
v¨_öãrÁ˚
 = 
	`°rdup
(
°r
)Ë=
NULL
)

2485 
d⁄e
;

2486 
ªtvÆ
 = 1;

2488 
CGV_IPV4ADDR
:

2489 
cv
->
v¨_ùv4maskÀn
 = 32;

2490 
ªtvÆ
 = 
	`∑r£_ùv4addr
(
°r
, &
cv
->
v¨_ùv4addr
, 
ªas⁄
);

2492 
CGV_IPV6ADDR
:

2493 
cv
->
v¨_ùv6maskÀn
 = 128;

2494 
ªtvÆ
 = 
	`∑r£_ùv6addr
(
°r
, &
cv
->
v¨_ùv6addr
, 
ªas⁄
);

2496 
CGV_IPV4PFX
:

2497 i‡((
mask
 = 
	`°rchr
 (
°r
, '/')Ë=
NULL
){

2498 
ªtvÆ
 = 0;

2499 i‡(
ªas⁄
)

2500 i‡((*
ªas⁄
 = 
	`˛igí_ªas⁄
("Mask-Àngth missög")Ë=
NULL
)

2501 
ªtvÆ
 = -1;

2502 
d⁄e
;

2504 *
mask
++ = '\0';

2505 i‡((
ªtvÆ
 = 
	`∑r£_öt32
(
mask
, &
maskÀn
, 
ªas⁄
)) <= 0)

2507 i‡(
maskÀn
 > 32 || masklen < 0) {

2508 
ªtvÆ
 = 0;

2509 i‡(
ªas⁄
)

2510 i‡((*
ªas⁄
 = 
	`˛igí_ªas⁄
("Mask-Àngth ouào‡ønge: %s", 
mask
)Ë=
NULL
)

2511 
ªtvÆ
 = -1;

2512 
d⁄e
;

2514 
cv
->
v¨_ùv4maskÀn
 = 
maskÀn
;

2515 
ªtvÆ
 = 
	`∑r£_ùv4addr
(
°r
, &
cv
->
v¨_ùv4addr
, 
ªas⁄
);

2517 
CGV_IPV6PFX
:

2518 i‡((
mask
 = 
	`°rchr
 (
°r
, '/')Ë=
NULL
){

2519 
ªtvÆ
 = 0;

2520 i‡(
ªas⁄
)

2521 i‡((*
ªas⁄
 = 
	`˛igí_ªas⁄
("Mask-Àngth missög")Ë=
NULL
)

2522 
ªtvÆ
 = -1;

2523 
d⁄e
;

2525 *
mask
++ = '\0';

2526 i‡((
ªtvÆ
 = 
	`∑r£_öt32
(
mask
, &
maskÀn
, 
ªas⁄
)) <= 0)

2528 i‡(
maskÀn
 > 128 || masklen < 0) {

2529 
ªtvÆ
 = 0;

2530 i‡(
ªas⁄
 &&

2531 (*
ªas⁄
 = 
	`˛igí_ªas⁄
("Mask-Àngth ouào‡ønge: %s", 
mask
))==
NULL
)

2532 
ªtvÆ
 = -1;

2533 
d⁄e
;

2535 
cv
->
v¨_ùv6maskÀn
 = 
maskÀn
;

2536 
ªtvÆ
 = 
	`∑r£_ùv6addr
(
°r
, &
cv
->
v¨_ùv6addr
, 
ªas⁄
);

2538 
CGV_MACADDR
:

2539 
ªtvÆ
 = 
	`∑r£_maˇddr
(
°r
, 
cv
->
v¨_maˇddr
, 
ªas⁄
);

2541 
CGV_URL
:

2542 
ªtvÆ
 = 
	`∑r£_uæ
(
°r
, 
cv
, 
ªas⁄
);

2544 
CGV_UUID
:

2545 i‡(
	`°r2uuid
(
°r
, 
cv
->
v¨_uuid
) < 0){

2546 
ªtvÆ
 = 0;

2547 i‡(
ªas⁄
 &&

2548 (*
ªas⁄
 = 
	`˛igí_ªas⁄
("InvÆid uuid: %s", 
°r
))==
NULL
)

2549 
ªtvÆ
 = -1;

2550 
d⁄e
;

2552 
ªtvÆ
 = 1;

2554 
CGV_TIME
:

2555 i‡(
	`°r2time
(
°r
, &
cv
->
v¨_time
) < 0){

2556 
ªtvÆ
 = 0;

2557 i‡(
ªas⁄
 &&

2558 (*
ªas⁄
 = 
	`˛igí_ªas⁄
("InvÆidÅime: %s", 
°r
))==
NULL
)

2559 
ªtvÆ
 = -1;

2560 
d⁄e
;

2562 
ªtvÆ
 = 1;

2564 
CGV_VOID
:

2565 
CGV_EMPTY
:

2566 
CGV_ERR
:

2567 
ªtvÆ
 = 0;

2568 i‡(
ªas⁄
)

2569 *
ªas⁄
 = 
	`˛igí_ªas⁄
("Invalid variable");

2572 
d⁄e
:

2573 i‡(
°r
)

2574 
	`‰ì
 (
°r
);

2575 i‡(
ªas⁄
 && *reason)

2576 
	`as£π
(
ªtvÆ
 == 0);

2577  
ªtvÆ
;

2578 
	}
}

2604 
	$cv_∑r£
(*
°r
,

2605 
cg_v¨
 *
cv
)

2607 
ªtvÆ
;

2608 *
ªas⁄
 = 
NULL
;

2610 i‡((
ªtvÆ
 = 
	`cv_∑r£1
(
°r
, 
cv
, &
ªas⁄
)) < 0){

2611 
	`Ârötf
(
°dîr
, "cvÖ¨£Éº‹: %s\n", 
	`°ªº‹
(
î∫o
));

2614 i‡(
ªtvÆ
 == 0){

2615 
	`Ârötf
(
°dîr
, "cvÖ¨£Éº‹: %s\n", 
ªas⁄
);

2619 
	}
}

2622 
	#ønge_check
(
i
, 
rmö
, 
rmax
, 
ty≥
) \

2623 ((
rmö
 && (
i
Ë< 
cv_
##
ty≥
##
	`_gë
(rmin)) || \

2624 (
rmax
 && (
i
Ë> 
cv_
##
ty≥
##
	`_gë
‘max)))

	)

2637 
	$cv_vÆid©e
(
cg_v¨
 *
cv
,

2638 
cg_v¨•ec
 *
cs
,

2639 **
ªas⁄
)

2641 
ªtvÆ
 = 1;

2642 
öt64_t
 
i
 = 0;

2643 
uöt64_t
 
u
 = 0;

2644 *
°r
;

2646 
cs
->
cgs_vty≥
){

2647 
CGV_INT8
:

2648 i‡(
cs
->
cgs_ønge
){

2649 
i
 = 
	`cv_öt8_gë
(
cv
);

2650 i‡(
	`ønge_check
(
i
, 
cs
->
cgs_øngecv_low
, cs->
cgs_øngecv_high
, 
öt8
)){

2651 i‡(
ªas⁄
)

2652 *
ªas⁄
 = 
	`˛igí_ªas⁄
("Numbî ouào‡ønge: %ld", 
i
);

2653 
ªtvÆ
 = 0;

2658 
CGV_INT16
:

2659 i‡(
cs
->
cgs_ønge
){

2660 
i
 = 
	`cv_öt16_gë
(
cv
);

2661 i‡(
	`ønge_check
(
i
, 
cs
->
cgs_øngecv_low
, cs->
cgs_øngecv_high
, 
öt16
)){

2662 i‡(
ªas⁄
)

2663 *
ªas⁄
 = 
	`˛igí_ªas⁄
("Numbî ouào‡ønge: %ld", 
i
);

2664 
ªtvÆ
 = 0;

2669 
CGV_INT32
:

2670 i‡(
cs
->
cgs_ønge
){

2671 
i
 = 
	`cv_öt32_gë
(
cv
);

2672 i‡(
	`ønge_check
(
i
, 
cs
->
cgs_øngecv_low
, cs->
cgs_øngecv_high
, 
öt32
)){

2673 i‡(
ªas⁄
)

2674 *
ªas⁄
 = 
	`˛igí_ªas⁄
("Numbî ouào‡ønge: %ld", 
i
);

2675 
ªtvÆ
 = 0;

2680 
CGV_INT64
:

2681 i‡(
cs
->
cgs_ønge
){

2682 
i
 = 
	`cv_öt64_gë
(
cv
);

2683 i‡(
	`ønge_check
(
i
, 
cs
->
cgs_øngecv_low
, cs->
cgs_øngecv_high
, 
öt64
)){

2684 i‡(
ªas⁄
)

2685 *
ªas⁄
 = 
	`˛igí_ªas⁄
("Numbî ouào‡ønge: %ld", 
i
);

2686 
ªtvÆ
 = 0;

2691 
CGV_UINT8
:

2692 i‡(
cs
->
cgs_ønge
){

2693 
u
 = 
	`cv_uöt8_gë
(
cv
);

2694 i‡(
	`ønge_check
(
u
, 
cs
->
cgs_øngecv_low
, cs->
cgs_øngecv_high
, 
uöt8
)){

2695 i‡(
ªas⁄
)

2696 *
ªas⁄
 = 
	`˛igí_ªas⁄
("Numbî ouào‡ønge: %lu", 
u
);

2697 
ªtvÆ
 = 0;

2702 
CGV_UINT16
:

2703 i‡(
cs
->
cgs_ønge
){

2704 
u
 = 
	`cv_uöt16_gë
(
cv
);

2705 i‡(
	`ønge_check
(
u
, 
cs
->
cgs_øngecv_low
, cs->
cgs_øngecv_high
, 
uöt16
)){

2706 i‡(
ªas⁄
)

2707 *
ªas⁄
 = 
	`˛igí_ªas⁄
("Numbî ouào‡ønge: %lu", 
u
);

2708 
ªtvÆ
 = 0;

2713 
CGV_UINT32
:

2714 i‡(
cs
->
cgs_ønge
){

2715 
u
 = 
	`cv_uöt32_gë
(
cv
);

2716 i‡(
	`ønge_check
(
u
, 
cs
->
cgs_øngecv_low
, cs->
cgs_øngecv_high
, 
uöt32
)){

2717 i‡(
ªas⁄
)

2718 *
ªas⁄
 = 
	`˛igí_ªas⁄
("Numbî ouào‡ønge: %lu", 
u
);

2719 
ªtvÆ
 = 0;

2724 
CGV_UINT64
:

2725 i‡(
cs
->
cgs_ønge
){

2726 
u
 = 
	`cv_uöt64_gë
(
cv
);

2727 i‡(
	`ønge_check
(
u
, 
cs
->
cgs_øngecv_low
, cs->
cgs_øngecv_high
, 
uöt64
)){

2728 i‡(
ªas⁄
)

2729 *
ªas⁄
 = 
	`˛igí_ªas⁄
("Numbî ouào‡ønge: %lu", 
u
);

2730 
ªtvÆ
 = 0;

2735 
CGV_DEC64
:

2736 i‡(
	`cv_dec64_n_gë
(
cv
Ë!
cs
->
cgs_dec64_n
){

2737 i‡(
ªas⁄
)

2738 *
ªas⁄
 = 
	`˛igí_ªas⁄
("Decimal 64 fraction-bits mismatch %d(cv) != %d(spec)",

2739 
cv
->
v¨_dec64_n
, 
cs
->
cgs_dec64_n
);

2740 
ªtvÆ
 = 0;

2742 i‡(
cs
->
cgs_ønge
){

2743 
i
 = 
	`cv_öt64_gë
(
cv
);

2744 i‡(
	`ønge_check
(
i
, 
cs
->
cgs_øngecv_low
, cs->
cgs_øngecv_high
, 
öt64
)){

2745 i‡(
ªas⁄
){

2746 *
s
 = 
	`cv2°r_dup
(
cv
);

2747 *
ªas⁄
 = 
	`˛igí_ªas⁄
("Numbî ouào‡ønge: %s", 
s
);

2748 
	`‰ì
(
s
);

2750 
ªtvÆ
 = 0;

2755 
CGV_STRING
:

2756 
°r
 = 
	`cv_°rög_gë
(
cv
);

2757 i‡(
cs
->
cgs_ønge
){

2758 
u
 = 
	`°æí
(
°r
);

2759 i‡(
	`ønge_check
(
u
, 
cs
->
cgs_øngecv_low
, cs->
cgs_øngecv_high
, 
uöt64
)){

2760 i‡(
ªas⁄
)

2761 *
ªas⁄
 = 
	`˛igí_ªas⁄
("SåögÜígthÇŸ wôhöÜimôs: %lu", 
u
);

2762 
ªtvÆ
 = 0;

2766 i‡(
cs
->
cgs_ªgex
 !
NULL
){

2767 i‡((
ªtvÆ
 = 
	`m©ch_ªgexp
(
	`cv_°rög_gë
(
cv
), 
cs
->
cgs_ªgex
)) < 0)

2769 i‡(
ªtvÆ
 == 0){

2770 i‡(
ªas⁄
)

2771 *
ªas⁄
 = 
	`˛igí_ªas⁄
("regexp match fail: %s doesÇot match %s",

2772 
	`cv_°rög_gë
(
cv
), 
cs
->
cgs_ªgex
);

2773 
ªtvÆ
 = 0;

2778 
CGV_ERR
:

2779 
CGV_VOID
:

2780 
ªtvÆ
 = 0;

2781 i‡(
ªas⁄
)

2782 *
ªas⁄
 = 
	`˛igí_ªas⁄
("Invalid cv");

2783 
ªtvÆ
 = 0;

2785 
CGV_BOOL
:

2786 
CGV_INTERFACE
:

2787 
CGV_REST
:

2788 
CGV_IPV4ADDR
:

2789 
CGV_IPV6ADDR
:

2790 
CGV_IPV4PFX
:

2791 
CGV_IPV6PFX
:

2792 
CGV_MACADDR
:

2793 
CGV_URL
:

2794 
CGV_UUID
:

2795 
CGV_TIME
:

2796 
CGV_EMPTY
:

2799 i‡(
ªas⁄
 && *reason)

2800 
	`as£π
(
ªtvÆ
 == 0);

2801  
ªtvÆ
;

2802 
	}
}

2810 
	$cv_cmp
(
cg_v¨
 *
cv1
,

2811 
cg_v¨
 *
cv2
)

2813 
n
;

2816 if(
cv1
->
v¨_ty≥
 !
cv2
->var_type)

2817  
cv1
->
v¨_ty≥
 - 
cv2
->var_type;

2819 
cv1
->
v¨_ty≥
) {

2820 
CGV_ERR
:

2822 
CGV_INT8
:

2823  (
cv1
->
v¨_öt8
 - 
cv2
->var_int8);

2824 
CGV_INT16
:

2825  (
cv1
->
v¨_öt16
 - 
cv2
->var_int16);

2826 
CGV_INT32
:

2827  (
cv1
->
v¨_öt32
 - 
cv2
->var_int32);

2828 
CGV_INT64
:

2829  (
cv1
->
v¨_öt64
 - 
cv2
->var_int64);

2830 
CGV_UINT8
:

2831  (
cv1
->
v¨_uöt8
 - 
cv2
->var_uint8);

2832 
CGV_UINT16
:

2833  (
cv1
->
v¨_uöt16
 - 
cv2
->var_uint16);

2834 
CGV_UINT32
:

2835  (
cv1
->
v¨_uöt32
 - 
cv2
->var_uint32);

2836 
CGV_UINT64
:

2837  (
cv1
->
v¨_uöt64
 - 
cv2
->var_uint64);

2838 
CGV_DEC64
:

2839  (
	`cv_dec64_i_gë
(
cv1
Ë- cv_dec64_i_gë(
cv2
) &&

2840 
	`cv_dec64_n_gë
(
cv1
Ë- cv_dec64_n_gë(
cv2
));

2841 
CGV_BOOL
:

2842  (
cv1
->
v¨_boﬁ
 - 
cv2
->var_bool);

2843 
CGV_REST
:

2844 
CGV_STRING
:

2845 
CGV_INTERFACE
:

2846  
	`°rcmp
(
cv1
->
v¨_°rög
, 
cv2
->var_string);

2847 
CGV_IPV4ADDR
:

2848  
	`memcmp
(&
cv1
->
v¨_ùv4addr
, &
cv2
->var_ipv4addr,

2849 (
cv1
->
v¨_ùv4addr
));

2850 
CGV_IPV4PFX
:

2851 i‡((
n
 = 
	`memcmp
(&
cv1
->
v¨_ùv4addr
, &
cv2
->var_ipv4addr,

2852 (
cv1
->
v¨_ùv4addr
))))

2853  
n
;

2854  
cv1
->
v¨_ùv4maskÀn
 - 
cv2
->var_ipv4masklen;

2855 
CGV_IPV6ADDR
:

2856  
	`memcmp
(&
cv1
->
v¨_ùv6addr
, &
cv2
->var_ipv6addr,

2857  (
cv1
->
v¨_ùv6addr
));

2858 
CGV_IPV6PFX
:

2859 i‡((
n
 = 
	`memcmp
(&
cv1
->
v¨_ùv6addr
, &
cv2
->var_ipv6addr,

2860 (
cv1
->
v¨_ùv6addr
))))

2861  
n
;

2862  
cv1
->
v¨_ùv6maskÀn
 - 
cv2
->var_ipv6masklen;

2863 
CGV_MACADDR
:

2864  
	`memcmp
(&
cv1
->
v¨_maˇddr
, &
cv2
->var_macaddr,

2865  (
cv1
->
v¨_maˇddr
));

2867 
CGV_URL
:

2868 i‡((
n
 = 
	`°rcmp
(
cv1
->
v¨_uæ¥Ÿo
, 
cv2
->var_urlproto)))

2869  
n
;

2870 i‡((
n
 = 
	`°rcmp
(
cv1
->
v¨_uæaddr
, 
cv2
->var_urladdr)))

2871  
n
;

2872 i‡((
n
 = 
	`°rcmp
(
cv1
->
v¨_uæ∑th
, 
cv2
->var_urlpath)))

2873  
n
;

2874 i‡((
n
 = 
	`°rcmp
(
cv1
->
v¨_uæu£r
, 
cv2
->var_urluser)))

2875  
n
;

2876  
	`°rcmp
(
cv1
->
v¨_uæ∑sswd
, 
cv2
->var_urlpasswd);

2877 
CGV_UUID
:

2878  
	`memcmp
(
cv1
->
v¨_uuid
, 
cv2
->var_uuid, 16);

2879 
CGV_TIME
:

2880  
	`memcmp
(&
cv1
->
v¨_time
, &
cv2
->v¨_time, (
timevÆ
));

2881 
CGV_VOID
:

2882  (
cv1
->
v¨_void
 =
cv2
->var_void);

2883 
CGV_EMPTY
:

2888 
	}
}

2900 
	$cv_˝
(
cg_v¨
 *
√w
,

2901 
cg_v¨
 *
ﬁd
)

2903 
ªtvÆ
 = -1;

2905 
	`mem˝y
(
√w
, 
ﬁd
, (*old));

2906 i‡(
ﬁd
->
v¨_«me
)

2907 i‡((
√w
->
v¨_«me
 = 
	`°rdup
(
ﬁd
->v¨_«me)Ë=
NULL
)

2908 
d⁄e
;

2909 i‡(
ﬁd
->
v¨_show
)

2910 i‡((
√w
->
v¨_show
 = 
	`°rdup
(
ﬁd
->v¨_show)Ë=
NULL
)

2911 
d⁄e
;

2912 
√w
->
v¨_ty≥
) {

2913 
CGV_ERR
:

2915 
CGV_INT8
:

2916 
CGV_INT16
:

2917 
CGV_INT32
:

2918 
CGV_INT64
:

2919 
CGV_UINT8
:

2920 
CGV_UINT16
:

2921 
CGV_UINT32
:

2922 
CGV_UINT64
:

2923 
CGV_DEC64
:

2924 
CGV_BOOL
:

2926 
CGV_REST
:

2927 
CGV_STRING
:

2928 
CGV_INTERFACE
:

2929 i‡(
ﬁd
->
v¨_°rög
)

2930 i‡((
√w
->
v¨_°rög
 = 
	`°rdup
(
ﬁd
->v¨_°rög)Ë=
NULL
)

2931 
d⁄e
;

2933 
CGV_IPV4ADDR
:

2934 
CGV_IPV4PFX
:

2935 
CGV_IPV6ADDR
:

2936 
CGV_IPV6PFX
:

2937 
CGV_MACADDR
:

2939 
CGV_URL
:

2940 i‡(
ﬁd
->
v¨_uæ¥Ÿo
)

2941 i‡((
√w
->
v¨_uæ¥Ÿo
 = 
	`°rdup
(
ﬁd
->v¨_uæ¥Ÿo)Ë=
NULL
)

2942 
d⁄e
;

2943 i‡(
ﬁd
->
v¨_uæaddr
)

2944 i‡((
√w
->
v¨_uæaddr
 = 
	`°rdup
(
ﬁd
->v¨_uæaddr)Ë=
NULL
)

2945 
d⁄e
;

2946 i‡(
ﬁd
->
v¨_uæ∑th
)

2947 i‡((
√w
->
v¨_uæ∑th
 = 
	`°rdup
(
ﬁd
->v¨_uæ∑th)Ë=
NULL
)

2948 
d⁄e
;

2949 i‡(
ﬁd
->
v¨_uæu£r
)

2950 i‡((
√w
->
v¨_uæu£r
 = 
	`°rdup
(
ﬁd
->v¨_uæu£r)Ë=
NULL
)

2951 
d⁄e
;

2952 i‡(
ﬁd
->
v¨_uæ∑sswd
)

2953 i‡((
√w
->
v¨_uæ∑sswd
 = 
	`°rdup
(
ﬁd
->v¨_uæ∑sswd)Ë=
NULL
)

2954 
d⁄e
;

2956 
CGV_UUID
:

2958 
CGV_TIME
:

2960 
CGV_VOID
:

2961 
√w
->
v¨_void
 = 
ﬁd
->var_void;

2963 
CGV_EMPTY
:

2966 
ªtvÆ
 = 0;

2967 
d⁄e
:

2968  
ªtvÆ
;

2969 
	}
}

2976 
cg_v¨
 *

2977 
	$cv_dup
(
cg_v¨
 *
ﬁd
)

2979 
cg_v¨
 *
√w
;

2981 i‡((
√w
 = 
	`cv_√w
(
ﬁd
->
v¨_ty≥
)Ë=
NULL
)

2982  
NULL
;

2983 i‡(
	`cv_˝
(
√w
, 
ﬁd
) < 0){

2984 
	`cv_‰ì
(
√w
);

2985  
NULL
;

2987  
√w
;

2988 
	}
}

2998 
cg_v¨
 *

2999 
	$cv_√w
(
cv_ty≥
 
ty≥
)

3001 
cg_v¨
 *
cv
;

3003 i‡((
cv
 = 
	`mÆloc
((
cg_v¨
))Ë=
NULL
)

3004 
d⁄e
;

3005 
	`mem£t
(
cv
, 0, (*cv));

3006 
cv
->
v¨_ty≥
 = 
ty≥
;

3007 
d⁄e
:

3008  
cv
;

3010 
	}
}

3018 
	$cv_ª£t
(
cg_v¨
 *
cv
)

3020 
cv_ty≥
 
ty≥
 = 
cv
->
v¨_ty≥
;

3022 i‡(
cv
->
v¨_«me
)

3023 
	`‰ì
(
cv
->
v¨_«me
);

3024 i‡(
cv
->
v¨_show
)

3025 
	`‰ì
(
cv
->
v¨_show
);

3026 
cv
->
v¨_ty≥
) {

3027 
CGV_REST
:

3028 
CGV_STRING
:

3029 
CGV_INTERFACE
:

3030 i‡(
cv
->
v¨_°rög
)

3031 
	`‰ì
(
cv
->
v¨_°rög
);

3033 
CGV_URL
:

3034 i‡(
cv
->
v¨_uæ¥Ÿo
)

3035 
	`‰ì
(
cv
->
v¨_uæ¥Ÿo
);

3036 i‡(
cv
->
v¨_uæaddr
)

3037 
	`‰ì
(
cv
->
v¨_uæaddr
);

3038 i‡(
cv
->
v¨_uæ∑th
)

3039 
	`‰ì
(
cv
->
v¨_uæ∑th
);

3040 i‡(
cv
->
v¨_uæu£r
)

3041 
	`‰ì
(
cv
->
v¨_uæu£r
);

3042 i‡(
cv
->
v¨_uæ∑sswd
)

3043 
	`‰ì
(
cv
->
v¨_uæ∑sswd
);

3045 
CGV_VOID
:

3046 
CGV_EMPTY
:

3051 
	`mem£t
(
cv
, 0, (*cv));

3052 
cv
->
v¨_ty≥
 = 
ty≥
;

3054 
	}
}

3061 
	$cv_‰ì
(
cg_v¨
 *
cv
)

3063 
	`cv_ª£t
(
cv
);

3064 
	`‰ì
(
cv
);

3066 
	}
}

3079 
	$m©ch_ªgexp
(*
°rög
,

3080 *
∑âîn0
)

3082 #ifde‡
HAVE_REGEX_H


3083 
∑âîn
[1024];

3084 
°©us
;

3085 
ªgex_t
 
ª
;

3086 
îrbuf
[1024];

3087 
Àn0
;

3089 
Àn0
 = 
	`°æí
(
∑âîn0
);

3090 i‡(
Àn0
 > (
∑âîn
)-5){

3091 
	`Ârötf
(
°dîr
, "patternÅooÜong\n");

3094 
	`°∫˝y
(
∑âîn
, "^(", 2);

3095 
	`°∫˝y
(
∑âîn
+2, 
∑âîn0
, (pattern)-2);

3096 
	`°∫ˇt
(
∑âîn
, ")$", ’©ã∫)-
Àn0
-1);

3097 i‡(
	`ªgcomp
(&
ª
, 
∑âîn
, 
REG_NOSUB
|
REG_EXTENDED
) != 0)

3099 
°©us
 = 
	`ªgexec
(&
ª
, 
°rög
, (
size_t
Ë0, 
NULL
, 0);

3100 
	`ªg‰ì
(&
ª
);

3101 i‡(
°©us
 != 0) {

3102 
	`ªgîr‹
(
°©us
, &
ª
, 
îrbuf
, (errbuf));

3107 
	}
}

	@cligen-master/cligen_var.h

40 #i‚de‡
_CLIGEN_VAR_H_


41 
	#_CLIGEN_VAR_H_


	)

43 
	~<°döt.h
>

45 
	tuuid_t
[16];

54 
	ecv_ty≥
{

55 
	mCGV_ERR
=0,

56 
	mCGV_INT8
,

57 
	mCGV_INT16
,

58 
	mCGV_INT32
,

59 
	mCGV_INT64
,

60 
	mCGV_UINT8
,

61 
	mCGV_UINT16
,

62 
	mCGV_UINT32
,

63 
	mCGV_UINT64
,

64 
	mCGV_DEC64
,

65 
	mCGV_BOOL
,

66 
	mCGV_REST
,

67 
	mCGV_STRING
,

68 
	mCGV_INTERFACE
,

69 
	mCGV_IPV4ADDR
,

70 
	mCGV_IPV4PFX
,

71 
	mCGV_IPV6ADDR
,

72 
	mCGV_IPV6PFX
,

73 
	mCGV_MACADDR
,

74 
	mCGV_URL
,

75 
	mCGV_UUID
,

76 
	mCGV_TIME
,

77 
	mCGV_VOID
,

78 
	mCGV_EMPTY
,

82 #ifde‡
CLIGEN_COMPAT_INT


83 
	#CGV_INT
 
CGV_INT32


	)

84 
	#CGV_LONG
 
CGV_INT64


	)

86 
	#cv_öt_gë
(
cv
Ë
	`cv_öt32_gë
(cv)

	)

87 
	#cv_öt_£t
(
cv
, 
x
Ë
	`cv_öt32_£t
(cv, x)

	)

89 
	#cv_l⁄g_gë
(
cv
Ë
	`cv_öt64_gë
(cv)

	)

90 
	#cv_l⁄g_£t
(
cv
, 
x
Ë
	`cv_öt64_£t
(cv, x)

	)

96 
	#cv_isöt
(
t
)(—)==
CGV_INT8
 || (t)==
CGV_INT16
|| \

97 (
t
)==
CGV_INT32
 || (t)==
CGV_INT64
|| \

98 (
t
)==
CGV_UINT8
 || (t)==
CGV_UINT16
|| \

99 (
t
)==
CGV_UINT32
 || (t)==
CGV_UINT64
)

	)

102 
	#cv_ölöe
(
t
)(—)==
CGV_ERR
 || 
	`cv_isöt
(t)|| \

103 (
t
)==
CGV_DEC64
 || (t)==
CGV_BOOL
|| \

104 (
t
)==
CGV_IPV4ADDR
 || (t)==
CGV_IPV4PFX
|| \

105 (
t
)==
CGV_IPV6ADDR
 || (t)==
CGV_IPV6PFX
|| \

106 (
t
)==
CGV_MACADDR
 || (t)==
CGV_UUID
|| \

107 (
t
)==
CGV_TIME
 || (t)==
CGV_EMPTY
)

	)

110 
	#cv_is°rög
(
t
)(—)==
CGV_STRING
||—)==
CGV_REST
|| \

111 (
t
)==
CGV_INTERFACE
)

	)

113 
	#cv_ty≥max
(
t
)

	)

124 
cg_v¨
 
	tcg_v¨
;

126 
	gcg_obj
;

128 
	gcg_v¨•ec
;

133 *
cv_«me_gë
(
cg_v¨
 *
cv
);

134 *
cv_«me_£t
(
cg_v¨
 *
cv
, *
s0
);

135 
cv_ty≥
 
cv_ty≥_gë
(
cg_v¨
 *
cv
);

136 
cv_ty≥
 
cv_ty≥_£t
(
cg_v¨
 *
cv
, cv_ty≥ 
x
);

137 
cv_c⁄°_gë
(
cg_v¨
 *
cv
);

138 
cv_c⁄°_£t
(
cg_v¨
 *
cv
, 
c
);

140 
cv_Êag
(
cg_v¨
 *
cv
, 
mask
);

141 
cv_Êag_˛r
(
cg_v¨
 *
cv
, 
mask
);

142 
cv_Êag_£t
(
cg_v¨
 *
cv
, 
mask
);

144 *
cv_vÆue_gë
(
cg_v¨
 *
cv
);

146 
cv_boﬁ_gë
(
cg_v¨
 *
cv
);

147 
cv_boﬁ_£t
(
cg_v¨
 *
cv
, 
x
);

148 
öt8_t
 
cv_öt8_gë
(
cg_v¨
 *
cv
);

149 
öt8_t
 
cv_öt8_£t
(
cg_v¨
 *
cv
, i¡8_à
x
);

150 
öt16_t
 
cv_öt16_gë
(
cg_v¨
 *
cv
);

151 
öt16_t
 
cv_öt16_£t
(
cg_v¨
 *
cv
, i¡16_à
x
);

152 
öt32_t
 
cv_öt32_gë
(
cg_v¨
 *
cv
);

153 
öt32_t
 
cv_öt32_£t
(
cg_v¨
 *
cv
, i¡32_à
x
);

154 
öt64_t
 
cv_öt64_gë
(
cg_v¨
 *
cv
);

155 
öt64_t
 
cv_öt64_£t
(
cg_v¨
 *
cv
, i¡64_à
x
);

157 
uöt8_t
 
cv_uöt8_gë
(
cg_v¨
 *
cv
);

158 
uöt8_t
 
cv_uöt8_£t
(
cg_v¨
 *
cv
, uöt8_à
x
);

159 
uöt16_t
 
cv_uöt16_gë
(
cg_v¨
 *
cv
);

160 
uöt16_t
 
cv_uöt16_£t
(
cg_v¨
 *
cv
, uöt16_à
x
);

161 
uöt32_t
 
cv_uöt32_gë
(
cg_v¨
 *
cv
);

162 
uöt32_t
 
cv_uöt32_£t
(
cg_v¨
 *
cv
, uöt32_à
x
);

163 
uöt64_t
 
cv_uöt64_gë
(
cg_v¨
 *
cv
);

164 
uöt64_t
 
cv_uöt64_£t
(
cg_v¨
 *
cv
, uöt64_à
x
);

166 
uöt8_t
 
cv_dec64_n_gë
(
cg_v¨
 *
cv
);

167 
uöt8_t
 
cv_dec64_n_£t
(
cg_v¨
 *
cv
, uöt8_à
x
);

168 
öt64_t
 
cv_dec64_i_gë
(
cg_v¨
 *
cv
);

169 
öt64_t
 
cv_dec64_i_£t
(
cg_v¨
 *
cv
, i¡64_à
x
);

171 *
cv_°rög_gë
(
cg_v¨
 *
cv
);

172 *
cv_°rög_£t
(
cg_v¨
 *
cv
, *
s0
);

173 
ö_addr
 *
cv_ùv4addr_gë
(
cg_v¨
 *
cv
);

174 
uöt8_t
 
cv_ùv4maskÀn_gë
(
cg_v¨
 *
cv
);

175 
ö6_addr
 *
cv_ùv6addr_gë
(
cg_v¨
 *
cv
);

176 
uöt8_t
 
cv_ùv6maskÀn_gë
(
cg_v¨
 *
cv
);

177 *
cv_mac_gë
(
cg_v¨
 *
cv
);

178 *
cv_uuid_gë
(
cg_v¨
 *
cv
);

179 *
cv_uuid_£t
(
cg_v¨
 *
cv
, *
u
);

180 
timevÆ
 
cv_time_gë
(
cg_v¨
 *
cv
);

181 
timevÆ
 
cv_time_£t
(
cg_v¨
 *
cv
, timevÆ 
t
);

182 *
cv_uæ¥Ÿo_gë
(
cg_v¨
 *
cv
);

183 *
cv_uæ¥Ÿo_£t
(
cg_v¨
 *
cv
, *
s0
);

184 *
cv_uæaddr_gë
(
cg_v¨
 *
cv
);

185 *
cv_uæaddr_£t
(
cg_v¨
 *
cv
, *
s0
);

186 *
cv_uæ∑th_gë
(
cg_v¨
 *
cv
);

187 *
cv_uæ∑th_£t
(
cg_v¨
 *
cv
, *
s0
);

188 *
cv_uæu£r_gë
(
cg_v¨
 *
cv
);

189 *
cv_uæu£r_£t
(
cg_v¨
 *
cv
, *
s0
);

190 *
cv_uæ∑sswd_gë
(
cg_v¨
 *
cv
);

191 *
cv_uæ∑sswd_£t
(
cg_v¨
 *
cv
, *
s0
);

193 
∑r£_uöt8
(*
°r
, 
uöt8_t
 *
vÆ
, **
ªas⁄
);

194 
∑r£_öt32
(*
°r
, 
öt32_t
 *
vÆ
, **
ªas⁄
);

195 
∑r£_öt64
(*
°r
, 
öt64_t
 *
vÆ
, **
ªas⁄
);

196 
∑r£_öt64_ba£
(*
°r
, 
ba£
, 
öt64_t
 *
vÆ
, **
ªas⁄
);

197 
∑r£_uöt64
(*
°r
, 
uöt64_t
 *
vÆ
, **
ªas⁄
);

198 
∑r£_dec64
(*
°r
, 
uöt8_t
 
n
, 
öt64_t
 *
dec64_i
, **
ªas⁄
);

199 
°r2uæ¥Ÿo
(*
°r
);

200 
°r2uuid
(*
ö
, 
uuid_t
 
u
);

201 
uuid2°r
(
uuid_t
 
u
, *
ö
, 
Àn
);

202 
°r2time
(*
ö
, 
timevÆ
 *
tv
);

203 
time2°r
(
timevÆ
 
tv
, *
fmt
, 
Àn
);

205 
cv_ty≥
 
cv_°r2ty≥
(*
°r
);

206 *
cv_ty≥2°r
(
cv_ty≥
 
ty≥
);

207 
cv_Àn
(
cg_v¨
 *
cgv
);

208 
cv2cbuf
(
cg_v¨
 *
cv
, 
cbuf
 *
cb
);

209 
cv2°r
(
cg_v¨
 *
cv
, *
°r
, 
size_t
 
size
);

210 *
cv2°r_dup
(
cg_v¨
 *
cv
);

212 
cv_¥öt
(
FILE
 *
f
, 
cg_v¨
 *
cgv
);

213 
cvty≥_max2°r
(
cv_ty≥
 
ty≥
, *
°r
, 
size_t
 
size
);

214 
	#HAVE_CLIGEN_MAX2STR
 1

	)

215 *
cvty≥_max2°r_dup
(
cv_ty≥
 
ty≥
);

216 
cv_cmp
(
cg_v¨
 *
cgv1
, cg_v¨ *
cgv2
);

217 
cv_˝
(
cg_v¨
 *
n
, cg_v¨ *
ﬁd
);

218 
cg_v¨
 *
cv_dup
(cg_v¨ *
ﬁd
);

219 
cv_∑r£
(*
°r
, 
cg_v¨
 *
cgv
);

220 
cv_∑r£1
(*
°r
, 
cg_v¨
 *
cgv
, **
ªas⁄
);

222 
cv_vÆid©e
(
cg_v¨
 *
cv
, 
cg_v¨•ec
 *
cs
, **
ªas⁄
);

223 
cv_ª£t
(
cg_v¨
 *
cgv
);

224 
cv_‰ì
(
cg_v¨
 *
cv
);

225 
cg_v¨
 *
cv_√w
(
cv_ty≥
 
ty≥
);

226 
m©ch_ªgexp
(*
°rög
, *
∑âîn0
);

	@cligen-master/getline.c

17 
	~"˛igí_c⁄fig.h
"

19 
	~<°ddef.h
>

20 
	~<°dio.h
>

21 
	~<°dlib.h
>

22 
	~<√töë/ö.h
>

23 
	~<°rög.h
>

24 
	~<˘y≥.h
>

25 
	~<î∫o.h
>

26 
	~<sig«l.h
>

28 
	~"˛igí_buf.h
"

29 
	~"˛igí_v¨.h
"

30 
	~"˛igí_cvec.h
"

31 
	~"˛igí_gí.h
"

32 
	~"˛igí_io.h
"

33 
	~"˛igí_h™dÀ.h
"

35 
	~"gëlöe.h
"

39 (*
	ggl_ö_hook
)(Ë
NULL
;

40 (*
	ggl_out_hook
)(Ë
NULL
;

41 (*
	ggl_èb_hook
)(Ë
NULL
;

42 (*
	ggl_qm¨k_hook
)(Ë
NULL
;

43 (*
	ggl_su•_hook
)(Ë
NULL
;

44 (*
	ggl_öãºu±_hook
)(Ë
NULL
;

49 
gl_öô
();

50 
gl_˛ónup
();

51 
gl_ch¨_öô
();

52 
gl_ch¨_˛ónup
();

53 
size_t
 (*
gl_°æí
)(Ë(
	$size_t
(*)())
°æí
;

56 
	`gl_addch¨
(
˛igí_h™dÀ
 
h
, 
c
);

57 
	`gl_dñ
(
˛igí_h™dÀ
 
h
, 
loc
);

58 
	`gl_îr‹
(*
buf
);

59 
ölöe
 
	`gl_fixup
(
˛igí_h™dÀ
 
h
, *,,);

60 
	`gl_gëc
(
˛igí_h™dÀ
 
h
);

61 
	`gl_kûl
(
˛igí_h™dÀ
 
h
, 
pos
);

62 
	`gl_kûl_begö
(
˛igí_h™dÀ
 
h
, 
pos
);

63 
	`gl_kûl_w‹d
(
˛igí_h™dÀ
 
h
, 
pos
);

64 
	`gl_√wlöe
(
˛igí_h™dÀ
);

65 
	`gl_putc
(
c
);

66 
	`gl_puts
(*
buf
);

68 
	`gl_å™•o£
(
˛igí_h™dÀ
 
h
);

69 
	`gl_y™k
(
˛igí_h™dÀ
 
h
);

70 
	`gl_w‹d
(
˛igí_h™dÀ
 
h
, 
dú
);

72 
	`hi°_öô
();

73 *
	`hi°_√xt
();

74 *
	`hi°_¥ev
();

75 *
	`hi°_ßve
(*
p
);

77 
	`£¨ch_addch¨
(
˛igí_h™dÀ
 
h
, 
c
);

78 
	`£¨ch_ãrm
(
˛igí_h™dÀ
);

79 
	`£¨ch_back
(
˛igí_h™dÀ
 
h
, 
√w
);

80 
	`£¨ch_f‹w
(
˛igí_h™dÀ
 
h
, 
√w
);

84 
gl_öô_d⁄e
 = -1;

85 
gl_ãrmw
 = 80;

86 
gl_s¸ﬁlög_mode
 = 1;

87 
gl_s¸ﬁlw
 = 27;

88 
gl_width
 = 0;

89 
gl_exã¡
 = 0;

90 
gl_ovîwrôe
 = 0;

91 
gl_pos
, 
gl_˙t
 = 0;

93 
gl_öåc
 = 0;

94 
gl_quôc
 = 0;

95 
gl_su•c
 = 0;

96 
gl_dsu•c
 = 0;

97 
gl_£¨ch_mode
 = 0;

99 
exôch¨s
[8] = {0,
	}
};

100 
	ggl_i£of
 = 0;

102 
	gfixup_gl_shi·
;

103 
	gfixup_off_right
;

104 
	gfixup_off_À·
;

105 
	gfixup_œ°_¥om±
[80] = "";

107 
	#HIST_SIZE
 100

	)

108 
	ghi°_pos
 = 0, 
	ghi°_œ°
 = 0;

109 *
	ghi°_buf
[
HIST_SIZE
];

110 *
	ghi°_¥e
 = 0;

112 
	#SEARCH_LEN
 100

	)

113 
	g£¨ch_¥om±
[
SEARCH_LEN
+2];

114 
	g£¨ch_°rög
[
SEARCH_LEN
];

115 
	g£¨ch_pos
 = 0;

116 
	g£¨ch_f‹w_Êg
 = 0;

117 
	g£¨ch_œ°
 = 0;

124 #ifde‡
unix


125 #i‚de‡
__unix__


126 
	#__unix__


	)

130 #ifde‡
_IBMR2


131 #i‚de‡
__unix__


132 
	#__unix__


	)

136 #ifde‡
__GO32__


137 
	~<pc.h
>

138 #unde‡
MSDOS


139 #unde‡
__unix__


142 #ifde‡
MSDOS


143 
	~<bios.h
>

146 #ifde‡
__unix__


147 
	~<uni°d.h
>

149 
	#POSIX


	)

150 #ifde‡
POSIX


151 
	~<ãrmios.h
>

152 
ãrmios
 
	g√w_ãrmios
, 
	gﬁd_ãrmios
;

154 
	~<sys/io˘l.h
>

155 #ifde‡
M_XENIX


156 #unde‡
TIOCSETN


158 #ifde‡
TIOCSETN


159 
	~<sgây.h
>

160 
sgâyb
 
	g√w_ây
, 
	gﬁd_ây
;

161 
tch¨s
 
	gtch
;

162 
…ch¨s
 
	g…ch
;

164 
	~<ãrmio.h
>

165 
ãrmio
 
	g√w_ãrmio
, 
	gﬁd_ãrmio
;

170 #ifde‡
vms


171 
	~<des¸ù.h
>

172 
	~<âdef.h
>

173 
	~<iodef.h
>

174 #ö˛udê
unixio


176 
	g£tbuff
[2];

177 
	gch™
 = -1;

178 
dsc$des¸ùt‹_s
 
	gdes¸ù
;

182 
	$gl_ch¨_öô
()

184 #ifde‡
__unix__


185 #ifde‡
POSIX


186 
	`tcgë©å
(0, &
ﬁd_ãrmios
);

187 
gl_öåc
 = 
ﬁd_ãrmios
.
c_cc
[
VINTR
];

188 
gl_quôc
 = 
ﬁd_ãrmios
.
c_cc
[
VQUIT
];

189 #ifde‡
VSUSP


190 
gl_su•c
 = 
ﬁd_ãrmios
.
c_cc
[
VSUSP
];

192 #ifde‡
VDSUSP


193 
gl_dsu•c
 = 
ﬁd_ãrmios
.
c_cc
[
VDSUSP
];

195 
√w_ãrmios
 = 
ﬁd_ãrmios
;

196 
√w_ãrmios
.
c_iÊag
 &~(
BRKINT
|
ISTRIP
|
IXON
|
IXOFF
);

197 
√w_ãrmios
.
c_iÊag
 |(
IGNBRK
|
IGNPAR
);

198 
√w_ãrmios
.
c_lÊag
 &~(
ICANON
|
ISIG
|
IEXTEN
|
ECHO
);

199 
√w_ãrmios
.
c_cc
[
VMIN
] = 1;

200 
√w_ãrmios
.
c_cc
[
VTIME
] = 0;

201 
	`tc£èâr
(0, 
TCSANOW
, &
√w_ãrmios
);

203 #ifde‡
TIOCSETN


204 
	`io˘l
(0, 
TIOCGETC
, &
tch
);

205 
	`io˘l
(0, 
TIOCGLTC
, &
…ch
);

206 
gl_öåc
 = 
tch
.
t_öåc
;

207 
gl_quôc
 = 
tch
.
t_quôc
;

208 
gl_su•c
 = 
…ch
.
t_su•c
;

209 
gl_dsu•c
 = 
…ch
.
t_dsu•c
;

210 
	`io˘l
(0, 
TIOCGETP
, &
ﬁd_ây
);

211 
√w_ây
 = 
ﬁd_ây
;

212 
√w_ây
.
sg_Êags
 |
RAW
;

213 
√w_ây
.
sg_Êags
 &~
ECHO
;

214 
	`io˘l
(0, 
TIOCSETN
, &
√w_ây
);

216 
	`io˘l
(0, 
TCGETA
, &
ﬁd_ãrmio
);

217 
gl_öåc
 = 
ﬁd_ãrmio
.
c_cc
[
VINTR
];

218 
gl_quôc
 = 
ﬁd_ãrmio
.
c_cc
[
VQUIT
];

219 
√w_ãrmio
 = 
ﬁd_ãrmio
;

220 
√w_ãrmio
.
c_iÊag
 &~(
BRKINT
|
ISTRIP
|
IXON
|
IXOFF
);

221 
√w_ãrmio
.
c_iÊag
 |(
IGNBRK
|
IGNPAR
);

222 
√w_ãrmio
.
c_lÊag
 &~(
ICANON
|
ISIG
|
ECHO
);

223 
√w_ãrmio
.
c_cc
[
VMIN
] = 1;

224 
√w_ãrmio
.
c_cc
[
VTIME
] = 0;

225 
	`io˘l
(0, 
TCSETA
, &
√w_ãrmio
);

230 #ifde‡
vms


231 
des¸ù
.
dsc$w_Àngth
 = 
	`°æí
("tt:");

232 
des¸ù
.
dsc$b_dty≥
 = 
DSC$K_DTYPE_T
;

233 
des¸ù
.
dsc$b_˛ass
 = 
DSC$K_CLASS_S
;

234 
des¸ù
.
dsc$a_poöãr
 = "tt:";

235 ()
	`sys$assign
(&
des¸ù
,&
ch™
,0,0);

236 ()
	`sys$qiow
(0,
ch™
,
IO$_SENSEMODE
,0,0,0,
£tbuff
,8,0,0,0,0);

237 
£tbuff
[1] |
TT$M_NOECHO
;

238 ()
	`sys$qiow
(0,
ch™
,
IO$_SETMODE
,0,0,0,
£tbuff
,8,0,0,0,0);

240 
	}
}

243 
	$gl_ch¨_˛ónup
()

245 #ifde‡
__unix__


246 #ifde‡
POSIX


247 
	`tc£èâr
(0, 
TCSANOW
, &
ﬁd_ãrmios
);

249 #ifde‡
TIOCSETN


250 
	`io˘l
(0, 
TIOCSETN
, &
ﬁd_ây
);

252 
	`io˘l
(0, 
TCSETA
, &
ﬁd_ãrmio
);

257 #ifde‡
vms


258 
£tbuff
[1] &~
TT$M_NOECHO
;

259 ()
	`sys$qiow
(0,
ch™
,
IO$_SETMODE
,0,0,0,
£tbuff
,8,0,0,0,0);

260 
	`sys$dassgn
(
ch™
);

261 
ch™
 = -1;

263 
	}
}

265 #i‡
MSDOS
 || 
__EMX__
 || 
__GO32__


266 
	$pc_keym≠
(
c
)

268 
c
) {

269 72: 
c
 = 16;

271 80: 
c
 = 14;

273 75: 
c
 = 2;

275 77: 
c
 = 6;

277 : 
c
 = 0;

279  
c
;

280 
	}
}

284 #i‡
CLIGEN_REGFD


285 
	sªgfd
 {

286 
	mfd
;

287 (*
	mcb
)(, *);

288 *
	m¨g
;

290 
	g√xtfds
 = 0;

291 
ªgfd
 *
	gextfds
 = 
NULL
;

295 
	$gl_ªgfd
(
fd
,

296 
˛igí_fd_cb_t
 *
cb
,

297 *
¨g
)

299 
i
;

300 
ªgfd
 *
tmp
;

302 
i
 = 0; i < 
√xtfds
; i++) {

303 i‡(
extfds
[
i
].
fd
 == fd) {

304 
extfds
[
i
].
cb
 = cb;

305 
extfds
[
i
].
¨g
 =árg;

310 i‡((
tmp
 = 
	`ªÆloc
(
extfds
, (
√xtfds
+1Ë* (*extfds))Ë=
NULL
)

312 
tmp
[
√xtfds
].
fd
 = fd;

313 
tmp
[
√xtfds
].
cb
 = cb;

314 
tmp
[
√xtfds
].
¨g
 =árg;

315 
extfds
 = 
tmp
;

316 
√xtfds
++;

319 
	}
}

322 
	$gl_uƒegfd
(
fd
)

324 
i
;

326 
i
 = 0; i < 
√xtfds
; i++) {

327 i‡(
extfds
[
i
].
fd
 == fd) {

328 i‡(
i
+1 < 
√xtfds
)

329 
	`mem˝y
(&
extfds
[
i
], &extfds[i+1], 
√xtfds
-i);

330 
extfds
 = 
	`ªÆloc
”xtfds, (
√xtfds
-1) * (*extfds));

331 
√xtfds
--;

337 
	}
}

340 
	$gl_£À˘
()

342 
i
;

343 
fd_£t
 
fd£t
;

346 
	`FD_ZERO
(&
fd£t
);

347 
	`FD_SET
(0, &
fd£t
);

348 
i
 = 0; i < 
√xtfds
; i++)

349 
	`FD_SET
(
extfds
[
i
].
fd
, &
fd£t
);

350 i‡(
	`£À˘
(
FD_SETSIZE
, &
fd£t
, 
NULL
, NULL, NULL) < 0)

352 
i
 = 0; i < 
√xtfds
; i++)

353 i‡(
	`FD_ISSET
(
extfds
[
i
].
fd
, &
fd£t
))

354 i‡(
extfds
[
i
].
	`cb
”xtfds[i].
fd
,Éxtfds[i].
¨g
) < 0)

356 i‡(
	`FD_ISSET
(0, &
fd£t
))

360 
	}
}

365 
	$gl_eof
()

367  
gl_i£of
;

368 
	}
}

371 
	$gl_exôch¨_add
(
c
)

373 
i
;

375 
i
=0;(
exôch¨s
);i++)

376 i‡(!
exôch¨s
[
i
]){

377 
exôch¨s
[
i
] = 
c
;

380 
	}
}

384 
	$gl_exôch¨
(
c
)

386 
i
;

388 
i
=0;(
exôch¨s
);i++){

389 i‡(!
exôch¨s
[
i
])

391 i‡(
exôch¨s
[
i
] =
c
)

395 
	}
}

401 
	$gl_exô
(
˛igí_h™dÀ
 
h
)

403 *
gl_buf
 = 
	`˛igí_buf
(
h
);

405 
gl_i£of
++;

406 
gl_buf
[0] = 0;

407 
	`gl_˛ónup
();

408 
	`gl_putc
('\n');

409  
gl_buf
;

410 
	}
}

416 
	$gl_gëc
(
˛igí_h™dÀ
 
h
)

418 
c
;

419 #ifde‡
__unix__


420 
ch
;

423 #i‡
CLIGEN_REGFD


424 
	`gl_£À˘
();

426 #ifde‡
__unix__


427 (
c
 = 
	`ªad
(0, &
ch
, 1)) == -1) {

428 i‡(
î∫o
 =
EINTR
){

429 i‡(
	`gl_öãºu±_hook
(
h
) <0)

435 i‡(
c
 == 0){

436 
gl_i£of
++;

437 
	`˛igí_buf
(
h
)[0] = 0;

438 
	`gl_˛ónup
();

439 
	`gl_putc
('\n');

442 
c
 = (
ch
 <= 0)? -1 : ch;

444 #ifde‡
MSDOS


445 
c
 = 
	`_bios_keybrd
(
_NKEYBRD_READ
);

447 #ifde‡
__GO32__


448 
c
 = 
	`gëkey
 () ;

449 i‡(
c
 > 255Ë¯
	`pc_keym≠
(c & 0377);

451 #ifde‡
__TURBOC__


452 !
	`bioskey
(1))

454 
c
 = 
	`bioskey
(0);

456 #i‡
MSDOS
 || 
__TURBOC__


457 i‡((
c
 & 0377) == 224) {

458 
c
 = 
	`pc_keym≠
((c >> 8) & 0377);

460 
c
 &= 0377;

463 #ifde‡
__EMX__


464 
c
 = 
	`_ªad_kbd
(0, 1, 0);

465 i‡(
c
 == 224 || c == 0) {

466 
c
 = 
	`pc_keym≠
(
	`_ªad_kbd
(0, 1, 0));

468 
c
 &= 0377;

471 #ifde‡
vms


472 if(
ch™
 < 0) {

473 
c
='\0';

475 ()
	`sys$qiow
(0,
ch™
,
IO$_TTYREADALL
,0,0,0,&
c
,1,0,0,0,0);

476 
c
 &= 0177;

478  
c
;

479 
	}
}

482 
	$gl_putc
(
c
)

484 
ch
 = 
c
;

486 i‡(
	`wrôe
(1, &
ch
, 1) < 0)

488 i‡(
ch
 == '\n') {

489 
ch
 = '\r';

490 i‡(
	`wrôe
(1, &
ch
, 1) < 0)

494 
	}
}

499 
	$gl_puts
(*
buf
)

501 
Àn
;

503 i‡(
buf
) {

504 
Àn
 = 
	`°æí
(
buf
);

505 i‡(
	`wrôe
(1, 
buf
, 
Àn
) < 0)

509 
	}
}

512 
	$gl_îr‹
(*
buf
)

514 
Àn
 = 
	`°æí
(
buf
);

516 
	`gl_˛ónup
();

517 i‡(
	`wrôe
(2, 
buf
, 
Àn
) < 0)

518 
	`exô
(1);

519 
	`exô
(1);

520 
	}
}

524 
	$gl_öô
()

526 
gl_i£of
 = 0;

527 i‡(
gl_öô_d⁄e
 < 0) {

528 
	`hi°_öô
();

530 
	`gl_ch¨_öô
();

531 
gl_öô_d⁄e
 = 1;

532 
	}
}

535 
	$gl_˛ónup
()

538 i‡(
gl_öô_d⁄e
 > 0)

539 
	`gl_ch¨_˛ónup
();

540 
gl_öô_d⁄e
 = 0;

541 
	}
}

544 
	$gl_gës¸ﬁlög
()

546  
gl_s¸ﬁlög_mode
;

547 
	}
}

550 
	$gl_£ts¸ﬁlög
(
mode
)

552 
gl_s¸ﬁlög_mode
 = 
mode
;

553 
	}
}

556 
	$gl_gëwidth
()

558  
gl_ãrmw
;

559 
	}
}

562 
	$gl_£twidth
(
w
)

564 i‡(
w
 > 
TERM_MIN_SCREEN_WIDTH
-1) {

565 
gl_ãrmw
 = 
w
;

566 
gl_s¸ﬁlw
 = 
w
 / 3;

568 
	`gl_îr‹
("\n*** Error: minimum screen width is 21\n");

570 
	}
}

581 
	$gl_gëlöe
(
˛igí_h™dÀ
 
h
,

582 **
buf
)

584 
c
, 
loc
, 
tmp
;

585 *
gl_¥om±
;

586 
esˇ≥
 = 0;

587 #ifde‡
__unix__


588 
sig
;

591 
	`gl_öô
();

592 
gl_¥om±
 = (
	`˛igí_¥om±
(
h
))? cligen_prompt(h) : "";

593 
	`˛igí_buf
(
h
)[0] = 0;

594 i‡(
gl_ö_hook
)

595 
	`gl_ö_hook
(
h
, 
	`˛igí_buf
(h));

596 
	`gl_fixup
(
h
, 
gl_¥om±
, -2, 
	`˛igí_buf_size
(h));

597 (
c
 = 
	`gl_gëc
(
h
)) >= 0) {

598 
gl_exã¡
 = 0;

599 i‡(
	`i•röt
(
c
Ë|| (
esˇ≥
&&c=='\n')) {

600 i‡(
esˇ≥
 =0 && 
c
 == '\\')

601 
esˇ≥
++;

603 i‡(
esˇ≥
 ==0 && 
c
 ='?' && 
gl_qm¨k_hook
) {

604 
esˇ≥
 = 0;

605 i‡((
loc
 = 
	`gl_qm¨k_hook
(
h
, 
	`˛igí_buf
(h))) < 0)

606 
îr
;

607 
	`gl_fixup
(
h
, 
gl_¥om±
, -2, 
gl_pos
);

610 
esˇ≥
 = 0;

611 i‡(
gl_£¨ch_mode
)

612 
	`£¨ch_addch¨
(
h
, 
c
);

614 
	`gl_addch¨
(
h
, 
c
);

618 
esˇ≥
 = 0;

619 i‡(
gl_£¨ch_mode
) {

620 i‡(
c
 == '\033' || c == '\016' || c == '\020') {

621 
	`£¨ch_ãrm
(
h
);

622 
c
 = 0;

623 } i‡(
c
 == '\010' || c == '\177') {

624 
	`£¨ch_addch¨
(
h
, -1);

625 
c
 = 0;

626 } i‡(
c
 != '\022' && c != '\023') {

627 
	`£¨ch_ãrm
(
h
);

631 i‡(
	`gl_exôch¨
(
c
))

632 
exô
;

633 
c
) {

635 
	`gl_√wlöe
(
h
);

636 
d⁄e
;

639 '\001': 
	`gl_fixup
(
h
, 
gl_¥om±
, -1, 0);

641 '\002': 
	`gl_fixup
(
h
, 
gl_¥om±
, -1, 
gl_pos
-1);

644 i‡(
gl_˙t
 == 0)

645 
exô
;

647 
	`gl_dñ
(
h
, 0);

649 '\005': 
	`gl_fixup
(
h
, 
gl_¥om±
, -1, 
gl_˙t
);

651 '\006': 
	`gl_fixup
(
h
, 
gl_¥om±
, -1, 
gl_pos
+1);

653 '\010': '\177': 
	`gl_dñ
(
h
, -1);

656 i‡(
gl_èb_hook
) {

657 
tmp
 = 
gl_pos
;

658 i‡((
loc
 = 
	`gl_èb_hook
(
h
, &
tmp
)) < 0)

659 
îr
;

660 
	`gl_fixup
(
h
, 
gl_¥om±
, -2, 
tmp
);

662 i‡(
loc
 !-1 || 
tmp
 !
gl_pos
)

663 
	`gl_fixup
(
h
, 
gl_¥om±
, 
loc
, 
tmp
);

667 '\013': 
	`gl_kûl
(
h
, 
gl_pos
);

669 '\014': 
	`gl_ªdøw
(
h
);

672 
	`°∫˝y
(
	`˛igí_buf
(
h
), 
	`hi°_√xt
(), 
	`˛igí_buf_size
(h));

673 i‡(
gl_ö_hook
)

674 
	`gl_ö_hook
(
h
, 
	`˛igí_buf
(h));

675 
	`gl_fixup
(
h
, 
gl_¥om±
, 0, 
	`˛igí_buf_size
(h));

677 '\017': 
gl_ovîwrôe
 = !gl_overwrite;

680 
	`°∫˝y
(
	`˛igí_buf
(
h
), 
	`hi°_¥ev
(), 
	`˛igí_buf_size
(h));

681 i‡(
gl_ö_hook
)

682 
	`gl_ö_hook
(
h
, 
	`˛igí_buf
(h));

683 
	`gl_fixup
(
h
, 
gl_¥om±
, 0, 
	`˛igí_buf_size
(h));

685 '\022': 
	`£¨ch_back
(
h
, 1);

687 '\023': 
	`£¨ch_f‹w
(
h
, 1);

689 '\024': 
	`gl_å™•o£
(
h
);

691 '\025': 
	`gl_kûl_begö
(
h
, 
gl_pos
);

693 '\027': 
	`gl_kûl_w‹d
(
h
, 
gl_pos
);

695 '\031': 
	`gl_y™k
(
h
);

698 if(
gl_su•_hook
) {

699 
tmp
 = 
gl_pos
;

700 
loc
 = 
	`gl_su•_hook
(
	`˛igí_u£rh™dÀ
(
h
)?cligen_userhandle(h):h,

701 
	`˛igí_buf
(
h
), 
	`gl_°æí
(
gl_¥om±
), &
tmp
);

702 i‡(
loc
 !-1 || 
tmp
 !
gl_pos
)

703 
	`gl_fixup
(
h
, 
gl_¥om±
, 
loc
, 
tmp
);

704 i‡(
	`°rchr
 (
	`˛igí_buf
(
h
), '\n'))

705 
d⁄e
;

709 
c
 = 
	`gl_gëc
(
h
);

711 i‡(
c
 == '[' || c == 'O') {

712 
c
 = 
	`gl_gëc
(
h
)) {

714 
	`°∫˝y
(
	`˛igí_buf
(
h
), 
	`hi°_¥ev
(), 
	`˛igí_buf_size
(h));

715 i‡(
gl_ö_hook
)

716 
	`gl_ö_hook
(
h
, 
	`˛igí_buf
(h));

717 
	`gl_fixup
(
h
, 
gl_¥om±
, 0, 
	`˛igí_buf_size
(h));

720 
	`°∫˝y
(
	`˛igí_buf
(
h
), 
	`hi°_√xt
(), 
	`˛igí_buf_size
(h));

721 i‡(
gl_ö_hook
)

722 
	`gl_ö_hook
(
h
, 
	`˛igí_buf
(h));

723 
	`gl_fixup
(
h
, 
gl_¥om±
, 0, 
	`˛igí_buf_size
(h));

725 'C': 
	`gl_fixup
(
h
, 
gl_¥om±
, -1, 
gl_pos
+1);

727 'D': 
	`gl_fixup
(
h
, 
gl_¥om±
, -1, 
gl_pos
-1);

729 : 
	`gl_putc
('\007');

732 } i‡(
c
 == 'f' || c == 'F') {

733 
	`gl_w‹d
(
h
, 1);

734 } i‡(
c
 == 'b' || c == 'B') {

735 
	`gl_w‹d
(
h
, -1);

737 
	`gl_putc
('\007');

740 #ifde‡
__unix__


741 i‡(
c
 > 0) {

742 
sig
 = 0;

743 #ifde‡
SIGINT


744 i‡(
c
 =
gl_öåc
)

745 
sig
 = 
SIGINT
;

747 #ifde‡
SIGQUIT


748 i‡(
c
 =
gl_quôc
)

749 
sig
 = 
SIGQUIT
;

751 #ifde‡
SIGTSTP


752 i‡(
c
 =
gl_su•c
 || c =
gl_dsu•c
)

753 
sig
 = 
SIGTSTP
;

755 i‡(
sig
 != 0) {

756 
	`gl_˛ónup
();

757 
	`kûl
(0, 
sig
);

758 
	`gl_öô
();

759 
	`gl_ªdøw
(
h
);

760 
	`gl_kûl
(
h
, 0);

761 
c
 = 0;

765 i‡(
c
 > 0)

766 
	`gl_putc
('\007');

771 
	`˛igí_buf
(
h
)[0] = 0;

772 
d⁄e
:

773 
	`gl_˛ónup
();

774 *
buf
 = 
	`˛igí_buf
(
h
);

776 
exô
:

777 
	`gl_exô
(
h
);

778 *
buf
 = 
	`˛igí_buf
(
h
);

780 
îr
:

782 
	}
}

789 
	$gl_addch¨
(
˛igí_h™dÀ
 
h
,

790 
c
)

792 
i
;

794 
	`˛igí_buf_ö¸ó£
(
h
, 
gl_˙t
+1);

795 i‡(
gl_ovîwrôe
 =0 || 
gl_pos
 =
gl_˙t
) {

796 
i
=
gl_˙t
; i >
gl_pos
; i--)

797 
	`˛igí_buf
(
h
)[
i
+1] = cligen_buf(h)[i];

798 
	`˛igí_buf
(
h
)[
gl_pos
] = 
c
;

799 
	`gl_fixup
(
h
, 
	`˛igí_¥om±
(h), 
gl_pos
, gl_pos+1);

801 
	`˛igí_buf
(
h
)[
gl_pos
] = 
c
;

802 
gl_exã¡
 = 1;

803 
	`gl_fixup
(
h
, 
	`˛igí_¥om±
(h), 
gl_pos
, gl_pos+1);

805 
	}
}

811 
	$gl_y™k
(
˛igí_h™dÀ
 
h
)

813 
i
, 
Àn
;

815 
Àn
 = 
	`°æí
(
	`˛igí_kûlbuf
(
h
));

816 i‡(
Àn
 > 0) {

817 i‡(
gl_ovîwrôe
 == 0) {

818 
	`˛igí_buf_ö¸ó£
(
h
, 
gl_˙t
 + 
Àn
 + 1);

819 
i
=
gl_˙t
; i >
gl_pos
; i--)

820 
	`˛igí_buf
(
h
)[
i
+
Àn
] = cligen_buf(h)[i];

821 
i
=0; i < 
Àn
; i++)

822 
	`˛igí_buf
(
h
)[
gl_pos
+
i
] = 
	`˛igí_kûlbuf
(h)[i];

823 
	`gl_fixup
(
h
, 
	`˛igí_¥om±
(h), 
gl_pos
, gl_pos+
Àn
);

825 i‡(
gl_pos
 + 
Àn
 > 
gl_˙t
) {

826 
	`˛igí_buf_ö¸ó£
(
h
, 
gl_pos
 + 
Àn
 + 1);

827 
	`˛igí_buf
(
h
)[
gl_pos
 + 
Àn
] = 0;

829 
i
=0; i < 
Àn
; i++)

830 
	`˛igí_buf
(
h
)[
gl_pos
+
i
] = 
	`˛igí_kûlbuf
(h)[i];

831 
gl_exã¡
 = 
Àn
;

832 
	`gl_fixup
(
h
, 
	`˛igí_¥om±
(h), 
gl_pos
, gl_pos+
Àn
);

835 
	`gl_putc
('\007');

836 
	}
}

842 
	$gl_å™•o£
(
˛igí_h™dÀ
 
h
)

844 
c
;

846 i‡(
gl_pos
 > 0 && 
gl_˙t
 > gl_pos) {

847 
c
 = 
	`˛igí_buf
(
h
)[
gl_pos
-1];

848 
	`˛igí_buf
(
h
)[
gl_pos
-1] = cligen_buf(h)[gl_pos];

849 
	`˛igí_buf
(
h
)[
gl_pos
] = 
c
;

850 
gl_exã¡
 = 2;

851 
	`gl_fixup
(
h
, 
	`˛igí_¥om±
(h), 
gl_pos
-1, gl_pos);

853 
	`gl_putc
('\007');

854 
	}
}

862 
	$gl_√wlöe
(
˛igí_h™dÀ
 
h
)

864 
Àn
 = 
gl_˙t
;

865 
loc
;

867 i‡(
gl_s¸ﬁlög_mode
)

868 
loc
 = 
gl_width
 - 5;

870 
loc
 = 
gl_˙t
;

872 
	`˛igí_buf_ö¸ó£
(
h
, 
gl_˙t
+1);

873 i‡(
gl_out_hook
) {

874 
Àn
 = 
	`°æí
(
	`˛igí_buf
(
h
));

876 i‡(
loc
 > 
Àn
)

877 
loc
 = 
Àn
;

878 
	`gl_fixup
(
h
, 
	`˛igí_¥om±
(h), -1, 
loc
);

879 
	`˛igí_buf
(
h
)[
Àn
] = '\n';

880 
	`˛igí_buf
(
h
)[
Àn
+1] = '\0';

881 
	`gl_putc
('\n');

882 
	}
}

890 
	$gl_dñ
(
˛igí_h™dÀ
 
h
,

891 
loc
)

893 
i
;

895 i‡((
loc
 =-1 && 
gl_pos
 > 0Ë|| (lo¯=0 && gl_po†< 
gl_˙t
)) {

896 
i
=
gl_pos
+
loc
; i < 
gl_˙t
; i++)

897 
	`˛igí_buf
(
h
)[
i
] = cligen_buf(h)[i+1];

898 
	`gl_fixup
(
h
, 
	`˛igí_¥om±
(h), 
gl_pos
+
loc
, gl_pos+loc);

900 
	`gl_putc
('\007');

901 
	}
}

908 
	$gl_kûl
(
˛igí_h™dÀ
 
h
,

909 
pos
)

911 i‡(
pos
 < 
gl_˙t
) {

912 
	`˛igí_kûlbuf_ö¸ó£
(
h
, 
	`˛igí_buf_size
(h));

913 
	`°∫˝y
(
	`˛igí_kûlbuf
(
h
), 
	`˛igí_buf
(hË+ 
pos
, 
	`˛igí_buf_size
(h));

914 
	`˛igí_buf
(
h
)[
pos
] = '\0';

915 
	`gl_fixup
(
h
, 
	`˛igí_¥om±
(h), 
pos
,Öos);

917 
	`gl_putc
('\007');

918 
	}
}

925 
	$gl_kûl_begö
(
˛igí_h™dÀ
 
h
,

926 
pos
)

928 
i
;

929 
Àn
;

931 i‡(
pos
 != 0) {

932 
Àn
 = 
	`°æí
(
	`˛igí_buf
(
h
));

933 
	`˛igí_kûlbuf_ö¸ó£
(
h
, 
pos
);

934 
	`°∫˝y
(
	`˛igí_kûlbuf
(
h
), 
	`˛igí_buf
(h), 
pos
);

935 
	`˛igí_kûlbuf
(
h
)[
pos
] = '\0';

936 
	`memmove
(
	`˛igí_buf
(
h
), cligí_buf(hË+ 
pos
, 
Àn
-pos+1);

937 
	`gl_fixup
(
h
, 
	`˛igí_¥om±
(h), 0, 0);

938 
i
=
gl_pos
; i < 
gl_˙t
; i++)

939 
	`gl_putc
(
	`˛igí_buf
(
h
)[
i
]);

940 
	`gl_fixup
(
h
, 
	`˛igí_¥om±
(h), -2, 0);

942 
	`gl_putc
('\007');

943 
	}
}

950 
	$gl_kûl_w‹d
(
˛igí_h™dÀ
 
h
,

951 
pos
)

953 
i
, 
wpos
;

955 i‡(
pos
 == 0)

956 
	`gl_putc
('\007');

958 
wpos
 = 
pos
;

959 i‡(
pos
 > 0)

960 
pos
--;

961 
	`is•a˚
(()
	`˛igí_buf
(
h
)[
pos
]) &&Öos > 0)

962 
pos
--;

963 !
	`is•a˚
(()
	`˛igí_buf
(
h
)[
pos
]) &&Öos > 0)

964 
pos
--;

965 i‡(
pos
 < 
gl_˙t
 && 
	`is•a˚
(()
	`˛igí_buf
(
h
)[pos]))

966 
pos
++;

967 
	`˛igí_kûlbuf_ö¸ó£
(
h
, 
wpos
-
pos
);

968 
	`°∫˝y
(
	`˛igí_kûlbuf
(
h
), 
	`˛igí_buf
(h)+
pos
, 
wpos
-pos);

969 
	`˛igí_kûlbuf
(
h
)[
wpos
-
pos
] = '\0';

970 
	`memmove
(
	`˛igí_buf
(
h
)+
pos
, cligí_buf(hË+ 
wpos
, wpos-pos+1);

971 
	`gl_fixup
(
h
, 
	`˛igí_¥om±
(h), 
wpos
, 
pos
);

972 
i
=
gl_pos
; i < 
gl_˙t
; i++)

973 
	`gl_putc
(
	`˛igí_buf
(
h
)[
i
]);

974 
	`gl_fixup
(
h
, 
	`˛igí_¥om±
(h), -2, 
pos
);

977 
	}
}

985 
	$gl_w‹d
(
˛igí_h™dÀ
 
h
,

986 
dúe˘i⁄
)

989 
pos
 = 
gl_pos
;

991 i‡(
dúe˘i⁄
 > 0) {

992 !
	`is•a˚
(()
	`˛igí_buf
(
h
)[
pos
]Ë&& (po†< 
gl_˙t
))

993 
pos
++;

994 
	`is•a˚
(()
	`˛igí_buf
(
h
)[
pos
]Ë&&Öo†< 
gl_˙t
)

995 
pos
++;

997 i‡(
pos
 > 0)

998 
pos
--;

999 
	`is•a˚
(()
	`˛igí_buf
(
h
)[
pos
]) &&Öos > 0)

1000 
pos
--;

1001 !
	`is•a˚
(()
	`˛igí_buf
(
h
)[
pos
]) &&Öos > 0)

1002 
pos
--;

1003 i‡(
pos
 < 
gl_˙t
 && 
	`is•a˚
(()
	`˛igí_buf
(
h
)[pos]))

1004 
pos
++;

1006 
	`gl_fixup
(
h
, 
	`˛igí_¥om±
(h), -1, 
pos
);

1007 
	}
}

1010 
	$move_curs‹_up
(
ƒ
)

1012 
	`gl_putc
(033);

1013 
	`gl_putc
('[');

1014 
	`gl_putc
('1');

1015 
	`gl_putc
('A');

1017 
	}
}

1020 
	$move_curs‹_right
(
ƒ
)

1022 
°r
[16];

1023 
i
;

1024 
	`gl_putc
(033);

1025 
	`gl_putc
('[');

1026 
	`¢¥ötf
(
°r
, 15, "%d", 
ƒ
);

1027 
i
=0; i<
	`°æí
(
°r
); i++)

1028 
	`gl_putc
(
°r
[
i
]);

1029 
	`gl_putc
('C');

1031 
	}
}

1034 
	$wøp_löe
()

1036 
	`gl_putc
('\n');

1038 
	}
}

1041 
	$unwøp_löe
()

1043 
	`move_curs‹_up
(1);

1044 
	`move_curs‹_right
(
gl_ãrmw
-1);

1046 
	}
}

1049 
	$wøp
(
p
,

1050 
∂í
)

1052  (
p
+
∂í
+1)%
gl_ãrmw
==0;

1053 
	}
}

1059 
	$gl_ªdøw
(
˛igí_h™dÀ
 
h
)

1061 i‡(
gl_öô_d⁄e
 > 0) {

1062 
	`gl_putc
('\n');

1063 
	`gl_fixup
(
h
, 
	`˛igí_¥om±
(h), -2, 
gl_pos
);

1065 
	}
}

1082 
	$gl_fixup_nos¸ﬁl
(
˛igí_h™dÀ
 
h
,

1083 *
¥om±
,

1084 
ch™ge
,

1085 
curs‹
)

1087 
À·
 = 0, 
right
 = -1;

1088 
∑d
;

1089 
backup
;

1090 
i
;

1091 
p
;

1092 
√w_right
 = -1;

1093 
l1
, 
l2
;

1094 
∂í
=
	`°æí
(
¥om±
);

1096 i‡(
ch™ge
 == -2) {

1097 
gl_pos
 = 
gl_˙t
 = 
fixup_gl_shi·
 = 
fixup_off_right
 = 
fixup_off_À·
 = 0;

1098 
	`gl_putc
('\r');

1099 
	`gl_puts
(
¥om±
);

1100 
	`°∫˝y
(
fixup_œ°_¥om±
, 
¥om±
, (fixup_last_prompt));

1101 
ch™ge
 = 0;

1102 
gl_width
 = 
gl_ãrmw
 - 
	`gl_°æí
(
¥om±
);

1103 } i‡(
	`°rcmp
(
¥om±
, 
fixup_œ°_¥om±
) != 0) {

1104 
l1
 = 
	`gl_°æí
(
fixup_œ°_¥om±
);

1105 
l2
 = 
	`gl_°æí
(
¥om±
);

1106 
gl_˙t
 = gl_˙à+ 
l1
 - 
l2
;

1107 
	`°∫˝y
(
fixup_œ°_¥om±
, 
¥om±
, (fixup_last_prompt));

1108 
	`gl_putc
('\r');

1109 
	`gl_puts
(
¥om±
);

1110 
gl_pos
 = 
fixup_gl_shi·
;

1111 
gl_width
 = 
gl_ãrmw
 - 
l2
;

1112 
ch™ge
 = 0;

1114 
∑d
 = (
fixup_off_right
)? 
gl_width
 - 1 : 
gl_˙t
 - 
fixup_gl_shi·
;

1115 
backup
 = 
gl_pos
 - 
fixup_gl_shi·
;

1116 i‡(
ch™ge
 >= 0) {

1117 
gl_˙t
 = 
	`°æí
(
	`˛igí_buf
(
h
));

1118 i‡(
ch™ge
 > 
gl_˙t
)

1119 
ch™ge
 = 
gl_˙t
;

1121 i‡(
curs‹
 > 
gl_˙t
) {

1122 i‡(
curs‹
 !
	`˛igí_buf_size
(
h
))

1123 
	`gl_putc
('\007');

1124 
curs‹
 = 
gl_˙t
;

1126 i‡(
curs‹
 < 0) {

1127 
	`gl_putc
('\007');

1128 
curs‹
 = 0;

1130 i‡(
ch™ge
 >= 0) {

1131 i‡(
ch™ge
 < 
fixup_gl_shi·
 + 
fixup_off_À·
) {

1132 
À·
 = 
fixup_gl_shi·
;

1134 
À·
 = 
ch™ge
;

1135 
backup
 = 
gl_pos
 - 
ch™ge
;

1137 
right
 = 
gl_˙t
;

1138 
√w_right
 = (
gl_exã¡
 && (
right
 > 
À·
 + gl_extent))?

1139 
À·
 + 
gl_exã¡
 : 
right
;

1141 
∑d
 -
gl_˙t
 - 
fixup_gl_shi·
;

1142 
∑d
 = (pad < 0)? 0 :Öad;

1143 i‡(
À·
 <
right
) {

1144 
p
=
À·
;Ö <Üe·+
backup
;Ö++){

1145 i‡(
	`wøp
(
p
, 
∂í
))

1146 
	`unwøp_löe
();

1148 
	`gl_putc
('\b');

1150 i‡(
À·
 =
fixup_gl_shi·
 && 
fixup_off_À·
) {

1151 
	`gl_putc
('$');

1152 
À·
++;

1154 
p
=
À·
;Ö < 
√w_right
;Ö++){

1155 
	`gl_putc
(
	`˛igí_buf
(
h
)[
p
]);

1156 i‡(
	`wøp
(
p
, 
∂í
))

1157 
	`wøp_löe
();

1159 
gl_pos
 = 
√w_right
;

1160 
p
=
À·
;Ö <Üe·+
∑d
;Ö++){

1161 
	`gl_putc
(' ');

1162 i‡(
	`wøp
(
p
, 
∂í
))

1163 
	`wøp_löe
();

1165 
gl_pos
 +
∑d
;

1168 i‡(
gl_pos
 - 
curs‹
 > 0) {

1169 
p
=
gl_pos
;Ö > 
curs‹
;Ö--){

1170 i‡(
	`wøp
(
p
-1, 
∂í
))

1171 
	`unwøp_löe
();

1173 
	`gl_putc
('\b');

1177 
i
=
gl_pos
; i < 
curs‹
; i++)

1178 
	`gl_putc
(
	`˛igí_buf
(
h
)[
i
]);

1180 
gl_pos
 = 
curs‹
;

1181 
	}
}

1197 
	$gl_fixup_s¸ﬁl
(
˛igí_h™dÀ
 
h
,

1198 *
¥om±
,

1199 
ch™ge
,

1200 
curs‹
)

1202 
À·
 = 0, 
right
 = -1;

1203 
∑d
;

1204 
backup
;

1205 
√w_shi·
;

1206 
exåa
;

1207 
i
;

1208 
√w_right
 = -1;

1209 
l1
, 
l2
;

1211 i‡(
ch™ge
 == -2) {

1212 
gl_pos
 = 
gl_˙t
 = 
fixup_gl_shi·
 = 
fixup_off_right
 = 
fixup_off_À·
 = 0;

1213 
	`gl_putc
('\r');

1214 
	`gl_puts
(
¥om±
);

1215 
	`°∫˝y
(
fixup_œ°_¥om±
, 
¥om±
, (fixup_last_prompt));

1216 
ch™ge
 = 0;

1217 
gl_width
 = 
gl_ãrmw
 - 
	`gl_°æí
(
¥om±
);

1218 } i‡(
	`°rcmp
(
¥om±
, 
fixup_œ°_¥om±
) != 0) {

1219 
l1
 = 
	`gl_°æí
(
fixup_œ°_¥om±
);

1220 
l2
 = 
	`gl_°æí
(
¥om±
);

1221 
gl_˙t
 = gl_˙à+ 
l1
 - 
l2
;

1222 
	`°∫˝y
(
fixup_œ°_¥om±
, 
¥om±
, (fixup_last_prompt));

1223 
	`gl_putc
('\r');

1224 
	`gl_puts
(
¥om±
);

1225 
gl_pos
 = 
fixup_gl_shi·
;

1226 
gl_width
 = 
gl_ãrmw
 - 
l2
;

1227 
ch™ge
 = 0;

1229 
∑d
 = (
fixup_off_right
)? 
gl_width
 - 1 : 
gl_˙t
 - 
fixup_gl_shi·
;

1230 
backup
 = 
gl_pos
 - 
fixup_gl_shi·
;

1231 i‡(
ch™ge
 >= 0) {

1232 
gl_˙t
 = 
	`°æí
(
	`˛igí_buf
(
h
));

1233 i‡(
ch™ge
 > 
gl_˙t
)

1234 
ch™ge
 = 
gl_˙t
;

1236 i‡(
curs‹
 > 
gl_˙t
) {

1237 i‡(
curs‹
 !
	`˛igí_buf_size
(
h
))

1238 
	`gl_putc
('\007');

1239 
curs‹
 = 
gl_˙t
;

1241 i‡(
curs‹
 < 0) {

1242 
	`gl_putc
('\007');

1243 
curs‹
 = 0;

1245 i‡(
fixup_off_right
 || (
fixup_off_À·
 && 
curs‹
 < 
fixup_gl_shi·
 + 
gl_width
 - 
gl_s¸ﬁlw
 / 2)){

1246 
exåa
 = 2;

1249 
exåa
 = 0;

1251 
√w_shi·
 = 
curs‹
 + 
exåa
 + 
gl_s¸ﬁlw
 - 
gl_width
;

1252 i‡(
√w_shi·
 > 0) {

1253 
√w_shi·
 /
gl_s¸ﬁlw
;

1254 
√w_shi·
 *
gl_s¸ﬁlw
;

1256 
√w_shi·
 = 0;

1257 i‡(
√w_shi·
 !
fixup_gl_shi·
) {

1258 
fixup_gl_shi·
 = 
√w_shi·
;

1259 
fixup_off_À·
 = (
fixup_gl_shi·
)? 1 : 0;

1260 
fixup_off_right
 = (
gl_˙t
 > 
fixup_gl_shi·
 + 
gl_width
 - 1)? 1 : 0;

1261 
À·
 = 
fixup_gl_shi·
;

1262 
√w_right
 = 
right
 = (
fixup_off_right
)? 
fixup_gl_shi·
 + 
gl_width
 - 2 : 
gl_˙t
;

1263 } i‡(
ch™ge
 >= 0) {

1264 i‡(
ch™ge
 < 
fixup_gl_shi·
 + 
fixup_off_À·
) {

1265 
À·
 = 
fixup_gl_shi·
;

1267 
À·
 = 
ch™ge
;

1268 
backup
 = 
gl_pos
 - 
ch™ge
;

1270 
fixup_off_right
 = (
gl_˙t
 > 
fixup_gl_shi·
 + 
gl_width
 - 1)? 1 : 0;

1271 
right
 = (
fixup_off_right
)? 
fixup_gl_shi·
 + 
gl_width
 - 2 : 
gl_˙t
;

1272 
√w_right
 = (
gl_exã¡
 && (
right
 > 
À·
 + gl_extent))?

1273 
À·
 + 
gl_exã¡
 : 
right
;

1275 
∑d
 -(
fixup_off_right
)? 
gl_width
 - 1 : 
gl_˙t
 - 
fixup_gl_shi·
;

1276 
∑d
 = (pad < 0)? 0 :Öad;

1277 i‡(
À·
 <
right
) {

1278 
i
=0; i < 
backup
; i++)

1279 
	`gl_putc
('\b');

1280 i‡(
À·
 =
fixup_gl_shi·
 && 
fixup_off_À·
) {

1281 
	`gl_putc
('$');

1282 
À·
++;

1284 
i
=
À·
; i < 
√w_right
; i++)

1285 
	`gl_putc
(
	`˛igí_buf
(
h
)[
i
]);

1286 
gl_pos
 = 
√w_right
;

1287 i‡(
fixup_off_right
 && 
√w_right
 =
right
) {

1288 
	`gl_putc
('$');

1289 
gl_pos
++;

1291 
i
=0; i < 
∑d
; i++)

1292 
	`gl_putc
(' ');

1293 
gl_pos
 +
∑d
;

1296 
i
 = 
gl_pos
 - 
curs‹
;

1297 i‡(
i
 > 0) {

1298 
i
--)

1299 
	`gl_putc
('\b');

1301 
i
=
gl_pos
; i < 
curs‹
; i++)

1302 
	`gl_putc
(
	`˛igí_buf
(
h
)[
i
]);

1304 
gl_pos
 = 
curs‹
;

1305 
	}
}

1307 
ölöe
 

1308 
	$gl_fixup
(
˛igí_h™dÀ
 
h
,

1309 *
¥om±
,

1310 
ch™ge
,

1311 
curs‹
)

1313 i‡(
gl_s¸ﬁlög_mode
)

1314  
	`gl_fixup_s¸ﬁl
(
h
, 
¥om±
, 
ch™ge
, 
curs‹
);

1316  
	`gl_fixup_nos¸ﬁl
(
h
, 
¥om±
, 
ch™ge
, 
curs‹
);

1317 
	}
}

1322 
	$gl_°rwidth
(
	$size_t
 (*
func
)())

1324 i‡(
func
 != 0) {

1325 
gl_°æí
 = 
func
;

1327 
	}
}

1333 
	$hi°_öô
()

1335 
i
;

1337 
hi°_pos
 = 0;

1338 
hi°_œ°
 = 0;

1339 
hi°_¥e
 = 0;

1340 
hi°_buf
[0] = "";

1341 
i
=1; i < 
HIST_SIZE
; i++)

1342 
hi°_buf
[
i
] = (*)0;

1343 
	}
}

1346 
	$gl_hi°add
(*
buf
)

1348 *
p
 = 
buf
;

1349 
Àn
;

1352 i‡(
gl_öô_d⁄e
 < 0) {

1353 
	`hi°_öô
();

1354 
gl_öô_d⁄e
 = 0;

1356 *
p
 == ' ' || *p == '\t' || *p == '\n')

1357 
p
++;

1358 i‡(*
p
) {

1359 
Àn
 = 
	`°æí
(
buf
);

1360 i‡(
	`°rchr
(
p
, '\n'))

1361 
Àn
--;

1362 i‡(
hi°_¥e
 =0 || 
	`°æí
(hi°_¥eË!
Àn
 ||

1363 
	`°∫cmp
(
hi°_¥e
, 
buf
, 
Àn
) != 0) {

1364 
hi°_buf
[
hi°_œ°
] = 
	`hi°_ßve
(
buf
);

1365 
hi°_¥e
 = 
hi°_buf
[
hi°_œ°
];

1366 
hi°_œ°
 = (hi°_œ° + 1Ë% 
HIST_SIZE
;

1367 i‡(
hi°_buf
[
hi°_œ°
] && *hist_buf[hist_last]) {

1368 
	`‰ì
(
hi°_buf
[
hi°_œ°
]);

1370 
hi°_buf
[
hi°_œ°
] = "";

1373 
hi°_pos
 = 
hi°_œ°
;

1374 
	}
}

1377 
	$gl_hi°˛ór
()

1379 
i
;

1381 
i
=0; i < 
HIST_SIZE
; i++)

1382 i‡(
hi°_buf
[
i
] && 
	`°æí
 (hist_buf[i])){

1383 
	`‰ì
(
hi°_buf
[
i
]);

1384 
hi°_buf
[
i
] = 
NULL
;

1386 
	`hi°_öô
();

1387 
	}
}

1391 
	$hi°_¥ev
()

1393 *
p
 = 0;

1394 
√xt
 = (
hi°_pos
 - 1 + 
HIST_SIZE
) % HIST_SIZE;

1396 i‡(
hi°_buf
[
hi°_pos
] !0 && 
√xt
 !
hi°_œ°
) {

1397 
hi°_pos
 = 
√xt
;

1398 
p
 = 
hi°_buf
[
hi°_pos
];

1400 i‡(
p
 == 0) {

1401 
p
 = "";

1402 
	`gl_putc
('\007');

1404  
p
;

1405 
	}
}

1409 
	$hi°_√xt
()

1411 *
p
 = 0;

1413 i‡(
hi°_pos
 !
hi°_œ°
) {

1414 
hi°_pos
 = (hi°_pos+1Ë% 
HIST_SIZE
;

1415 
p
 = 
hi°_buf
[
hi°_pos
];

1417 i‡(
p
 == 0) {

1418 
p
 = "";

1419 
	`gl_putc
('\007');

1421  
p
;

1422 
	}
}

1426 
	$hi°_ßve
(*
p
)

1428 *
s
 = 0;

1429 
Àn
 = 
	`°æí
(
p
);

1430 *
∆
 = 
	`°rchr
(
p
, '\n');

1432 i‡(
∆
) {

1433 i‡((
s
 = 
	`mÆloc
 (
Àn
)) != 0) {

1434 
	`°∫˝y
(
s
, 
p
, 
Àn
-1);

1435 
s
[
Àn
-1] = 0;

1438 i‡((
s
 = 
	`mÆloc
(
Àn
+1)) != 0) {

1439 
	`°∫˝y
(
s
, 
p
, 
Àn
+1);

1442 i‡(
s
 == 0)

1443 
	`gl_îr‹
("\n*** Error: hist_save() failed on malloc\n");

1444  
s
;

1445 
	}
}

1452 
	$£¨ch_upd©e
(
c
)

1454 i‡(
c
 == 0) {

1455 
£¨ch_pos
 = 0;

1456 
£¨ch_°rög
[0] = 0;

1457 
£¨ch_¥om±
[0] = '?';

1458 
£¨ch_¥om±
[1] = ' ';

1459 
£¨ch_¥om±
[2] = 0;

1460 } i‡(
c
 > 0){

1461 i‡(
£¨ch_pos
+1 < 
SEARCH_LEN
) {

1462 
£¨ch_°rög
[
£¨ch_pos
] = 
c
;

1463 
£¨ch_°rög
[
£¨ch_pos
+1] = 0;

1464 
£¨ch_¥om±
[
£¨ch_pos
] = 
c
;

1465 
£¨ch_¥om±
[
£¨ch_pos
+1] = '?';

1466 
£¨ch_¥om±
[
£¨ch_pos
+2] = ' ';

1467 
£¨ch_¥om±
[
£¨ch_pos
+3] = 0;

1468 
£¨ch_pos
++;

1471 i‡(
£¨ch_pos
 > 0) {

1472 
£¨ch_pos
--;

1473 
£¨ch_°rög
[
£¨ch_pos
] = 0;

1474 
£¨ch_¥om±
[
£¨ch_pos
] = '?';

1475 
£¨ch_¥om±
[
£¨ch_pos
+1] = ' ';

1476 
£¨ch_¥om±
[
£¨ch_pos
+2] = 0;

1478 
	`gl_putc
('\007');

1479 
hi°_pos
 = 
hi°_œ°
;

1482 
	}
}

1488 
	$£¨ch_addch¨
(
˛igí_h™dÀ
 
h
,

1489 
c
)

1491 *
loc
;

1493 
	`£¨ch_upd©e
(
c
);

1494 i‡(
c
 < 0) {

1495 i‡(
£¨ch_pos
 > 0) {

1496 
hi°_pos
 = 
£¨ch_œ°
;

1498 
	`˛igí_buf
(
h
)[0] = 0;

1499 
hi°_pos
 = 
hi°_œ°
;

1501 
	`°∫˝y
(
	`˛igí_buf
(
h
), 
hi°_buf
[
hi°_pos
], 
	`˛igí_buf_size
(h));

1503 i‡((
loc
 = 
	`°r°r
(
	`˛igí_buf
(
h
), 
£¨ch_°rög
)) != 0) {

1504 
	`gl_fixup
(
h
, 
£¨ch_¥om±
, 0, 
loc
 - 
	`˛igí_buf
(h));

1505 } i‡(
£¨ch_pos
 > 0) {

1506 i‡(
£¨ch_f‹w_Êg
) {

1507 
	`£¨ch_f‹w
(
h
, 0);

1509 
	`£¨ch_back
(
h
, 0);

1512 
	`gl_fixup
(
h
, 
£¨ch_¥om±
, 0, 0);

1514 
	}
}

1520 
	$£¨ch_ãrm
(
˛igí_h™dÀ
 
h
)

1522 
gl_£¨ch_mode
 = 0;

1523 i‡(
	`˛igí_buf
(
h
)[0] == 0)

1524 
hi°_pos
 = 
hi°_œ°
;

1525 i‡(
gl_ö_hook
)

1526 
	`gl_ö_hook
(
h
, 
	`˛igí_buf
(h));

1527 
	`gl_fixup
(
h
, 
	`˛igí_¥om±
(h), 0, 
gl_pos
);

1528 
	}
}

1534 
	$£¨ch_back
(
˛igí_h™dÀ
 
h
,

1535 
√w_£¨ch
)

1537 
found
 = 0;

1538 *
p
, *
loc
;

1540 
£¨ch_f‹w_Êg
 = 0;

1541 i‡(
gl_£¨ch_mode
 == 0) {

1542 
£¨ch_œ°
 = 
hi°_pos
 = 
hi°_œ°
;

1543 
	`£¨ch_upd©e
(0);

1544 
gl_£¨ch_mode
 = 1;

1545 
	`˛igí_buf
(
h
)[0] = 0;

1546 
	`gl_fixup
(
h
, 
£¨ch_¥om±
, 0, 0);

1547 } i‡(
£¨ch_pos
 > 0) {

1548 !
found
) {

1549 
p
 = 
	`hi°_¥ev
();

1550 i‡(*
p
 == 0) {

1551 
	`˛igí_buf
(
h
)[0] = 0;

1552 
	`gl_fixup
(
h
, 
£¨ch_¥om±
, 0, 0);

1553 
found
 = 1;

1554 } i‡((
loc
 = 
	`°r°r
(
p
, 
£¨ch_°rög
)) != 0) {

1555 
	`°∫˝y
(
	`˛igí_buf
(
h
), 
p
, 
	`˛igí_buf_size
(h));

1556 
	`gl_fixup
(
h
, 
£¨ch_¥om±
, 0, 
loc
 - 
p
);

1557 i‡(
√w_£¨ch
)

1558 
£¨ch_œ°
 = 
hi°_pos
;

1559 
found
 = 1;

1563 
	`gl_putc
('\007');

1565 
	}
}

1571 
	$£¨ch_f‹w
(
˛igí_h™dÀ
 
h
,

1572 
√w_£¨ch
)

1574 
found
 = 0;

1575 *
p
, *
loc
;

1577 
£¨ch_f‹w_Êg
 = 1;

1578 i‡(
gl_£¨ch_mode
 == 0) {

1579 
£¨ch_œ°
 = 
hi°_pos
 = 
hi°_œ°
;

1580 
	`£¨ch_upd©e
(0);

1581 
gl_£¨ch_mode
 = 1;

1582 
	`˛igí_buf
(
h
)[0] = 0;

1583 
	`gl_fixup
(
h
, 
£¨ch_¥om±
, 0, 0);

1584 } i‡(
£¨ch_pos
 > 0) {

1585 !
found
) {

1586 
p
 = 
	`hi°_√xt
();

1587 i‡(*
p
 == 0) {

1588 
	`˛igí_buf
(
h
)[0] = 0;

1589 
	`gl_fixup
(
h
, 
£¨ch_¥om±
, 0, 0);

1590 
found
 = 1;

1591 } i‡((
loc
 = 
	`°r°r
(
p
, 
£¨ch_°rög
)) != 0) {

1592 
	`°∫˝y
(
	`˛igí_buf
(
h
), 
p
, 
	`˛igí_buf_size
(h));

1593 
	`gl_fixup
(
h
, 
£¨ch_¥om±
, 0, 
loc
 - 
p
);

1594 i‡(
√w_£¨ch
)

1595 
£¨ch_œ°
 = 
hi°_pos
;

1596 
found
 = 1;

1600 
	`gl_putc
('\007');

1602 
	}
}

	@cligen-master/getline.h

1 #i‚de‡
GETLINE_H


2 
	#GETLINE_H


	)

4 
	$size_t
 (*
	tgl_°rwidth_¥oc
)(*);

6 
	`gl_eof
();

7 
	`gl_exôch¨_add
(
c
);

8 
	`gl_ch¨_öô
();

9 
	`gl_ch¨_˛ónup
();

11 
	`gl_gëlöe
(
˛igí_h™dÀ
 
h
, **
buf
);

12 
	`gl_gës¸ﬁlög
();

13 
	`gl_£ts¸ﬁlög
();

14 
	`gl_£twidth
();

15 
	`gl_gëwidth
();

16 
	`gl_hi°add
(*);

17 
	`gl_hi°˛ór
();

18 
	`gl_°rwidth
(
gl_°rwidth_¥oc
);

20 
	`gl_ªdøw
(
˛igí_h™dÀ
 
h
);

21 
	`gl_ªgfd
(, 
˛igí_fd_cb_t
 *, *);

22 
	`gl_uƒegfd
();

24 (*
gl_ö_hook
)(*, *);

25 (*
gl_out_hook
)(*, *);

26 (*
gl_èb_hook
)(
˛igí_h™dÀ
, *);

27 
˛igí_su•_cb_t
 *
gl_su•_hook
;

28 
˛igí_öãºu±_cb_t
 *
gl_öãºu±_hook
;

29 (*
gl_qm¨k_hook
)(
˛igí_h™dÀ
, *);

	@cligen-master/lex.cligen_parse.c

4 
	#YY_INT_ALIGNED
 

	)

8 
	#yy_¸óã_buf„r
 
˛igí_∑r£_¸óã_buf„r


	)

9 
	#yy_dñëe_buf„r
 
˛igí_∑r£_dñëe_buf„r


	)

10 
	#yy_Êex_debug
 
˛igí_∑r£_Êex_debug


	)

11 
	#yy_öô_buf„r
 
˛igí_∑r£_öô_buf„r


	)

12 
	#yy_Êush_buf„r
 
˛igí_∑r£_Êush_buf„r


	)

13 
	#yy_lﬂd_buf„r_°©e
 
˛igí_∑r£_lﬂd_buf„r_°©e


	)

14 
	#yy_swôch_to_buf„r
 
˛igí_∑r£_swôch_to_buf„r


	)

15 
	#yyö
 
˛igí_∑r£ö


	)

16 
	#yyÀng
 
˛igí_∑r£Àng


	)

17 
	#yyÀx
 
˛igí_∑r£Àx


	)

18 
	#yylöío
 
˛igí_∑r£löío


	)

19 
	#yyout
 
˛igí_∑r£out


	)

20 
	#yyª°¨t
 
˛igí_∑r£ª°¨t


	)

21 
	#yyãxt
 
˛igí_∑r£ãxt


	)

22 
	#yywøp
 
˛igí_∑r£wøp


	)

23 
	#yyÆloc
 
˛igí_∑r£Æloc


	)

24 
	#yyªÆloc
 
˛igí_∑r£ªÆloc


	)

25 
	#yy‰ì
 
˛igí_∑r£‰ì


	)

27 
	#FLEX_SCANNER


	)

28 
	#YY_FLEX_MAJOR_VERSION
 2

	)

29 
	#YY_FLEX_MINOR_VERSION
 6

	)

30 
	#YY_FLEX_SUBMINOR_VERSION
 0

	)

31 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

32 
	#FLEX_BETA


	)

38 
	~<°dio.h
>

39 
	~<°rög.h
>

40 
	~<î∫o.h
>

41 
	~<°dlib.h
>

47 #i‚de‡
FLEXINT_H


48 
	#FLEXINT_H


	)

52 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

57 #i‚de‡
__STDC_LIMIT_MACROS


58 
	#__STDC_LIMIT_MACROS
 1

	)

61 
	~<öây≥s.h
>

62 
öt8_t
 
	tÊex_öt8_t
;

63 
uöt8_t
 
	tÊex_uöt8_t
;

64 
öt16_t
 
	tÊex_öt16_t
;

65 
uöt16_t
 
	tÊex_uöt16_t
;

66 
öt32_t
 
	tÊex_öt32_t
;

67 
uöt32_t
 
	tÊex_uöt32_t
;

69 sig√d 
	tÊex_öt8_t
;

70 
	tÊex_öt16_t
;

71 
	tÊex_öt32_t
;

72 
	tÊex_uöt8_t
;

73 
	tÊex_uöt16_t
;

74 
	tÊex_uöt32_t
;

77 #i‚de‡
INT8_MIN


78 
	#INT8_MIN
 (-128)

	)

80 #i‚de‡
INT16_MIN


81 
	#INT16_MIN
 (-32767-1)

	)

83 #i‚de‡
INT32_MIN


84 
	#INT32_MIN
 (-2147483647-1)

	)

86 #i‚de‡
INT8_MAX


87 
	#INT8_MAX
 (127)

	)

89 #i‚de‡
INT16_MAX


90 
	#INT16_MAX
 (32767)

	)

92 #i‚de‡
INT32_MAX


93 
	#INT32_MAX
 (2147483647)

	)

95 #i‚de‡
UINT8_MAX


96 
	#UINT8_MAX
 (255U)

	)

98 #i‚de‡
UINT16_MAX


99 
	#UINT16_MAX
 (65535U)

	)

101 #i‚de‡
UINT32_MAX


102 
	#UINT32_MAX
 (4294967295U)

	)

109 #ifde‡
__˝lu•lus


112 
	#YY_USE_CONST


	)

117 #i‡
deföed
 (
__STDC__
)

119 
	#YY_USE_CONST


	)

124 #ifde‡
YY_USE_CONST


125 
	#yyc⁄°
 c⁄°

	)

127 
	#yyc⁄°


	)

131 
	#YY_NULL
 0

	)

138 
	#YY_SC_TO_UI
(
c
Ë((Ë(Ëc)

	)

144 
	#BEGIN
 (
yy_°¨t
Ë1 + 2 *

	)

150 
	#YY_START
 (((
yy_°¨t
Ë- 1Ë/ 2)

	)

151 
	#YYSTATE
 
YY_START


	)

154 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

157 
	#YY_NEW_FILE
 
	`˛igí_∑r£ª°¨t
(
˛igí_∑r£ö
 )

	)

159 
	#YY_END_OF_BUFFER_CHAR
 0

	)

162 #i‚de‡
YY_BUF_SIZE


163 #ifde‡
__ü64__


168 
	#YY_BUF_SIZE
 32768

	)

170 
	#YY_BUF_SIZE
 16384

	)

176 
	#YY_STATE_BUF_SIZE
 ((
YY_BUF_SIZE
 + 2Ë* (
yy_°©e_ty≥
))

	)

178 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


179 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

180 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

183 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


184 
	#YY_TYPEDEF_YY_SIZE_T


	)

185 
size_t
 
	tyy_size_t
;

188 
yy_size_t
 
˛igí_∑r£Àng
;

190 
FILE
 *
˛igí_∑r£ö
, *
˛igí_∑r£out
;

192 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

193 
	#EOB_ACT_END_OF_FILE
 1

	)

194 
	#EOB_ACT_LAST_MATCH
 2

	)

196 
	#YY_LESS_LINENO
(
n
)

	)

197 
	#YY_LINENO_REWIND_TO
(
±r
)

	)

200 
	#yyÀss
(
n
) \

204 
yyÀss_ma¸o_¨g
 = (
n
); \

205 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

206 *
yy_˝
 = (
yy_hﬁd_ch¨
); \

207 
YY_RESTORE_YY_MORE_OFFSET
 \

208 (
yy_c_buf_p
Ë
yy_˝
 = 
yy_bp
 + 
yyÀss_ma¸o_¨g
 - 
YY_MORE_ADJ
; \

209 
YY_DO_BEFORE_ACTION
; \

211  0 )

	)

213 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, (
yyãxt_±r
Ë)

	)

215 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


216 
	#YY_STRUCT_YY_BUFFER_STATE


	)

217 
	syy_buf„r_°©e


219 
FILE
 *
	myy_öput_fûe
;

221 *
	myy_ch_buf
;

222 *
	myy_buf_pos
;

227 
yy_size_t
 
	myy_buf_size
;

232 
	myy_n_ch¨s
;

238 
	myy_is_our_buf„r
;

245 
	myy_is_öãø˘ive
;

251 
	myy_©_bﬁ
;

253 
	myy_bs_löío
;

254 
	myy_bs_cﬁumn
;

259 
	myy_fûl_buf„r
;

261 
	myy_buf„r_°©us
;

263 
	#YY_BUFFER_NEW
 0

	)

264 
	#YY_BUFFER_NORMAL
 1

	)

275 
	#YY_BUFFER_EOF_PENDING
 2

	)

281 
size_t
 
	gyy_buf„r_°ack_t›
 = 0;

282 
size_t
 
	gyy_buf„r_°ack_max
 = 0;

283 
YY_BUFFER_STATE
 * 
	gyy_buf„r_°ack
 = 0;

291 
	#YY_CURRENT_BUFFER
 ( (
yy_buf„r_°ack
) \

292 ? (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)] \

293 : 
NULL
)

	)

298 
	#YY_CURRENT_BUFFER_LVALUE
 (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)]

	)

301 
	gyy_hﬁd_ch¨
;

302 
	gyy_n_ch¨s
;

303 
yy_size_t
 
	g˛igí_∑r£Àng
;

306 *
	gyy_c_buf_p
 = (*) 0;

307 
	gyy_öô
 = 0;

308 
	gyy_°¨t
 = 0;

313 
	gyy_did_buf„r_swôch_⁄_eof
;

315 
˛igí_∑r£ª°¨t
 (
FILE
 *
öput_fûe
 );

316 
˛igí_∑r£_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

317 
YY_BUFFER_STATE
 
˛igí_∑r£_¸óã_buf„r
 (
FILE
 *
fûe
,
size
 );

318 
˛igí_∑r£_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 );

319 
˛igí_∑r£_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 );

320 
˛igí_∑r£push_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

321 
˛igí_∑r£p›_buf„r_°©e
 ();

323 
˛igí_∑r£ísuª_buf„r_°ack
 ();

324 
˛igí_∑r£_lﬂd_buf„r_°©e
 ();

325 
˛igí_∑r£_öô_buf„r
 (
YY_BUFFER_STATE
 
b
,
FILE
 *
fûe
 );

327 
	#YY_FLUSH_BUFFER
 
	`˛igí_∑r£_Êush_buf„r
(
YY_CURRENT_BUFFER
 )

	)

329 
YY_BUFFER_STATE
 
˛igí_∑r£_sˇn_buf„r
 (*
ba£
,
yy_size_t
 
size
 );

330 
YY_BUFFER_STATE
 
˛igí_∑r£_sˇn_°rög
 (
yyc⁄°
 *
yy_°r
 );

331 
YY_BUFFER_STATE
 
˛igí_∑r£_sˇn_byãs
 (
yyc⁄°
 *
byãs
,
yy_size_t
 
Àn
 );

333 *
˛igí_∑r£Æloc
 (
yy_size_t
 );

334 *
˛igí_∑r£ªÆloc
 (*,
yy_size_t
 );

335 
˛igí_∑r£‰ì
 (* );

337 
	#yy_√w_buf„r
 
˛igí_∑r£_¸óã_buf„r


	)

339 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

341 i‡–! 
YY_CURRENT_BUFFER
 ){ \

342 
	`˛igí_∑r£ísuª_buf„r_°ack
 (); \

343 
YY_CURRENT_BUFFER_LVALUE
 = \

344 
	`˛igí_∑r£_¸óã_buf„r
(
˛igí_∑r£ö
,
YY_BUF_SIZE
 ); \

346 
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

347 }

	)

349 
	#yy_£t_bﬁ
(
©_bﬁ
) \

351 i‡–! 
YY_CURRENT_BUFFER
 ){\

352 
	`˛igí_∑r£ísuª_buf„r_°ack
 (); \

353 
YY_CURRENT_BUFFER_LVALUE
 = \

354 
	`˛igí_∑r£_¸óã_buf„r
(
˛igí_∑r£ö
,
YY_BUF_SIZE
 ); \

356 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = 
©_bﬁ
; \

357 }

	)

359 
	#YY_AT_BOL
(Ë(
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
)

	)

363 
	tYY_CHAR
;

365 
FILE
 *
	g˛igí_∑r£ö
 = (FILE *Ë0, *
	g˛igí_∑r£out
 = (FILE *) 0;

367 
	tyy_°©e_ty≥
;

369 
˛igí_∑r£löío
;

371 
	g˛igí_∑r£löío
 = 1;

373 *
˛igí_∑r£ãxt
;

374 #ifde‡
yyãxt_±r


375 #unde‡
yyãxt_±r


377 
	#yyãxt_±r
 
˛igí_∑r£ãxt


	)

379 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 ();

380 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 (yy_°©e_ty≥ 
cuºít_°©e
 );

381 
yy_gë_√xt_buf„r
 ();

382 #i‡
deföed
(
__GNUC__
) && __GNUC__ >= 3

383 
__©åibuã__
((
__n‹ëu∫__
))

385 
yy_Áèl_îr‹
 (
yyc⁄°
 
msg
[] );

390 
	#YY_DO_BEFORE_ACTION
 \

391 (
yyãxt_±r
Ë
yy_bp
; \

392 
˛igí_∑r£Àng
 = (
size_t
Ë(
yy_˝
 - 
yy_bp
); \

393 (
yy_hﬁd_ch¨
Ë*
yy_˝
; \

394 *
yy_˝
 = '\0'; \

395 (
yy_c_buf_p
Ë
yy_˝
;

	)

397 
	#YY_NUM_RULES
 76

	)

398 
	#YY_END_OF_BUFFER
 77

	)

401 
	syy_å™s_öfo


403 
Êex_öt32_t
 
	myy_vîify
;

404 
Êex_öt32_t
 
	myy_nxt
;

406 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ac˚±
[179] =

429 
yyc⁄°
 
YY_CHAR
 
	gyy_ec
[256] =

461 
yyc⁄°
 
YY_CHAR
 
	gyy_mëa
[44] =

470 
yyc⁄°
 
Êex_uöt16_t
 
	gyy_ba£
[196] =

496 
yyc⁄°
 
Êex_öt16_t
 
	gyy_def
[196] =

522 
yyc⁄°
 
Êex_uöt16_t
 
	gyy_nxt
[778] =

611 
yyc⁄°
 
Êex_öt16_t
 
	gyy_chk
[778] =

700 
yy_°©e_ty≥
 
	gyy_œ°_ac˚±ög_°©e
;

701 *
	gyy_œ°_ac˚±ög_˝os
;

703 
˛igí_∑r£_Êex_debug
;

704 
	g˛igí_∑r£_Êex_debug
 = 0;

709 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

710 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

711 
	#YY_MORE_ADJ
 0

	)

712 
	#YY_RESTORE_YY_MORE_OFFSET


	)

713 *
	g˛igí_∑r£ãxt
;

751 
	~"˛igí_c⁄fig.h
"

753 
	~<°dio.h
>

754 
	~<°rög.h
>

755 
	~<°döt.h
>

756 
	~<î∫o.h
>

757 
	~<√töë/ö.h
>

759 
	~"˛igí_∑r£.èb.h
"

761 
	~"˛igí_buf.h
"

762 
	~"˛igí_v¨.h
"

763 
	~"˛igí_cvec.h
"

764 
	~"˛igí_gí.h
"

765 
	~"˛igí_∑r£.h
"

768 
	#YY_DECL
 
	`˛igí_∑r£Àx
(*
_ya
)

	)

771 
	#_YA
 ((
˛iyacc
 *)
_ya
)

	)

773 
	#MAXBUF
 4*4*64*1024

	)

775 
	#MAX
(
x
,
y
Ë((x)>(y)?(x):(y))

	)

776 
	#MIN
(
x
,
y
Ë((x)<(y)?(x):(y))

	)

778 #unde‡
˛igí_∑r£wøp


780 
	$˛igí_∑r£wøp
()

783 
	}
}

787 
	$°rùdup
(*
s0
)

789 *
s1
;

790 *
s
;

792 i‡((
s1
 = 
	`°rdup
(
s0
)Ë=
NULL
){

793 
	`Ârötf
(
°dîr
, "%s: sådup: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

794  
NULL
;

796 (
s
 = 
	`ödex
(
s1
, '\\')Ë!
NULL
)

797 
	`memmove
(
s
, s+1, 
	`°æí
(s));

798  
s1
;

799 
	}
}

815 
	#INITIAL
 0

	)

816 
	#OPTION
 1

	)

817 
	#HELP
 2

	)

818 
	#COMMENT
 3

	)

819 
	#NAMEORTYPE
 4

	)

820 
	#VARIABLE
 5

	)

821 
	#CHOICE
 6

	)

822 
	#ESCAPE
 7

	)

823 
	#STRING
 8

	)

825 #i‚de‡
YY_NO_UNISTD_H


830 
	~<uni°d.h
>

833 #i‚de‡
YY_EXTRA_TYPE


834 
	#YY_EXTRA_TYPE
 *

	)

837 
yy_öô_globÆs
 ();

842 
˛igí_∑r£Àx_de°roy
 ();

844 
˛igí_∑r£gë_debug
 ();

846 
˛igí_∑r££t_debug
 (
debug_Êag
 );

848 
YY_EXTRA_TYPE
 
˛igí_∑r£gë_exåa
 ();

850 
˛igí_∑r££t_exåa
 (
YY_EXTRA_TYPE
 
u£r_deföed
 );

852 
FILE
 *
˛igí_∑r£gë_ö
 ();

854 
˛igí_∑r££t_ö
 (
FILE
 * 
_ö_°r
 );

856 
FILE
 *
˛igí_∑r£gë_out
 ();

858 
˛igí_∑r££t_out
 (
FILE
 * 
_out_°r
 );

860 
yy_size_t
 
˛igí_∑r£gë_Àng
 ();

862 *
˛igí_∑r£gë_ãxt
 ();

864 
˛igí_∑r£gë_löío
 ();

866 
˛igí_∑r££t_löío
 (
_löe_numbî
 );

872 #i‚de‡
YY_SKIP_YYWRAP


873 #ifde‡
__˝lu•lus


874 "C" 
˛igí_∑r£wøp
 ();

876 
˛igí_∑r£wøp
 ();

880 #i‚de‡
YY_NO_UNPUT


882 
yyu≈ut
 (
c
,*
buf_±r
 );

886 #i‚de‡
yyãxt_±r


887 
yy_Êex_°∫˝y
 (*,
yyc⁄°
 *,);

890 #ifde‡
YY_NEED_STRLEN


891 
yy_Êex_°æí
 (
yyc⁄°
 * );

894 #i‚de‡
YY_NO_INPUT


896 #ifde‡
__˝lu•lus


897 
yyöput
 ();

899 
öput
 ();

905 #i‚de‡
YY_READ_BUF_SIZE


906 #ifde‡
__ü64__


908 
	#YY_READ_BUF_SIZE
 16384

	)

910 
	#YY_READ_BUF_SIZE
 8192

	)

915 #i‚de‡
ECHO


919 
	#ECHO
 dÿ{ i‡(
	`fwrôe
–
˛igí_∑r£ãxt
, 
˛igí_∑r£Àng
, 1, 
˛igí_∑r£out
 )Ë{} } 0)

	)

925 #i‚de‡
YY_INPUT


926 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

927 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 ) \

929 
c
 = '*'; \

930 
size_t
 
n
; \

931  
n
 = 0;Ç < 
max_size
 && \

932 (
c
 = 
	`gëc
–
˛igí_∑r£ö
 )Ë!
EOF
 && c !'\n'; ++
n
 ) \

933 
buf
[
n
] = (Ë
c
; \

934 i‡–
c
 == '\n' ) \

935 
buf
[
n
++] = (Ë
c
; \

936 i‡–
c
 =
EOF
 && 
	`„º‹
–
˛igí_∑r£ö
 ) ) \

937 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

938 
ªsu…
 = 
n
; \

942 
î∫o
=0; \

943  (
ªsu…
 = 
	`‰ód
(
buf
, 1, 
max_size
, 
˛igí_∑r£ö
))==0 && 
	`„º‹
(cligen_parsein)) \

945 if–
î∫o
 !
EINTR
) \

947 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

950 
î∫o
=0; \

951 
	`˛óªº
(
˛igí_∑r£ö
); \

955 

	)

962 #i‚de‡
yyãrmö©e


963 
	#yyãrmö©e
(Ë 
YY_NULL


	)

967 #i‚de‡
YY_START_STACK_INCR


968 
	#YY_START_STACK_INCR
 25

	)

972 #i‚de‡
YY_FATAL_ERROR


973 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

981 #i‚de‡
YY_DECL


982 
	#YY_DECL_IS_OURS
 1

	)

984 
˛igí_∑r£Àx
 ();

986 
	#YY_DECL
 
	`˛igí_∑r£Àx
 ()

	)

992 #i‚de‡
YY_USER_ACTION


993 
	#YY_USER_ACTION


	)

997 #i‚de‡
YY_BREAK


998 
	#YY_BREAK
 ;

	)

1001 
	#YY_RULE_SETUP
 \

1002 
YY_USER_ACTION


	)

1006 
	gYY_DECL


1008 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

1009 *
	gyy_˝
, *
	gyy_bp
;

1010 
	gyy_a˘
;

1012 i‡–!(
	gyy_öô
) )

1014 (
	gyy_öô
) = 1;

1016 #ifde‡
YY_USER_INIT


1017 
	gYY_USER_INIT
;

1020 i‡–! (
	gyy_°¨t
) )

1021 (
	gyy_°¨t
) = 1;

1023 i‡–! 
	g˛igí_∑r£ö
 )

1024 
	g˛igí_∑r£ö
 = 
°dö
;

1026 i‡–! 
	g˛igí_∑r£out
 )

1027 
	g˛igí_∑r£out
 = 
°dout
;

1029 i‡–! 
	gYY_CURRENT_BUFFER
 ) {

1030 
˛igí_∑r£ísuª_buf„r_°ack
 ();

1031 
	gYY_CURRENT_BUFFER_LVALUE
 =

1032 
˛igí_∑r£_¸óã_buf„r
(
˛igí_∑r£ö
,
YY_BUF_SIZE
 );

1035 
˛igí_∑r£_lﬂd_buf„r_°©e
( );

1045 
	gyy_˝
 = (
yy_c_buf_p
);

1048 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

1053 
	gyy_bp
 = 
yy_˝
;

1055 
	gyy_cuºít_°©e
 = (
yy_°¨t
);

1056 
	gyy_m©ch
:

1059 
YY_CHAR
 
yy_c
 = 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)] ;

1060 i‡–
	gyy_ac˚±
[
yy_cuºít_°©e
] )

1062 (
	gyy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1063 (
	gyy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1065  
	gyy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
	gyy_c
] != yy_current_state )

1067 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1068 i‡–
	gyy_cuºít_°©e
 >= 179 )

1069 
yy_c
 = 
yy_mëa
[() yy_c];

1071 
	gyy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[
yy_cuºít_°©e
] + (Ë
yy_c
];

1072 ++
	gyy_˝
;

1074  
	gyy_ba£
[
yy_cuºít_°©e
] != 734 );

1076 
	gyy_föd_a˘i⁄
:

1077 
yy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

1078 i‡–
	gyy_a˘
 == 0 )

1080 
yy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

1081 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

1082 
	gyy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

1085 
	gYY_DO_BEFORE_ACTION
;

1087 
	gdo_a˘i⁄
:

1089  
yy_a˘
 )

1093 *
yy_˝
 = (
yy_hﬁd_ch¨
);

1094 
	gyy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

1095 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

1096 
	gyy_föd_a˘i⁄
;

1099 
YY_RULE_SETUP


1102 
YY_BREAK


1104 
YY_RULE_SETUP


1106 { 
BEGIN
(
OPTION
);  *
	g˛igí_∑r£ãxt
; }

1107 
YY_BREAK


1109 
YY_RULE_SETUP


1111 { 
_YA
->
ya_Àx_°©e
 =
INITIAL
; 
BEGIN
(
COMMENT
); }

1112 
YY_BREAK


1115 
YY_RULE_SETUP


1117 { 
_YA
->
ya_löíum
++; }

1118 
YY_BREAK


1120 
YY_RULE_SETUP


1122 { 
BEGIN
(
OPTION
);  *
	g˛igí_∑r£ãxt
; }

1123 
YY_BREAK


1125 
YY_RULE_SETUP


1127 {  *
˛igí_∑r£ãxt
; }

1128 
YY_BREAK


1129 
YY_STATE_EOF
(
INITIAL
):

1131 {  
MY_EOF
; }

1132 
YY_BREAK


1134 
YY_RULE_SETUP


1136 { 
BEGIN
(
NAMEORTYPE
);  *
	g˛igí_∑r£ãxt
; }

1137 
YY_BREAK


1139 
YY_RULE_SETUP


1141 {  *
˛igí_∑r£ãxt
; }

1142 
YY_BREAK


1144 
YY_RULE_SETUP


1146 {  *
˛igí_∑r£ãxt
; }

1147 
YY_BREAK


1149 
YY_RULE_SETUP


1151 {  *
˛igí_∑r£ãxt
; }

1152 
YY_BREAK


1154 
YY_RULE_SETUP


1156 { 
BEGIN
(
HELP
);  
	gPDQ
; }

1157 
YY_BREAK


1159 
YY_RULE_SETUP


1161 {  *
˛igí_∑r£ãxt
; }

1162 
YY_BREAK


1164 
YY_RULE_SETUP


1166 {  *
˛igí_∑r£ãxt
; }

1167 
YY_BREAK


1169 
YY_RULE_SETUP


1171 {  *
˛igí_∑r£ãxt
; }

1172 
YY_BREAK


1174 
YY_RULE_SETUP


1176 {  *
˛igí_∑r£ãxt
; }

1177 
YY_BREAK


1179 
YY_RULE_SETUP


1181 {  *
˛igí_∑r£ãxt
; }

1182 
YY_BREAK


1184 
YY_RULE_SETUP


1187 
˛igí_∑r£lvÆ
.
°rög
 = 
°rùdup
(
˛igí_∑r£ãxt
);

1188  
	gNAME
; }

1189 
YY_BREAK


1191 
YY_RULE_SETUP


1194 
YY_BREAK


1197 
YY_RULE_SETUP


1199 { 
_YA
->
ya_löíum
++;

1200 
	g˛igí_∑r£lvÆ
.
	g°rög
 = 
°rdup
(
˛igí_∑r£ãxt
);

1201  
	gCHAR
; }

1202 
YY_BREAK


1203 
YY_STATE_EOF
(
HELP
):

1205 {  
MY_EOF
; }

1206 
YY_BREAK


1208 
YY_RULE_SETUP


1210 { 
BEGIN
(
INITIAL
);  
	gDQP
; }

1211 
YY_BREAK


1213 
YY_RULE_SETUP


1215 { 
_YA
->
ya_Àx_°©e
 = 
HELP
; 
BEGIN
(
ESCAPE
); }

1216 
YY_BREAK


1218 
YY_RULE_SETUP


1220 { 
˛igí_∑r£lvÆ
.
°rög
 = 
°rdup
(
˛igí_∑r£ãxt
);

1221  
	gCHAR
;}

1222 
YY_BREAK


1224 
YY_RULE_SETUP


1226 { 
BEGIN
(
INITIAL
);  *
	g˛igí_∑r£ãxt
; }

1227 
YY_BREAK


1230 
YY_RULE_SETUP


1232 { 
_YA
->
ya_löíum
++; }

1233 
YY_BREAK


1235 
YY_RULE_SETUP


1237 {  *
˛igí_∑r£ãxt
; }

1238 
YY_BREAK


1240 
YY_RULE_SETUP


1242 { 
BEGIN
(
VARIABLE
);  ' '; }

1243 
YY_BREAK


1246 
YY_RULE_SETUP


1249 
˛igí_∑r£lvÆ
.
°rög
 = 
°rdup
(
˛igí_∑r£ãxt
);

1250  
	gNAME
; }

1251 
YY_BREAK


1253 
YY_RULE_SETUP


1256 
YY_BREAK


1259 
YY_RULE_SETUP


1261 { 
_YA
->
ya_löíum
++; }

1262 
YY_BREAK


1264 
YY_RULE_SETUP


1266 { 
BEGIN
(
INITIAL
);  *
	g˛igí_∑r£ãxt
; }

1267 
YY_BREAK


1269 
YY_RULE_SETUP


1271 {  *
˛igí_∑r£ãxt
; }

1272 
YY_BREAK


1274 
YY_RULE_SETUP


1276 {  *
˛igí_∑r£ãxt
; }

1277 
YY_BREAK


1279 
YY_RULE_SETUP


1281 {  *
˛igí_∑r£ãxt
; }

1282 
YY_BREAK


1284 
YY_RULE_SETUP


1286 {  *
˛igí_∑r£ãxt
; }

1287 
YY_BREAK


1289 
YY_RULE_SETUP


1291 {  *
˛igí_∑r£ãxt
; }

1292 
YY_BREAK


1294 
YY_RULE_SETUP


1296 {  *
˛igí_∑r£ãxt
; }

1297 
YY_BREAK


1299 
YY_RULE_SETUP


1301 {  *
˛igí_∑r£ãxt
; }

1302 
YY_BREAK


1304 
YY_RULE_SETUP


1306 { 
_YA
->
ya_Àx_°rög_°©e
 =
VARIABLE
;
BEGIN
(
STRING
);  
	gDQ
; }

1307 
YY_BREAK


1309 
YY_RULE_SETUP


1311 {  
V_SHOW
; }

1312 
YY_BREAK


1314 
YY_RULE_SETUP


1316 {  
V_RANGE
; }

1317 
YY_BREAK


1319 
YY_RULE_SETUP


1321 {  
V_LENGTH
; }

1322 
YY_BREAK


1324 
YY_RULE_SETUP


1326 {  
V_FRACTION_DIGITS
; }

1327 
YY_BREAK


1329 
YY_RULE_SETUP


1331 { 
BEGIN
(
CHOICE
); 
	gV_CHOICE
; }

1332 
YY_BREAK


1334 
YY_RULE_SETUP


1336 {  
V_KEYWORD
; }

1337 
YY_BREAK


1339 
YY_RULE_SETUP


1341 {  
V_REGEXP
; }

1342 
YY_BREAK


1344 
YY_RULE_SETUP


1346 {  
V_TRANSLATE
; }

1347 
YY_BREAK


1349 
YY_RULE_SETUP


1351 { 
˛igí_∑r£lvÆ
.
°rög
 = 
°rdup
(
˛igí_∑r£ãxt
);  
	gDECIMAL
;}

1352 
YY_BREAK


1354 
YY_RULE_SETUP


1356 { 
˛igí_∑r£lvÆ
.
°rög
 = 
°rdup
(
˛igí_∑r£ãxt
);  
	gNUMBER
;}

1357 
YY_BREAK


1359 
YY_RULE_SETUP


1362 
˛igí_∑r£lvÆ
.
°rög
 = 
°rdup
(
˛igí_∑r£ãxt
);

1363  
	gNAME
; }

1364 
YY_BREAK


1366 
YY_RULE_SETUP


1369 
YY_BREAK


1372 
YY_RULE_SETUP


1374 { 
_YA
->
ya_löíum
++; }

1375 
YY_BREAK


1377 
YY_RULE_SETUP


1379 {  *
˛igí_∑r£ãxt
; }

1380 
YY_BREAK


1382 
YY_RULE_SETUP


1384 { 
BEGIN
(
INITIAL
);  *
	g˛igí_∑r£ãxt
; }

1385 
YY_BREAK


1387 
YY_RULE_SETUP


1389 {  *
˛igí_∑r£ãxt
; }

1390 
YY_BREAK


1392 
YY_RULE_SETUP


1394 { 
˛igí_∑r£lvÆ
.
°rög
 = 
°rdup
(
˛igí_∑r£ãxt
);  
	gDECIMAL
;}

1395 
YY_BREAK


1397 
YY_RULE_SETUP


1399 { 
˛igí_∑r£lvÆ
.
°rög
 = 
°rdup
(
˛igí_∑r£ãxt
);  
	gNUMBER
;}

1400 
YY_BREAK


1402 
YY_RULE_SETUP


1405 
˛igí_∑r£lvÆ
.
°rög
 = 
°rdup
(
˛igí_∑r£ãxt
);

1406  
	gNAME
; }

1407 
YY_BREAK


1409 
YY_RULE_SETUP


1412 
YY_BREAK


1414 
YY_RULE_SETUP


1416 {  *
˛igí_∑r£ãxt
; }

1417 
YY_BREAK


1419 
YY_RULE_SETUP


1421 { 
_YA
->
ya_Àx_°©e
 =
INITIAL
; 
BEGIN
(
COMMENT
); }

1422 
YY_BREAK


1425 
YY_RULE_SETUP


1427 { 
_YA
->
ya_löíum
++; }

1428 
YY_BREAK


1430 
YY_RULE_SETUP


1432 {  *
˛igí_∑r£ãxt
; }

1433 
YY_BREAK


1435 
YY_RULE_SETUP


1437 { 
BEGIN
(
INITIAL
);  *
	g˛igí_∑r£ãxt
;}

1438 
YY_BREAK


1439 
YY_STATE_EOF
(
OPTION
):

1441 {  
MY_EOF
; }

1442 
YY_BREAK


1444 
YY_RULE_SETUP


1446 {  *
˛igí_∑r£ãxt
; }

1447 
YY_BREAK


1449 
YY_RULE_SETUP


1451 {  *
˛igí_∑r£ãxt
; }

1452 
YY_BREAK


1454 
YY_RULE_SETUP


1456 { 
BEGIN
(
INITIAL
);  *
	g˛igí_∑r£ãxt
;}

1457 
YY_BREAK


1459 
YY_RULE_SETUP


1461 { 
_YA
->
ya_Àx_°rög_°©e
 =
INITIAL
;
BEGIN
(
STRING
);  
	gDQ
; }

1462 
YY_BREAK


1464 
YY_RULE_SETUP


1467 
˛igí_∑r£lvÆ
.
°rög
 = 
°rdup
(
˛igí_∑r£ãxt
);

1468  
	gNAME
; }

1469 
YY_BREAK


1471 
YY_RULE_SETUP


1474 
YY_BREAK


1477 
YY_RULE_SETUP


1479 { 
_YA
->
ya_löíum
++; }

1480 
YY_BREAK


1482 
YY_RULE_SETUP


1484 { 
BEGIN
(
_YA
->
ya_Àx_°rög_°©e
);  
	gDQ
; }

1485 
YY_BREAK


1487 
YY_RULE_SETUP


1489 { 
˛igí_∑r£lvÆ
.
°rög
 = 
°rdup
(
˛igí_∑r£ãxt
);

1490  
	gCHAR
;}

1491 
YY_BREAK


1493 
YY_RULE_SETUP


1495 { 
BEGIN
(
_YA
->
ya_Àx_°©e
);

1496 
	g˛igí_∑r£lvÆ
.
	g°rög
 = 
°rdup
(
˛igí_∑r£ãxt
);

1497  
	gCHAR
; }

1498 
YY_BREAK


1501 
YY_RULE_SETUP


1503 { 
_YA
->
ya_löíum
++; 
BEGIN
(_YA->
ya_Àx_°©e
);}

1504 
YY_BREAK


1505 
YY_STATE_EOF
(
COMMENT
):

1507 {  
MY_EOF
; }

1508 
YY_BREAK


1510 
YY_RULE_SETUP


1513 
YY_BREAK


1515 
YY_RULE_SETUP


1517 
ECHO
;

1518 
	gYY_BREAK


1520 
YY_STATE_EOF
(
NAMEORTYPE
):

1521 
YY_STATE_EOF
(
VARIABLE
):

1522 
YY_STATE_EOF
(
CHOICE
):

1523 
YY_STATE_EOF
(
ESCAPE
):

1524 
YY_STATE_EOF
(
STRING
):

1525 
yyãrmö©e
();

1527 
	gYY_END_OF_BUFFER
:

1530 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - (
yyãxt_±r
)) - 1;

1533 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

1534 
YY_RESTORE_YY_MORE_OFFSET


1536 i‡–
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

1547 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1548 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_öput_fûe
 = 
˛igí_∑r£ö
;

1549 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

1559 i‡–(
	gyy_c_buf_p
Ë<&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1561 
yy_°©e_ty≥
 
yy_√xt_°©e
;

1563 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1565 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1576 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

1578 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1580 i‡–
	gyy_√xt_°©e
 )

1583 
	gyy_˝
 = ++(
yy_c_buf_p
);

1584 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

1585 
	gyy_m©ch
;

1590 
	gyy_˝
 = (
yy_c_buf_p
);

1591 
	gyy_föd_a˘i⁄
;

1595  
yy_gë_√xt_buf„r
( ) )

1597 
	gEOB_ACT_END_OF_FILE
:

1599 (
yy_did_buf„r_swôch_⁄_eof
) = 0;

1601 i‡–
˛igí_∑r£wøp
( ) )

1612 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1614 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

1615 
	gdo_a˘i⁄
;

1620 i‡–! (
	gyy_did_buf„r_swôch_⁄_eof
) )

1621 
	gYY_NEW_FILE
;

1626 
	gEOB_ACT_CONTINUE_SCAN
:

1627 (
yy_c_buf_p
) =

1628 (
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1630 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1632 
	gyy_˝
 = (
yy_c_buf_p
);

1633 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1634 
	gyy_m©ch
;

1636 
	gEOB_ACT_LAST_MATCH
:

1637 (
yy_c_buf_p
) =

1638 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)];

1640 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1642 
	gyy_˝
 = (
yy_c_buf_p
);

1643 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1644 
	gyy_föd_a˘i⁄
;

1650 
YY_FATAL_ERROR
(

1664 
	$yy_gë_√xt_buf„r
 ()

1666 *
de°
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
;

1667 *
sour˚
 = (
yyãxt_±r
);

1668 
yy_size_t
 
numbî_to_move
, 
i
;

1669 
ªt_vÆ
;

1671 i‡–(
yy_c_buf_p
Ë> &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
) + 1] )

1672 
	`YY_FATAL_ERROR
(

1675 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_fûl_buf„r
 == 0 )

1677 i‡–(
yy_c_buf_p
Ë- (
yyãxt_±r
Ë- 
YY_MORE_ADJ
 == 1 )

1682  
EOB_ACT_END_OF_FILE
;

1690  
EOB_ACT_LAST_MATCH
;

1697 
numbî_to_move
 = (
yy_size_t
Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
)) - 1;

1699  
i
 = 0; i < 
numbî_to_move
; ++i )

1700 *(
de°
++Ë*(
sour˚
++);

1702 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

1706 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars) = 0;

1710 
yy_size_t
 
num_to_ªad
 =

1711 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 - 
numbî_to_move
 - 1;

1713  
num_to_ªad
 <= 0 )

1717 
YY_BUFFER_STATE
 
b
 = 
YY_CURRENT_BUFFER_LVALUE
;

1719 
yy_c_buf_p_off£t
 =

1720 (Ë((
yy_c_buf_p
Ë- 
b
->
yy_ch_buf
);

1722 i‡–
b
->
yy_is_our_buf„r
 )

1724 
yy_size_t
 
√w_size
 = 
b
->
yy_buf_size
 * 2;

1726 i‡–
√w_size
 <= 0 )

1727 
b
->
yy_buf_size
 += b->yy_buf_size / 8;

1729 
b
->
yy_buf_size
 *= 2;

1731 
b
->
yy_ch_buf
 = (*)

1733 
	`˛igí_∑r£ªÆloc
((*Ë
b
->
yy_ch_buf
,b->
yy_buf_size
 + 2 );

1737 
b
->
yy_ch_buf
 = 0;

1739 i‡–! 
b
->
yy_ch_buf
 )

1740 
	`YY_FATAL_ERROR
(

1743 (
yy_c_buf_p
Ë&
b
->
yy_ch_buf
[
yy_c_buf_p_off£t
];

1745 
num_to_ªad
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 -

1746 
numbî_to_move
 - 1;

1750 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

1751 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

1754 
	`YY_INPUT
–(&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
]),

1755 (
yy_n_ch¨s
), 
num_to_ªad
 );

1757 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1760 i‡–(
yy_n_ch¨s
) == 0 )

1762 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

1764 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

1765 
	`˛igí_∑r£ª°¨t
(
˛igí_∑r£ö
 );

1770 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

1771 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =

1772 
YY_BUFFER_EOF_PENDING
;

1777 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

1779 i‡((Ë((
yy_n_ch¨s
Ë+ 
numbî_to_move
Ë> 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
) {

1781 
√w_size
 = (
yy_n_ch¨s
Ë+ 
numbî_to_move
 + ((yy_n_chars) >> 1);

1782 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 = (*Ë
	`˛igí_∑r£ªÆloc
((*ËYY_CURRENT_BUFFER_LVALUE->yy_ch_buf,
√w_size
 );

1783 i‡–! 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1784 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_get_next_buffer()" );

1787 (
yy_n_ch¨s
Ë+
numbî_to_move
;

1788 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] = 
YY_END_OF_BUFFER_CHAR
;

1789 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
Ë+ 1] = 
YY_END_OF_BUFFER_CHAR
;

1791 (
yyãxt_±r
Ë&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[0];

1793  
ªt_vÆ
;

1794 
	}
}

1798 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
 ()

1800 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

1801 *
yy_˝
;

1803 
yy_cuºít_°©e
 = (
yy_°¨t
);

1805  
yy_˝
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
; yy_˝ < (
yy_c_buf_p
); ++yy_cp )

1807 
YY_CHAR
 
yy_c
 = (*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1);

1808 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1810 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1811 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1813  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1815 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1816 i‡–
yy_cuºít_°©e
 >= 179 )

1817 
yy_c
 = 
yy_mëa
[() yy_c];

1819 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1822  
yy_cuºít_°©e
;

1823 
	}
}

1830 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
 (
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

1832 
yy_is_jam
;

1833 *
yy_˝
 = (
yy_c_buf_p
);

1835 
YY_CHAR
 
yy_c
 = 1;

1836 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1838 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1839 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1841  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1843 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1844 i‡–
yy_cuºít_°©e
 >= 179 )

1845 
yy_c
 = 
yy_mëa
[() yy_c];

1847 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1848 
yy_is_jam
 = (
yy_cuºít_°©e
 == 178);

1850  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

1851 
	}
}

1853 #i‚de‡
YY_NO_UNPUT


1855 
	$yyu≈ut
 (
c
, * 
yy_bp
 )

1857 *
yy_˝
;

1859 
yy_˝
 = (
yy_c_buf_p
);

1862 *
yy_˝
 = (
yy_hﬁd_ch¨
);

1864 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

1867 
yy_size_t
 
numbî_to_move
 = (
yy_n_ch¨s
) + 2;

1868 *
de°
 = &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[

1869 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 + 2];

1870 *
sour˚
 =

1871 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
];

1873  
sour˚
 > 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1874 *--
de°
 = *--
sour˚
;

1876 
yy_˝
 +(Ë(
de°
 - 
sour˚
);

1877 
yy_bp
 +(Ë(
de°
 - 
sour˚
);

1878 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 =

1879 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
;

1881 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

1882 
	`YY_FATAL_ERROR
( "flex scannerÖush-back overflow" );

1885 *--
yy_˝
 = (Ë
c
;

1887 (
yyãxt_±r
Ë
yy_bp
;

1888 (
yy_hﬁd_ch¨
Ë*
yy_˝
;

1889 (
yy_c_buf_p
Ë
yy_˝
;

1890 
	}
}

1894 #i‚de‡
YY_NO_INPUT


1895 #ifde‡
__˝lu•lus


1896 
	$yyöput
 ()

1898 
	$öput
 ()

1902 
c
;

1904 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1906 i‡–*(
yy_c_buf_p
Ë=
YY_END_OF_BUFFER_CHAR
 )

1912 i‡–(
yy_c_buf_p
Ë< &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1914 *(
yy_c_buf_p
) = '\0';

1918 
yy_size_t
 
off£t
 = (
yy_c_buf_p
Ë- (
yyãxt_±r
);

1919 ++(
yy_c_buf_p
);

1921  
	`yy_gë_√xt_buf„r
( ) )

1923 
EOB_ACT_LAST_MATCH
:

1935 
	`˛igí_∑r£ª°¨t
(
˛igí_∑r£ö
 );

1939 
EOB_ACT_END_OF_FILE
:

1941 i‡–
	`˛igí_∑r£wøp
( ) )

1942  
EOF
;

1944 i‡–! (
yy_did_buf„r_swôch_⁄_eof
) )

1945 
YY_NEW_FILE
;

1946 #ifde‡
__˝lu•lus


1947  
	`yyöput
();

1949  
	`öput
();

1953 
EOB_ACT_CONTINUE_SCAN
:

1954 (
yy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
off£t
;

1960 
c
 = *(*Ë(
yy_c_buf_p
);

1961 *(
yy_c_buf_p
) = '\0';

1962 (
yy_hﬁd_ch¨
Ë*++(
yy_c_buf_p
);

1964  
c
;

1965 
	}
}

1973 
	$˛igí_∑r£ª°¨t
 (
FILE
 * 
öput_fûe
 )

1976 i‡–! 
YY_CURRENT_BUFFER
 ){

1977 
	`˛igí_∑r£ísuª_buf„r_°ack
 ();

1978 
YY_CURRENT_BUFFER_LVALUE
 =

1979 
	`˛igí_∑r£_¸óã_buf„r
(
˛igí_∑r£ö
,
YY_BUF_SIZE
 );

1982 
	`˛igí_∑r£_öô_buf„r
(
YY_CURRENT_BUFFER
,
öput_fûe
 );

1983 
	`˛igí_∑r£_lﬂd_buf„r_°©e
( );

1984 
	}
}

1990 
	$˛igí_∑r£_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1998 
	`˛igí_∑r£ísuª_buf„r_°ack
 ();

1999 i‡–
YY_CURRENT_BUFFER
 =
√w_buf„r
 )

2002 i‡–
YY_CURRENT_BUFFER
 )

2005 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

2006 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

2007 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

2010 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

2011 
	`˛igí_∑r£_lﬂd_buf„r_°©e
( );

2018 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

2019 
	}
}

2021 
	$˛igí_∑r£_lﬂd_buf„r_°©e
 ()

2023 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

2024 (
yyãxt_±r
Ë(
yy_c_buf_p
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
;

2025 
˛igí_∑r£ö
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_öput_fûe
;

2026 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
);

2027 
	}
}

2035 
YY_BUFFER_STATE
 
	$˛igí_∑r£_¸óã_buf„r
 (
FILE
 * 
fûe
, 
size
 )

2037 
YY_BUFFER_STATE
 
b
;

2039 
b
 = (
YY_BUFFER_STATE
Ë
	`˛igí_∑r£Æloc
(–
yy_buf„r_°©e
 ) );

2040 i‡–! 
b
 )

2041 
	`YY_FATAL_ERROR
( "out of dynamic memory in cligen_parse_create_buffer()" );

2043 
b
->
yy_buf_size
 = (
yy_size_t
)
size
;

2048 
b
->
yy_ch_buf
 = (*Ë
	`˛igí_∑r£Æloc
(b->
yy_buf_size
 + 2 );

2049 i‡–! 
b
->
yy_ch_buf
 )

2050 
	`YY_FATAL_ERROR
( "out of dynamic memory in cligen_parse_create_buffer()" );

2052 
b
->
yy_is_our_buf„r
 = 1;

2054 
	`˛igí_∑r£_öô_buf„r
(
b
,
fûe
 );

2056  
b
;

2057 
	}
}

2063 
	$˛igí_∑r£_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 )

2066 i‡–! 
b
 )

2069 i‡–
b
 =
YY_CURRENT_BUFFER
 )

2070 
YY_CURRENT_BUFFER_LVALUE
 = (
YY_BUFFER_STATE
) 0;

2072 i‡–
b
->
yy_is_our_buf„r
 )

2073 
	`˛igí_∑r£‰ì
((*Ë
b
->
yy_ch_buf
 );

2075 
	`˛igí_∑r£‰ì
((*Ë
b
 );

2076 
	}
}

2082 
	$˛igí_∑r£_öô_buf„r
 (
YY_BUFFER_STATE
 
b
, 
FILE
 * 
fûe
 )

2085 
€ºno
 = 
î∫o
;

2087 
	`˛igí_∑r£_Êush_buf„r
(
b
 );

2089 
b
->
yy_öput_fûe
 = 
fûe
;

2090 
b
->
yy_fûl_buf„r
 = 1;

2096 i‡(
b
 !
YY_CURRENT_BUFFER
){

2097 
b
->
yy_bs_löío
 = 1;

2098 
b
->
yy_bs_cﬁumn
 = 0;

2101 
b
->
yy_is_öãø˘ive
 = 
fûe
 ? (
	`ißây
–
	`fûío
(file) ) > 0) : 0;

2103 
î∫o
 = 
€ºno
;

2104 
	}
}

2110 
	$˛igí_∑r£_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 )

2112 i‡–! 
b
 )

2115 
b
->
yy_n_ch¨s
 = 0;

2121 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

2122 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

2124 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

2126 
b
->
yy_©_bﬁ
 = 1;

2127 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

2129 i‡–
b
 =
YY_CURRENT_BUFFER
 )

2130 
	`˛igí_∑r£_lﬂd_buf„r_°©e
( );

2131 
	}
}

2139 
	$˛igí_∑r£push_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

2141 i‡(
√w_buf„r
 =
NULL
)

2144 
	`˛igí_∑r£ísuª_buf„r_°ack
();

2147 i‡–
YY_CURRENT_BUFFER
 )

2150 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

2151 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

2152 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

2156 i‡(
YY_CURRENT_BUFFER
)

2157 (
yy_buf„r_°ack_t›
)++;

2158 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

2161 
	`˛igí_∑r£_lﬂd_buf„r_°©e
( );

2162 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

2163 
	}
}

2169 
	$˛igí_∑r£p›_buf„r_°©e
 ()

2171 i‡(!
YY_CURRENT_BUFFER
)

2174 
	`˛igí_∑r£_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

2175 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

2176 i‡((
yy_buf„r_°ack_t›
) > 0)

2177 --(
yy_buf„r_°ack_t›
);

2179 i‡(
YY_CURRENT_BUFFER
) {

2180 
	`˛igí_∑r£_lﬂd_buf„r_°©e
( );

2181 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

2183 
	}
}

2188 
	$˛igí_∑r£ísuª_buf„r_°ack
 ()

2190 
yy_size_t
 
num_to_Æloc
;

2192 i‡(!(
yy_buf„r_°ack
)) {

2198 
num_to_Æloc
 = 1;

2199 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
˛igí_∑r£Æloc


2200 (
num_to_Æloc
 * (
yy_buf„r_°©e
*)

2202 i‡–! (
yy_buf„r_°ack
) )

2203 
	`YY_FATAL_ERROR
( "out of dynamic memory in cligen_parseensure_buffer_stack()" );

2205 
	`mem£t
((
yy_buf„r_°ack
), 0, 
num_to_Æloc
 * (
yy_buf„r_°©e
*));

2207 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

2208 (
yy_buf„r_°ack_t›
) = 0;

2212 i‡((
yy_buf„r_°ack_t›
Ë>((
yy_buf„r_°ack_max
)) - 1){

2215 
yy_size_t
 
grow_size
 = 8 ;

2217 
num_to_Æloc
 = (
yy_buf„r_°ack_max
Ë+ 
grow_size
;

2218 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
˛igí_∑r£ªÆloc


2219 ((
yy_buf„r_°ack
),

2220 
num_to_Æloc
 * (
yy_buf„r_°©e
*)

2222 i‡–! (
yy_buf„r_°ack
) )

2223 
	`YY_FATAL_ERROR
( "out of dynamic memory in cligen_parseensure_buffer_stack()" );

2226 
	`mem£t
((
yy_buf„r_°ack
Ë+ (
yy_buf„r_°ack_max
), 0, 
grow_size
 * (
yy_buf„r_°©e
*));

2227 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

2229 
	}
}

2237 
YY_BUFFER_STATE
 
	$˛igí_∑r£_sˇn_buf„r
 (* 
ba£
, 
yy_size_t
 
size
 )

2239 
YY_BUFFER_STATE
 
b
;

2241 i‡–
size
 < 2 ||

2242 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

2243 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

2247 
b
 = (
YY_BUFFER_STATE
Ë
	`˛igí_∑r£Æloc
(–
yy_buf„r_°©e
 ) );

2248 i‡–! 
b
 )

2249 
	`YY_FATAL_ERROR
( "out of dynamic memory in cligen_parse_scan_buffer()" );

2251 
b
->
yy_buf_size
 = 
size
 - 2;

2252 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

2253 
b
->
yy_is_our_buf„r
 = 0;

2254 
b
->
yy_öput_fûe
 = 0;

2255 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

2256 
b
->
yy_is_öãø˘ive
 = 0;

2257 
b
->
yy_©_bﬁ
 = 1;

2258 
b
->
yy_fûl_buf„r
 = 0;

2259 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

2261 
	`˛igí_∑r£_swôch_to_buf„r
(
b
 );

2263  
b
;

2264 
	}
}

2274 
YY_BUFFER_STATE
 
	$˛igí_∑r£_sˇn_°rög
 (
yyc⁄°
 * 
yy°r
 )

2277  
	`˛igí_∑r£_sˇn_byãs
(
yy°r
,
	`°æí
(yystr) );

2278 
	}
}

2287 
YY_BUFFER_STATE
 
	$˛igí_∑r£_sˇn_byãs
 (
yyc⁄°
 * 
yybyãs
, 
yy_size_t
 
_yybyãs_Àn
 )

2289 
YY_BUFFER_STATE
 
b
;

2290 *
buf
;

2291 
yy_size_t
 
n
;

2292 
yy_size_t
 
i
;

2295 
n
 = 
_yybyãs_Àn
 + 2;

2296 
buf
 = (*Ë
	`˛igí_∑r£Æloc
(
n
 );

2297 i‡–! 
buf
 )

2298 
	`YY_FATAL_ERROR
( "out of dynamic memory in cligen_parse_scan_bytes()" );

2300  
i
 = 0; i < 
_yybyãs_Àn
; ++i )

2301 
buf
[
i
] = 
yybyãs
[i];

2303 
buf
[
_yybyãs_Àn
] = buf[_yybyãs_Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

2305 
b
 = 
	`˛igí_∑r£_sˇn_buf„r
(
buf
,
n
 );

2306 i‡–! 
b
 )

2307 
	`YY_FATAL_ERROR
( "bad buffer in cligen_parse_scan_bytes()" );

2312 
b
->
yy_is_our_buf„r
 = 1;

2314  
b
;

2315 
	}
}

2317 #i‚de‡
YY_EXIT_FAILURE


2318 
	#YY_EXIT_FAILURE
 2

	)

2321 
	$yy_Áèl_îr‹
 (
yyc⁄°
 * 
msg
 )

2323 (Ë
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

2324 
	`exô
–
YY_EXIT_FAILURE
 );

2325 
	}
}

2329 #unde‡
yyÀss


2330 
	#yyÀss
(
n
) \

2334 
yyÀss_ma¸o_¨g
 = (
n
); \

2335 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

2336 
˛igí_∑r£ãxt
[
˛igí_∑r£Àng
] = (
yy_hﬁd_ch¨
); \

2337 (
yy_c_buf_p
Ë
˛igí_∑r£ãxt
 + 
yyÀss_ma¸o_¨g
; \

2338 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
); \

2339 *(
yy_c_buf_p
) = '\0'; \

2340 
˛igí_∑r£Àng
 = 
yyÀss_ma¸o_¨g
; \

2342  0 )

	)

2349 
	$˛igí_∑r£gë_löío
 ()

2352  
˛igí_∑r£löío
;

2353 
	}
}

2358 
FILE
 *
	$˛igí_∑r£gë_ö
 ()

2360  
˛igí_∑r£ö
;

2361 
	}
}

2366 
FILE
 *
	$˛igí_∑r£gë_out
 ()

2368  
˛igí_∑r£out
;

2369 
	}
}

2374 
yy_size_t
 
	$˛igí_∑r£gë_Àng
 ()

2376  
˛igí_∑r£Àng
;

2377 
	}
}

2383 *
	$˛igí_∑r£gë_ãxt
 ()

2385  
˛igí_∑r£ãxt
;

2386 
	}
}

2392 
	$˛igí_∑r££t_löío
 (
_löe_numbî
 )

2395 
˛igí_∑r£löío
 = 
_löe_numbî
;

2396 
	}
}

2404 
	$˛igí_∑r££t_ö
 (
FILE
 * 
_ö_°r
 )

2406 
˛igí_∑r£ö
 = 
_ö_°r
 ;

2407 
	}
}

2409 
	$˛igí_∑r££t_out
 (
FILE
 * 
_out_°r
 )

2411 
˛igí_∑r£out
 = 
_out_°r
 ;

2412 
	}
}

2414 
	$˛igí_∑r£gë_debug
 ()

2416  
˛igí_∑r£_Êex_debug
;

2417 
	}
}

2419 
	$˛igí_∑r££t_debug
 (
_bdebug
 )

2421 
˛igí_∑r£_Êex_debug
 = 
_bdebug
 ;

2422 
	}
}

2424 
	$yy_öô_globÆs
 ()

2430 (
yy_buf„r_°ack
) = 0;

2431 (
yy_buf„r_°ack_t›
) = 0;

2432 (
yy_buf„r_°ack_max
) = 0;

2433 (
yy_c_buf_p
) = (*) 0;

2434 (
yy_öô
) = 0;

2435 (
yy_°¨t
) = 0;

2438 #ifde‡
YY_STDINIT


2439 
˛igí_∑r£ö
 = 
°dö
;

2440 
˛igí_∑r£out
 = 
°dout
;

2442 
˛igí_∑r£ö
 = (
FILE
 *) 0;

2443 
˛igí_∑r£out
 = (
FILE
 *) 0;

2450 
	}
}

2453 
	$˛igí_∑r£Àx_de°roy
 ()

2457 
YY_CURRENT_BUFFER
){

2458 
	`˛igí_∑r£_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

2459 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

2460 
	`˛igí_∑r£p›_buf„r_°©e
();

2464 
	`˛igí_∑r£‰ì
((
yy_buf„r_°ack
) );

2465 (
yy_buf„r_°ack
Ë
NULL
;

2469 
	`yy_öô_globÆs
( );

2472 
	}
}

2478 #i‚de‡
yyãxt_±r


2479 
	$yy_Êex_°∫˝y
 (* 
s1
, 
yyc⁄°
 * 
s2
, 
n
 )

2482 
i
;

2483  
i
 = 0; i < 
n
; ++i )

2484 
s1
[
i
] = 
s2
[i];

2485 
	}
}

2488 #ifde‡
YY_NEED_STRLEN


2489 
	$yy_Êex_°æí
 (
yyc⁄°
 * 
s
 )

2491 
n
;

2492  
n
 = 0; 
s
[n]; ++n )

2495  
n
;

2496 
	}
}

2499 *
	$˛igí_∑r£Æloc
 (
yy_size_t
 
size
 )

2501  (*Ë
	`mÆloc
–
size
 );

2502 
	}
}

2504 *
	$˛igí_∑r£ªÆloc
 (* 
±r
, 
yy_size_t
 
size
 )

2514  (*Ë
	`ªÆloc
–(*Ë
±r
, 
size
 );

2515 
	}
}

2517 
	$˛igí_∑r£‰ì
 (* 
±r
 )

2519 
	`‰ì
–(*Ë
±r
 );

2520 
	}
}

2522 
	#YYTABLES_NAME
 "yyèbÀs"

	)

2531 
	$cgl_öô
(
˛iyacc
 *
ya
)

2533 
	`BEGIN
(
INITIAL
);

2534 
ya
->
ya_Àxbuf
 = 
	`˛igí_∑r£_sˇn_°rög
 (ya->
ya_∑r£_°rög
);

2537 
	`yyu≈ut
(0, "");

2541 
	}
}

2547 
	$cgl_exô
(
˛iyacc
 *
ya
)

2549 
	`˛igí_∑r£_dñëe_buf„r
(
ya
->
ya_Àxbuf
);

2550 
	`˛igí_∑r£Àx_de°roy
();

2552 
	}
}

	@clixon-master/apps/backend/backend_client.c

36 #ifde‡
HAVE_CONFIG_H


37 
	~"˛ix⁄_c⁄fig.h
"

40 
	~<°dio.h
>

41 
	~<°rög.h
>

42 
	~<°dlib.h
>

43 
	~<uni°d.h
>

44 
	~<°d¨g.h
>

45 
	~<î∫o.h
>

46 
	~<sig«l.h
>

47 
	~<f˙é.h
>

48 
	~<time.h
>

49 
	~<sy¶og.h
>

50 
	~<sys/°©.h
>

51 
	~<sys/time.h
>

52 
	~<sys/sockë.h
>

53 
	~<sys/∑øm.h
>

54 
	~<sys/ty≥s.h
>

55 
	~<√töë/ö.h
>

56 
	~<¨∑/öë.h
>

57 
	~<as£π.h
>

58 
	~<√töë/ö.h
>

61 
	~<˛igí/˛igí.h
>

64 
	~<˛ix⁄/˛ix⁄.h
>

66 
	~"˛ix⁄_backíd_h™dÀ.h
"

67 
	~"backíd_commô.h
"

68 
	~"backíd_∂ugö.h
"

69 
	~"backíd_˛õ¡.h
"

70 
	~"backíd_h™dÀ.h
"

80 
˛õ¡_subs¸ùti⁄
 *

81 
	$˛õ¡_subs¸ùti⁄_add
(
˛õ¡_íåy
 *
˚
,

82 *
°ªam
,

83 
f‹m©_íum
 
f‹m©
,

84 *
fûãr
)

86 
˛õ¡_subs¸ùti⁄
 *
su
 = 
NULL
;

88 i‡((
su
 = 
	`mÆloc
((*su))Ë=
NULL
){

89 
	`˛ic⁄_îr
(
OE_PLUGIN
, 
î∫o
, "malloc");

90 
d⁄e
;

92 
	`mem£t
(
su
, 0, (*su));

93 
su
->
su_°ªam
 = 
	`°rdup
(
°ªam
);

94 
su
->
su_f‹m©
 = 
f‹m©
;

95 
su
->
su_fûãr
 = 
fûãr
?
	`°rdup
(filter):strdup("");

96 
su
->
su_√xt
 = 
˚
->
˚_subs¸ùti⁄
;

97 
˚
->
˚_subs¸ùti⁄
 = 
su
;

98 
d⁄e
:

99  
su
;

100 
	}
}

102 
˛õ¡_íåy
 *

103 
	$˚_föd_bypid
(
˛õ¡_íåy
 *
˚_li°
, 
pid
)

105 
˛õ¡_íåy
 *
˚
;

107 
˚
 = 
˚_li°
; ce; cê˚->
˚_√xt
)

108 i‡(
˚
->
˚_pid
 =
pid
)

109  
˚
;

110  
NULL
;

111 
	}
}

114 
	$˛õ¡_subs¸ùti⁄_dñëe
(
˛õ¡_íåy
 *
˚
,

115 
˛õ¡_subs¸ùti⁄
 *
su0
)

117 
˛õ¡_subs¸ùti⁄
 *
su
;

118 
˛õ¡_subs¸ùti⁄
 **
su_¥ev
;

120 
su_¥ev
 = &
˚
->
˚_subs¸ùti⁄
;

121 
su
 = *
su_¥ev
; su; su = su->
su_√xt
){

122 i‡(
su
 =
su0
){

123 *
su_¥ev
 = 
su
->
su_√xt
;

124 
	`‰ì
(
su
->
su_°ªam
);

125 i‡(
su
->
su_fûãr
)

126 
	`‰ì
(
su
->
su_fûãr
);

127 
	`‰ì
(
su
);

130 
su_¥ev
 = &
su
->
su_√xt
;

133 
	}
}

135 #ifde‡
nŸu£d


136 
˛õ¡_subs¸ùti⁄
 *

137 
	$˛õ¡_subs¸ùti⁄_föd
(
˛õ¡_íåy
 *
˚
, *
°ªam
)

139 
˛õ¡_subs¸ùti⁄
 *
su
 = 
NULL
;

141 
su
 = 
˚
->
˚_subs¸ùti⁄
; su; su = su->
su_√xt
)

142 i‡(
	`°rcmp
(
su
->
su_°ªam
, 
°ªam
) == 0)

145  
su
;

146 
	}
}

157 
	$backíd_˛õ¡_rm
(
˛ic⁄_h™dÀ
 
h
,

158 
˛õ¡_íåy
 *
˚
)

160 
˛õ¡_íåy
 *
c
;

161 
˛õ¡_íåy
 *
c0
;

162 
˛õ¡_íåy
 **
˚_¥ev
;

163 
˛õ¡_subs¸ùti⁄
 *
su
;

165 
c0
 = 
	`backíd_˛õ¡_li°
(
h
);

166 
˚_¥ev
 = &
c0
;

167 
c
 = *
˚_¥ev
; c; c = c->
˚_√xt
){

168 i‡(
c
 =
˚
){

169 i‡(
˚
->
˚_s
){

170 
	`evít_uƒeg_fd
(
˚
->
˚_s
, 
‰om_˛õ¡
);

171 
	`˛o£
(
˚
->
˚_s
);

172 
˚
->
˚_s
 = 0;

174 (
su
 = 
˚
->
˚_subs¸ùti⁄
Ë!
NULL
)

175 
	`˛õ¡_subs¸ùti⁄_dñëe
(
˚
, 
su
);

178 
˚_¥ev
 = &
c
->
˚_√xt
;

180  
	`backíd_˛õ¡_dñëe
(
h
, 
˚
);

181 
	}
}

185 
	$√tc⁄f_db_föd
(
cxobj
 *
xn
,

186 *
«me
)

188 
cxobj
 *
xs
;

189 
cxobj
 *
xi
;

190 *
db
 = 
NULL
;

192 i‡((
xs
 = 
	`xml_föd
(
xn
, 
«me
)Ë=
NULL
)

193 
d⁄e
;

194 i‡((
xi
 = 
	`xml_chûd_i
(
xs
, 0)Ë=
NULL
)

195 
d⁄e
;

196 
db
 = 
	`xml_«me
(
xi
);

197 
d⁄e
:

198  
db
;

199 
	}
}

208 
	$‰om_˛õ¡_gë_c⁄fig
(
˛ic⁄_h™dÀ
 
h
,

209 
cxobj
 *
xe
,

210 
cbuf
 *
cbªt
)

212 
ªtvÆ
 = -1;

213 *
db
;

214 
cxobj
 *
xfûãr
;

215 *
£À˘‹
 = "/";

216 
cxobj
 *
xªt
 = 
NULL
;

217 
cbuf
 *
cbx
 = 
NULL
;

219 i‡((
db
 = 
	`√tc⁄f_db_föd
(
xe
, "sour˚")Ë=
NULL
){

220 
	`˛ic⁄_îr
(
OE_XML
, 0, "dbÇot found");

221 
d⁄e
;

223 i‡(
	`xmldb_vÆid©e_db
(
db
) < 0){

224 i‡((
cbx
 = 
	`cbuf_√w
()Ë=
NULL
){

225 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cbuf_new");

226 
d⁄e
;

228 
	`˝rötf
(
cbx
, "Nÿsuch d©aba£: %s", 
db
);

229 i‡(
	`√tc⁄f_övÆid_vÆue
(
cbªt
, "¥Ÿocﬁ", 
	`cbuf_gë
(
cbx
))< 0)

230 
d⁄e
;

231 
ok
;

233 i‡((
xfûãr
 = 
	`xml_föd
(
xe
, "fûãr")Ë!
NULL
)

234 i‡((
£À˘‹
 = 
	`xml_föd_vÆue
(
xfûãr
, "£À˘"))==
NULL
)

235 
£À˘‹
="/";

236 i‡(
	`xmldb_gë
(
h
, 
db
, 
£À˘‹
, 1, &
xªt
) < 0){

237 i‡(
	`√tc⁄f_›î©i⁄_Áûed
(
cbªt
, "application", "readÑegistry")< 0)

238 
d⁄e
;

239 
ok
;

241 
	`˝rötf
(
cbªt
, "<rpc-reply>");

242 i‡(
xªt
==
NULL
)

243 
	`˝rötf
(
cbªt
, "<data/>");

245 i‡(
	`xml_«me_£t
(
xªt
, "data") < 0)

246 
d⁄e
;

247 i‡(
	`˛ic⁄_xml2cbuf
(
cbªt
, 
xªt
, 0, 0) < 0)

248 
d⁄e
;

250 
	`˝rötf
(
cbªt
, "</rpc-reply>");

251 
ok
:

252 
ªtvÆ
 = 0;

253 
d⁄e
:

254 i‡(
cbx
)

255 
	`cbuf_‰ì
(
cbx
);

256 i‡(
xªt
)

257 
	`xml_‰ì
(
xªt
);

258  
ªtvÆ
;

259 
	}
}

269 
	$‰om_˛õ¡_gë
(
˛ic⁄_h™dÀ
 
h
,

270 
cxobj
 *
xe
,

271 
cbuf
 *
cbªt
)

273 
ªtvÆ
 = -1;

274 
cxobj
 *
xfûãr
;

275 *
£À˘‹
 = "/";

276 
cxobj
 *
xªt
 = 
NULL
;

277 
ªt
;

278 
cbuf
 *
cbx
 = 
NULL
;

280 i‡((
xfûãr
 = 
	`xml_föd
(
xe
, "fûãr")Ë!
NULL
)

281 i‡((
£À˘‹
 = 
	`xml_föd_vÆue
(
xfûãr
, "£À˘"))==
NULL
)

282 
£À˘‹
="/";

284 i‡(
	`xmldb_gë
(
h
, "ru¬ög", 
£À˘‹
, 0, &
xªt
) < 0){

285 i‡(
	`√tc⁄f_›î©i⁄_Áûed
(
cbªt
, "application", "readÑegistry")< 0)

286 
d⁄e
;

287 
ok
;

290 
	`as£π
(
xªt
);

291 
	`˛ic⁄_îr_ª£t
();

292 i‡((
ªt
 = 
	`˛ix⁄_∂ugö_°©ed©a
(
h
, 
£À˘‹
, &
xªt
)) < 0)

293 
d⁄e
;

294 i‡(
ªt
 == 0){

295 
	`˝rötf
(
cbªt
, "<rpc-reply>");

296 i‡(
xªt
==
NULL
)

297 
	`˝rötf
(
cbªt
, "<data/>");

299 i‡(
	`xml_«me_£t
(
xªt
, "data") < 0)

300 
d⁄e
;

301 i‡(
	`˛ic⁄_xml2cbuf
(
cbªt
, 
xªt
, 0, 0) < 0)

302 
d⁄e
;

304 
	`˝rötf
(
cbªt
, "</rpc-reply>");

307 i‡((
cbx
 = 
	`cbuf_√w
()Ë=
NULL
){

308 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cbuf_new");

309 
d⁄e
;

311 
	`˝rötf
(
cbx
, "I¡î«»îr‹:%s", 
˛ic⁄_îr_ªas⁄
);

312 i‡(
	`√tc⁄f_›î©i⁄_Áûed
(
cbªt
, "Ωc", 
	`cbuf_gë
(
cbx
))< 0)

313 
d⁄e
;

314 
	`˛ic⁄_log
(
LOG_NOTICE
, "%†Eº‹ i¿backíd_°©ed©a_ˇŒ:%s", 
__FUNCTION__
, 
	`xml_«me
(
xe
));

316 
ok
:

317 
ªtvÆ
 = 0;

318 
d⁄e
:

319 i‡(
cbx
)

320 
	`cbuf_‰ì
(
cbx
);

321 i‡(
xªt
)

322 
	`xml_‰ì
(
xªt
);

323  
ªtvÆ
;

324 
	}
}

334 
	$‰om_˛õ¡_edô_c⁄fig
(
˛ic⁄_h™dÀ
 
h
,

335 
cxobj
 *
xn
,

336 
mypid
,

337 
cbuf
 *
cbªt
)

339 
ªtvÆ
 = -1;

340 *
èrgë
;

341 
cxobj
 *
xc
;

342 
cxobj
 *
x
;

343 
›î©i⁄_ty≥
 
›î©i⁄
 = 
OP_MERGE
;

344 
piddb
;

345 
n⁄_c⁄fig
 = 0;

346 
y™g_•ec
 *
y•ec
;

347 
cbuf
 *
cbx
 = 
NULL
;

349 i‡((
y•ec
 = 
	`˛ic⁄_db•ec_y™g
(
h
)Ë=
NULL
){

350 
	`˛ic⁄_îr
(
OE_YANG
, 
ENOENT
, "No yang spec9");

351 
d⁄e
;

353 i‡((
èrgë
 = 
	`√tc⁄f_db_föd
(
xn
, "èrgë")Ë=
NULL
){

354 
	`˛ic⁄_îr
(
OE_XML
, 0, "dbÇot found");

355 
d⁄e
;

357 i‡((
cbx
 = 
	`cbuf_√w
()Ë=
NULL
){

358 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cbuf_new");

359 
d⁄e
;

361 i‡(
	`xmldb_vÆid©e_db
(
èrgë
) < 0){

362 
	`˝rötf
(
cbx
, "Nÿsuch d©aba£: %s", 
èrgë
);

363 i‡(
	`√tc⁄f_övÆid_vÆue
(
cbªt
, "¥Ÿocﬁ", 
	`cbuf_gë
(
cbx
))< 0)

364 
d⁄e
;

365 
ok
;

368 
piddb
 = 
	`xmldb_i¶ocked
(
h
, 
èrgë
);

369 i‡(
piddb
 && 
mypid
 !=Öiddb){

370 
	`˝rötf
(
cbx
, "<£ssi⁄-id>%d</£ssi⁄-id>", 
piddb
);

371 i‡(
	`√tc⁄f_lock_díõd
(
cbªt
, 
	`cbuf_gë
(
cbx
), "Operation failed,Üock isálready held") < 0)

372 
d⁄e
;

373 
ok
;

375 i‡((
x
 = 
	`x∑th_fú°
(
xn
, "deÁu…-›î©i⁄")Ë!
NULL
){

376 i‡(
	`xml_›î©i⁄
(
	`xml_body
(
x
), &
›î©i⁄
) < 0){

377 i‡(
	`√tc⁄f_övÆid_vÆue
(
cbªt
, "protocol", "Wrong operation")< 0)

378 
d⁄e
;

379 
ok
;

382 i‡((
xc
 = 
	`x∑th_fú°
(
xn
, "c⁄fig")Ë=
NULL
){

383 i‡(
	`√tc⁄f_missög_ñemít
(
cbªt
, "¥Ÿocﬁ", "<bad-ñemít>c⁄fig</bad-ñemít>", 
NULL
) < 0)

384 
d⁄e
;

385 
ok
;

388 i‡(
	`xml_≠∂y
(
xc
, 
CX_ELMNT
, 
xml_•ec_p›uœã
, 
y•ec
) < 0)

389 
d⁄e
;

390 i‡(
	`xml_≠∂y
(
xc
, 
CX_ELMNT
, 
xml_n⁄_c⁄fig_d©a
, &
n⁄_c⁄fig
) < 0)

391 
d⁄e
;

392 i‡(
n⁄_c⁄fig
){

393 i‡(
	`√tc⁄f_övÆid_vÆue
(
cbªt
, "protocol", "State dataÇotállowed")< 0)

394 
d⁄e
;

395 
ok
;

400 i‡(
xml_chûd_s‹t
 && 
	`xml_≠∂y0
(
xc
, 
CX_ELMNT
, 
xml_s‹t
, 
NULL
) < 0)

401 
d⁄e
;

402 i‡(
	`xmldb_put
(
h
, 
èrgë
, 
›î©i⁄
, 
xc
, 
cbªt
) < 0){

403 
	`˛ic⁄_debug
(1, "%†ERROR PUT", 
__FUNCTION__
);

404 i‡(
	`√tc⁄f_›î©i⁄_Áûed
(
cbªt
, "¥Ÿocﬁ", 
˛ic⁄_îr_ªas⁄
)< 0)

405 
d⁄e
;

406 
ok
;

409 
ok
:

410 i‡(!
	`cbuf_Àn
(
cbªt
))

411 
	`˝rötf
(
cbªt
, "<rpc-reply><ok/></rpc-reply>");

412 
ªtvÆ
 = 0;

413 
d⁄e
:

414 i‡(
cbx
)

415 
	`cbuf_‰ì
(
cbx
);

416 
	`˛ic⁄_debug
(1, "%†d⁄êcbªt:%s", 
__FUNCTION__
, 
	`cbuf_gë
(
cbªt
));

417  
ªtvÆ
;

418 
	}
}

428 
	$‰om_˛õ¡_lock
(
˛ic⁄_h™dÀ
 
h
,

429 
cxobj
 *
xe
,

430 
pid
,

431 
cbuf
 *
cbªt
)

433 
ªtvÆ
 = -1;

434 *
db
;

435 
piddb
;

436 
cbuf
 *
cbx
 = 
NULL
;

438 i‡((
db
 = 
	`√tc⁄f_db_föd
(
xe
, "èrgë")Ë=
NULL
){

439 i‡(
	`√tc⁄f_missög_ñemít
(
cbªt
, "¥Ÿocﬁ", "<bad-ñemít>èrgë</bad-ñemít>", 
NULL
) < 0)

440 
d⁄e
;

441 
ok
;

443 i‡((
cbx
 = 
	`cbuf_√w
()Ë=
NULL
){

444 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cbuf_new");

445 
d⁄e
;

447 i‡(
	`xmldb_vÆid©e_db
(
db
) < 0){

448 
	`˝rötf
(
cbx
, "Nÿsuch d©aba£: %s", 
db
);

449 i‡(
	`√tc⁄f_övÆid_vÆue
(
cbªt
, "¥Ÿocﬁ", 
	`cbuf_gë
(
cbx
))< 0)

450 
d⁄e
;

451 
ok
;

459 
piddb
 = 
	`xmldb_i¶ocked
(
h
, 
db
);

460 i‡(
piddb
){

461 
	`˝rötf
(
cbx
, "<£ssi⁄-id>%d</£ssi⁄-id>", 
piddb
);

462 i‡(
	`√tc⁄f_lock_díõd
(
cbªt
, 
	`cbuf_gë
(
cbx
), "Operation failed,Üock isálready held") < 0)

463 
d⁄e
;

464 
ok
;

467 i‡(
	`xmldb_lock
(
h
, 
db
, 
pid
) < 0)

468 
d⁄e
;

469 
	`˝rötf
(
cbªt
, "<rpc-reply><ok/></rpc-reply>");

471 
ok
:

472 
ªtvÆ
 = 0;

473 
d⁄e
:

474 i‡(
cbx
)

475 
	`cbuf_‰ì
(
cbx
);

476  
ªtvÆ
;

477 
	}
}

487 
	$‰om_˛õ¡_u∆ock
(
˛ic⁄_h™dÀ
 
h
,

488 
cxobj
 *
xe
,

489 
pid
,

490 
cbuf
 *
cbªt
)

492 
ªtvÆ
 = -1;

493 *
db
;

494 
piddb
;

495 
cbuf
 *
cbx
 = 
NULL
;

497 i‡((
db
 = 
	`√tc⁄f_db_föd
(
xe
, "èrgë")Ë=
NULL
){

498 i‡(
	`√tc⁄f_missög_ñemít
(
cbªt
, "¥Ÿocﬁ", "<bad-ñemít>èrgë</bad-ñemít>", 
NULL
) < 0)

499 
d⁄e
;

500 
ok
;

502 i‡((
cbx
 = 
	`cbuf_√w
()Ë=
NULL
){

503 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cbuf_new");

504 
d⁄e
;

506 i‡(
	`xmldb_vÆid©e_db
(
db
) < 0){

507 
	`˝rötf
(
cbx
, "Nÿsuch d©aba£: %s", 
db
);

508 i‡(
	`√tc⁄f_övÆid_vÆue
(
cbªt
, "¥Ÿocﬁ", 
	`cbuf_gë
(
cbx
))< 0)

509 
d⁄e
;

510 
ok
;

512 
piddb
 = 
	`xmldb_i¶ocked
(
h
, 
db
);

520 i‡(
piddb
==0 ||Öiddb !
pid
){

521 
	`˝rötf
(
cbx
, "<£ssi⁄-id>pid=%dÖiddb=%d</£ssi⁄-id>", 
pid
, 
piddb
);

522 i‡(
	`√tc⁄f_lock_díõd
(
cbªt
, 
	`cbuf_gë
(
cbx
), "Unlock failed,Üock isálready held") < 0)

523 
d⁄e
;

524 
ok
;

527 
	`xmldb_u∆ock
(
h
, 
db
);

528 i‡(
	`˝rötf
(
cbªt
, "<rpc-reply><ok/></rpc-reply>") < 0)

529 
d⁄e
;

531 
ok
:

532 
ªtvÆ
 = 0;

533 
d⁄e
:

534  
ªtvÆ
;

535 
	}
}

545 
	$‰om_˛õ¡_kûl_£ssi⁄
(
˛ic⁄_h™dÀ
 
h
,

546 
cxobj
 *
xe
,

547 
cbuf
 *
cbªt
)

549 
ªtvÆ
 = -1;

550 
uöt32_t
 
pid
;

551 *
°r
;

552 
˛õ¡_íåy
 *
˚
;

553 *
db
 = "running";

554 
cxobj
 *
x
;

556 i‡((
x
 = 
	`xml_föd
(
xe
, "£ssi⁄-id")Ë=
NULL
 ||

557 (
°r
 = 
	`xml_föd_vÆue
(
x
, "body")Ë=
NULL
){

558 i‡(
	`√tc⁄f_missög_ñemít
(
cbªt
, "¥Ÿocﬁ", "<bad-ñemít>£ssi⁄-id</bad-ñemít>", 
NULL
) < 0)

559 
d⁄e
;

560 
ok
;

562 
pid
 = 
	`©oi
(
°r
);

564 i‡((
˚
 = 
	`˚_föd_bypid
(
	`backíd_˛õ¡_li°
(
h
), 
pid
)Ë!
NULL
){

565 
	`xmldb_u∆ock_Æl
(
h
, 
pid
);

566 
	`backíd_˛õ¡_rm
(
h
, 
˚
);

569 i‡(
	`kûl
 (
pid
, 0Ë!0 && 
î∫o
 =
ESRCH
)

572 
	`kûÕg
(
pid
, 
SIGTERM
);

573 
	`kûl
(
pid
, 
SIGTERM
);

575 
	`¶ìp
(1);

578 i‡(1 || (
	`kûl
 (
pid
, 0Ë!0 && 
î∫o
 =
ESRCH
)){

580 i‡(
	`xmldb_i¶ocked
(
h
, 
db
Ë=
pid
)

581 
	`xmldb_u∆ock
(
h
, 
db
);

584 i‡(
	`√tc⁄f_›î©i⁄_Áûed
(
cbªt
, "application", "FailedÅo kill session")< 0)

585 
d⁄e
;

586 
ok
;

588 
	`˝rötf
(
cbªt
, "<rpc-reply><ok/></rpc-reply>");

589 
ok
:

590 
ªtvÆ
 = 0;

591 
d⁄e
:

592  
ªtvÆ
;

593 
	}
}

604 
	$‰om_˛õ¡_c›y_c⁄fig
(
˛ic⁄_h™dÀ
 
h
,

605 
cxobj
 *
xe
,

606 
mypid
,

607 
cbuf
 *
cbªt
)

609 *
sour˚
;

610 *
èrgë
;

611 
ªtvÆ
 = -1;

612 
piddb
;

613 
cbuf
 *
cbx
 = 
NULL
;

615 i‡((
sour˚
 = 
	`√tc⁄f_db_föd
(
xe
, "sour˚")Ë=
NULL
){

616 i‡(
	`√tc⁄f_missög_ñemít
(
cbªt
, "¥Ÿocﬁ", "<bad-ñemít>sour˚</bad-ñemít>", 
NULL
) < 0)

617 
d⁄e
;

618 
ok
;

620 i‡((
cbx
 = 
	`cbuf_√w
()Ë=
NULL
){

621 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cbuf_new");

622 
d⁄e
;

624 i‡(
	`xmldb_vÆid©e_db
(
sour˚
) < 0){

625 
	`˝rötf
(
cbx
, "Nÿsuch d©aba£: %s", 
sour˚
);

626 i‡(
	`√tc⁄f_övÆid_vÆue
(
cbªt
, "¥Ÿocﬁ", 
	`cbuf_gë
(
cbx
))< 0)

627 
d⁄e
;

628 
ok
;

630 i‡((
èrgë
 = 
	`√tc⁄f_db_föd
(
xe
, "èrgë")Ë=
NULL
){

631 i‡(
	`√tc⁄f_missög_ñemít
(
cbªt
, "¥Ÿocﬁ", "<bad-ñemít>èrgë</bad-ñemít>", 
NULL
) < 0)

632 
d⁄e
;

633 
ok
;

635 i‡(
	`xmldb_vÆid©e_db
(
èrgë
) < 0){

636 
	`˝rötf
(
cbx
, "Nÿsuch d©aba£: %s", 
èrgë
);

637 i‡(
	`√tc⁄f_övÆid_vÆue
(
cbªt
, "¥Ÿocﬁ", 
	`cbuf_gë
(
cbx
))< 0)

638 
d⁄e
;

639 
ok
;

642 
piddb
 = 
	`xmldb_i¶ocked
(
h
, 
èrgë
);

643 i‡(
piddb
 && 
mypid
 !=Öiddb){

644 
	`˝rötf
(
cbx
, "<£ssi⁄-id>%d</£ssi⁄-id>", 
piddb
);

645 i‡(
	`√tc⁄f_lock_díõd
(
cbªt
, 
	`cbuf_gë
(
cbx
), "Copy failed,Üock isálready held") < 0)

646 
d⁄e
;

647 
ok
;

649 i‡(
	`xmldb_c›y
(
h
, 
sour˚
, 
èrgë
) < 0){

650 i‡(
	`√tc⁄f_›î©i⁄_Áûed
(
cbªt
, "≠∂iˇti⁄", 
˛ic⁄_îr_ªas⁄
)< 0)

651 
d⁄e
;

652 
ok
;

654 
	`˝rötf
(
cbªt
, "<rpc-reply><ok/></rpc-reply>");

655 
ok
:

656 
ªtvÆ
 = 0;

657 
d⁄e
:

658 i‡(
cbx
)

659 
	`cbuf_‰ì
(
cbx
);

660  
ªtvÆ
;

661 
	}
}

672 
	$‰om_˛õ¡_dñëe_c⁄fig
(
˛ic⁄_h™dÀ
 
h
,

673 
cxobj
 *
xe
,

674 
mypid
,

675 
cbuf
 *
cbªt
)

677 
ªtvÆ
 = -1;

678 *
èrgë
;

679 
piddb
;

680 
cbuf
 *
cbx
 = 
NULL
;

682 i‡((
èrgë
 = 
	`√tc⁄f_db_föd
(
xe
, "èrgë")Ë=
NULL
||

683 
	`°rcmp
(
èrgë
, "running")==0){

684 i‡(
	`√tc⁄f_missög_ñemít
(
cbªt
, "¥Ÿocﬁ", "<bad-ñemít>èrgë</bad-ñemít>", 
NULL
) < 0)

685 
d⁄e
;

686 
ok
;

688 i‡((
cbx
 = 
	`cbuf_√w
()Ë=
NULL
){

689 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cbuf_new");

690 
d⁄e
;

692 i‡(
	`xmldb_vÆid©e_db
(
èrgë
) < 0){

693 
	`˝rötf
(
cbx
, "Nÿsuch d©aba£: %s", 
èrgë
);

694 i‡(
	`√tc⁄f_övÆid_vÆue
(
cbªt
, "¥Ÿocﬁ", 
	`cbuf_gë
(
cbx
))< 0)

695 
d⁄e
;

696 
ok
;

699 
piddb
 = 
	`xmldb_i¶ocked
(
h
, 
èrgë
);

700 i‡(
piddb
 && 
mypid
 !=Öiddb){

701 
	`˝rötf
(
cbx
, "<£ssi⁄-id>%d</£ssi⁄-id>", 
piddb
);

702 i‡(
	`√tc⁄f_lock_díõd
(
cbªt
, 
	`cbuf_gë
(
cbx
), "Operation failed,Üock isálready held") < 0)

703 
d⁄e
;

704 
ok
;

706 i‡(
	`xmldb_dñëe
(
h
, 
èrgë
) < 0){

707 i‡(
	`√tc⁄f_›î©i⁄_Áûed
(
cbªt
, "¥Ÿocﬁ", 
˛ic⁄_îr_ªas⁄
)< 0)

708 
d⁄e
;

709 
ok
;

711 i‡(
	`xmldb_¸óã
(
h
, 
èrgë
) < 0){

712 i‡(
	`√tc⁄f_›î©i⁄_Áûed
(
cbªt
, "¥Ÿocﬁ", 
˛ic⁄_îr_ªas⁄
)< 0)

713 
d⁄e
;

714 
ok
;

716 
	`˝rötf
(
cbªt
, "<rpc-reply><ok/></rpc-reply>");

717 
ok
:

718 
ªtvÆ
 = 0;

719 
d⁄e
:

720 i‡(
cbx
)

721 
	`cbuf_‰ì
(
cbx
);

722  
ªtvÆ
;

723 
	}
}

741 
	$‰om_˛õ¡_¸óã_subs¸ùti⁄
(
˛ic⁄_h™dÀ
 
h
,

742 
cxobj
 *
xe
,

743 
˛õ¡_íåy
 *
˚
,

744 
cbuf
 *
cbªt
)

746 *
°ªam
 = "NETCONF";

747 *
fûãr
 = 
NULL
;

748 
ªtvÆ
 = -1;

749 
cxobj
 *
x
;

750 *
·y≥
;

752 i‡((
x
 = 
	`x∑th_fú°
(
xe
, "//°ªam")Ë!
NULL
)

753 
°ªam
 = 
	`xml_föd_vÆue
(
x
, "body");

754 i‡((
x
 = 
	`x∑th_fú°
(
xe
, "//fûãr")Ë!
NULL
){

755 i‡((
·y≥
 = 
	`xml_föd_vÆue
(
x
, "ty≥")Ë!
NULL
){

757 i‡(
	`°rcmp
(
·y≥
, "xpath") != 0){

758 i‡(
	`√tc⁄f_›î©i⁄_Áûed
(
cbªt
, "application", "Only xpath filterÅype supported")< 0)

759 
d⁄e
;

760 
ok
;

764 i‡(
	`˛õ¡_subs¸ùti⁄_add
(
˚
, 
°ªam
, 
FORMAT_XML
, 
fûãr
Ë=
NULL
)

765 
d⁄e
;

766 
	`˝rötf
(
cbªt
, "<rpc-reply><ok/></rpc-reply>");

767 
ok
:

768 
ªtvÆ
 = 0;

769 
d⁄e
:

770  
ªtvÆ
;

771 
	}
}

781 
	$‰om_˛õ¡_debug
(
˛ic⁄_h™dÀ
 
h
,

782 
cxobj
 *
xe
,

783 
cbuf
 *
cbªt
)

785 
ªtvÆ
 = -1;

786 
uöt32_t
 
Àvñ
;

787 *
vÆ°r
;

789 i‡((
vÆ°r
 = 
	`xml_föd_body
(
xe
, "Àvñ")Ë=
NULL
){

790 i‡(
	`√tc⁄f_missög_ñemít
(
cbªt
, "≠∂iˇti⁄", "<bad-ñemít>Àvñ</bad-ñemít>", 
NULL
) < 0)

791 
d⁄e
;

792 
ok
;

794 
Àvñ
 = 
	`©oi
(
vÆ°r
);

796 
	`˛ic⁄_debug_öô
(
Àvñ
, 
NULL
);

797 
	`£éogmask
(
	`LOG_UPTO
(
Àvñ
?
LOG_DEBUG
:
LOG_INFO
));

798 
	`˛ic⁄_log
(
LOG_NOTICE
, "%†debug:%d", 
__FUNCTION__
, 
debug
);

799 
	`˝rötf
(
cbªt
, "<rpc-reply><ok/></rpc-reply>");

800 
ok
:

801 
ªtvÆ
 = 0;

802 
d⁄e
:

803  
ªtvÆ
;

804 
	}
}

814 
	$«cm_m©ch_ac˚ss
(*
ac˚ss_›î©i⁄s
,

815 *
mode
)

817 i‡(
ac˚ss_›î©i⁄s
==
NULL
)

819 i‡(
	`°rcmp
(
ac˚ss_›î©i⁄s
,"*")==0)

821 i‡(
	`°r°r
(
mode
, 
ac˚ss_›î©i⁄s
)!=
NULL
)

824 
	}
}

863 
	$«cm_m©ch_ruÀ
(
˛ic⁄_h™dÀ
 
h
,

864 *
«me
,

865 
cxobj
 *
xruÀ
,

866 
cbuf
 *
cbªt
)

868 
ªtvÆ
 = -1;

870 *
moduÀ_«me
;

871 *
Ωc_«me
;

872 *
ac˚ss_›î©i⁄s
;

873 *
a˘i⁄
;

875 
moduÀ_«me
 = 
	`xml_föd_body
(
xruÀ
, "module-name");

876 
Ωc_«me
 = 
	`xml_föd_body
(
xruÀ
, "rpc-name");

877 
ac˚ss_›î©i⁄s
 = 
	`xml_föd_body
(
xruÀ
, "access-operations");

878 
a˘i⁄
 = 
	`xml_föd_body
(
xruÀ
, "action");

879 
	`˛ic⁄_debug
(1, "%s: %†%†%†%s", 
__FUNCTION__
,

880 
moduÀ_«me
, 
Ωc_«me
, 
ac˚ss_›î©i⁄s
, 
a˘i⁄
);

881 i‡(
moduÀ_«me
 && 
	`°rcmp
(module_name,"*")==0){

882 i‡(
	`«cm_m©ch_ac˚ss
(
ac˚ss_›î©i⁄s
, "exec")){

883 i‡(
Ωc_«me
==
NULL
 ||

884 
	`°rcmp
(
Ωc_«me
, "*")==0 || såcmp‘pc_«me, 
«me
)==0){

886 i‡(
a˘i⁄
 && 
	`°rcmp
(action, "permit")==0){

887 
ªtvÆ
 = 1;

888 
d⁄e
;

891 i‡(
	`√tc⁄f_ac˚ss_díõd
(
cbªt
, "protocol", "access denied") < 0)

892 
d⁄e
;

893 
ªtvÆ
 = 0;

894 
d⁄e
;

899 
ªtvÆ
 = 2;

900 
d⁄e
:

901  
ªtvÆ
;

903 
	}
}

917 
	$«cm_ac˚ss
(
˛ic⁄_h™dÀ
 
h
,

918 *
mode
,

919 *
«me
,

920 *
u£∫ame
,

921 
cbuf
 *
cbªt
)

923 
ªtvÆ
 = -1;

924 
cxobj
 *
xt›
 = 
NULL
;

925 
cxobj
 *
xacm
;

926 
cxobj
 *
x
;

927 
cxobj
 *
xæi°
;

928 
cxobj
 *
xruÀ
;

929 *
íabÀd
 = 
NULL
;

930 
cxobj
 **
gvec
 = 
NULL
;

931 
size_t
 
gÀn
;

932 
cxobj
 **
æi°vec
 = 
NULL
;

933 
size_t
 
æi°Àn
;

934 
cxobj
 **
rvec
 = 
NULL
;

935 
size_t
 
æí
;

936 
i
, 
j
;

937 *
exec_deÁu…
 = 
NULL
;

938 
ªt
;

940 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

943 i‡(
	`°rcmp
(
mode
, "external")==0){

944 i‡((
xt›
 = 
	`backíd_«cm_li°_gë
(
h
)Ë=
NULL
){

945 
	`˛ic⁄_îr
(
OE_XML
, 0, "NoÇacmÉxternalÅree");

946 
d⁄e
;

949 i‡(
	`°rcmp
(
mode
, "internal")==0){

950 i‡(
	`xmldb_gë
(
h
, "ru¬ög", "«cm", 0, &
xt›
) < 0)

951 
d⁄e
;

954 
	`˛ic⁄_îr
(
OE_UNIX
, 0, "InvÆid NACM mode: %s", 
mode
);

955 
d⁄e
;

961 i‡((
xacm
 = 
	`x∑th_fú°
(
xt›
, "«cm")Ë=
NULL
)

962 
≥rmô
;

963 
exec_deÁu…
 = 
	`xml_föd_body
(
xacm
, "exec-default");

964 i‡((
x
 = 
	`x∑th_fú°
(
xacm
, "íabÀ-«cm")Ë=
NULL
)

965 
≥rmô
;

966 
íabÀd
 = 
	`xml_body
(
x
);

967 i‡(
	`°rcmp
(
íabÀd
, "true") != 0)

968 
≥rmô
;

976 i‡(
	`°rcmp
(
«me
, "close-session") == 0)

977 
≥rmô
;

983 i‡(
u£∫ame
 =
NULL
)

984 
°ï10
;

986 i‡(
	`x∑th_vec
(
xacm
, "groups/group[u£r-«me=%s]", &
gvec
, &
gÀn
, 
u£∫ame
) < 0)

987 
d⁄e
;

989 i‡(
gÀn
 == 0)

990 
°ï10
;

995 i‡(
	`x∑th_vec
(
xacm
, "ruÀ-li°", &
æi°vec
, &
æi°Àn
) < 0)

996 
d⁄e
;

997 
i
=0; i<
æi°Àn
; i++){

998 
xæi°
 = 
æi°vec
[
i
];

1000 
j
=0; j<
gÀn
; j++){

1001 *
g«me
;

1002 
g«me
 = 
	`xml_föd_body
(
gvec
[
j
], "name");

1003 i‡(
	`x∑th_fú°
(
xæi°
,".[group=%s]", 
g«me
)!=
NULL
)

1006 i‡(
j
==
gÀn
)

1012 i‡(
	`x∑th_vec
(
xæi°
, "ruÀ", &
rvec
, &
æí
) < 0)

1013 
d⁄e
;

1014 
j
=0; j<
æí
; j++){

1015 
xruÀ
 = 
rvec
[
j
];

1017 i‡((
ªt
 = 
	`«cm_m©ch_ruÀ
(
h
, 
«me
, 
xruÀ
, 
cbªt
)) < 0)

1018 
d⁄e
;

1019 
ªt
){

1021 
díy
;

1024 
≥rmô
;

1031 
°ï10
:

1039 i‡(
	`°rcmp
(
«me
, "kill-session")==0 || strcmp(name, "delete-config")==0){

1040 i‡(
	`√tc⁄f_ac˚ss_díõd
(
cbªt
, "protocol", "default deny") < 0)

1041 
d⁄e
;

1042 
díy
;

1046 i‡(
exec_deÁu…
 ==
NULL
 || 
	`°rcmp
(exec_default, "permit")==0)

1047 
≥rmô
;

1048 i‡(
	`√tc⁄f_ac˚ss_díõd
(
cbªt
, "protocol", "default deny") < 0)

1049 
d⁄e
;

1050 
díy
;

1051 
≥rmô
:

1052 
ªtvÆ
 = 1;

1053 
d⁄e
:

1054 
	`˛ic⁄_debug
(1, "%†ªtvÆ:%d (0:díy 1:≥rmô)", 
__FUNCTION__
, 
ªtvÆ
);

1055 i‡(
	`°rcmp
(
mode
, "öã∫Æ")==0 && 
xt›
)

1056 
	`xml_‰ì
(
xt›
);

1057 i‡(
gvec
)

1058 
	`‰ì
(
gvec
);

1059 i‡(
æi°vec
)

1060 
	`‰ì
(
æi°vec
);

1061 i‡(
rvec
)

1062 
	`‰ì
(
rvec
);

1063  
ªtvÆ
;

1064 
díy
:

1065 
	`as£π
(
	`cbuf_Àn
(
cbªt
));

1066 
ªtvÆ
 = 0;

1067 
d⁄e
;

1068 
	}
}

1079 
	$‰om_˛õ¡_msg
(
˛ic⁄_h™dÀ
 
h
,

1080 
˛õ¡_íåy
 *
˚
,

1081 
˛ic⁄_msg
 *
msg
)

1083 
ªtvÆ
 = -1;

1084 
cxobj
 *
xt
 = 
NULL
;

1085 
cxobj
 *
x
;

1086 
cxobj
 *
xe
;

1087 *
«me
 = 
NULL
;

1088 *
db
;

1089 
cbuf
 *
cbªt
 = 
NULL
;

1090 
pid
;

1091 
ªt
;

1092 *
u£∫ame
;

1093 *
«cm_mode
;

1095 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

1096 
pid
 = 
˚
->
˚_pid
;

1100 i‡((
cbªt
 = 
	`cbuf_√w
()Ë=
NULL
){

1101 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cbuf_new");

1102 
d⁄e
;

1104 i‡(
	`˛ic⁄_msg_decode
(
msg
, &
xt
) < 0){

1105 i‡(
	`√tc⁄f_mÆf‹med_mesßge
(
cbªt
, "XMLÖarseÉrror")< 0)

1106 
d⁄e
;

1107 
ª∂y
;

1109 i‡((
x
 = 
	`x∑th_fú°
(
xt
, "/Ωc")Ë=
NULL
){

1110 i‡(
	`√tc⁄f_mÆf‹med_mesßge
(
cbªt
, "rpc keywordÉxpected")< 0)

1111 
d⁄e
;

1112 
ª∂y
;

1114 
xe
 = 
NULL
;

1115 
u£∫ame
 = 
	`xml_föd_vÆue
(
x
, "username");

1116 (
xe
 = 
	`xml_chûd_óch
(
x
, xe, 
CX_ELMNT
)Ë!
NULL
) {

1117 
«me
 = 
	`xml_«me
(
xe
);

1118 
	`˛ic⁄_debug
(1, "%†«me:%s", 
__FUNCTION__
, 
«me
);

1120 
«cm_mode
 = 
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_NACM_MODE");

1121 i‡(
«cm_mode
 && 
	`°rcmp
(nacm_mode, "disabled") != 0){

1122 i‡((
ªt
 = 
	`«cm_ac˚ss
(
h
, 
«cm_mode
, 
«me
, 
u£∫ame
, 
cbªt
)) < 0)

1123 
d⁄e
;

1124 i‡(!
ªt
)

1125 
ª∂y
;

1127 i‡(
	`°rcmp
(
«me
, "get-config") == 0){

1128 i‡(
	`‰om_˛õ¡_gë_c⁄fig
(
h
, 
xe
, 
cbªt
) <0)

1129 
d⁄e
;

1131 i‡(
	`°rcmp
(
«me
, "edit-config") == 0){

1132 i‡(
	`‰om_˛õ¡_edô_c⁄fig
(
h
, 
xe
, 
pid
, 
cbªt
) <0)

1133 
d⁄e
;

1135 i‡(
	`°rcmp
(
«me
, "copy-config") == 0){

1136 i‡(
	`‰om_˛õ¡_c›y_c⁄fig
(
h
, 
xe
, 
pid
, 
cbªt
) <0)

1137 
d⁄e
;

1139 i‡(
	`°rcmp
(
«me
, "delete-config") == 0){

1140 i‡(
	`‰om_˛õ¡_dñëe_c⁄fig
(
h
, 
xe
, 
pid
, 
cbªt
) <0)

1141 
d⁄e
;

1143 i‡(
	`°rcmp
(
«me
, "lock") == 0){

1144 i‡(
	`‰om_˛õ¡_lock
(
h
, 
xe
, 
pid
, 
cbªt
) < 0)

1145 
d⁄e
;

1147 i‡(
	`°rcmp
(
«me
, "unlock") == 0){

1148 i‡(
	`‰om_˛õ¡_u∆ock
(
h
, 
xe
, 
pid
, 
cbªt
) < 0)

1149 
d⁄e
;

1151 i‡(
	`°rcmp
(
«me
, "get") == 0){

1152 i‡(
	`‰om_˛õ¡_gë
(
h
, 
xe
, 
cbªt
) < 0)

1153 
d⁄e
;

1155 i‡(
	`°rcmp
(
«me
, "close-session") == 0){

1156 
	`xmldb_u∆ock_Æl
(
h
, 
pid
);

1157 
	`˝rötf
(
cbªt
, "<rpc-reply><ok/></rpc-reply>");

1159 i‡(
	`°rcmp
(
«me
, "kill-session") == 0){

1160 i‡(
	`‰om_˛õ¡_kûl_£ssi⁄
(
h
, 
xe
, 
cbªt
) < 0)

1161 
d⁄e
;

1163 i‡(
	`°rcmp
(
«me
, "validate") == 0){

1164 i‡((
db
 = 
	`√tc⁄f_db_föd
(
xe
, "sour˚")Ë=
NULL
){

1165 i‡(
	`√tc⁄f_missög_ñemít
(
cbªt
, "¥Ÿocﬁ", "<bad-ñemít>sour˚</bad-ñemít>", 
NULL
) < 0)

1166 
d⁄e
;

1167 
ª∂y
;

1169 i‡(
	`‰om_˛õ¡_vÆid©e
(
h
, 
db
, 
cbªt
) < 0)

1170 
d⁄e
;

1172 i‡(
	`°rcmp
(
«me
, "commit") == 0){

1173 i‡(
	`‰om_˛õ¡_commô
(
h
, 
pid
, 
cbªt
) < 0)

1174 
d⁄e
;

1176 i‡(
	`°rcmp
(
«me
, "discard-changes") == 0){

1177 i‡(
	`‰om_˛õ¡_disˇrd_ch™ges
(
h
, 
pid
, 
cbªt
) < 0)

1178 
d⁄e
;

1180 i‡(
	`°rcmp
(
«me
, "create-subscription") == 0){

1181 i‡(
	`‰om_˛õ¡_¸óã_subs¸ùti⁄
(
h
, 
xe
, 
˚
, 
cbªt
) < 0)

1182 
d⁄e
;

1184 i‡(
	`°rcmp
(
«me
, "debug") == 0){

1185 i‡(
	`‰om_˛õ¡_debug
(
h
, 
xe
, 
cbªt
) < 0)

1186 
d⁄e
;

1189 
	`˛ic⁄_îr_ª£t
();

1190 i‡((
ªt
 = 
	`Ωc_ˇŒback_ˇŒ
(
h
, 
xe
, 
cbªt
, 
˚
)) < 0){

1191 i‡(
	`√tc⁄f_›î©i⁄_Áûed
(
cbªt
, "≠∂iˇti⁄", 
˛ic⁄_îr_ªas⁄
)< 0)

1192 
d⁄e
;

1193 
	`˛ic⁄_log
(
LOG_NOTICE
, "%†Eº‹ i¿Ωc_ˇŒback_ˇŒ:%s", 
__FUNCTION__
, 
	`xml_«me
(
xe
));

1194 
ª∂y
;

1196 i‡(
ªt
 == 0){

1197 i‡(
	`√tc⁄f_›î©i⁄_Áûed
(
cbªt
, "application", "CallbackÇotÑecognized")< 0)

1198 
d⁄e
;

1199 
ª∂y
;

1203 
ª∂y
:

1204 i‡(
	`cbuf_Àn
(
cbªt
) == 0)

1205 i‡(
	`√tc⁄f_›î©i⁄_Áûed
(
cbªt
, "≠∂iˇti⁄", 
˛ic⁄_îr_ªas⁄
)< 0)

1206 
d⁄e
;

1207 
	`˛ic⁄_debug
(1, "%†cbªt:%s", 
__FUNCTION__
, 
	`cbuf_gë
(
cbªt
));

1210 i‡(
	`£nd_msg_ª∂y
(
˚
->
˚_s
, 
	`cbuf_gë
(
cbªt
), 
	`cbuf_Àn
(cbret)+1) < 0){

1211 
î∫o
){

1212 
EPIPE
:

1220 
ECONNRESET
:

1221 
	`˛ic⁄_log
(
LOG_WARNING
, "clientÑpcÑeset");

1224 
d⁄e
;

1228 
ªtvÆ
 = 0;

1229 
d⁄e
:

1230 
	`˛ic⁄_debug
(1, "%†ªtvÆ:%d", 
__FUNCTION__
, 
ªtvÆ
);

1231 i‡(
xt
)

1232 
	`xml_‰ì
(
xt
);

1233 i‡(
cbªt
)

1234 
	`cbuf_‰ì
(
cbªt
);

1236 i‡(
ªtvÆ
 < 0 && 
˛ic⁄_î∫o
 < 0)

1237 
	`˛ic⁄_log
(
LOG_NOTICE
, "%s: InternalÉrror: No clicon_err call onÉrror (message: %s)",

1238 
__FUNCTION__
, 
«me
?name:"");

1240  
ªtvÆ
;

1241 
	}
}

1251 
	$‰om_˛õ¡
(
s
,

1252 * 
¨g
)

1254 
ªtvÆ
 = -1;

1255 
˛ic⁄_msg
 *
msg
 = 
NULL
;

1256 
˛õ¡_íåy
 *
˚
 = (˛õ¡_íåy *)
¨g
;

1257 
˛ic⁄_h™dÀ
 
h
 = 
˚
->
˚_h™dÀ
;

1258 
eof
;

1260 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

1262 i‡(
	`˛ic⁄_msg_rcv
(
˚
->
˚_s
, &
msg
, &
eof
) < 0)

1263 
d⁄e
;

1264 i‡(
eof
)

1265 
	`backíd_˛õ¡_rm
(
h
, 
˚
);

1267 i‡(
	`‰om_˛õ¡_msg
(
h
, 
˚
, 
msg
) < 0)

1268 
d⁄e
;

1269 
ªtvÆ
 = 0;

1270 
d⁄e
:

1271 
	`˛ic⁄_debug
(1, "%†ªtvÆ=%d", 
__FUNCTION__
, 
ªtvÆ
);

1272 i‡(
msg
)

1273 
	`‰ì
(
msg
);

1274  
ªtvÆ
;

1275 
	}
}

	@clixon-master/apps/backend/backend_client.h

35 #i‚de‡
_BACKEND_CLIENT_H_


36 
	#_BACKEND_CLIENT_H_


	)

45 
	s˛õ¡_íåy
{

46 
˛õ¡_íåy
 *
	m˚_√xt
;

47 
sockaddr
 
	m˚_addr
;

48 
	m˚_s
;

49 
	m˚_ƒ
;

50 
	m˚_°©_ö
;

51 
	m˚_°©_out
;

52 
	m˚_pid
;

53 
	m˚_uid
;

54 
˛ic⁄_h™dÀ
 
	m˚_h™dÀ
;

55 
˛õ¡_subs¸ùti⁄
 *
	m˚_subs¸ùti⁄
;

61 
	s˛õ¡_subs¸ùti⁄
{

62 
˛õ¡_subs¸ùti⁄
 *
	msu_√xt
;

63 
	msu_s
;

64 
f‹m©_íum
 
	msu_f‹m©
;

65 *
	msu_°ªam
;

66 *
	msu_fûãr
;

72 
backíd_˛õ¡_rm
(
˛ic⁄_h™dÀ
 
h
, 
˛õ¡_íåy
 *
˚
);

73 
‰om_˛õ¡
(
fd
, *
¨g
);

	@clixon-master/apps/backend/backend_commit.c

36 #ifde‡
HAVE_CONFIG_H


37 
	~"˛ix⁄_c⁄fig.h
"

40 
	~<°dio.h
>

41 
	~<°rög.h
>

42 
	~<°dlib.h
>

43 
	~<uni°d.h
>

44 
	~<°d¨g.h
>

45 
	~<î∫o.h
>

46 
	~<sig«l.h
>

47 
	~<f˙é.h
>

48 
	~<time.h
>

49 
	~<pwd.h
>

50 
	~<sy¶og.h
>

51 
	~<sys/°©.h
>

52 
	~<sys/time.h
>

53 
	~<sys/sockë.h
>

54 
	~<sys/∑øm.h
>

55 
	~<sys/ty≥s.h
>

56 
	~<√töë/ö.h
>

57 
	~<¨∑/öë.h
>

58 
	~<as£π.h
>

59 
	~<√töë/ö.h
>

62 
	~<˛igí/˛igí.h
>

65 
	~<˛ix⁄/˛ix⁄.h
>

67 
	~"˛ix⁄_backíd_å™ß˘i⁄.h
"

68 
	~"backíd_∂ugö.h
"

69 
	~"backíd_h™dÀ.h
"

70 
	~"backíd_commô.h
"

71 
	~"backíd_˛õ¡.h
"

86 
	$gíîic_vÆid©e
(
y™g_•ec
 *
y•ec
,

87 
å™ß˘i⁄_d©a_t
 *
td
)

89 
ªtvÆ
 = -1;

90 
cxobj
 *
x1
;

91 
cxobj
 *
x2
;

92 
y™g_°mt
 *
ys
;

93 
i
;

96 i‡(
	`xml_≠∂y
(
td
->
td_èrgë
, 
CX_ELMNT
,

97 (
xml_≠∂y‚_t
*)
xml_y™g_vÆid©e_Æl
, 
NULL
) < 0)

98 
d⁄e
;

101 
i
=0; i<
td
->
td_˛í
; i++){

102 
x1
 = 
td
->
td_scvec
[
i
];

103 
x2
 = 
td
->
td_tcvec
[
i
];

104 i‡(
	`xml_y™g_vÆid©e_add
(
x2
, 
NULL
) < 0)

105 
d⁄e
;

108 
i
=0; i<
td
->
td_dÀn
; i++){

109 
x1
 = 
td
->
td_dvec
[
i
];

110 
ys
 = 
	`xml_•ec
(
x1
);

111 i‡(
ys
 && 
	`y™g_m™d©‹y
(ys)){

112 
	`˛ic⁄_îr
(
OE_CFG
, 0,"Removed mandatory variable: %s",

113 
	`xml_«me
(
x1
));

114 
d⁄e
;

118 
i
=0; i<
td
->
td_Æí
; i++){

119 
x2
 = 
td
->
td_avec
[
i
];

120 i‡(
	`xml_≠∂y0
(
x2
, 
CX_ELMNT
,

121 (
xml_≠∂y‚_t
*)
xml_y™g_vÆid©e_add
, 
NULL
) < 0)

122 
d⁄e
;

124 
ªtvÆ
 = 0;

125 
d⁄e
:

126  
ªtvÆ
;

127 
	}
}

137 
	$vÆid©e_comm⁄
(
˛ic⁄_h™dÀ
 
h
,

138 *
ˇndid©e
,

139 
å™ß˘i⁄_d©a_t
 *
td
)

141 
ªtvÆ
 = -1;

142 
y™g_•ec
 *
y•ec
;

143 
i
;

144 
cxobj
 *
xn
;

146 i‡((
y•ec
 = 
	`˛ic⁄_db•ec_y™g
(
h
)Ë=
NULL
){

147 
	`˛ic⁄_îr
(
OE_FATAL
, 0, "No DB_SPEC");

148 
d⁄e
;

151 i‡(
	`xmldb_gë
(
h
, "ru¬ög", "/", 1, &
td
->
td_§c
) < 0)

152 
d⁄e
;

153 i‡(
	`xmldb_gë
(
h
, 
ˇndid©e
, "/", 1, &
td
->
td_èrgë
) < 0)

154 
d⁄e
;

157 i‡(
	`xml_diff
(
y•ec
,

158 
td
->
td_§c
,

159 
td
->
td_èrgë
,

160 &
td
->
td_dvec
,

161 &
td
->
td_dÀn
,

162 &
td
->
td_avec
,

163 &
td
->
td_Æí
,

164 &
td
->
td_scvec
,

165 &
td
->
td_tcvec
,

166 &
td
->
td_˛í
) < 0)

167 
d⁄e
;

168 i‡(
debug
>1)

169 
	`å™ß˘i⁄_¥öt
(
°dîr
, 
td
);

171 
i
=0; i<
td
->
td_dÀn
; i++){

172 
xn
 = 
td
->
td_dvec
[
i
];

173 
	`xml_Êag_£t
(
xn
, 
XML_FLAG_DEL
);

174 
	`xml_≠∂y
(
xn
, 
CX_ELMNT
, (
xml_≠∂y‚_t
*)
xml_Êag_£t
, (*)
XML_FLAG_DEL
);

175 
	`xml_≠∂y_™˚°‹
(
xn
, (
xml_≠∂y‚_t
*)
xml_Êag_£t
, (*)
XML_FLAG_CHANGE
);

177 
i
=0; i<
td
->
td_Æí
; i++){

178 
xn
 = 
td
->
td_avec
[
i
];

179 
	`xml_Êag_£t
(
xn
, 
XML_FLAG_ADD
);

180 
	`xml_≠∂y
(
xn
, 
CX_ELMNT
, (
xml_≠∂y‚_t
*)
xml_Êag_£t
, (*)
XML_FLAG_ADD
);

181 
	`xml_≠∂y_™˚°‹
(
xn
, (
xml_≠∂y‚_t
*)
xml_Êag_£t
, (*)
XML_FLAG_CHANGE
);

183 
i
=0; i<
td
->
td_˛í
; i++){

184 
xn
 = 
td
->
td_scvec
[
i
];

185 
	`xml_Êag_£t
(
xn
, 
XML_FLAG_CHANGE
);

186 
	`xml_≠∂y_™˚°‹
(
xn
, (
xml_≠∂y‚_t
*)
xml_Êag_£t
, (*)
XML_FLAG_CHANGE
);

187 
xn
 = 
td
->
td_tcvec
[
i
];

188 
	`xml_Êag_£t
(
xn
, 
XML_FLAG_CHANGE
);

189 
	`xml_≠∂y_™˚°‹
(
xn
, (
xml_≠∂y‚_t
*)
xml_Êag_£t
, (*)
XML_FLAG_CHANGE
);

193 i‡(
	`∂ugö_å™ß˘i⁄_begö
(
h
, 
td
) < 0)

194 
d⁄e
;

197 i‡(
	`gíîic_vÆid©e
(
y•ec
, 
td
) < 0)

198 
d⁄e
;

201 i‡(
	`∂ugö_å™ß˘i⁄_vÆid©e
(
h
, 
td
) < 0)

202 
d⁄e
;

205 i‡(
	`∂ugö_å™ß˘i⁄_com∂ëe
(
h
, 
td
) < 0)

206 
d⁄e
;

207 
ªtvÆ
 = 0;

208 
d⁄e
:

209  
ªtvÆ
;

210 
	}
}

224 
	$ˇndid©e_commô
(
˛ic⁄_h™dÀ
 
h
,

225 *
ˇndid©e
)

227 
ªtvÆ
 = -1;

228 
å™ß˘i⁄_d©a_t
 *
td
 = 
NULL
;

231 i‡((
td
 = 
	`å™ß˘i⁄_√w
()Ë=
NULL
)

232 
d⁄e
;

235 i‡(
	`vÆid©e_comm⁄
(
h
, 
ˇndid©e
, 
td
) < 0)

236 
d⁄e
;

239 i‡(
	`∂ugö_å™ß˘i⁄_commô
(
h
, 
td
) < 0)

240 
d⁄e
;

243 i‡(
	`˛ic⁄_›ti⁄_boﬁ
(
h
, "CLICON_TRANSACTION_MOD"))

244 i‡(
	`xmldb_put
(
h
, 
ˇndid©e
, 
OP_REPLACE
, 
td
->
td_èrgë
, 
NULL
) < 0)

245 
d⁄e
;

249 i‡(
	`xmldb_c›y
(
h
, 
ˇndid©e
, "running") < 0)

250 
d⁄e
;

253 
	`∂ugö_å™ß˘i⁄_íd
(
h
, 
td
);

257 i‡(
	`xmldb_c›y
(
h
, "ru¬ög", 
ˇndid©e
) < 0){

259 
	`˛ic⁄_log
(
LOG_NOTICE
, "Error inÑollback,ÅryingÅo continue");

260 
d⁄e
;

262 
ªtvÆ
 = 0;

263 
d⁄e
:

265 i‡(
ªtvÆ
 < 0 && 
td
)

266 
	`∂ugö_å™ß˘i⁄_ab‹t
(
h
, 
td
);

267 i‡(
td
)

268 
	`å™ß˘i⁄_‰ì
(
td
);

269  
ªtvÆ
;

270 
	}
}

279 
	$‰om_˛õ¡_commô
(
˛ic⁄_h™dÀ
 
h
,

280 
mypid
,

281 
cbuf
 *
cbªt
)

283 
ªtvÆ
 = -1;

284 
piddb
;

285 
cbuf
 *
cbx
 = 
NULL
;

288 
piddb
 = 
	`xmldb_i¶ocked
(
h
, "running");

289 i‡(
piddb
 && 
mypid
 !=Öiddb){

290 i‡((
cbx
 = 
	`cbuf_√w
()Ë=
NULL
){

291 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cbuf_new");

292 
d⁄e
;

294 
	`˝rötf
(
cbx
, "<£ssi⁄-id>%d</£ssi⁄-id>", 
piddb
);

295 i‡(
	`√tc⁄f_lock_díõd
(
cbªt
, 
	`cbuf_gë
(
cbx
), "Operation failed,Üock isálready held") < 0)

296 
d⁄e
;

297 
ok
;

299 i‡(
	`ˇndid©e_commô
(
h
, "candidate") < 0){

300 
	`˛ic⁄_debug
(1, "Commit candidate failed");

301 i‡(
	`√tc⁄f_övÆid_vÆue
(
cbªt
, "¥Ÿocﬁ", 
˛ic⁄_îr_ªas⁄
)< 0)

302 
d⁄e
;

303 
ok
;

305 
	`˝rötf
(
cbªt
, "<rpc-reply><ok/></rpc-reply>");

306 
ok
:

307 
ªtvÆ
 = 0;

308 
d⁄e
:

309 i‡(
cbx
)

310 
	`cbuf_‰ì
(
cbx
);

311  
ªtvÆ
;

312 
	}
}

322 
	$‰om_˛õ¡_disˇrd_ch™ges
(
˛ic⁄_h™dÀ
 
h
,

323 
mypid
,

324 
cbuf
 *
cbªt
)

326 
ªtvÆ
 = -1;

327 
piddb
;

328 
cbuf
 *
cbx
 = 
NULL
;

331 
piddb
 = 
	`xmldb_i¶ocked
(
h
, "candidate");

332 i‡(
piddb
 && 
mypid
 !=Öiddb){

333 i‡((
cbx
 = 
	`cbuf_√w
()Ë=
NULL
){

334 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cbuf_new");

335 
d⁄e
;

337 
	`˝rötf
(
cbx
, "<£ssi⁄-id>%d</£ssi⁄-id>", 
piddb
);

338 i‡(
	`√tc⁄f_lock_díõd
(
cbªt
, 
	`cbuf_gë
(
cbx
), "Operation failed,Üock isálready held") < 0)

339 
d⁄e
;

340 
ok
;

342 i‡(
	`xmldb_c›y
(
h
, "running", "candidate") < 0){

343 i‡(
	`√tc⁄f_›î©i⁄_Áûed
(
cbªt
, "≠∂iˇti⁄", 
˛ic⁄_îr_ªas⁄
)< 0)

344 
d⁄e
;

345 
ok
;

347 
	`˝rötf
(
cbªt
, "<rpc-reply><ok/></rpc-reply>");

348 
ok
:

349 
ªtvÆ
 = 0;

350 
d⁄e
:

351 i‡(
cbx
)

352 
	`cbuf_‰ì
(
cbx
);

353  
ªtvÆ
;

354 
	}
}

364 
	$‰om_˛õ¡_vÆid©e
(
˛ic⁄_h™dÀ
 
h
,

365 *
db
,

366 
cbuf
 *
cbªt
)

368 
ªtvÆ
 = -1;

369 
å™ß˘i⁄_d©a_t
 *
td
 = 
NULL
;

371 i‡(
	`°rcmp
(
db
, "candidate") != 0 && strcmp(db, "tmp") != 0){

372 i‡(
	`√tc⁄f_övÆid_vÆue
(
cbªt
, "protocol", "No such database")< 0)

373 
d⁄e
;

374 
ok
;

376 
	`˛ic⁄_debug
(1, "VÆid©ê%s", 
db
);

379 i‡((
td
 = 
	`å™ß˘i⁄_√w
()Ë=
NULL
)

380 
d⁄e
;

382 i‡(
	`vÆid©e_comm⁄
(
h
, 
db
, 
td
) < 0){

383 
	`˛ic⁄_debug
(1, "VÆid©ê%†Áûed", 
db
);

385 i‡(
	`√tc⁄f_›î©i⁄_Áûed
(
cbªt
, "≠∂iˇti⁄", 
˛ic⁄_îr_ªas⁄
)< 0)

386 
d⁄e
;

387 
ok
;

390 i‡(
	`˛ic⁄_›ti⁄_boﬁ
(
h
, "CLICON_TRANSACTION_MOD"))

391 i‡(
	`xmldb_put
(
h
, "ˇndid©e", 
OP_REPLACE
, 
td
->
td_èrgë
, 
NULL
) < 0)

392 
d⁄e
;

393 
	`˝rötf
(
cbªt
, "<rpc-reply><ok/></rpc-reply>");

394 
ok
:

395 
ªtvÆ
 = 0;

396 
d⁄e
:

397 i‡(
ªtvÆ
 < 0 && 
td
)

398 
	`∂ugö_å™ß˘i⁄_ab‹t
(
h
, 
td
);

399 i‡(
td
)

400 
	`å™ß˘i⁄_‰ì
(
td
);

401  
ªtvÆ
;

402 
	}
}

	@clixon-master/apps/backend/backend_commit.h

37 #i‚de‡
_BACKEND_COMMIT_H_


38 
	#_BACKEND_COMMIT_H_


	)

43 
‰om_˛õ¡_vÆid©e
(
˛ic⁄_h™dÀ
 
h
, *
db
, 
cbuf
 *
cbªt
);

44 
‰om_˛õ¡_commô
(
˛ic⁄_h™dÀ
 
h
, 
pid
, 
cbuf
 *
cbªt
);

45 
‰om_˛õ¡_disˇrd_ch™ges
(
˛ic⁄_h™dÀ
 
h
, 
pid
, 
cbuf
 *
cbªt
);

46 
ˇndid©e_commô
(
˛ic⁄_h™dÀ
 
h
, *
db
);

	@clixon-master/apps/backend/backend_handle.h

37 #i‚de‡
_BACKEND_HANDLE_H_


38 
	#_BACKEND_HANDLE_H_


	)

45 
˛ic⁄_h™dÀ
 
backíd_h™dÀ_öô
();

47 
backíd_h™dÀ_exô
(
˛ic⁄_h™dÀ
 
h
);

49 
˛õ¡_íåy
 *
backíd_˛õ¡_add
(
˛ic⁄_h™dÀ
 
h
, 
sockaddr
 *
addr
);

51 
˛õ¡_íåy
 *
backíd_˛õ¡_li°
(
˛ic⁄_h™dÀ
 
h
);

53 
backíd_˛õ¡_dñëe
(
˛ic⁄_h™dÀ
 
h
, 
˛õ¡_íåy
 *
˚
);

55 
backíd_«cm_li°_£t
(
˛ic⁄_h™dÀ
 
h
, 
cxobj
 *
x«cm
);

57 
cxobj
 * 
backíd_«cm_li°_gë
(
˛ic⁄_h™dÀ
 
h
);

	@clixon-master/apps/backend/backend_main.c

36 #ifde‡
HAVE_CONFIG_H


37 
	~"˛ix⁄_c⁄fig.h
"

40 
	~<°dio.h
>

41 
	~<°rög.h
>

42 
	~<°dlib.h
>

43 
	~<uni°d.h
>

44 
	~<°d¨g.h
>

45 
	~<î∫o.h
>

46 
	~<sig«l.h
>

47 
	~<f˙é.h
>

48 
	~<time.h
>

49 
	~<sy¶og.h
>

50 
	~<iÁddrs.h
>

51 
	~<sys/time.h
>

52 
	~<sys/sockë.h
>

53 
	~<sys/°©.h
>

54 
	~<sys/∑øm.h
>

55 
	~<sys/ty≥s.h
>

56 
	~<gΩ.h
>

57 
	~<√töë/ö.h
>

58 
	~<¨∑/öë.h
>

59 
	~<√töë/ö.h
>

60 
	~<libgí.h
>

63 
	~<˛igí/˛igí.h
>

66 
	~<˛ix⁄/˛ix⁄.h
>

68 
	~"˛ix⁄_backíd_h™dÀ.h
"

69 
	~"backíd_sockë.h
"

70 
	~"backíd_˛õ¡.h
"

71 
	~"backíd_commô.h
"

72 
	~"backíd_∂ugö.h
"

73 
	~"backíd_h™dÀ.h
"

76 
	#BACKEND_OPTS
 "hD:f:d:b:Fzu:P:1s:c:g:y:x:"

	)

80 
	$backíd_ãrmö©e
(
˛ic⁄_h™dÀ
 
h
)

82 
y™g_•ec
 *
y•ec
;

83 *
pidfûe
 = 
	`˛ic⁄_backíd_pidfûe
(
h
);

84 *
sock∑th
 = 
	`˛ic⁄_sock
(
h
);

86 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

87 i‡((
y•ec
 = 
	`˛ic⁄_db•ec_y™g
(
h
)Ë!
NULL
)

88 
	`y•ec_‰ì
(
y•ec
);

89 
	`˛ix⁄_∂ugö_exô
(
h
);

91 
	`Ωc_ˇŒback_dñëe_Æl
();

92 i‡(
pidfûe
)

93 
	`u∆ök
(
pidfûe
);

94 i‡(
sock∑th
)

95 
	`u∆ök
(
sock∑th
);

96 
	`xmldb_∂ugö_u∆ﬂd
(
h
);

97 
	`backíd_h™dÀ_exô
(
h
);

98 
	`evít_exô
();

99 
	`˛ic⁄_log_ªgi°î_ˇŒback
(
NULL
, NULL);

100 
	`˛ic⁄_debug
(1, "%†d⁄e", 
__FUNCTION__
);

102 
	}
}

107 
	$backíd_sig_ãrm
(
¨g
)

109 
i
=0;

111 i‡(
i
++ == 0)

112 
	`˛ic⁄_log
(
LOG_NOTICE
, "%s: %s:Öid: %u Signal %d",

113 
__PROGRAM__
, 
__FUNCTION__
, 
	`gëpid
(), 
¨g
);

114 
	`˛ic⁄_exô_£t
();

115 
	}
}

120 
	$ußge
(*
¨gv0
, 
˛ic⁄_h™dÀ
 
h
)

122 *
∂gdú
 = 
	`˛ic⁄_backíd_dú
(
h
);

123 *
c⁄fsock
 = 
	`˛ic⁄_sock
(
h
);

124 *
c⁄Âid
 = 
	`˛ic⁄_backíd_pidfûe
(
h
);

125 *
group
 = 
	`˛ic⁄_sock_group
(
h
);

127 
	`Ârötf
(
°dîr
, "usage:%s\n"

144 
¨gv0
,

145 
∂gdú
 ?Ölgdir : "none",

146 
c⁄fsock
 ? confsock : "none",

147 
c⁄Âid
 ? confpid : "none",

148 
group
 ? group : "none"

150 
	`exô
(-1);

151 
	}
}

154 
	$db_ª£t
(
˛ic⁄_h™dÀ
 
h
,

155 *
db
)

157 i‡(
	`xmldb_exi°s
(
h
, 
db
Ë=1 && 
	`xmldb_dñëe
(h, dbË!0 && 
î∫o
 !
ENOENT
)

159 i‡(
	`xmldb_¸óã
(
h
, 
db
) < 0)

162 
	}
}

167 
	$db_mîge
(
˛ic⁄_h™dÀ
 
h
,

168 c⁄° *
db1
,

169 c⁄° *
db2
)

171 
ªtvÆ
 = -1;

172 
cxobj
 *
xt
 = 
NULL
;

175 i‡(
	`xmldb_gë
(
h
, (*)
db1
, 
NULL
, 1, &
xt
) < 0)

176 
d⁄e
;

178 i‡(
	`xmldb_put
(
h
, (*)
db2
, 
OP_MERGE
, 
xt
, 
NULL
) < 0)

179 
d⁄e
;

180 
ªtvÆ
 = 0;

181 
d⁄e
:

182 i‡(
xt
)

183 
	`xml_‰ì
(
xt
);

184  
ªtvÆ
;

185 
	}
}

191 
	$£rvî_sockë
(
˛ic⁄_h™dÀ
 
h
)

193 
ss
;

196 i‡((
ss
 = 
	`backíd_sockë_öô
(
h
)) < 0)

200 i‡(
	`evít_ªg_fd
(
ss
, 
backíd_ac˚±_˛õ¡
, 
h
, "server socket") < 0) {

201 
	`˛o£
(
ss
);

204  
ss
;

205 
	}
}

212 
	$backíd_log_cb
(
Àvñ
,

213 *
msg
,

214 *
¨g
)

216 
ªtvÆ
 = -1;

217 
size_t
 
n
;

218 *
±r
;

219 *
≈å
;

220 *
√wmsg
 = 
NULL
;

227 
n
 = 0;

228 
±r
=
msg
; *ptr;Ötr++)

229 i‡(*
±r
 == '%')

230 
n
++;

231 i‡((
√wmsg
 = 
	`mÆloc
(
	`°æí
(
msg
Ë+ 
n
 + 1)Ë=
NULL
) {

232 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "malloc");

235 
±r
=
msg
, 
≈å
=
√wmsg
; *ptr;Ötr++) {

236 *
≈å
++ = *
±r
;

237 i‡(*
±r
 == '%')

238 *
≈å
++ = '%';

240 
ªtvÆ
 = 
	`backíd_nŸify
(
¨g
, "CLICON", 
Àvñ
, 
√wmsg
);

241 
	`‰ì
(
√wmsg
);

243  
ªtvÆ
;

244 
	}
}

248 
	$∂ugö_°¨t_u£r›ti⁄s
(
˛ic⁄_h™dÀ
 
h
,

249 *
¨gv0
,

250 
¨gc
,

251 **
¨gv
)

253 *
tmp
;

255 
tmp
 = *(
¨gv
-1);

256 *(
¨gv
-1Ë
¨gv0
;

257 i‡(
	`˛ix⁄_∂ugö_°¨t
(
h
, 
¨gc
+1, 
¨gv
-1) < 0)

259 *(
¨gv
-1Ë
tmp
;

261 
	}
}

266 
	$«cm_lﬂd_exã∫Æ
(
˛ic⁄_h™dÀ
 
h
)

268 
ªtvÆ
 = -1;

269 *
fûíame
;

270 
y™g_•ec
 *
y•ec
 = 
NULL
;

271 
cxobj
 *
xt
 = 
NULL
;

272 
°©
 
°
;

273 
FILE
 *
f
 = 
NULL
;

274 
fd
;

276 
fûíame
 = 
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_NACM_FILE");

277 i‡(
fûíame
 =
NULL
 || 
	`°æí
(filename)==0){

278 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "CLICON_NACM_FILEÇot set in NACMÉxternal mode");

279 
d⁄e
;

281 i‡(
	`°©
(
fûíame
, &
°
) < 0){

282 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "%s", 
fûíame
);

283 
d⁄e
;

285 i‡(!
	`S_ISREG
(
°
.
°_mode
)){

286 
	`˛ic⁄_îr
(
OE_UNIX
, 0, "%†i†nŸáÑeguœ∏fûe", 
fûíame
);

287 
d⁄e
;

289 i‡((
f
 = 
	`f›í
(
fûíame
, "r")Ë=
NULL
) {

290 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "c⁄figuª fûe: %s", 
fûíame
);

293 i‡((
y•ec
 = 
	`y•ec_√w
()Ë=
NULL
)

294 
d⁄e
;

295 i‡(
	`y™g_∑r£
(
h
, 
CLIXON_DATADIR
, "õtf-√tc⁄f-acm", 
NULL
, 
y•ec
) < 0)

296 
d⁄e
;

297 
fd
 = 
	`fûío
(
f
);

299 i‡(
	`xml_∑r£_fûe
(
fd
, "</˛ic⁄>", 
y•ec
, &
xt
) < 0)

300 
d⁄e
;

301 i‡(
xt
 =
NULL
){

302 
	`˛ic⁄_îr
(
OE_XML
, 0, "Nÿxm»åì i¿%s", 
fûíame
);

303 
d⁄e
;

305 i‡(
	`backíd_«cm_li°_£t
(
h
, 
xt
) < 0)

306 
d⁄e
;

307 
ªtvÆ
 = 0;

308 
d⁄e
:

309 i‡(
y•ec
)

310 
	`y•ec_‰ì
(
y•ec
);

311 i‡(
f
)

312 
	`f˛o£
(
f
);

313  
ªtvÆ
;

314 
	}
}

319 
	$lﬂd_exåaxml
(
˛ic⁄_h™dÀ
 
h
,

320 *
fûíame
,

321 c⁄° *
db
)

323 
ªtvÆ
 = -1;

324 
cxobj
 *
xt
 = 
NULL
;

325 
fd
 = -1;

327 i‡(
fûíame
 =
NULL
)

329 i‡((
fd
 = 
	`›í
(
fûíame
, 
O_RDONLY
)) < 0){

330 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "›í(%s)", 
fûíame
);

331 
d⁄e
;

333 i‡(
	`xml_∑r£_fûe
(
fd
, "</c⁄fig>", 
NULL
, &
xt
) < 0)

334 
d⁄e
;

336 i‡(
	`xml_roŸchûd
(
xt
, 0, &xt) < 0)

337 
d⁄e
;

339 i‡(
	`xmldb_put
(
h
, (*)
db
, 
OP_MERGE
, 
xt
, 
NULL
) < 0)

340 
d⁄e
;

341 
ªtvÆ
 = 0;

342 
d⁄e
:

343 i‡(
fd
 != -1)

344 
	`˛o£
(
fd
);

345 i‡(
xt
)

346 
	`xml_‰ì
(
xt
);

347  
ªtvÆ
;

348 
	}
}

353 
	$°¨tup_mode_n⁄e
(
˛ic⁄_h™dÀ
 
h
)

355 
ªtvÆ
 = -1;

358 i‡(
	`xmldb_exi°s
(
h
, "candidate") != 1)

359 i‡(
	`xmldb_c›y
(
h
, "running", "candidate") < 0)

360 
d⁄e
;

362 i‡(
	`backíd_∂ugö_öôüã
(
h
) != 0)

363 
d⁄e
;

364 
ªtvÆ
 = 0;

365 
d⁄e
:

366  
ªtvÆ
;

367 
	}
}

372 
	$°¨tup_mode_öô
(
˛ic⁄_h™dÀ
 
h
)

374 
ªtvÆ
 = -1;

377 i‡(
	`db_ª£t
(
h
, "running") < 0)

378 
d⁄e
;

380 i‡(
	`xmldb_exi°s
(
h
, "candidate") != 1)

381 i‡(
	`xmldb_c›y
(
h
, "running", "candidate") < 0)

382 
d⁄e
;

384 i‡(
	`backíd_∂ugö_öôüã
(
h
) != 0)

385 
d⁄e
;

386 
ªtvÆ
 = 0;

387 
d⁄e
:

388  
ªtvÆ
;

389 
	}
}

411 
	$°¨tup_mode_ru¬ög
(
˛ic⁄_h™dÀ
 
h
,

412 *
exåaxml_fûe
)

414 
ªtvÆ
 = -1;

417 i‡(
	`xmldb_c›y
(
h
, "running", "candidate") < 0)

418 
d⁄e
;

420 i‡(
	`backíd_∂ugö_öôüã
(
h
) != 0)

421 
d⁄e
;

423 i‡(
	`db_ª£t
(
h
, "tmp") < 0)

424 
d⁄e
;

426 i‡(
	`˛ix⁄_∂ugö_ª£t
(
h
, "tmp") < 0)

427 
d⁄e
;

429 i‡(
	`lﬂd_exåaxml
(
h
, 
exåaxml_fûe
, "tmp") < 0)

430 
d⁄e
;

432 i‡(
	`db_ª£t
(
h
, "running") < 0)

433 
d⁄e
;

435 i‡(
	`ˇndid©e_commô
(
h
, "candidate") < 0){

442 
	`˛ic⁄_log
(
LOG_NOTICE
, "%s: Commô o‡ßvedÑu¬ög faûed,Éxôög.", 
__FUNCTION__
);

444 i‡(
	`xmldb_c›y
(
h
, "candidate", "running") < 0)

445 
d⁄e
;

446 
d⁄e
;

449 i‡(
	`db_mîge
(
h
, "tmp", "running") < 0)

450 
d⁄e
;

451 
ªtvÆ
 = 0;

452 
d⁄e
:

453 i‡(
	`xmldb_dñëe
(
h
, "tmp") < 0)

454 
d⁄e
;

455  
ªtvÆ
;

456 
	}
}

480 
	$°¨tup_mode_°¨tup
(
˛ic⁄_h™dÀ
 
h
,

481 *
exåaxml_fûe
)

483 
ªtvÆ
 = -1;

486 i‡(
	`xmldb_c›y
(
h
, "running", "backup") < 0)

487 
d⁄e
;

489 i‡(
	`xmldb_exi°s
(
h
, "startup") != 1)

490 i‡(
	`xmldb_¸óã
(
h
, "startup") < 0)

493 i‡(
	`backíd_∂ugö_öôüã
(
h
) != 0)

494 
d⁄e
;

496 i‡(
	`db_ª£t
(
h
, "tmp") < 0)

497 
d⁄e
;

499 i‡(
	`˛ix⁄_∂ugö_ª£t
(
h
, "tmp") < 0)

500 
d⁄e
;

502 i‡(
	`lﬂd_exåaxml
(
h
, 
exåaxml_fûe
, "tmp") < 0)

503 
d⁄e
;

505 i‡(
	`db_ª£t
(
h
, "running") < 0)

506 
d⁄e
;

508 i‡(
	`ˇndid©e_commô
(
h
, "startup") < 0){

513 
	`˛ic⁄_log
(
LOG_NOTICE
, "%s: Commô o‡°¨tu∞Áûed,Éxôög.", 
__FUNCTION__
);

514 i‡(
	`xmldb_c›y
(
h
, "backup", "running") < 0)

515 
d⁄e
;

516 
d⁄e
;

519 i‡(
	`db_mîge
(
h
, "tmp", "running") < 0)

520 
d⁄e
;

521 
ªtvÆ
 = 0;

522 
d⁄e
:

523 i‡(
	`xmldb_dñëe
(
h
, "backup") < 0)

524 
d⁄e
;

525 i‡(
	`xmldb_dñëe
(
h
, "tmp") < 0)

526 
d⁄e
;

527  
ªtvÆ
;

528 
	}
}

531 
	$maö
(
¨gc
,

532 **
¨gv
)

534 
ªtvÆ
 = -1;

535 
c
;

536 
z≠
;

537 
f‹eground
;

538 
⁄˚
;

539 
°¨tup_mode_t
 
°¨tup_mode
;

540 *
exåaxml_fûe
;

541 *
c⁄fig_group
;

542 *
¨gv0
 = 
¨gv
[0];

543 
°©
 
°
;

544 
˛ic⁄_h™dÀ
 
h
;

545 
hñp
 = 0;

546 
pid
;

547 *
pidfûe
;

548 *
sock
;

549 
sockÁmûy
;

550 *
xmldb_∂ugö
;

551 
xml_ˇche
;

552 
xml_¥ëty
;

553 *
xml_f‹m©
;

554 *
«cm_mode
;

557 
	`˛ic⁄_log_öô
(
__PROGRAM__
, 
LOG_INFO
, 
CLICON_LOG_STDERR
|
CLICON_LOG_SYSLOG
);

559 i‡((
h
 = 
	`backíd_h™dÀ_öô
()Ë=
NULL
)

561 
f‹eground
 = 0;

562 
⁄˚
 = 0;

563 
z≠
 = 0;

564 
exåaxml_fûe
 = 
NULL
;

569 
›ãº
 = 0;

570 
›töd
 = 1;

571 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, 
BACKEND_OPTS
)) != -1)

572 
c
) {

580 
hñp
 = 1;

583 i‡(
	`ssˇnf
(
›èrg
, "%d", &
debug
) != 1)

584 
	`ußge
(
¨gv
[0], 
h
);

587 i‡(!
	`°æí
(
›èrg
))

588 
	`ußge
(
¨gv
[0], 
h
);

589 
	`˛ic⁄_›ti⁄_°r_£t
(
h
, "CLICON_CONFIGFILE", 
›èrg
);

599 
	`˛ic⁄_log_öô
(
__PROGRAM__
, 
debug
?
LOG_DEBUG
:
LOG_INFO
, 
CLICON_LOG_SYSLOG
);

600 
	`˛ic⁄_debug_öô
(
debug
, 
NULL
);

603 i‡(
	`˛ic⁄_›ti⁄s_maö
(
h
) < 0){

604 i‡(
hñp
)

605 
	`ußge
(
¨gv
[0], 
h
);

609 
«cm_mode
 = 
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_NACM_MODE");

610 i‡(
«cm_mode
 && 
	`°rcmp
(nacm_mode, "external") == 0)

611 i‡(
	`«cm_lﬂd_exã∫Æ
(
h
) < 0)

612 
d⁄e
;

615 
›ãº
 = 1;

616 
›töd
 = 1;

617 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, 
BACKEND_OPTS
)) != -1)

618 
c
) {

623 i‡(!
	`°æí
(
›èrg
))

624 
	`ußge
(
¨gv
[0], 
h
);

625 
	`˛ic⁄_›ti⁄_°r_£t
(
h
, "CLICON_BACKEND_DIR", 
›èrg
);

628 i‡(!
	`°æí
(
›èrg
))

629 
	`ußge
(
¨gv
[0], 
h
);

630 
	`˛ic⁄_›ti⁄_°r_£t
(
h
, "CLICON_XMLDB_DIR", 
›èrg
);

633 
f‹eground
 = 1;

636 
⁄˚
 = 1;

639 
z≠
++;

642 i‡(!
	`°æí
(
›èrg
))

643 
	`ußge
(
¨gv
[0], 
h
);

644 
	`˛ic⁄_›ti⁄_°r_£t
(
h
, "CLICON_SOCK", 
›èrg
);

647 
	`˛ic⁄_›ti⁄_°r_£t
(
h
, "CLICON_BACKEND_PIDFILE", 
›èrg
);

650 
	`˛ic⁄_›ti⁄_°r_£t
(
h
, "CLICON_STARTUP_MODE", 
›èrg
);

651 i‡(
	`˛ic⁄_°¨tup_mode
(
h
) < 0){

652 
	`Ârötf
(
°dîr
, "InvÆid sèπu∞mode: %s\n", 
›èrg
);

653 
	`ußge
(
¨gv
[0], 
h
);

657 
exåaxml_fûe
 = 
›èrg
;

660 
	`˛ic⁄_›ti⁄_°r_£t
(
h
, "CLICON_SOCK_GROUP", 
›èrg
);

663 
	`˛ic⁄_›ti⁄_°r_£t
(
h
, "CLICON_YANG_MODULE_MAIN", 
›èrg
);

667 
	`˛ic⁄_›ti⁄_°r_£t
(
h
, "CLICON_XMLDB_PLUGIN", 
›èrg
);

671 
	`ußge
(
¨gv
[0], 
h
);

675 
¨gc
 -
›töd
;

676 
¨gv
 +
›töd
;

679 i‡(
hñp
)

680 
	`ußge
(
¨gv
[0], 
h
);

683 i‡((
pidfûe
 = 
	`˛ic⁄_backíd_pidfûe
(
h
)Ë=
NULL
){

684 
	`˛ic⁄_îr
(
OE_FATAL
, 0, "pidfileÇot set");

685 
d⁄e
;

687 
sockÁmûy
 = 
	`˛ic⁄_sock_Ámûy
(
h
);

688 i‡((
sock
 = 
	`˛ic⁄_sock
(
h
)Ë=
NULL
){

689 
	`˛ic⁄_îr
(
OE_FATAL
, 0, "sockÇot set");

690 
d⁄e
;

692 i‡(
	`pidfûe_gë
(
pidfûe
, &
pid
) < 0)

694 i‡(
z≠
){

695 i‡(
pid
 && 
	`pidfûe_z≠ﬁd
(pid) < 0)

697 i‡(
	`l°©
(
pidfûe
, &
°
) == 0)

698 
	`u∆ök
(
pidfûe
);

699 i‡(
sockÁmûy
==
AF_UNIX
 && 
	`l°©
(
sock
, &
°
) == 0)

700 
	`u∆ök
(
sock
);

701 
	`backíd_ãrmö©e
(
h
);

702 
	`exô
(0);

705 i‡(
pid
){

706 
	`˛ic⁄_îr
(
OE_DEMON
, 0, "DaemonálreadyÑunning withÖid %d\n(Try killing it with %s -z)",

707 
pid
, 
¨gv0
);

714 i‡(
	`l°©
(
pidfûe
, &
°
) == 0)

715 
	`u∆ök
(
pidfûe
);

716 i‡(
sockÁmûy
==
AF_UNIX
 && 
	`l°©
(
sock
, &
°
) == 0)

717 
	`u∆ök
(
sock
);

720 i‡((
c⁄fig_group
 = 
	`˛ic⁄_sock_group
(
h
)Ë=
NULL
){

721 
	`˛ic⁄_îr
(
OE_FATAL
, 0, "clicon_sock_group optionÇot set");

725 i‡(
	`group_«me2gid
(
c⁄fig_group
, 
NULL
) < 0){

726 
	`˛ic⁄_log
(
LOG_ERR
, "'%s' doesÇot seemÅo beá valid user group.\n"

732 
c⁄fig_group
, 
	`˛ic⁄_c⁄figfûe
(
h
),

733 
c⁄fig_group
, config_group);

737 i‡((
xmldb_∂ugö
 = 
	`˛ic⁄_xmldb_∂ugö
(
h
)Ë=
NULL
){

738 
	`˛ic⁄_log
(
LOG_ERR
, "No xmldbÖlugin given (specify option CLICON_XMLDB_PLUGIN).\n");

739 
d⁄e
;

741 i‡(
	`xmldb_∂ugö_lﬂd
(
h
, 
xmldb_∂ugö
) < 0)

742 
d⁄e
;

744 i‡(
	`xmldb_c⁄√˘
(
h
) < 0)

745 
d⁄e
;

747 i‡(
	`y™g_•ec_maö
(
h
Ë=
NULL
)

748 
d⁄e
;

751 i‡(
	`xmldb_£t›t
(
h
, "dbdú", 
	`˛ic⁄_xmldb_dú
(h)) < 0)

752 
d⁄e
;

753 i‡(
	`xmldb_£t›t
(
h
, "y™g•ec", 
	`˛ic⁄_db•ec_y™g
(h)) < 0)

754 
d⁄e
;

755 i‡((
xml_ˇche
 = 
	`˛ic⁄_›ti⁄_boﬁ
(
h
, "CLICON_XMLDB_CACHE")) >= 0)

756 i‡(
	`xmldb_£t›t
(
h
, "xml_ˇche", (*)(
öçå_t
)
xml_ˇche
) < 0)

757 
d⁄e
;

758 i‡((
xml_f‹m©
 = 
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_XMLDB_FORMAT")) >= 0)

759 i‡(
	`xmldb_£t›t
(
h
, "f‹m©", (*)
xml_f‹m©
) < 0)

760 
d⁄e
;

761 i‡((
xml_¥ëty
 = 
	`˛ic⁄_›ti⁄_boﬁ
(
h
, "CLICON_XMLDB_PRETTY")) >= 0)

762 i‡(
	`xmldb_£t›t
(
h
, "¥ëty", (*)(
öçå_t
)
xml_¥ëty
) < 0)

763 
d⁄e
;

765 
°¨tup_mode
 = 
	`˛ic⁄_°¨tup_mode
(
h
);

766 i‡(
°¨tup_mode
 == -1){

767 
	`˛ic⁄_log
(
LOG_ERR
, "Startup mode undefined. Specify option CLICON_STARTUP_MODE or specify -s optionÅo clicon_backend.\n");

768 
d⁄e
;

772 i‡(
	`xmldb_exi°s
(
h
, "running") != 1)

773 i‡(
	`xmldb_¸óã
(
h
, "running") < 0)

775 
°¨tup_mode
){

776 
SM_NONE
:

777 i‡(
	`°¨tup_mode_n⁄e
(
h
) < 0)

778 
d⁄e
;

780 
SM_INIT
:

781 i‡(
	`°¨tup_mode_öô
(
h
) < 0)

782 
d⁄e
;

784 
SM_RUNNING
:

785 i‡(
	`°¨tup_mode_ru¬ög
(
h
, 
exåaxml_fûe
) < 0)

786 
d⁄e
;

788 
SM_STARTUP
:

789 i‡(
	`°¨tup_mode_°¨tup
(
h
, 
exåaxml_fûe
) < 0)

790 
d⁄e
;

794 i‡(
	`xmldb_c›y
(
h
, "running", "candidate") < 0)

795 
d⁄e
;

797 i‡(
	`∂ugö_°¨t_u£r›ti⁄s
(
h
, 
¨gv0
, 
¨gc
, 
¨gv
) <0)

798 
d⁄e
;

799 i‡(
⁄˚
)

800 
d⁄e
;

805 i‡(
f‹eground
==0){

806 
	`˛ic⁄_log_öô
(
__PROGRAM__
, 
debug
?
LOG_DEBUG
:
LOG_INFO
, 
CLICON_LOG_SYSLOG
);

807 i‡(
	`d´m⁄
(0, 0) < 0){

808 
	`Ârötf
(
°dîr
, "config: daemon");

809 
	`exô
(-1);

814 i‡((
pid
 = 
	`pidfûe_wrôe
(
pidfûe
)) < 0)

815 
d⁄e
;

818 i‡(
	`˛ic⁄_log_ªgi°î_ˇŒback
(
backíd_log_cb
, 
h
) < 0)

819 
d⁄e
;

820 
	`˛ic⁄_log
(
LOG_NOTICE
, "%s: %u Sèπed", 
__PROGRAM__
, 
	`gëpid
());

821 i‡(
	`£t_sig«l
(
SIGTERM
, 
backíd_sig_ãrm
, 
NULL
) < 0){

822 
	`˛ic⁄_îr
(
OE_DEMON
, 
î∫o
, "Setting signal");

823 
d⁄e
;

825 i‡(
	`£t_sig«l
(
SIGINT
, 
backíd_sig_ãrm
, 
NULL
) < 0){

826 
	`˛ic⁄_îr
(
OE_DEMON
, 
î∫o
, "Setting signal");

827 
d⁄e
;

831 i‡(
	`£rvî_sockë
(
h
) < 0)

832 
d⁄e
;

834 i‡(
debug
)

835 
	`˛ic⁄_›ti⁄_dump
(
h
, 
debug
);

837 i‡(
	`evít_lo›
() < 0)

838 
d⁄e
;

839 
ªtvÆ
 = 0;

840 
d⁄e
:

841 
	`˛ic⁄_log
(
LOG_NOTICE
, "%s: %u Tîmö©edÑëvÆ:%d", 
__PROGRAM__
, 
	`gëpid
(), 
ªtvÆ
);

842 
	`backíd_ãrmö©e
(
h
);

844  
ªtvÆ
;

845 
	}
}

	@clixon-master/apps/backend/backend_plugin.c

37 #ifde‡
HAVE_CONFIG_H


38 
	~"˛ix⁄_c⁄fig.h
"

41 
	~<°dio.h
>

42 
	#__USE_GNU


	)

43 
	~<°rög.h
>

44 
	~<°dlib.h
>

45 
	~<°d¨g.h
>

46 
	~<dlf˙.h
>

47 
	~<dúít.h
>

48 
	~<uni°d.h
>

49 
	~<î∫o.h
>

50 
	~<sig«l.h
>

51 
	~<sy¶og.h
>

52 
	~<sys/ty≥s.h
>

53 
	~<sys/°©.h
>

54 
	~<sys/∑øm.h
>

55 
	~<√töë/ö.h
>

58 
	~<˛igí/˛igí.h
>

61 
	~<˛ix⁄/˛ix⁄.h
>

63 
	~"˛ix⁄_backíd_å™ß˘i⁄.h
"

64 
	~"backíd_∂ugö.h
"

65 
	~"backíd_commô.h
"

73 
	$backíd_∂ugö_öôüã
(
˛ic⁄_h™dÀ
 
h
)

75 *
dú
;

78 i‡((
dú
 = 
	`˛ic⁄_backíd_dú
(
h
)Ë=
NULL
)

80  
	`˛ix⁄_∂ugös_lﬂd
(
h
, 
CLIXON_PLUGIN_INIT
, 
dú
,

81 
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_BACKEND_REGEXP"));

82 
	}
}

92 
	$˛ix⁄_∂ugö_ª£t
(
˛ic⁄_h™dÀ
 
h
,

93 *
db
)

95 
˛ix⁄_∂ugö
 *
˝
 = 
NULL
;

96 
∂gª£t_t
 *
ª£t‚
;

97 
ªtvÆ
 = 1;

99 (
˝
 = 
	`˛ix⁄_∂ugö_óch
(
h
, cp)Ë!
NULL
) {

100 i‡((
ª£t‚
 = 
˝
->
˝_≠i
.
ˇ_ª£t
Ë=
NULL
)

102 i‡((
ªtvÆ
 = 
	`ª£t‚
(
h
, 
db
)) < 0) {

103 
	`˛ic⁄_debug
(1, "plugin_start() failed\n");

108  
ªtvÆ
;

109 
	}
}

123 
	$˛ix⁄_∂ugö_°©ed©a
(
˛ic⁄_h™dÀ
 
h
,

124 *
x∑th
,

125 
cxobj
 **
xt›
)

127 
ªtvÆ
 = -1;

128 
i
;

129 
cxobj
 *
x
 = 
NULL
;

130 
y™g_•ec
 *
y•ec
;

131 
cxobj
 **
xvec
 = 
NULL
;

132 
size_t
 
xÀn
;

133 
cxobj
 *
xc
;

134 
˛ix⁄_∂ugö
 *
˝
 = 
NULL
;

135 
∂g°©ed©a_t
 *
‚
;

136 *
ªas⁄
 = 
NULL
;

138 i‡((
y•ec
 = 
	`˛ic⁄_db•ec_y™g
(
h
)Ë=
NULL
){

139 
	`˛ic⁄_îr
(
OE_YANG
, 
ENOENT
, "No yang spec");

140 
d⁄e
;

142 i‡(*
xt›
==
NULL
){

143 
	`˛ic⁄_îr
(
OE_CFG
, 
ENOENT
, "XMLÅreeÉxpected");

144 
d⁄e
;

146 (
˝
 = 
	`˛ix⁄_∂ugö_óch
(
h
, cp)Ë!
NULL
) {

147 i‡((
‚
 = 
˝
->
˝_≠i
.
ˇ_°©ed©a
Ë=
NULL
)

149 i‡((
x
 = 
	`xml_√w
("c⁄fig", 
NULL
, NULL)) == NULL)

150 
d⁄e
;

151 i‡(
	`‚
(
h
, 
x∑th
, 
x
) < 0){

152 
ªtvÆ
 = 1;

153 
d⁄e
;

155 i‡(
	`xml_mîge
(*
xt›
, 
x
, 
y•ec
, &
ªas⁄
) < 0)

156 
d⁄e
;

157 i‡(
ªas⁄
){

158 (
xc
 = 
	`xml_chûd_i
(*
xt›
, 0)Ë!
NULL
)

159 
	`xml_purge
(
xc
);

160 i‡(
	`√tc⁄f_›î©i⁄_Áûed_xml
(
xt›
, "Ωc", 
ªas⁄
)< 0)

161 
d⁄e
;

162 
ok
;

164 i‡(
x
){

165 
	`xml_‰ì
(
x
);

166 
x
 = 
NULL
;

170 i‡(
	`x∑th_vec
(*
xt›
, 
x∑th
?x∑th:"/", &
xvec
, &
xÀn
) < 0)

171 
d⁄e
;

177 i‡(
xvec
 !
NULL
){

178 
i
=0; i<
xÀn
; i++)

179 
	`xml_Êag_£t
(
xvec
[
i
], 
XML_FLAG_MARK
);

182 i‡(!
	`xml_Êag
(*
xt›
, 
XML_FLAG_MARK
))

183 i‡(
	`xml_åì_¥u√_Êagged_sub
(*
xt›
, 
XML_FLAG_MARK
, 1, 
NULL
) < 0)

184 
d⁄e
;

186 i‡(
	`xml_≠∂y
(*
xt›
, 
CX_ELMNT
, (
xml_≠∂y‚_t
*)
xml_Êag_ª£t
, (*)
XML_FLAG_MARK
) < 0)

187 
d⁄e
;

188 
ok
:

189 
ªtvÆ
 = 0;

190 
d⁄e
:

191 i‡(
ªas⁄
)

192 
	`‰ì
(
ªas⁄
);

193 i‡(
x
)

194 
	`xml_‰ì
(
x
);

195 i‡(
xvec
)

196 
	`‰ì
(
xvec
);

197  
ªtvÆ
;

198 
	}
}

201 
å™ß˘i⁄_d©a_t
 *

202 
	$å™ß˘i⁄_√w
()

204 
å™ß˘i⁄_d©a_t
 *
td
;

205 
uöt64_t
 
id
 = 0;

207 i‡((
td
 = 
	`mÆloc
((*td))Ë=
NULL
){

208 
	`˛ic⁄_îr
(
OE_CFG
, 
î∫o
, "malloc");

209  
NULL
;

211 
	`mem£t
(
td
, 0, (*td));

212 
td
->
td_id
 = 
id
++;

213  
td
;

214 
	}
}

218 
	$å™ß˘i⁄_‰ì
(
å™ß˘i⁄_d©a_t
 *
td
)

220 i‡(
td
->
td_§c
)

221 
	`xml_‰ì
(
td
->
td_§c
);

222 i‡(
td
->
td_èrgë
)

223 
	`xml_‰ì
(
td
->
td_èrgë
);

224 i‡(
td
->
td_dvec
)

225 
	`‰ì
(
td
->
td_dvec
);

226 i‡(
td
->
td_avec
)

227 
	`‰ì
(
td
->
td_avec
);

228 i‡(
td
->
td_scvec
)

229 
	`‰ì
(
td
->
td_scvec
);

230 i‡(
td
->
td_tcvec
)

231 
	`‰ì
(
td
->
td_tcvec
);

232 
	`‰ì
(
td
);

234 
	}
}

245 
	$∂ugö_å™ß˘i⁄_begö
(
˛ic⁄_h™dÀ
 
h
,

246 
å™ß˘i⁄_d©a_t
 *
td
)

248 
ªtvÆ
 = 0;

249 
˛ix⁄_∂ugö
 *
˝
 = 
NULL
;

250 
å™s_cb_t
 *
‚
;

252 (
˝
 = 
	`˛ix⁄_∂ugö_óch
(
h
, cp)Ë!
NULL
) {

253 i‡((
‚
 = 
˝
->
˝_≠i
.
ˇ_å™s_begö
Ë=
NULL
)

255 i‡((
ªtvÆ
 = 
	`‚
(
h
, (
å™ß˘i⁄_d©a
)
td
)) < 0){

256 i‡(!
˛ic⁄_î∫o
)

257 
	`˛ic⁄_log
(
LOG_NOTICE
, "%s: Plugin '%s'Åransaction_begin callback doesÇot make clicon_err call onÉrror",

258 
__FUNCTION__
, 
˝
->
˝_«me
);

263  
ªtvÆ
;

264 
	}
}

273 
	$∂ugö_å™ß˘i⁄_vÆid©e
(
˛ic⁄_h™dÀ
 
h
,

274 
å™ß˘i⁄_d©a_t
 *
td
)

276 
ªtvÆ
 = 0;

277 
˛ix⁄_∂ugö
 *
˝
 = 
NULL
;

278 
å™s_cb_t
 *
‚
;

280 (
˝
 = 
	`˛ix⁄_∂ugö_óch
(
h
, cp)Ë!
NULL
) {

281 i‡((
‚
 = 
˝
->
˝_≠i
.
ˇ_å™s_vÆid©e
Ë=
NULL
)

283 i‡((
ªtvÆ
 = 
	`‚
(
h
, (
å™ß˘i⁄_d©a
)
td
)) < 0){

284 i‡(!
˛ic⁄_î∫o
)

285 
	`˛ic⁄_log
(
LOG_NOTICE
, "%s: Plugin '%s'Åransaction_validate callback doesÇot make clicon_err call onÉrror",

286 
__FUNCTION__
, 
˝
->
˝_«me
);

290  
ªtvÆ
;

291 
	}
}

302 
	$∂ugö_å™ß˘i⁄_com∂ëe
(
˛ic⁄_h™dÀ
 
h
,

303 
å™ß˘i⁄_d©a_t
 *
td
)

305 
ªtvÆ
 = 0;

306 
˛ix⁄_∂ugö
 *
˝
 = 
NULL
;

307 
å™s_cb_t
 *
‚
;

309 (
˝
 = 
	`˛ix⁄_∂ugö_óch
(
h
, cp)Ë!
NULL
) {

310 i‡((
‚
 = 
˝
->
˝_≠i
.
ˇ_å™s_com∂ëe
Ë=
NULL
)

312 i‡((
ªtvÆ
 = 
	`‚
(
h
, (
å™ß˘i⁄_d©a
)
td
)) < 0){

313 i‡(!
˛ic⁄_î∫o
)

314 
	`˛ic⁄_log
(
LOG_NOTICE
, "%s: Plugin '%s'Årans_complete callback doesÇot make clicon_err call onÉrror",

315 
__FUNCTION__
, 
˝
->
˝_«me
);

320  
ªtvÆ
;

321 
	}
}

333 
	$∂ugö_å™ß˘i⁄_ªvît
(
˛ic⁄_h™dÀ
 
h
,

334 
å™ß˘i⁄_d©a_t
 *
td
,

335 
ƒ
)

337 
ªtvÆ
 = 0;

338 
å™ß˘i⁄_d©a_t
 
å
;

339 
˛ix⁄_∂ugö
 *
˝
 = 
NULL
;

340 
å™s_cb_t
 *
‚
;

344 
	`mem˝y
(&
å
, 
td
, (tr));

345 
å
.
td_§c
 = 
td
->
td_èrgë
;

346 
å
.
td_èrgë
 = 
td
->
td_§c
;

347 
å
.
td_dÀn
 = 
td
->
td_Æí
;

348 
å
.
td_dvec
 = 
td
->
td_avec
;

349 
å
.
td_Æí
 = 
td
->
td_dÀn
;

350 
å
.
td_avec
 = 
td
->
td_dvec
;

351 
å
.
td_˛í
 = 
td
->td_clen;

352 
å
.
td_scvec
 = 
td
->
td_tcvec
;

353 
å
.
td_tcvec
 = 
td
->
td_scvec
;

355 (
˝
 = 
	`˛ix⁄_∂ugö_óch_ªvît
(
h
, cp, 
ƒ
)Ë!
NULL
) {

356 i‡((
‚
 = 
˝
->
˝_≠i
.
ˇ_å™s_commô
Ë=
NULL
)

358 i‡((
ªtvÆ
 = 
	`‚
(
h
, (
å™ß˘i⁄_d©a
)
td
)) < 0){

359 
	`˛ic⁄_log
(
LOG_NOTICE
, "%s: Plugin '%s'Årans_commitÑevert callback failed",

360 
__FUNCTION__
, 
˝
->
˝_«me
);

364  
ªtvÆ
;

365 
	}
}

377 
	$∂ugö_å™ß˘i⁄_commô
(
˛ic⁄_h™dÀ
 
h
,

378 
å™ß˘i⁄_d©a_t
 *
td
)

380 
ªtvÆ
 = 0;

381 
˛ix⁄_∂ugö
 *
˝
 = 
NULL
;

382 
å™s_cb_t
 *
‚
;

383 
i
=0;

385 (
˝
 = 
	`˛ix⁄_∂ugö_óch
(
h
, cp)Ë!
NULL
) {

386 
i
++;

387 i‡((
‚
 = 
˝
->
˝_≠i
.
ˇ_å™s_commô
Ë=
NULL
)

389 i‡((
ªtvÆ
 = 
	`‚
(
h
, (
å™ß˘i⁄_d©a
)
td
)) < 0){

390 i‡(!
˛ic⁄_î∫o
)

391 
	`˛ic⁄_log
(
LOG_NOTICE
, "%s: Plugin '%s'Årans_commit callback doesÇot make clicon_err call onÉrror",

392 
__FUNCTION__
, 
˝
->
˝_«me
);

394 
	`∂ugö_å™ß˘i⁄_ªvît
(
h
, 
td
, 
i
-1);

398  
ªtvÆ
;

399 
	}
}

408 
	$∂ugö_å™ß˘i⁄_íd
(
˛ic⁄_h™dÀ
 
h
,

409 
å™ß˘i⁄_d©a_t
 *
td
)

411 
ªtvÆ
 = 0;

412 
˛ix⁄_∂ugö
 *
˝
 = 
NULL
;

413 
å™s_cb_t
 *
‚
;

415 (
˝
 = 
	`˛ix⁄_∂ugö_óch
(
h
, cp)Ë!
NULL
) {

416 i‡((
‚
 = 
˝
->
˝_≠i
.
ˇ_å™s_íd
Ë=
NULL
)

418 i‡((
ªtvÆ
 = 
	`‚
(
h
, (
å™ß˘i⁄_d©a
)
td
)) < 0){

419 i‡(!
˛ic⁄_î∫o
)

420 
	`˛ic⁄_log
(
LOG_NOTICE
, "%s: Plugin '%s'Årans_end callback doesÇot make clicon_err call onÉrror",

421 
__FUNCTION__
, 
˝
->
˝_«me
);

425  
ªtvÆ
;

426 
	}
}

435 
	$∂ugö_å™ß˘i⁄_ab‹t
(
˛ic⁄_h™dÀ
 
h
,

436 
å™ß˘i⁄_d©a_t
 *
td
)

438 
ªtvÆ
 = 0;

439 
˛ix⁄_∂ugö
 *
˝
 = 
NULL
;

440 
å™s_cb_t
 *
‚
;

442 (
˝
 = 
	`˛ix⁄_∂ugö_óch
(
h
, cp)Ë!
NULL
) {

443 i‡((
‚
 = 
˝
->
˝_≠i
.
ˇ_å™s_ab‹t
Ë=
NULL
)

445 
	`‚
(
h
, (
å™ß˘i⁄_d©a
)
td
);

447  
ªtvÆ
;

448 
	}
}

	@clixon-master/apps/backend/backend_plugin.h

36 #i‚de‡
_BACKEND_PLUGIN_H_


37 
	#_BACKEND_PLUGIN_H_


	)

54 
uöt64_t
 
	mtd_id
;

55 *
	mtd_¨g
;

56 
cxobj
 *
	mtd_§c
;

57 
cxobj
 *
	mtd_èrgë
;

58 
cxobj
 **
	mtd_dvec
;

59 
size_t
 
	mtd_dÀn
;

60 
cxobj
 **
	mtd_avec
;

61 
size_t
 
	mtd_Æí
;

62 
cxobj
 **
	mtd_scvec
;

63 
cxobj
 **
	mtd_tcvec
;

64 
size_t
 
	mtd_˛í
;

65 } 
	tå™ß˘i⁄_d©a_t
;

70 
backíd_∂ugö_öôüã
(
˛ic⁄_h™dÀ
 
h
);

72 
˛ix⁄_∂ugö_ª£t
(
˛ic⁄_h™dÀ
 
h
, *
db
);

74 
˛ix⁄_∂ugö_°©ed©a
(
˛ic⁄_h™dÀ
 
h
, *
x∑th
, 
cxobj
 **
xt›
);

76 
å™ß˘i⁄_d©a_t
 * 
å™ß˘i⁄_√w
();

77 
å™ß˘i⁄_‰ì
(
å™ß˘i⁄_d©a_t
 *);

79 
∂ugö_å™ß˘i⁄_begö
(
˛ic⁄_h™dÀ
 
h
, 
å™ß˘i⁄_d©a_t
 *
td
);

80 
∂ugö_å™ß˘i⁄_vÆid©e
(
˛ic⁄_h™dÀ
 
h
, 
å™ß˘i⁄_d©a_t
 *
td
);

81 
∂ugö_å™ß˘i⁄_com∂ëe
(
˛ic⁄_h™dÀ
 
h
, 
å™ß˘i⁄_d©a_t
 *
td
);

82 
∂ugö_å™ß˘i⁄_commô
(
˛ic⁄_h™dÀ
 
h
, 
å™ß˘i⁄_d©a_t
 *
td
);

83 
∂ugö_å™ß˘i⁄_íd
(
˛ic⁄_h™dÀ
 
h
, 
å™ß˘i⁄_d©a_t
 *
td
);

84 
∂ugö_å™ß˘i⁄_ab‹t
(
˛ic⁄_h™dÀ
 
h
, 
å™ß˘i⁄_d©a_t
 *
td
);

	@clixon-master/apps/backend/backend_socket.c

36 #ifde‡
HAVE_CONFIG_H


37 
	~"˛ix⁄_c⁄fig.h
"

40 
	~<°dio.h
>

41 
	~<°rög.h
>

42 
	~<°dlib.h
>

43 
	~<uni°d.h
>

44 
	~<°d¨g.h
>

45 
	~<î∫o.h
>

46 
	~<sig«l.h
>

47 
	~<f˙é.h
>

48 
	~<time.h
>

49 
	~<sy¶og.h
>

50 
	~<gΩ.h
>

51 
	~<sys/time.h
>

52 
	~<sys/°©.h
>

53 
	~<sys/∑øm.h
>

54 #ifde‡
HAVE_SYS_UCRED_H


55 
	~<sys/ty≥s.h
>

56 
	~<sys/u¸ed.h
>

58 
	#__USE_GNU


	)

59 
	~<sys/sockë.h
>

60 
	~<sys/∑øm.h
>

61 
	~<sys/ty≥s.h
>

63 
	~<sys/un.h
>

64 
	~<√töë/ö.h
>

65 
	~<¨∑/öë.h
>

67 
	~<˛igí/˛igí.h
>

70 
	~<˛ix⁄/˛ix⁄.h
>

72 
	~"backíd_sockë.h
"

73 
	~"backíd_˛õ¡.h
"

74 
	~"backíd_h™dÀ.h
"

77 
	$c⁄fig_sockë_öô_ùv4
(
˛ic⁄_h™dÀ
 
h
, *
d°
)

79 
s
;

80 
sockaddr_ö
 
addr
;

81 
uöt16_t
 
p‹t
;

83 
p‹t
 = 
	`˛ic⁄_sock_p‹t
(
h
);

86 i‡((
s
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0)) < 0) {

87 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "socket");

91 
	`mem£t
(&
addr
, 0, (addr));

92 
addr
.
sö_Ámûy
 = 
AF_INET
;

93 
addr
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

94 i‡(
	`öë_±⁄
(
addr
.
sö_Ámûy
, 
d°
, &addr.
sö_addr
) != 1){

95 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "öë_±⁄: %†(Ex≥˘ed IPv4áddªss. Check sëtög†o‡CLICON_SOCK_FAMILYánd CLICON_SOCK)", 
d°
);

96 
îr
;

98 i‡(
	`böd
(
s
, (
sockaddr
 *)&
addr
, (addr)) < 0){

99 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "%s: böd", 
__FUNCTION__
);

100 
îr
;

102 
	`˛ic⁄_debug
(1, "Li°í o¿£rvî sockëáà%s:%hu", 
d°
, 
p‹t
);

103 i‡(
	`li°í
(
s
, 5) < 0){

104 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "%s:Üi°í", 
__FUNCTION__
);

105 
îr
;

107  
s
;

108 
îr
:

109 
	`˛o£
(
s
);

111 
	}
}

119 
	$c⁄fig_sockë_öô_unix
(
˛ic⁄_h™dÀ
 
h
, *
sock
)

121 
s
;

122 
sockaddr_un
 
addr
;

123 
mode_t
 
ﬁd_mask
;

124 *
c⁄fig_group
;

125 
gid_t
 
gid
;

126 
°©
 
°
;

128 i‡(
	`l°©
(
sock
, &
°
Ë=0 && 
	`u∆ök
(sock) < 0){

129 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "%s: u∆ök(%s)", 
__FUNCTION__
, 
sock
);

133 i‡((
c⁄fig_group
 = 
	`˛ic⁄_sock_group
(
h
)Ë=
NULL
){

134 
	`˛ic⁄_îr
(
OE_FATAL
, 0, "clicon_sock_group optionÇot set");

137 i‡(
	`group_«me2gid
(
c⁄fig_group
, &
gid
) < 0)

140 i‡(
gid
 == 0)

141 
	`˛ic⁄_log
(
LOG_WARNING
, "%s: Nÿsuch group: %s\n", 
__FUNCTION__
, 
c⁄fig_group
);

144 i‡((
s
 = 
	`sockë
(
AF_UNIX
, 
SOCK_STREAM
, 0)) < 0) {

145 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "%s: sockë", 
__FUNCTION__
);

149 
	`mem£t
(&
addr
, 0, (addr));

150 
addr
.
sun_Ámûy
 = 
AF_UNIX
;

151 
	`°∫˝y
(
addr
.
sun_∑th
, 
sock
, (addr.sun_path)-1);

152 
ﬁd_mask
 = 
	`umask
(
S_IRWXO
 | 
S_IXGRP
 | 
S_IXUSR
);

153 i‡(
	`böd
(
s
, (
sockaddr
 *)&
addr
, 
	`SUN_LEN
(&addr)) < 0){

154 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "%s: böd", 
__FUNCTION__
);

155 
	`umask
(
ﬁd_mask
);

156 
îr
;

158 
	`umask
(
ﬁd_mask
);

160 i‡(
	`lchown
(
sock
, -1, 
gid
) < 0){

161 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "%s:Üchown(%s, %s)", 
__FUNCTION__
,

162 
sock
, 
c⁄fig_group
);

163 
îr
;

165 
	`˛ic⁄_debug
(1, "Li°í o¿£rvî sockëáà%s", 
addr
.
sun_∑th
);

166 i‡(
	`li°í
(
s
, 5) < 0){

167 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "%s:Üi°í", 
__FUNCTION__
);

168 
îr
;

170  
s
;

171 
îr
:

172 
	`˛o£
(
s
);

174 
	}
}

177 
	$backíd_sockë_öô
(
˛ic⁄_h™dÀ
 
h
)

179 *
sock
;

181 i‡((
sock
 = 
	`˛ic⁄_sock
(
h
)Ë=
NULL
){

182 
	`˛ic⁄_îr
(
OE_FATAL
, 0, "CLICON_SOCK optionÇot set");

185 
	`˛ic⁄_sock_Ámûy
(
h
)){

186 
AF_UNIX
:

187  
	`c⁄fig_sockë_öô_unix
(
h
, 
sock
);

189 
AF_INET
:

190  
	`c⁄fig_sockë_öô_ùv4
(
h
, 
sock
);

194 
	}
}

200 
	$backíd_ac˚±_˛õ¡
(
fd
,

201 *
¨g
)

203 
ªtvÆ
 = -1;

204 
˛ic⁄_h™dÀ
 
h
 = (˛ic⁄_h™dÀ)
¨g
;

205 
s
;

206 
sockaddr_un
 
‰om
;

207 
sockÀn_t
 
Àn
;

208 
˛õ¡_íåy
 *
˚
;

209 #ifde‡
DONT_WORK


210 
xu¸ed
 
¸edítüls
;

211 
sockÀn_t
 
˛í
;

212 #ñi‡
	`deföed
(
SO_PEERCRED
)

213 
u¸ed
 
¸edítüls
;

214 
sockÀn_t
 
˛í
;

216 *
c⁄fig_group
;

217 
group
 *
gr
;

218 *
mem
;

219 
i
;

221 
	`˛ic⁄_debug
(2, "%s", 
__FUNCTION__
);

222 
Àn
 = (
‰om
);

223 i‡((
s
 = 
	`ac˚±
(
fd
, (
sockaddr
*)&
‰om
, &
Àn
)) < 0){

224 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "%s:ác˚±", 
__FUNCTION__
);

225 
d⁄e
;

227 #i‡
	`deföed
(
SO_PEERCRED
)

229 
˛í
 = (
¸edítüls
);

230 if(
	`gësock›t
(
s
, 
SOL_SOCKET
, 
SO_PEERCRED
 , &
¸edítüls
, &
˛í
)){

231 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "%s: gësock›t", 
__FUNCTION__
);

232 
d⁄e
;

235 i‡((
˚
 = 
	`backíd_˛õ¡_add
(
h
, (
sockaddr
*)&
‰om
)Ë=
NULL
)

236 
d⁄e
;

237 #i‡
	`deföed
(
SO_PEERCRED
)

238 
˚
->
˚_pid
 = 
¸edítüls
.
pid
;

239 
˚
->
˚_uid
 = 
¸edítüls
.
uid
;

241 
˚
->
˚_h™dÀ
 = 
h
;

244 i‡((
c⁄fig_group
 = 
	`˛ic⁄_sock_group
(
h
)Ë=
NULL
){

245 
	`˛ic⁄_îr
(
OE_FATAL
, 0, "clicon_sock_group optionÇot set");

246 
d⁄e
;

248 i‡((
gr
 = 
	`gëg∫am
(
c⁄fig_group
)Ë!
NULL
){

249 
i
 = 0;

250 (
mem
 = 
gr
->
gr_mem
[
i
++]Ë!
NULL
)

256 
ii
;

257 
˛õ¡_íåy
 *
c
;

258 
c
 = 
˚_li°
, 
ii
=0; c; c = c->
˚_√xt
, ii++);

259 
	`˛ic⁄_debug
(1, "Open client socket (nr:%dÖid:%d [Total: %d])",

260 
˚
->
˚_ƒ
, ce->
˚_pid
, 
ii
);

263 
˚
->
˚_s
 = 
s
;

268 i‡(
	`evít_ªg_fd
(
s
, 
‰om_˛õ¡
, (*)
˚
, "localÇetconf client socket") < 0)

269 
d⁄e
;

270 
ªtvÆ
 = 0;

271 
d⁄e
:

272  
ªtvÆ
;

273 
	}
}

	@clixon-master/apps/backend/backend_socket.h

37 #i‚de‡
_BACKEND_SOCKET_H_


38 
	#_BACKEND_SOCKET_H_


	)

43 
backíd_sockë_öô
(
˛ic⁄_h™dÀ
 
h
);

44 
backíd_ac˚±_˛õ¡
(
fd
, *
¨g
);

	@clixon-master/apps/backend/clixon_backend.h

40 #i‚de‡
_CLIXON_BACKEND_H_


41 
	#_CLIXON_BACKEND_H_


	)

49 
	~<˛ix⁄/˛ix⁄_backíd_h™dÀ.h
>

50 
	~<˛ix⁄/˛ix⁄_backíd_å™ß˘i⁄.h
>

	@clixon-master/apps/backend/clixon_backend_handle.c

36 #ifde‡
HAVE_CONFIG_H


37 
	~"˛ix⁄_c⁄fig.h
"

40 
	~<°dio.h
>

41 
	~<°d¨g.h
>

42 
	~<°rög.h
>

43 
	~<°dlib.h
>

44 
	~<öây≥s.h
>

45 
	~<dúít.h
>

46 
	~<î∫o.h
>

47 
	~<uni°d.h
>

48 
	~<as£π.h
>

49 
	~<‚m©ch.h
>

50 
	~<sys/ty≥s.h
>

51 
	~<sys/time.h
>

52 
	~<ªgex.h
>

53 
	~<sy¶og.h
>

54 
	~<√töë/ö.h
>

55 
	~<limôs.h
>

58 
	~<˛igí/˛igí.h
>

61 
	~<˛ix⁄/˛ix⁄.h
>

63 
	~"˛ix⁄_backíd_h™dÀ.h
"

64 
	~"backíd_˛õ¡.h
"

65 
	~"backíd_h™dÀ.h
"

69 
	#CLICON_MAGIC
 0x99ØÁbe

	)

71 
	#h™dÀ
(
h
Ë(
	`as£π
(
	`˛ic⁄_h™dÀ_check
(h)==0),(
backíd_h™dÀ
 *)(h))

	)

85 
	sbackíd_h™dÀ
 {

86 
	mbh_magic
;

87 
˛ic⁄_hash_t
 *
	mbh_c›t
;

88 
˛ic⁄_hash_t
 *
	mbh_d©a
;

90 
˛õ¡_íåy
 *
	mbh_˚_li°
;

91 
	mbh_˚_ƒ
;

92 
h™dÀ_subs¸ùti⁄
 *
	mbh_subs¸ùti⁄
;

93 
cxobj
 *
	mbh_«cm
;

98 
˛ic⁄_h™dÀ


99 
	$backíd_h™dÀ_öô
()

101  
	`˛ic⁄_h™dÀ_öô0
((
backíd_h™dÀ
));

102 
	}
}

108 
	$backíd_h™dÀ_exô
(
˛ic⁄_h™dÀ
 
h
)

110 
backíd_h™dÀ
 *
bh
 = 
	`h™dÀ
(
h
);

111 
˛õ¡_íåy
 *
˚
;

114 (
˚
 = 
	`backíd_˛õ¡_li°
(
h
)Ë!
NULL
)

115 
	`backíd_˛õ¡_dñëe
(
h
, 
˚
);

116 i‡(
bh
->
bh_«cm
)

117 
	`xml_‰ì
(
bh
->
bh_«cm
);

118 
	`˛ic⁄_h™dÀ_exô
(
h
);

120 
	}
}

136 
	$backíd_nŸify
(
˛ic⁄_h™dÀ
 
h
,

137 *
°ªam
,

138 
Àvñ
,

139 *
evít
)

141 
˛õ¡_íåy
 *
˚
;

142 
˛õ¡_íåy
 *
˚_√xt
;

143 
˛õ¡_subs¸ùti⁄
 *
su
;

144 
h™dÀ_subs¸ùti⁄
 *
hs
;

145 
ªtvÆ
 = -1;

147 
	`˛ic⁄_debug
(2, "%†%s", 
__FUNCTION__
, 
°ªam
);

149 
˚
 = 
	`backíd_˛õ¡_li°
(
h
); ce; cê
˚_√xt
){

150 
˚_√xt
 = 
˚
->ce_next;

151 
su
 = 
˚
->
˚_subs¸ùti⁄
; su; su = su->
su_√xt
)

152 i‡(
	`°rcmp
(
su
->
su_°ªam
, 
°ªam
) == 0){

153 i‡(
	`°æí
(
su
->
su_fûãr
)==0 || 
	`‚m©ch
(su->su_fûãr, 
evít
, 0) == 0){

154 i‡(
	`£nd_msg_nŸify
(
˚
->
˚_s
, 
Àvñ
, 
evít
) < 0){

155 i‡(
î∫o
 =
ECONNRESET
 ||Éºnÿ=
EPIPE
){

156 
	`˛ic⁄_log
(
LOG_WARNING
, "˛õ¡ %dÑe£t", 
˚
->
˚_ƒ
);

164 
	`backíd_˛õ¡_rm
(
h
, 
˚
);

168 
d⁄e
;

174 
hs
 = 
NULL
;

175 (
hs
 = 
	`subs¸ùti⁄_óch
(
h
, hs)Ë!
NULL
){

176 i‡(
hs
->
hs_f‹m©
 !
FORMAT_TEXT
)

178 i‡(
	`°rcmp
(
hs
->
hs_°ªam
, 
°ªam
))

180 i‡(
hs
->
hs_fûãr
==
NULL
 ||

181 
	`°æí
(
hs
->
hs_fûãr
)==0 ||

182 
	`‚m©ch
(
hs
->
hs_fûãr
, 
evít
, 0) == 0)

183 i‡((*
hs
->
hs_‚
)(
h
, 
evít
, hs->
hs_¨g
) < 0)

184 
d⁄e
;

186 
ªtvÆ
 = 0;

187 
d⁄e
:

188  
ªtvÆ
;

189 
	}
}

205 
	$backíd_nŸify_xml
(
˛ic⁄_h™dÀ
 
h
,

206 *
°ªam
,

207 
Àvñ
,

208 
cxobj
 *
x
)

210 
˛õ¡_íåy
 *
˚
;

211 
˛õ¡_íåy
 *
˚_√xt
;

212 
˛õ¡_subs¸ùti⁄
 *
su
;

213 
ªtvÆ
 = -1;

214 
cbuf
 *
cb
 = 
NULL
;

215 
h™dÀ_subs¸ùti⁄
 *
hs
;

217 
	`˛ic⁄_debug
(1, "%†%s", 
__FUNCTION__
, 
°ªam
);

219 
˚
 = 
	`backíd_˛õ¡_li°
(
h
); ce; cê
˚_√xt
){

220 
˚_√xt
 = 
˚
->ce_next;

221 
su
 = 
˚
->
˚_subs¸ùti⁄
; su; su = su->
su_√xt
)

222 i‡(
	`°rcmp
(
su
->
su_°ªam
, 
°ªam
) == 0){

223 i‡(
	`°æí
(
su
->
su_fûãr
)==0 || 
	`x∑th_fú°
(
x
, su->su_fûãrË!
NULL
){

224 i‡(
cb
==
NULL
){

225 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
){

226 
	`˛ic⁄_îr
(
OE_PLUGIN
, 
î∫o
, "cbuf_new");

227 
d⁄e
;

229 i‡(
	`˛ic⁄_xml2cbuf
(
cb
, 
x
, 0, 0) < 0)

230 
d⁄e
;

232 i‡(
	`£nd_msg_nŸify
(
˚
->
˚_s
, 
Àvñ
, 
	`cbuf_gë
(
cb
)) < 0){

233 i‡(
î∫o
 =
ECONNRESET
 ||Éºnÿ=
EPIPE
){

234 
	`˛ic⁄_log
(
LOG_WARNING
, "˛õ¡ %dÑe£t", 
˚
->
˚_ƒ
);

242 
	`backíd_˛õ¡_rm
(
h
, 
˚
);

246 
d⁄e
;

252 
hs
 = 
NULL
;

253 (
hs
 = 
	`subs¸ùti⁄_óch
(
h
, hs)Ë!
NULL
){

254 i‡(
hs
->
hs_f‹m©
 !
FORMAT_XML
)

256 i‡(
	`°rcmp
(
hs
->
hs_°ªam
, 
°ªam
))

258 i‡(
	`°æí
(
hs
->
hs_fûãr
)==0 || 
	`x∑th_fú°
(
x
, hs->hs_fûãrË!
NULL
){

259 i‡((*
hs
->
hs_‚
)(
h
, 
x
, hs->
hs_¨g
) < 0)

260 
d⁄e
;

263 
ªtvÆ
 = 0;

264 
d⁄e
:

265 i‡(
cb
)

266 
	`cbuf_‰ì
(
cb
);

267  
ªtvÆ
;

269 
	}
}

277 
˛õ¡_íåy
 *

278 
	$backíd_˛õ¡_add
(
˛ic⁄_h™dÀ
 
h
,

279 
sockaddr
 *
addr
)

281 
backíd_h™dÀ
 *
bh
 = 
	`h™dÀ
(
h
);

282 
˛õ¡_íåy
 *
˚
;

284 i‡((
˚
 = (
˛õ¡_íåy
 *)
	`mÆloc
((*˚))Ë=
NULL
){

285 
	`˛ic⁄_îr
(
OE_PLUGIN
, 
î∫o
, "malloc");

286  
NULL
;

288 
	`mem£t
(
˚
, 0, (*ce));

289 
˚
->
˚_ƒ
 = 
bh
->
bh_˚_ƒ
++;

290 
	`mem˝y
(&
˚
->
˚_addr
, 
addr
, (*addr));

291 
˚
->
˚_√xt
 = 
bh
->
bh_˚_li°
;

292 
bh
->
bh_˚_li°
 = 
˚
;

293  
˚
;

294 
	}
}

300 
˛õ¡_íåy
 *

301 
	$backíd_˛õ¡_li°
(
˛ic⁄_h™dÀ
 
h
)

303 
backíd_h™dÀ
 *
bh
 = 
	`h™dÀ
(
h
);

305  
bh
->
bh_˚_li°
;

306 
	}
}

314 
	$backíd_˛õ¡_dñëe
(
˛ic⁄_h™dÀ
 
h
,

315 
˛õ¡_íåy
 *
˚
)

317 
˛õ¡_íåy
 *
c
;

318 
˛õ¡_íåy
 **
˚_¥ev
;

319 
backíd_h™dÀ
 *
bh
 = 
	`h™dÀ
(
h
);

321 
˚_¥ev
 = &
bh
->
bh_˚_li°
;

322 
c
 = *
˚_¥ev
; c; c = c->
˚_√xt
){

323 i‡(
c
 =
˚
){

324 *
˚_¥ev
 = 
c
->
˚_√xt
;

325 
	`‰ì
(
˚
);

328 
˚_¥ev
 = &
c
->
˚_√xt
;

331 
	}
}

344 
h™dÀ_subs¸ùti⁄
 *

345 
	$subs¸ùti⁄_add
(
˛ic⁄_h™dÀ
 
h
,

346 *
°ªam
,

347 
f‹m©_íum
 
f‹m©
,

348 *
fûãr
,

349 
subs¸ùti⁄_‚_t
 
‚
,

350 *
¨g
)

352 
backíd_h™dÀ
 *
bh
 = 
	`h™dÀ
(
h
);

353 
h™dÀ_subs¸ùti⁄
 *
hs
 = 
NULL
;

355 i‡((
hs
 = 
	`mÆloc
((*hs))Ë=
NULL
){

356 
	`˛ic⁄_îr
(
OE_PLUGIN
, 
î∫o
, "malloc");

357 
d⁄e
;

359 
	`mem£t
(
hs
, 0, (*hs));

360 
hs
->
hs_°ªam
 = 
	`°rdup
(
°ªam
);

361 
hs
->
hs_f‹m©
 = 
f‹m©
;

362 
hs
->
hs_fûãr
 = 
fûãr
?
	`°rdup
(fûãr):
NULL
;

363 
hs
->
hs_√xt
 = 
bh
->
bh_subs¸ùti⁄
;

364 
hs
->
hs_‚
 = 
‚
;

365 
hs
->
hs_¨g
 = 
¨g
;

366 
bh
->
bh_subs¸ùti⁄
 = 
hs
;

367 
d⁄e
:

368  
hs
;

369 
	}
}

381 
	$subs¸ùti⁄_dñëe
(
˛ic⁄_h™dÀ
 
h
,

382 *
°ªam
,

383 
subs¸ùti⁄_‚_t
 
‚
,

384 *
¨g
)

386 
backíd_h™dÀ
 *
bh
 = 
	`h™dÀ
(
h
);

387 
h™dÀ_subs¸ùti⁄
 *
hs
;

388 
h™dÀ_subs¸ùti⁄
 **
hs_¥ev
;

390 
hs_¥ev
 = &
bh
->
bh_subs¸ùti⁄
;

391 
hs
 = *
hs_¥ev
; hs; h†hs->
hs_√xt
){

393 i‡(
	`°rcmp
(
hs
->
hs_°ªam
, 
°ªam
)==0 && hs->
hs_‚
 =
‚
){

394 *
hs_¥ev
 = 
hs
->
hs_√xt
;

395 
	`‰ì
(
hs
->
hs_°ªam
);

396 i‡(
hs
->
hs_fûãr
)

397 
	`‰ì
(
hs
->
hs_fûãr
);

398 i‡(
hs
->
hs_¨g
)

399 
	`‰ì
(
hs
->
hs_¨g
);

400 
	`‰ì
(
hs
);

403 
hs_¥ev
 = &
hs
->
hs_√xt
;

406 
	}
}

424 
h™dÀ_subs¸ùti⁄
 *

425 
	$subs¸ùti⁄_óch
(
˛ic⁄_h™dÀ
 
h
,

426 
h™dÀ_subs¸ùti⁄
 *
h¥ev
)

428 
backíd_h™dÀ
 *
bh
 = 
	`h™dÀ
(
h
);

429 
h™dÀ_subs¸ùti⁄
 *
hs
 = 
NULL
;

431 i‡(
h¥ev
)

432 
hs
 = 
h¥ev
->
hs_√xt
;

434 
hs
 = 
bh
->
bh_subs¸ùti⁄
;

435  
hs
;

436 
	}
}

439 
	$backíd_«cm_li°_£t
(
˛ic⁄_h™dÀ
 
h
,

440 
cxobj
 *
x«cm
)

442 
backíd_h™dÀ
 *
bh
 = 
	`h™dÀ
(
h
);

444 i‡(
bh
->
bh_«cm
)

445 
	`xml_‰ì
(
bh
->
bh_«cm
);

446 
bh
->
bh_«cm
 = 
x«cm
;

448 
	}
}

450 
cxobj
 *

451 
	$backíd_«cm_li°_gë
(
˛ic⁄_h™dÀ
 
h
)

453 
backíd_h™dÀ
 *
bh
 = 
	`h™dÀ
(
h
);

455  
bh
->
bh_«cm
;

456 
	}
}

	@clixon-master/apps/backend/clixon_backend_handle.h

40 #i‚de‡
_CLIXON_BACKEND_HANDLE_H_


41 
	#_CLIXON_BACKEND_HANDLE_H_


	)

47 (*
	tsubs¸ùti⁄_‚_t
)(
	t˛ic⁄_h™dÀ
, *
	tfûãr
, *
	t¨g
);

52 
	sh™dÀ_subs¸ùti⁄
{

53 
h™dÀ_subs¸ùti⁄
 *
hs_√xt
;

54 
f‹m©_íum
 
hs_f‹m©
;

55 *
hs_°ªam
;

56 *
hs_fûãr
;

57 
subs¸ùti⁄_‚_t
 
hs_‚
;

58 *
hs_¨g
;

65 
	`backíd_nŸify
(
˛ic⁄_h™dÀ
 
h
, *
°ªam
, 
Àvñ
, *
txt
);

66 
	`backíd_nŸify_xml
(
˛ic⁄_h™dÀ
 
h
, *
°ªam
, 
Àvñ
, 
cxobj
 *
x
);

69 
h™dÀ_subs¸ùti⁄
 *
	`subs¸ùti⁄_add
(
˛ic⁄_h™dÀ
 
h
, *
°ªam
,

70 
f‹m©_íum
 
f‹m©
, *
fûãr
,

71 
subs¸ùti⁄_‚_t
 
‚
, *
¨g
);

73 
	`subs¸ùti⁄_dñëe
(
˛ic⁄_h™dÀ
 
h
, *
°ªam
,

74 
subs¸ùti⁄_‚_t
 
‚
, *
¨g
);

76 
h™dÀ_subs¸ùti⁄
 *
	`subs¸ùti⁄_óch
(
˛ic⁄_h™dÀ
 
h
,

77 
h™dÀ_subs¸ùti⁄
 *
h¥ev
);

	@clixon-master/apps/backend/clixon_backend_transaction.c

38 #ifde‡
HAVE_CONFIG_H


39 
	~"˛ix⁄_c⁄fig.h
"

42 
	~<°dio.h
>

43 
	~<°d¨g.h
>

44 
	~<°rög.h
>

45 
	~<°dlib.h
>

46 
	~<öây≥s.h
>

47 
	~<dúít.h
>

48 
	~<î∫o.h
>

49 
	~<˘y≥.h
>

50 
	~<sys/ty≥s.h
>

51 
	~<ªgex.h
>

52 
	~<√töë/ö.h
>

53 
	~<limôs.h
>

56 
	~<˛igí/˛igí.h
>

59 
	~<˛ix⁄/˛ix⁄.h
>

61 
	~"˛ix⁄_backíd_å™ß˘i⁄.h
"

62 
	~"backíd_∂ugö.h
"

73 
uöt64_t


74 
	$å™ß˘i⁄_id
(
å™ß˘i⁄_d©a
 
td
)

76  ((
å™ß˘i⁄_d©a_t
 *)
td
)->
td_id
;

77 
	}
}

85 
	$å™ß˘i⁄_¨g
(
å™ß˘i⁄_d©a
 
td
)

87  ((
å™ß˘i⁄_d©a_t
 *)
td
)->
td_¨g
;

88 
	}
}

94 
cxobj
 *

95 
	$å™ß˘i⁄_§c
(
å™ß˘i⁄_d©a
 
td
)

97  ((
å™ß˘i⁄_d©a_t
 *)
td
)->
td_§c
;

98 
	}
}

104 
cxobj
 *

105 
	$å™ß˘i⁄_èrgë
(
å™ß˘i⁄_d©a
 
td
)

107  ((
å™ß˘i⁄_d©a_t
 *)
td
)->
td_èrgë
;

108 
	}
}

114 
cxobj
 **

115 
	$å™ß˘i⁄_dvec
(
å™ß˘i⁄_d©a
 
td
)

117  ((
å™ß˘i⁄_d©a_t
 *)
td
)->
td_dvec
;

118 
	}
}

125 
size_t


126 
	$å™ß˘i⁄_dÀn
(
å™ß˘i⁄_d©a
 
td
)

128  ((
å™ß˘i⁄_d©a_t
 *)
td
)->
td_dÀn
;

129 
	}
}

135 
cxobj
 **

136 
	$å™ß˘i⁄_avec
(
å™ß˘i⁄_d©a
 
td
)

138  ((
å™ß˘i⁄_d©a_t
 *)
td
)->
td_avec
;

139 
	}
}

146 
size_t


147 
	$å™ß˘i⁄_Æí
(
å™ß˘i⁄_d©a
 
td
)

149  ((
å™ß˘i⁄_d©a_t
 *)
td
)->
td_Æí
;

150 
	}
}

160 
cxobj
 **

161 
	$å™ß˘i⁄_scvec
(
å™ß˘i⁄_d©a
 
td
)

163  ((
å™ß˘i⁄_d©a_t
 *)
td
)->
td_scvec
;

164 
	}
}

174 
cxobj
 **

175 
	$å™ß˘i⁄_tcvec
(
å™ß˘i⁄_d©a
 
td
)

177  ((
å™ß˘i⁄_d©a_t
 *)
td
)->
td_tcvec
;

178 
	}
}

185 
size_t


186 
	$å™ß˘i⁄_˛í
(
å™ß˘i⁄_d©a
 
td
)

188  ((
å™ß˘i⁄_d©a_t
 *)
td
)->
td_˛í
;

189 
	}
}

192 
	$å™ß˘i⁄_¥öt
(
FILE
 *
f
,

193 
å™ß˘i⁄_d©a
 
th
)

195 
cxobj
 *
xn
;

196 
i
;

197 
å™ß˘i⁄_d©a_t
 *
td
;

199 
td
 = (
å™ß˘i⁄_d©a_t
 *)
th
;

201 
	`Ârötf
(
f
, "Tønß˘i⁄ id: 0x%" 
PRIu64
 "\n", 
td
->
td_id
);

202 
	`Ârötf
(
f
, "Removed\n=========\n");

203 
i
=0; i<
td
->
td_dÀn
; i++){

204 
xn
 = 
td
->
td_dvec
[
i
];

205 
	`xml_¥öt
(
f
, 
xn
);

207 
	`Ârötf
(
f
, "Added\n=========\n");

208 
i
=0; i<
td
->
td_Æí
; i++){

209 
xn
 = 
td
->
td_avec
[
i
];

210 
	`xml_¥öt
(
f
, 
xn
);

212 
	`Ârötf
(
°dîr
, "Changed\n=========\n");

213 
i
=0; i<
td
->
td_˛í
; i++){

214 
xn
 = 
td
->
td_scvec
[
i
];

215 
	`xml_¥öt
(
f
, 
xn
);

216 
xn
 = 
td
->
td_tcvec
[
i
];

217 
	`xml_¥öt
(
f
, 
xn
);

220 
	}
}

	@clixon-master/apps/backend/clixon_backend_transaction.h

40 #i‚de‡
_CLIXON_BACKEND_TRANSACTION_H_


41 
	#_CLIXON_BACKEND_TRANSACTION_H_


	)

50 
uöt64_t
 
å™ß˘i⁄_id
(
å™ß˘i⁄_d©a
 
td
);

51 *
å™ß˘i⁄_¨g
(
å™ß˘i⁄_d©a
 
td
);

52 
cxobj
 *
å™ß˘i⁄_§c
(
å™ß˘i⁄_d©a
 
td
);

53 
cxobj
 *
å™ß˘i⁄_èrgë
(
å™ß˘i⁄_d©a
 
td
);

54 
cxobj
 **
å™ß˘i⁄_dvec
(
å™ß˘i⁄_d©a
 
td
);

55 
size_t
 
å™ß˘i⁄_dÀn
(
å™ß˘i⁄_d©a
 
td
);

56 
cxobj
 **
å™ß˘i⁄_avec
(
å™ß˘i⁄_d©a
 
td
);

57 
size_t
 
å™ß˘i⁄_Æí
(
å™ß˘i⁄_d©a
 
td
);

58 
cxobj
 **
å™ß˘i⁄_scvec
(
å™ß˘i⁄_d©a
 
td
);

59 
cxobj
 **
å™ß˘i⁄_tcvec
(
å™ß˘i⁄_d©a
 
td
);

60 
size_t
 
å™ß˘i⁄_˛í
(
å™ß˘i⁄_d©a
 
td
);

62 
å™ß˘i⁄_¥öt
(
FILE
 *
f
, 
å™ß˘i⁄_d©a
 
th
);

	@clixon-master/apps/backend/test.c

1 
	$maö
(){
	}
}

	@clixon-master/apps/cli/cli_common.c

37 #ifde‡
HAVE_CONFIG_H


38 
	~"˛ix⁄_c⁄fig.h
"

41 
	~<°dlib.h
>

42 
	~<°dio.h
>

43 
	~<°rög.h
>

44 
	~<sig«l.h
>

45 
	~<î∫o.h
>

46 
	~<°d¨g.h
>

47 
	~<time.h
>

48 
	~<˘y≥.h
>

50 
	~<uni°d.h
>

51 #ifde‡
HAVE_CRYPT_H


52 
	~<¸y±.h
>

54 
	~<dúít.h
>

55 
	~<sy¶og.h
>

56 
	~<¨∑/öë.h
>

57 
	~<√töë/ö.h
>

58 
	~<sys/ty≥s.h
>

59 
	~<sys/°©.h
>

60 
	~<f˙é.h
>

61 
	~<sys/waô.h
>

62 
	~<sys/∑øm.h
>

63 
	~<sys/mou¡.h
>

64 
	~<pwd.h
>

65 
	~<as£π.h
>

68 
	~<˛igí/˛igí.h
>

71 
	~<˛ix⁄/˛ix⁄.h
>

73 
	~"˛ix⁄_˛i_≠i.h
"

75 
	~"˛i_comm⁄.h
"

88 
	$˛i_nŸifiˇti⁄_ªgi°î
(
˛ic⁄_h™dÀ
 
h
,

89 *
°ªam
,

90 
f‹m©_íum
 
f‹m©
,

91 *
fûãr
,

92 
°©us
,

93 (*
‚
)(, *),

94 *
¨g
)

96 
ªtvÆ
 = -1;

97 *
log«me
 = 
NULL
;

98 *
p
;

99 
s
;

100 
˛ic⁄_hash_t
 *
cd©
 = 
	`˛ic⁄_d©a
(
h
);

101 
size_t
 
Àn
;

102 
s_exi°
 = -1;

104 
Àn
 = 
	`°æí
("log_sockë_"Ë+ såÀn(
°ªam
) + 1;

105 i‡((
log«me
 = 
	`mÆloc
(
Àn
)Ë=
NULL
){

106 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "malloc");

107 
d⁄e
;

109 
	`¢¥ötf
(
log«me
, 
Àn
, "log_sockë_%s", 
°ªam
);

110 i‡((
p
 = 
	`hash_vÆue
(
cd©
, 
log«me
, &
Àn
)Ë!
NULL
)

111 
s_exi°
 = *(*)
p
;

113 i‡(
°©us
){

114 i‡(
s_exi°
!=-1){

115 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "ResultÜog socketálreadyÉxists");

116 
d⁄e
;

118 i‡(
	`˛ic⁄_Ωc_¸óã_subs¸ùti⁄
(
h
, 
°ªam
, 
fûãr
, &
s
) < 0)

119 
d⁄e
;

120 i‡(
	`˛igí_ªgfd
(
s
, 
‚
, 
¨g
) < 0)

121 
d⁄e
;

122 i‡(
	`hash_add
(
cd©
, 
log«me
, &
s
, (s)Ë=
NULL
)

123 
d⁄e
;

126 i‡(
s_exi°
 != -1){

127 
	`˛igí_uƒegfd
(
s_exi°
);

129 
	`hash_dñ
(
cd©
, 
log«me
);

131 i‡(
	`˛ic⁄_Ωc_¸óã_subs¸ùti⁄
(
h
, 
°©us
, 
°ªam
, 
f‹m©
, 
fûãr
, 
NULL
) < 0)

132 
d⁄e
;

135 
ªtvÆ
 = 0;

136 
d⁄e
:

137 i‡(
log«me
)

138 
	`‰ì
(
log«me
);

139  
ªtvÆ
;

140 
	}
}

144 
	$˛i_sig«l_block
(
˛ic⁄_h™dÀ
 
h
)

146 
	`˛ic⁄_sig«l_block
 (
SIGTSTP
);

147 
	`˛ic⁄_sig«l_block
 (
SIGQUIT
);

148 
	`˛ic⁄_sig«l_block
 (
SIGCHLD
);

149 i‡(!
	`˛ic⁄_quõt_mode
(
h
))

150 
	`˛ic⁄_sig«l_block
 (
SIGINT
);

151 
	}
}

154 
	$˛i_sig«l_unblock
(
˛ic⁄_h™dÀ
 
h
)

156 
	`˛ic⁄_sig«l_unblock
 (
SIGTSTP
);

157 
	`˛ic⁄_sig«l_unblock
 (
SIGQUIT
);

158 
	`˛ic⁄_sig«l_unblock
 (
SIGCHLD
);

159 
	`˛ic⁄_sig«l_unblock
 (
SIGINT
);

160 
	}
}

166 
	$˛i_sig«l_Êush
(
˛ic⁄_h™dÀ
 
h
)

170 
sig‚_t
 
h1
, 
h2
, 
h3
, 
h4
;

172 
	`£t_sig«l
 (
SIGTSTP
, 
SIG_IGN
, &
h1
);

173 
	`£t_sig«l
 (
SIGQUIT
, 
SIG_IGN
, &
h2
);

174 
	`£t_sig«l
 (
SIGCHLD
, 
SIG_IGN
, &
h3
);

175 
	`£t_sig«l
 (
SIGINT
, 
SIG_IGN
, &
h4
);

177 
	`˛i_sig«l_unblock
 (
h
);

179 
	`£t_sig«l
 (
SIGTSTP
, 
h1
, 
NULL
);

180 
	`£t_sig«l
 (
SIGQUIT
, 
h2
, 
NULL
);

181 
	`£t_sig«l
 (
SIGCHLD
, 
h3
, 
NULL
);

182 
	`£t_sig«l
 (
SIGINT
, 
h4
, 
NULL
);

184 
	`˛i_sig«l_block
 (
h
);

185 
	}
}

203 
	$˛i_dbxml
(
˛ic⁄_h™dÀ
 
h
,

204 
cvec
 *
cvv
,

205 
cvec
 *
¨gv
,

206 
›î©i⁄_ty≥
 
›
)

208 
ªtvÆ
 = -1;

209 *
°r
 = 
NULL
;

210 *
≠i_∑th_fmt
;

211 *
≠i_∑th
 = 
NULL
;

212 
cg_v¨
 *
cvÆ
;

213 
Àn
;

214 
cg_v¨
 *
¨g
;

215 
cbuf
 *
cb
 = 
NULL
;

216 
y™g_•ec
 *
y•ec
;

217 
cxobj
 *
xbŸ
 = 
NULL
;

218 
y™g_node
 *
y
 = 
NULL
;

219 
cxobj
 *
xt›
 = 
NULL
;

220 
cxobj
 *
xa
;

221 
cxobj
 *
xb
;

223 i‡(
	`cvec_Àn
(
¨gv
) != 1){

224 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "%s: Requúe†⁄êñemíàtÿbêxm»key f‹m© såög", 
__FUNCTION__
);

225 
d⁄e
;

227 i‡((
y•ec
 = 
	`˛ic⁄_db•ec_y™g
(
h
)Ë=
NULL
){

228 
	`˛ic⁄_îr
(
OE_FATAL
, 0, "No DB_SPEC");

229 
d⁄e
;

231 
¨g
 = 
	`cvec_i
(
¨gv
, 0);

232 
≠i_∑th_fmt
 = 
	`cv_°rög_gë
(
¨g
);

233 i‡(
	`≠i_∑th_fmt2≠i_∑th
(
≠i_∑th_fmt
, 
cvv
, &
≠i_∑th
) < 0)

234 
d⁄e
;

236 i‡((
xt›
 = 
	`xml_√w
("c⁄fig", 
NULL
, NULL)) == NULL)

237 
d⁄e
;

238 
xbŸ
 = 
xt›
;

239 i‡(
≠i_∑th
 && 
	`≠i_∑th2xml
◊pi_∑th, 
y•ec
, 
xt›
, 
YC_DATANODE
, &
xbŸ
, &
y
) < 0)

240 
d⁄e
;

241 i‡((
xa
 = 
	`xml_√w
("›î©i⁄", 
xbŸ
, 
NULL
)) == NULL)

242 
d⁄e
;

243 
	`xml_ty≥_£t
(
xa
, 
CX_ATTR
);

244 i‡(
	`xml_vÆue_£t
(
xa
, 
	`xml_›î©i⁄2°r
(
›
)) < 0)

245 
d⁄e
;

246 i‡(
y
->
yn_keyw‹d
 !
Y_LIST
 && y->yn_keyw‹d !
Y_LEAF_LIST
){

247 
Àn
 = 
	`cvec_Àn
(
cvv
);

248 i‡(
Àn
 > 1){

249 
cvÆ
 = 
	`cvec_i
(
cvv
, 
Àn
-1);

250 i‡((
°r
 = 
	`cv2°r_dup
(
cvÆ
)Ë=
NULL
){

251 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "cv2str_dup");

252 
d⁄e
;

254 i‡((
xb
 = 
	`xml_√w
("body", 
xbŸ
, 
NULL
)) == NULL)

255 
d⁄e
;

256 
	`xml_ty≥_£t
(
xb
, 
CX_BODY
);

257 i‡(
	`xml_vÆue_£t
(
xb
, 
°r
) < 0)

258 
d⁄e
;

261 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
){

262 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cbuf_new");

263 
d⁄e
;

265 i‡(
	`˛ic⁄_xml2cbuf
(
cb
, 
xt›
, 0, 0) < 0)

266 
d⁄e
;

267 i‡(
	`˛ic⁄_Ωc_edô_c⁄fig
(
h
, "ˇndid©e", 
OP_NONE
, 
	`cbuf_gë
(
cb
)) < 0)

268 
d⁄e
;

269 i‡(
	`˛ic⁄_autocommô
(
h
)) {

270 i‡(
	`˛ic⁄_Ωc_commô
(
h
) < 0)

271 
d⁄e
;

273 
ªtvÆ
 = 0;

274 
d⁄e
:

275 i‡(
cb
)

276 
	`cbuf_‰ì
(
cb
);

277 i‡(
°r
)

278 
	`‰ì
(
°r
);

279 i‡(
≠i_∑th
)

280 
	`‰ì
(
≠i_∑th
);

281 i‡(
xt›
)

282 
	`xml_‰ì
(
xt›
);

283  
ªtvÆ
;

284 
	}
}

287 
	$˛i_£t
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
cvv
, cve¯*
¨gv
)

289 
ªtvÆ
 = 1;

291 i‡(
	`˛i_dbxml
(
h
, 
cvv
, 
¨gv
, 
OP_REPLACE
) < 0)

292 
d⁄e
;

293 
ªtvÆ
 = 0;

294 
d⁄e
:

295  
ªtvÆ
;

296 
	}
}

297 
	$˛i_£tv
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
)

299  
	`˛i_£t
(
h
, 
v¨s
, 
¨gv
);

300 
	}
}

303 
	$˛i_mîge
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
cvv
, cve¯*
¨gv
)

305 
ªtvÆ
 = -1;

307 i‡(
	`˛i_dbxml
(
h
, 
cvv
, 
¨gv
, 
OP_MERGE
) < 0)

308 
d⁄e
;

309 
ªtvÆ
 = 0;

310 
d⁄e
:

311  
ªtvÆ
;

312 
	}
}

313 
	$˛i_mîgev
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
)

315  
	`˛i_mîge
(
h
, 
v¨s
, 
¨gv
);

316 
	}
}

319 
	$˛i_¸óã
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
cvv
, cve¯*
¨gv
)

321 
ªtvÆ
 = -1;

323 i‡(
	`˛i_dbxml
(
h
, 
cvv
, 
¨gv
, 
OP_CREATE
) < 0)

324 
d⁄e
;

325 
ªtvÆ
 = 0;

326 
d⁄e
:

327  
ªtvÆ
;

328 
	}
}

333 
	$˛i_ªmove
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
cvv
, cve¯*
¨gv
)

335 
ªtvÆ
 = -1;

337 i‡(
	`˛i_dbxml
(
h
, 
cvv
, 
¨gv
, 
OP_REMOVE
) < 0)

338 
d⁄e
;

339 
ªtvÆ
 = 0;

340 
d⁄e
:

341  
ªtvÆ
;

342 
	}
}

345 
	$˛i_dñ
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
cvv
, cve¯*
¨gv
)

347 
ªtvÆ
 = -1;

349 i‡(
	`˛i_dbxml
(
h
, 
cvv
, 
¨gv
, 
OP_REMOVE
) < 0)

350 
d⁄e
;

351 
ªtvÆ
 = 0;

352 
d⁄e
:

353  
ªtvÆ
;

354 
	}
}

355 
	$˛i_dñv
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
)

357  
	`˛i_dñ
(
h
, 
v¨s
, 
¨gv
);

358 
	}
}

369 
	$˛i_debug_˛i
(
˛ic⁄_h™dÀ
 
h
,

370 
cvec
 *
v¨s
,

371 
cvec
 *
¨gv
)

373 
ªtvÆ
 = -1;

374 
cg_v¨
 *
cv
;

375 
Àvñ
;

377 i‡((
cv
 = 
	`cvec_föd_v¨
(
v¨s
, "Àvñ")Ë=
NULL
){

378 i‡(
	`cvec_Àn
(
¨gv
) != 1){

379 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "%s: Requúe†eôhîÜabñ v¨ o∏sögÀárg: 0|1", 
__FUNCTION__
);

380 
d⁄e
;

382 
cv
 = 
	`cvec_i
(
¨gv
, 0);

384 
Àvñ
 = 
	`cv_öt32_gë
(
cv
);

386 
	`˛ic⁄_debug_öô
(
Àvñ
, 
NULL
);

387 
ªtvÆ
 = 0;

388 
d⁄e
:

389  
ªtvÆ
;

390 
	}
}

391 
	$˛i_debug_˛iv
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
)

393  
	`˛i_debug_˛i
(
h
, 
v¨s
, 
¨gv
);

394 
	}
}

404 
	$˛i_debug_backíd
(
˛ic⁄_h™dÀ
 
h
,

405 
cvec
 *
v¨s
,

406 
cvec
 *
¨gv
)

408 
ªtvÆ
 = -1;

409 
cg_v¨
 *
cv
;

410 
Àvñ
;

412 i‡((
cv
 = 
	`cvec_föd_v¨
(
v¨s
, "Àvñ")Ë=
NULL
){

413 i‡(
	`cvec_Àn
(
¨gv
) != 1){

414 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "%s: Requúe†eôhîÜabñ v¨ o∏sögÀárg: 0|1", 
__FUNCTION__
);

415 
d⁄e
;

417 
cv
 = 
	`cvec_i
(
¨gv
, 0);

419 
Àvñ
 = 
	`cv_öt32_gë
(
cv
);

421 
ªtvÆ
 = 
	`˛ic⁄_Ωc_debug
(
h
, 
Àvñ
);

422 
d⁄e
:

423  
ªtvÆ
;

424 
	}
}

425 
	$˛i_debug_backídv
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
)

427  
	`˛i_debug_backíd
(
h
, 
v¨s
, 
¨gv
);

428 
	}
}

433 
	$˛i_£t_mode
(
˛ic⁄_h™dÀ
 
h
,

434 
cvec
 *
v¨s
,

435 
cvec
 *
¨gv
)

437 
ªtvÆ
 = -1;

438 *
°r
 = 
NULL
;

440 i‡(
	`cvec_Àn
(
¨gv
) != 1){

441 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "%s: Requúe†⁄êñemíàtÿbê˛òmode", 
__FUNCTION__
);

442 
d⁄e
;

444 
°r
 = 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
, 0));

445 
	`˛i_£t_sy¡ax_mode
(
h
, 
°r
);

446 
ªtvÆ
 = 0;

447 
d⁄e
:

448  
ªtvÆ
;

449 
	}
}

450 
	$˛i_£t_modev
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
)

452  
	`˛i_£t_mode
(
h
, 
v¨s
, 
¨gv
);

453 
	}
}

459 
	$˛i_°¨t_shñl
(
˛ic⁄_h™dÀ
 
h
,

460 
cvec
 *
v¨s
,

461 
cvec
 *
¨gv
)

463 *
cmd
;

464 
∑sswd
 *
pw
;

465 
ªtvÆ
;

466 
bcmd
[128];

467 
cg_v¨
 *
cv1
 = 
	`cvec_i
(
v¨s
, 1);

469 
cmd
 = (
	`cvec_Àn
(
v¨s
)>1 ? 
	`cv_°rög_gë
(
cv1
Ë: 
NULL
);

471 i‡((
pw
 = 
	`gëpwuid
(
	`gëuid
())Ë=
NULL
){

472 
	`Ârötf
(
°dîr
, "%s: getpwuid: %s\n",

473 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

476 i‡(
	`chdú
(
pw
->
pw_dú
) < 0){

477 
	`Ârötf
(
°dîr
, "%s: chdir(%s): %s\n",

478 
__FUNCTION__
, 
pw
->
pw_dú
, 
	`°ªº‹
(
î∫o
));

479 
	`ídpwít
();

482 
	`ídpwít
();

483 
	`˛i_sig«l_Êush
(
h
);

484 
	`˛i_sig«l_unblock
(
h
);

485 i‡(
cmd
){

486 
	`¢¥ötf
(
bcmd
, 128, "bash -»-¯\"%s\"", 
cmd
);

487 i‡((
ªtvÆ
 = 
	`sy°em
(
bcmd
)) < 0){

488 
	`˛i_sig«l_block
(
h
);

489 
	`Ârötf
(
°dîr
, "%s: system(bash -c): %s\n",

490 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

495 i‡((
ªtvÆ
 = 
	`sy°em
("bash -l")) < 0){

496 
	`˛i_sig«l_block
(
h
);

497 
	`Ârötf
(
°dîr
, "%s: system(bash): %s\n",

498 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

501 
	`˛i_sig«l_block
(
h
);

503 i‡(
ªtvÆ
 != 0){

504 
	`Ârötf
(
°dîr
, "%s: sy°em(%sËcode=%d\n", 
__FUNCTION__
, 
cmd
, 
ªtvÆ
);

510 
	}
}

511 
	$˛i_°¨t_shñlv
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
)

513  
	`˛i_°¨t_shñl
(
h
, 
v¨s
, 
¨gv
);

514 
	}
}

519 
	$˛i_quô
(
˛ic⁄_h™dÀ
 
h
,

520 
cvec
 *
v¨s
,

521 
cvec
 *
¨gv
)

523 
	`˛igí_exôög_£t
(
	`˛i_˛igí
(
h
), 1);

525 
	}
}

526 
	$˛i_quôv
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
)

528  
	`˛i_quô
(
h
, 
v¨s
, 
¨gv
);

529 
	}
}

535 
	$˛i_commô
(
˛ic⁄_h™dÀ
 
h
,

536 
cvec
 *
v¨s
,

537 
cvec
 *
¨gv
)

539 
ªtvÆ
 = -1;

541 i‡((
ªtvÆ
 = 
	`˛ic⁄_Ωc_commô
(
h
)) < 0)

542 
d⁄e
;

543 
ªtvÆ
 = 0;

544 
d⁄e
:

545  
ªtvÆ
;

546 
	}
}

547 
	$˛i_commôv
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
)

549  
	`˛i_commô
(
h
, 
v¨s
, 
¨gv
);

550 
	}
}

555 
	$˛i_vÆid©e
(
˛ic⁄_h™dÀ
 
h
,

556 
cvec
 *
v¨s
,

557 
cvec
 *
¨gv
)

559 
ªtvÆ
 = -1;

561 i‡((
ªtvÆ
 = 
	`˛ic⁄_Ωc_vÆid©e
(
h
, "candidate")) < 0)

562 
d⁄e
;

563 
ªtvÆ
 = 0;

564 
d⁄e
:

565  
ªtvÆ
;

566 
	}
}

567 
	$˛i_vÆid©ev
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
)

569  
	`˛i_vÆid©e
(
h
, 
v¨s
, 
¨gv
);

570 
	}
}

575 
	$com∑ª_xmls
(
cxobj
 *
xc1
,

576 
cxobj
 *
xc2
,

577 
a°ext
)

579 
fd
;

580 
FILE
 *
f
;

581 
fûíame1
[
MAXPATHLEN
];

582 
fûíame2
[
MAXPATHLEN
];

583 
cmd
[
MAXPATHLEN
];

584 
ªtvÆ
 = -1;

585 
cxobj
 *
xc
;

587 
	`¢¥ötf
(
fûíame1
, (filename1), "/tmp/cliconXXXXXX");

588 
	`¢¥ötf
(
fûíame2
, (filename2), "/tmp/cliconXXXXXX");

589 i‡((
fd
 = 
	`mk°emp
(
fûíame1
)) < 0){

590 
	`˛ic⁄_îr
(
OE_UNDEF
, 
î∫o
, "tmpfûe: %s", 
	`°ªº‹
 (errno));

591 
d⁄e
;

593 i‡((
f
 = 
	`fd›í
(
fd
, "w")Ë=
NULL
)

594 
d⁄e
;

595 
xc
 = 
NULL
;

596 i‡(
a°ext
)

597 (
xc
 = 
	`xml_chûd_óch
(
xc1
, xc, -1)Ë!
NULL
)

598 
	`xml2txt
(
f
, 
xc
, 0);

600 (
xc
 = 
	`xml_chûd_óch
(
xc1
, xc, -1)Ë!
NULL
)

601 
	`xml_¥öt
(
f
, 
xc
);

603 
	`f˛o£
(
f
);

604 
	`˛o£
(
fd
);

606 i‡((
fd
 = 
	`mk°emp
(
fûíame2
)) < 0){

607 
	`˛ic⁄_îr
(
OE_UNDEF
, 
î∫o
, "mk°emp: %s", 
	`°ªº‹
 (errno));

608 
d⁄e
;

610 i‡((
f
 = 
	`fd›í
(
fd
, "w")Ë=
NULL
)

611 
d⁄e
;

612 
xc
 = 
NULL
;

613 i‡(
a°ext
)

614 (
xc
 = 
	`xml_chûd_óch
(
xc2
, xc, -1)Ë!
NULL
)

615 
	`xml2txt
(
f
, 
xc
, 0);

617 (
xc
 = 
	`xml_chûd_óch
(
xc2
, xc, -1)Ë!
NULL
)

618 
	`xml_¥öt
(
f
, 
xc
);

619 
	`f˛o£
(
f
);

620 
	`˛o£
(
fd
);

622 
	`¢¥ötf
(
cmd
, (cmd), "/u§/bö/dif‡-dU 1 %†%†| gª∞-v @@ | sed 1,2d", 
fûíame1
, 
fûíame2
);

623 i‡(
	`sy°em
(
cmd
) < 0)

624 
d⁄e
;

626 
ªtvÆ
 = 0;

627 
d⁄e
:

628 
	`u∆ök
(
fûíame1
);

629 
	`u∆ök
(
fûíame2
);

630  
ªtvÆ
;

631 
	}
}

639 
	$com∑ª_dbs
(
˛ic⁄_h™dÀ
 
h
,

640 
cvec
 *
cvv
,

641 
cvec
 *
¨gv
)

643 
cxobj
 *
xc1
 = 
NULL
;

644 
cxobj
 *
xc2
 = 
NULL
;

645 
cxobj
 *
xîr
;

646 
ªtvÆ
 = -1;

647 
a°ext
;

649 i‡(
	`cvec_Àn
(
¨gv
) > 1){

650 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "%s: Requúe†0 o∏1ÉÀmít. I‡giví:á°exàÊag 0|1", 
__FUNCTION__
);

651 
d⁄e
;

653 i‡(
	`cvec_Àn
(
¨gv
))

654 
a°ext
 = 
	`cv_öt32_gë
(
	`cvec_i
(
¨gv
, 0));

656 
a°ext
 = 0;

657 i‡(
	`˛ic⁄_Ωc_gë_c⁄fig
(
h
, "ru¬ög", "/", &
xc1
) < 0)

658 
d⁄e
;

659 i‡((
xîr
 = 
	`x∑th_fú°
(
xc1
, "/Ωc-îr‹")Ë!
NULL
){

660 
	`˛ic⁄_Ωc_gíî©e_îr‹
("Gë c⁄figuøti⁄", 
xîr
);

661 
d⁄e
;

663 i‡(
	`˛ic⁄_Ωc_gë_c⁄fig
(
h
, "ˇndid©e", "/", &
xc2
) < 0)

664 
d⁄e
;

665 i‡((
xîr
 = 
	`x∑th_fú°
(
xc2
, "/Ωc-îr‹")Ë!
NULL
){

666 
	`˛ic⁄_Ωc_gíî©e_îr‹
("Gë c⁄figuøti⁄", 
xîr
);

667 
d⁄e
;

669 i‡(
	`com∑ª_xmls
(
xc1
, 
xc2
, 
a°ext
) < 0)

670 
d⁄e
;

671 
ªtvÆ
 = 0;

672 
d⁄e
:

673 i‡(
xc1
)

674 
	`xml_‰ì
(
xc1
);

675 i‡(
xc2
)

676 
	`xml_‰ì
(
xc2
);

678  
ªtvÆ
;

679 
	}
}

680 
	$com∑ª_dbsv
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
)

682  
	`com∑ª_dbs
(
h
, 
v¨s
, 
¨gv
);

683 
	}
}

700 
	$lﬂd_c⁄fig_fûe
(
˛ic⁄_h™dÀ
 
h
,

701 
cvec
 *
cvv
,

702 
cvec
 *
¨gv
)

704 
ªt
 = -1;

705 
°©
 
°
;

706 *
fûíame
 = 
NULL
;

707 
ª∂a˚
;

708 
cg_v¨
 *
cv
;

709 *
›°r
;

710 *
v¨°r
;

711 
fd
 = -1;

712 
cxobj
 *
xt
 = 
NULL
;

713 
cxobj
 *
x
;

714 
cbuf
 *
cbxml
;

716 i‡(
	`cvec_Àn
(
¨gv
) != 2){

717 i‡(
	`cvec_Àn
(
¨gv
)==1)

718 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "GŸ sögÀárgumít:\"%s\". Ex≥˘ed \"<v¨«me>,<›>\"", 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
,0)));

720 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "GŸ %dárgumíts. Ex≥˘ed: <v¨«me>,<›>", 
	`cvec_Àn
(
¨gv
));

721 
d⁄e
;

723 
v¨°r
 = 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
, 0));

724 
›°r
 = 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
, 1));

725 i‡(
	`°rcmp
(
›°r
, "merge") == 0)

726 
ª∂a˚
 = 0;

727 i‡(
	`°rcmp
(
›°r
, "replace") == 0)

728 
ª∂a˚
 = 1;

730 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "Nÿsuch op: %s,Éx≥˘ed mîgê‹Ñïœ˚", 
›°r
);

731 
d⁄e
;

733 i‡((
cv
 = 
	`cvec_föd_v¨
(
cvv
, 
v¨°r
)Ë=
NULL
){

734 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "Nÿsuch v¨Çame: %s", 
v¨°r
);

735 
d⁄e
;

737 
fûíame
 = 
	`cv_°rög_gë
(
cv
);

738 i‡(
	`°©
(
fûíame
, &
°
) < 0){

739 
	`˛ic⁄_îr
(
OE_UNIX
, 0, "load_config: stat(%s): %s",

740 
fûíame
, 
	`°ªº‹
(
î∫o
));

741 
d⁄e
;

744 i‡((
fd
 = 
	`›í
(
fûíame
, 
O_RDONLY
)) < 0){

745 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "%s: o≥n(%s)", 
__FUNCTION__
, 
fûíame
);

746 
d⁄e
;

748 i‡(
	`xml_∑r£_fûe
(
fd
, "</˛ic⁄>", 
NULL
, &
xt
) < 0)

749 
d⁄e
;

750 i‡(
xt
 =
NULL
)

751 
d⁄e
;

752 i‡((
cbxml
 = 
	`cbuf_√w
()Ë=
NULL
)

753 
d⁄e
;

754 
x
 = 
NULL
;

755 (
x
 = 
	`xml_chûd_óch
(
xt
, x, -1)Ë!
NULL
) {

757 
	`xml_«me_£t
(
x
, "config");

758 i‡(
	`˛ic⁄_xml2cbuf
(
cbxml
, 
x
, 0, 0) < 0)

759 
d⁄e
;

761 i‡(
	`˛ic⁄_Ωc_edô_c⁄fig
(
h
, "candidate",

762 
ª∂a˚
?
OP_REPLACE
:
OP_MERGE
,

763 
	`cbuf_gë
(
cbxml
)) < 0)

764 
d⁄e
;

765 
	`cbuf_‰ì
(
cbxml
);

767 
ªt
 = 0;

768 
d⁄e
:

769 i‡(
xt
)

770 
	`xml_‰ì
(
xt
);

771 i‡(
fd
 != -1)

772 
	`˛o£
(
fd
);

773  
ªt
;

774 
	}
}

775 
	$lﬂd_c⁄fig_fûev
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
)

777  
	`lﬂd_c⁄fig_fûe
(
h
, 
v¨s
, 
¨gv
);

778 
	}
}

796 
	$ßve_c⁄fig_fûe
(
˛ic⁄_h™dÀ
 
h
,

797 
cvec
 *
cvv
,

798 
cvec
 *
¨gv
)

800 
ªtvÆ
 = -1;

801 *
fûíame
 = 
NULL
;

802 
cg_v¨
 *
cv
;

803 *
db°r
;

804 *
v¨°r
;

805 
cxobj
 *
xt
 = 
NULL
;

806 
cxobj
 *
xîr
;

807 
FILE
 *
f
 = 
NULL
;

809 i‡(
	`cvec_Àn
(
¨gv
) != 2){

810 i‡(
	`cvec_Àn
(
¨gv
)==1)

811 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "%s: GŸ sögÀárgumít:\"%s\". Ex≥˘ed \"<db«me>,<v¨«me>\"", 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
,0)));

813 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "%s: GŸ %dárgumíts. Ex≥˘ed: <db«me>,<v¨«me>", 
	`cvec_Àn
(
¨gv
));

815 
d⁄e
;

817 
db°r
 = 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
, 0));

818 
v¨°r
 = 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
, 1));

819 i‡(
	`°rcmp
(
db°r
, "running") != 0 &&

820 
	`°rcmp
(
db°r
, "candidate") != 0 &&

821 
	`°rcmp
(
db°r
, "startup") != 0) {

822 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "Nÿsuch dbÇame: %s", 
db°r
);

823 
d⁄e
;

825 i‡((
cv
 = 
	`cvec_föd_v¨
(
cvv
, 
v¨°r
)Ë=
NULL
){

826 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "Nÿsuch v¨Çame: %s", 
v¨°r
);

827 
d⁄e
;

829 
fûíame
 = 
	`cv_°rög_gë
(
cv
);

830 i‡(
	`˛ic⁄_Ωc_gë_c⁄fig
(
h
, 
db°r
,"/", &
xt
) < 0)

831 
d⁄e
;

832 i‡(
xt
 =
NULL
){

833 
	`˛ic⁄_îr
(
OE_CFG
, 0, "get config:ÉmptyÅree");

834 
d⁄e
;

836 i‡((
xîr
 = 
	`x∑th_fú°
(
xt
, "/Ωc-îr‹")Ë!
NULL
){

837 
	`˛ic⁄_Ωc_gíî©e_îr‹
("Gë c⁄figuøti⁄", 
xîr
);

838 
d⁄e
;

843 i‡(
	`xml_«me_£t
(
xt
, "config") < 0)

844 
d⁄e
;

845 i‡((
f
 = 
	`f›í
(
fûíame
, "w")Ë=
NULL
){

846 
	`˛ic⁄_îr
(
OE_CFG
, 
î∫o
, "Cª©ög fûê%s", 
fûíame
);

847 
d⁄e
;

849 i‡(
	`˛ic⁄_xml2fûe
(
f
, 
xt
, 0, 1) < 0)

850 
d⁄e
;

851 
ªtvÆ
 = 0;

853 
d⁄e
:

854 i‡(
xt
)

855 
	`xml_‰ì
(
xt
);

856 i‡(
f
 !
NULL
)

857 
	`f˛o£
(
f
);

858  
ªtvÆ
;

859 
	}
}

860 
	$ßve_c⁄fig_fûev
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
)

862  
	`ßve_c⁄fig_fûe
(
h
, 
v¨s
, 
¨gv
);

863 
	}
}

869 
	$dñëe_Æl
(
˛ic⁄_h™dÀ
 
h
,

870 
cvec
 *
cvv
,

871 
cvec
 *
¨gv
)

873 *
db°r
;

874 
ªtvÆ
 = -1;

876 i‡(
	`cvec_Àn
(
¨gv
) != 1){

877 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "%s: Requúe†⁄êñemít: db«me", 
__FUNCTION__
);

878 
d⁄e
;

880 
db°r
 = 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
, 0));

881 i‡(
	`°rcmp
(
db°r
, "running") != 0 &&

882 
	`°rcmp
(
db°r
, "candidate") != 0 &&

883 
	`°rcmp
(
db°r
, "startup") != 0){

884 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "Nÿsuch dbÇame: %s", 
db°r
);

885 
d⁄e
;

887 i‡(
	`˛ic⁄_Ωc_dñëe_c⁄fig
(
h
, 
db°r
) < 0)

888 
d⁄e
;

889 
ªtvÆ
 = 0;

890 
d⁄e
:

891  
ªtvÆ
;

892 
	}
}

893 
	$dñëe_Ælv
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
)

895  
	`dñëe_Æl
(
h
, 
v¨s
, 
¨gv
);

896 
	}
}

901 
	$disˇrd_ch™ges
(
˛ic⁄_h™dÀ
 
h
,

902 
cvec
 *
cvv
,

903 
cvec
 *
¨gv
)

905  
	`˛ic⁄_Ωc_disˇrd_ch™ges
(
h
);

906 
	}
}

907 
	$disˇrd_ch™gesv
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
)

909  
	`disˇrd_ch™ges
(
h
, 
v¨s
, 
¨gv
);

910 
	}
}

916 
	$db_c›y
(
˛ic⁄_h™dÀ
 
h
,

917 
cvec
 *
cvv
,

918 
cvec
 *
¨gv
)

920 *
db1
;

921 *
db2
;

923 
db1
 = 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
, 0));

924 
db2
 = 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
, 1));

925  
	`˛ic⁄_Ωc_c›y_c⁄fig
(
h
, 
db1
, 
db2
);

926 
	}
}

933 
	$˛i_nŸifiˇti⁄_cb
(
s
,

934 *
¨g
)

936 
˛ic⁄_msg
 *
ª∂y
 = 
NULL
;

937 
eof
;

938 
ªtvÆ
 = -1;

939 
cxobj
 *
xt
 = 
NULL
;

940 
cxobj
 *
xe
;

941 
cxobj
 *
x
;

942 
f‹m©_íum
 
f‹m©
 = (f‹m©_íum)
¨g
;

945 i‡(
	`˛ic⁄_msg_rcv
(
s
, &
ª∂y
, &
eof
) < 0)

946 
d⁄e
;

947 i‡(
eof
){

948 
	`˛ic⁄_îr
(
OE_PROTO
, 
ESHUTDOWN
, "%s: Sockë u√x≥˘ed clo£", 
__FUNCTION__
);

949 
	`˛o£
(
s
);

950 
î∫o
 = 
ESHUTDOWN
;

951 
	`evít_uƒeg_fd
(
s
, 
˛i_nŸifiˇti⁄_cb
);

952 
d⁄e
;

954 i‡(
	`˛ic⁄_msg_decode
(
ª∂y
, &
xt
) < 0)

955 
d⁄e
;

956 i‡((
xe
 = 
	`x∑th_fú°
(
xt
, "//evít")Ë!
NULL
){

957 
x
 = 
NULL
;

958 (
x
 = 
	`xml_chûd_óch
(
xe
, x, -1)Ë!
NULL
) {

959 
f‹m©
){

960 
FORMAT_XML
:

961 i‡(
	`˛ic⁄_xml2fûe
(
°dout
, 
x
, 0, 1) < 0)

962 
d⁄e
;

964 
FORMAT_TEXT
:

965 i‡(
	`xml2txt
(
°dout
, 
x
, 0) < 0)

966 
d⁄e
;

968 
FORMAT_JSON
:

969 i‡(
	`xml2js⁄
(
°dout
, 
x
, 1) < 0)

970 
d⁄e
;

977 
ªtvÆ
 = 0;

978 
d⁄e
:

979 i‡(
xt
)

980 
	`xml_‰ì
(
xt
);

981 i‡(
ª∂y
)

982 
	`‰ì
(
ª∂y
);

983  
ªtvÆ
;

984 
	}
}

1000 
	$˛i_nŸify
(
˛ic⁄_h™dÀ
 
h
,

1001 
cvec
 *
cvv
,

1002 
cvec
 *
¨gv
)

1004 *
°ªam
 = 
NULL
;

1005 
ªtvÆ
 = -1;

1006 
°©us
;

1007 *
f‹m©°r
 = 
NULL
;

1008 
f‹m©_íum
 
f‹m©
 = 
FORMAT_TEXT
;

1010 i‡(
	`cvec_Àn
(
¨gv
) != 2 && cvec_len(argv) != 3){

1011 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "%†Requúe†¨gumíts: <log°ªam> <°©us> [<f‹m©>]", 
__FUNCTION__
);

1012 
d⁄e
;

1014 
°ªam
 = 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
, 0));

1015 
°©us
 = 
	`©oi
(
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
, 1)));

1016 i‡(
	`cvec_Àn
(
¨gv
) > 2){

1017 
f‹m©°r
 = 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
, 2));

1018 
f‹m©
 = 
	`f‹m©_°r2öt
(
f‹m©°r
);

1020 i‡(
	`˛i_nŸifiˇti⁄_ªgi°î
(
h
,

1021 
°ªam
,

1022 
f‹m©
,

1024 
°©us
,

1025 
˛i_nŸifiˇti⁄_cb
,

1026 (*)
f‹m©
) < 0)

1027 
d⁄e
;

1029 
ªtvÆ
 = 0;

1030 
d⁄e
:

1031  
ªtvÆ
;

1032 
	}
}

1033 
	$˛i_nŸifyv
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
)

1035  
	`˛i_nŸify
(
h
, 
v¨s
, 
¨gv
);

1036 
	}
}

1049 
	$˛i_lock
(
˛ic⁄_h™dÀ
 
h
,

1050 
cvec
 *
cvv
,

1051 
cvec
 *
¨gv
)

1053 *
db
;

1054 
ªtvÆ
 = -1;

1056 i‡(
	`cvec_Àn
(
¨gv
) != 1){

1057 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "Requiresárguments: <db>");

1058 
d⁄e
;

1060 
db
 = 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
, 0));

1061 i‡(
	`˛ic⁄_Ωc_lock
(
h
, 
db
) < 0)

1062 
d⁄e
;

1063 
ªtvÆ
 = 0;

1064 
d⁄e
:

1065  
ªtvÆ
;

1066 
	}
}

1079 
	$˛i_u∆ock
(
˛ic⁄_h™dÀ
 
h
,

1080 
cvec
 *
cvv
,

1081 
cvec
 *
¨gv
)

1083 *
db
;

1084 
ªtvÆ
 = -1;

1086 i‡(
	`cvec_Àn
(
¨gv
) != 1){

1087 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "Requiresárguments: <db>");

1088 
d⁄e
;

1090 
db
 = 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
, 0));

1091 i‡(
	`˛ic⁄_Ωc_u∆ock
(
h
, 
db
) < 0)

1092 
d⁄e
;

1093 
ªtvÆ
 = 0;

1094 
d⁄e
:

1095  
ªtvÆ
;

1096 
	}
}

1122 
	$˛i_c›y_c⁄fig
(
˛ic⁄_h™dÀ
 
h
,

1123 
cvec
 *
cvv
,

1124 
cvec
 *
¨gv
)

1126 
ªtvÆ
 = -1;

1127 *
db
;

1128 
cxobj
 *
x1
 = 
NULL
;

1129 
cxobj
 *
x2
 = 
NULL
;

1130 
cxobj
 *
x
;

1131 *
x∑th
;

1132 
i
;

1133 
j
;

1134 
cbuf
 *
cb
 = 
NULL
;

1135 *
key«me
;

1136 *
‰omv¨
;

1137 
cg_v¨
 *
‰omcv
;

1138 *
‰om«me
 = 
NULL
;

1139 *
tov¨
;

1140 
cg_v¨
 *
tocv
;

1141 *
t⁄ame
;

1142 
cxobj
 *
xîr
;

1144 i‡(
	`cvec_Àn
(
¨gv
) != 5){

1145 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "%s: Requúe†fou∏ñemíts: <db> <x∑th> <key«me> <‰om> <to>", 
__FUNCTION__
);

1146 
d⁄e
;

1149 
db
 = 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
, 0));

1151 
x∑th
 = 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
, 1));

1153 
key«me
 = 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
, 2));

1155 
‰omv¨
 = 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
, 3));

1157 
tov¨
 = 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
, 4));

1160 i‡((
‰omcv
 = 
	`cvec_föd_v¨
(
cvv
, 
‰omv¨
)Ë=
NULL
){

1161 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "‰omv¨ '%s'ÇŸ found i¿˛igí v¨Üi°", 
‰omv¨
);

1162 
d⁄e
;

1165 
‰om«me
 = 
	`cv_°rög_gë
(
‰omcv
);

1167 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
){

1168 
	`˛ic⁄_îr
(
OE_PLUGIN
, 
î∫o
, "cbuf_new");

1169 
d⁄e
;

1172 
j
 = 0;

1173 
i
=0; i<
	`°æí
(
x∑th
); i++)

1174 i‡(
x∑th
[
i
] == '%')

1175 
j
++;

1176 i‡(
j
 != 2){

1177 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "xpath '%s' doesÇot haveÅwo '%%'");

1178 
d⁄e
;

1180 
	`˝rötf
(
cb
, 
x∑th
, 
key«me
, 
‰om«me
);

1183 i‡(
	`˛ic⁄_Ωc_gë_c⁄fig
(
h
, 
db
, 
	`cbuf_gë
(
cb
), &
x1
) < 0)

1184 
d⁄e
;

1185 i‡((
xîr
 = 
	`x∑th_fú°
(
x1
, "/Ωc-îr‹")Ë!
NULL
){

1186 
	`˛ic⁄_Ωc_gíî©e_îr‹
("Gë c⁄figuøti⁄", 
xîr
);

1187 
d⁄e
;

1191 i‡((
tocv
 = 
	`cvec_föd_v¨
(
cvv
, 
tov¨
)Ë=
NULL
){

1192 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "tov¨ '%s'ÇŸ found i¿˛igí v¨Üi°", 
tov¨
);

1193 
d⁄e
;

1195 
t⁄ame
 = 
	`cv_°rög_gë
(
tocv
);

1197 i‡((
x2
 = 
	`xml_√w
("√w", 
NULL
, NULL)) == NULL)

1198 
d⁄e
;

1199 i‡(
	`xml_c›y
(
x1
, 
x2
) < 0)

1200 
d⁄e
;

1201 
	`xml_«me_£t
(
x2
, "config");

1202 
	`˝rötf
(
cb
, "/%s", 
key«me
);

1203 i‡((
x
 = 
	`x∑th_fú°
(
x2
, 
	`cbuf_gë
(
cb
))Ë=
NULL
){

1204 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "Fõld %†nŸ found i¿c›yÅªe", 
key«me
);

1205 
d⁄e
;

1207 
x
 = 
	`xml_föd
(x, "body");

1208 
	`xml_vÆue_£t
(
x
, 
t⁄ame
);

1210 
	`cbuf_ª£t
(
cb
);

1212 
	`˛ic⁄_xml2cbuf
(
cb
, 
x2
, 0, 0);

1213 i‡(
	`˛ic⁄_Ωc_edô_c⁄fig
(
h
, 
db
, 
OP_MERGE
, 
	`cbuf_gë
(
cb
)) < 0)

1214 
d⁄e
;

1215 
ªtvÆ
 = 0;

1216 
d⁄e
:

1217 i‡(
cb
)

1218 
	`cbuf_‰ì
(
cb
);

1219 i‡(
x1
 !
NULL
)

1220 
	`xml_‰ì
(
x1
);

1221 i‡(
x2
 !
NULL
)

1222 
	`xml_‰ì
(
x2
);

1223  
ªtvÆ
;

1224 
	}
}

1233 
	$˛i_debug
(
˛ic⁄_h™dÀ
 
h
,

1234 
cvec
 *
v¨s
,

1235 
cg_v¨
 *
¨g
)

1237 
cg_v¨
 *
cv
;

1238 
Àvñ
;

1240 i‡((
cv
 = 
	`cvec_föd_v¨
(
v¨s
, "Àvñ")Ë=
NULL
)

1241 
cv
 = 
¨g
;

1242 
Àvñ
 = 
	`cv_öt32_gë
(
cv
);

1244 
	`˛ic⁄_debug_öô
(
Àvñ
, 
NULL
);

1246 i‡(
	`˛ic⁄_Ωc_debug
(
h
, 
Àvñ
) < 0)

1247 
d⁄e
;

1248 
d⁄e
:

1250 
	}
}

1253 
	$˛i_hñp
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
)

1255 
˛igí_h™dÀ
 
ch
 = 
	`˛i_˛igí
(
h
);

1256 
∑r£_åì
 *
±
;

1258 
±
 = 
	`˛igí_åì_a˘ive_gë
(
ch
);

1259  
	`˛igí_hñp
(
°dout
, *
±
);

1260 
	}
}

	@clixon-master/apps/cli/cli_common.h

37 #i‚de‡
_CLI_COMMON_H_


38 
	#_CLI_COMMON_H_


	)

41 
	#cb_sögÀ_¨g
(
‚
) \

42 
	`‚
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
cvv
, 
cg_v¨
 *
¨g
) \

44 
ªtvÆ
=-1; \

45 
cvec
 *
¨gv
 = 
NULL
; \

47 i‡(
¨g
 && (
¨gv
 = 
	`cvec_‰om_v¨
◊rg)Ë=
NULL
){ \

48 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "cvec_from_var"); \

49 
d⁄e
; \

51 
ªtvÆ
 = 
‚
##
	`v
(
h
, 
cvv
, 
¨gv
); \

52 
d⁄e
: \

53 i‡(
¨gv
Ë
	`cvec_‰ì
(argv); \

54  
ªtvÆ
; \

55 }

	)

58 
˛i_sig«l_block
(
˛ic⁄_h™dÀ
 
h
);

59 
˛i_sig«l_unblock
(
˛ic⁄_h™dÀ
 
h
);

	@clixon-master/apps/cli/cli_generate.c

42 #ifde‡
HAVE_CONFIG_H


43 
	~"˛ix⁄_c⁄fig.h
"

47 
	~<°dio.h
>

48 
	~<°rög.h
>

49 
	~<°dlib.h
>

50 
	~<î∫o.h
>

51 
	~<as£π.h
>

52 
	~<f˙é.h
>

53 
	~<sys/∑øm.h
>

57 
	~<˛igí/˛igí.h
>

60 
	~<˛ix⁄/˛ix⁄.h
>

62 
	~"˛ix⁄_˛i_≠i.h
"

63 
	~"˛i_∂ugö.h
"

64 
	~"˛i_gíî©e.h
"

67 
	#GENERATE_CALLBACK
 "ovîwrôe_me"

	)

70 
	#GENERATE_EXPAND_XMLDB
 "ex∑nd_dbv¨"

	)

113 
	$˛i_ex∑nd_v¨_gíî©e
(
˛ic⁄_h™dÀ
 
h
,

114 
y™g_°mt
 *
ys
,

115 
cv_ty≥
 
cvty≥
,

116 
cbuf
 *
cb0
,

117 
›ti⁄s
,

118 
uöt8_t
 
‰a˘i⁄_digôs
)

120 
ªtvÆ
 = -1;

121 *
≠i_∑th_fmt
 = 
NULL
;

123 i‡(
	`y™g2≠i_∑th_fmt
(
ys
, 1, &
≠i_∑th_fmt
) < 0)

124 
d⁄e
;

125 
	`˝rötf
(
cb0
, "|<%s:%s", 
ys
->
ys_¨gumít
,

126 
	`cv_ty≥2°r
(
cvty≥
));

127 i‡(
›ti⁄s
 & 
YANG_OPTIONS_FRACTION_DIGITS
)

128 
	`˝rötf
(
cb0
, " fø˘i⁄-digôs:%u", 
‰a˘i⁄_digôs
);

129 
	`˝rötf
(
cb0
, " %s(\"candidate\",\"%s\")>",

130 
GENERATE_EXPAND_XMLDB
,

131 
≠i_∑th_fmt
);

132 
ªtvÆ
 = 0;

133 
d⁄e
:

134 i‡(
≠i_∑th_fmt
)

135 
	`‰ì
(
≠i_∑th_fmt
);

136  
ªtvÆ
;

137 
	}
}

146 
	$˛i_ˇŒback_gíî©e
(
˛ic⁄_h™dÀ
 
h
,

147 
y™g_°mt
 *
ys
,

148 
cbuf
 *
cb0
)

150 
ªtvÆ
 = -1;

151 *
≠i_∑th_fmt
 = 
NULL
;

153 i‡(
	`y™g2≠i_∑th_fmt
(
ys
, 0, &
≠i_∑th_fmt
) < 0)

154 
d⁄e
;

155 
	`˝rötf
(
cb0
, ",%s(\"%s\")", 
GENERATE_CALLBACK
,

156 
≠i_∑th_fmt
);

157 
ªtvÆ
 = 0;

158 
d⁄e
:

159 i‡(
≠i_∑th_fmt
)

160 
	`‰ì
(
≠i_∑th_fmt
);

161  
ªtvÆ
;

162 
	}
}

165 
y™g2˛i_°mt
(
˛ic⁄_h™dÀ
 
h
, 
y™g_°mt
 *
ys
, 
cbuf
 *
cb
,

166 
gímodñ_ty≥
 
gt
, 
Àvñ
);

168 
y™g2˛i_v¨_uni⁄
(
˛ic⁄_h™dÀ
 
h
, 
y™g_°mt
 *
ys
, *
‹igty≥
,

169 
y™g_°mt
 *
yty≥
, 
cbuf
 *
cb
, *
hñ±ext
);

181 
	$y™g2˛i_v¨_sub
(
˛ic⁄_h™dÀ
 
h
,

182 
y™g_°mt
 *
ys
,

183 
y™g_°mt
 *
yty≥
,

184 
cbuf
 *
cb
,

185 *
hñ±ext
,

186 
cv_ty≥
 
cvty≥
,

187 
›ti⁄s
,

188 
cg_v¨
 *
möcv
,

189 
cg_v¨
 *
maxcv
,

190 *
∑âîn
,

191 
uöt8_t
 
‰a˘i⁄_digôs


194 
ªtvÆ
 = -1;

195 *
ty≥
;

196 *
r
;

197 
y™g_°mt
 *
yi
 = 
NULL
;

198 
i
 = 0;

199 *
cvty≥°r
;

201 i‡(
cvty≥
 =
CGV_VOID
){

202 
ªtvÆ
 = 0;

203 
d⁄e
;

205 
ty≥
 = 
yty≥
?yty≥->
ys_¨gumít
:
NULL
;

206 
cvty≥°r
 = 
	`cv_ty≥2°r
(
cvty≥
);

207 
	`˝rötf
(
cb
, "<%s:%s", 
ys
->
ys_¨gumít
, 
cvty≥°r
);

209 i‡(
ty≥
 && (
	`°rcmp
(type, "enumeration") == 0 || strcmp(type, "bits") == 0)){

210 
	`˝rötf
(
cb
, " choice:");

211 
i
 = 0;

212 (
yi
 = 
	`yn_óch
((
y™g_node
*)
yty≥
, yi)Ë!
NULL
){

213 i‡(
yi
->
ys_keyw‹d
 !
Y_ENUM
 && yi->ys_keyw‹d !
Y_BIT
)

215 i‡(
i
)

216 
	`˝rötf
(
cb
, "|");

217 
	`˝rötf
(
cb
, "%s", 
yi
->
ys_¨gumít
);

218 
i
++;

221 i‡(
›ti⁄s
 & 
YANG_OPTIONS_FRACTION_DIGITS
)

222 
	`˝rötf
(
cb
, " fø˘i⁄-digôs:%u", 
‰a˘i⁄_digôs
);

223 i‡(
›ti⁄s
 & (
YANG_OPTIONS_RANGE
|
YANG_OPTIONS_LENGTH
)){

224 
	`as£π
(
möcv
 || 
maxcv
);

225 
	`˝rötf
(
cb
, " %s[", (
›ti⁄s
&
YANG_OPTIONS_RANGE
)?"range":"length");

226 i‡(
möcv
){

227 i‡((
r
 = 
	`cv2°r_dup
(
möcv
)Ë=
NULL
){

228 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "cv2str_dup");

229 
d⁄e
;

231 
	`˝rötf
(
cb
, "%s:", 
r
);

232 
	`‰ì
(
r
);

233 
r
 = 
NULL
;

235 i‡(
maxcv
 !
NULL
){

236 i‡((
r
 = 
	`cv2°r_dup
(
maxcv
)Ë=
NULL
){

237 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "cv2str_dup");

238 
d⁄e
;

244 i‡(
cvty≥
==
CGV_STRING
){

245 i‡((
r
 = 
	`mÆloc
(512)Ë=
NULL
){

246 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "malloc");

247 
d⁄e
;

249 
	`¢¥ötf
(
r
, 512, "%d", 
MAXPATHLEN
);

251 i‡((
r
 = 
	`cvty≥_max2°r_dup
(
cvty≥
)Ë=
NULL
){

252 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "cvtype_max2str");

253 
d⁄e
;

256 
	`˝rötf
(
cb
, "%s]", 
r
);

257 
	`‰ì
(
r
);

258 
r
 = 
NULL
;

260 i‡(
›ti⁄s
 & 
YANG_OPTIONS_PATTERN
)

261 
	`˝rötf
(
cb
, "Ñegexp:\"%s\"", 
∑âîn
);

263 
	`˝rötf
(
cb
, ">");

264 i‡(
hñ±ext
)

265 
	`˝rötf
(
cb
, "(\"%s\")", 
hñ±ext
);

266 
ªtvÆ
 = 0;

267 
d⁄e
:

268  
ªtvÆ
;

269 
	}
}

281 
	$y™g2˛i_v¨_uni⁄_⁄e
(
˛ic⁄_h™dÀ
 
h
,

282 
y™g_°mt
 *
ys
,

283 *
‹igty≥
,

284 
y™g_°mt
 *
ytsub
,

285 
cbuf
 *
cb
,

286 *
hñ±ext
)

288 
ªtvÆ
 = -1;

289 
›ti⁄s
 = 0;

290 
cg_v¨
 *
möcv
 = 
NULL
;

291 
cg_v¨
 *
maxcv
 = 
NULL
;

292 *
∑âîn
 = 
NULL
;

293 
uöt8_t
 
‰a˘i⁄_digôs
 = 0;

294 
cv_ty≥
 
cvty≥
;

295 
y™g_°mt
 *
yty≥
;

296 *
ª°y≥
;

299 i‡(
	`y™g_ty≥_ªsﬁve
(
ys
, 
ytsub
,

300 &
yty≥
, &
›ti⁄s
,

301 &
möcv
, &
maxcv
, &
∑âîn
, &
‰a˘i⁄_digôs
) < 0)

302 
d⁄e
;

303 
ª°y≥
 = 
yty≥
?yty≥->
ys_¨gumít
:
NULL
;

305 i‡(
ª°y≥
 && 
	`°rcmp
(restype, "union") == 0){

306 i‡(
	`y™g2˛i_v¨_uni⁄
(
h
, 
ys
, 
‹igty≥
, 
yty≥
, 
cb
, 
hñ±ext
) < 0)

307 
d⁄e
;

310 i‡(
	`˛ic⁄_ty≥2cv
(
‹igty≥
, 
ª°y≥
, &
cvty≥
) < 0)

311 
d⁄e
;

312 i‡((
ªtvÆ
 = 
	`y™g2˛i_v¨_sub
(
h
, 
ys
, 
yty≥
, 
cb
, 
hñ±ext
, 
cvty≥
,

313 
›ti⁄s
, 
möcv
, 
maxcv
, 
∑âîn
, 
‰a˘i⁄_digôs
)) < 0)

314 
d⁄e
;

316 
ªtvÆ
 = 0;

317 
d⁄e
:

318  
ªtvÆ
;

319 
	}
}

332 
	$y™g2˛i_v¨_uni⁄
(
˛ic⁄_h™dÀ
 
h
,

333 
y™g_°mt
 *
ys
,

334 *
‹igty≥
,

335 
y™g_°mt
 *
yty≥
,

336 
cbuf
 *
cb
,

337 *
hñ±ext
)

339 
ªtvÆ
 = -1;

340 
y™g_°mt
 *
ytsub
 = 
NULL
;

341 
i
;

343 
i
 = 0;

348 (
ytsub
 = 
	`yn_óch
((
y™g_node
*)
yty≥
, ytsub)Ë!
NULL
){

349 i‡(
ytsub
->
ys_keyw‹d
 !
Y_TYPE
)

351 i‡(
i
++)

352 
	`˝rötf
(
cb
, "|");

353 i‡(
	`y™g2˛i_v¨_uni⁄_⁄e
(
h
, 
ys
, 
‹igty≥
, 
ytsub
, 
cb
, 
hñ±ext
) < 0)

354 
d⁄e
;

356 
ªtvÆ
 = 0;

357 
d⁄e
:

358  
ªtvÆ
;

359 
	}
}

372 
	$y™g2˛i_v¨
(
˛ic⁄_h™dÀ
 
h
,

373 
y™g_°mt
 *
ys
,

374 
cbuf
 *
cb
,

375 *
hñ±ext
)

377 
ªtvÆ
 = -1;

378 *
‹igty≥
;

379 
y™g_°mt
 *
yª°y≥
;

380 *
ª°y≥
;

381 
cg_v¨
 *
möcv
 = 
NULL
;

382 
cg_v¨
 *
maxcv
 = 
NULL
;

383 *
∑âîn
 = 
NULL
;

384 
uöt8_t
 
‰a˘i⁄_digôs
 = 0;

385 
cv_ty≥
 
cvty≥
;

386 
›ti⁄s
 = 0;

387 
com∂ëi⁄p
;

389 i‡(
	`y™g_ty≥_gë
(
ys
, &
‹igty≥
, &
yª°y≥
,

390 &
›ti⁄s
, &
möcv
, &
maxcv
, &
∑âîn
, &
‰a˘i⁄_digôs
) < 0)

391 
d⁄e
;

392 
ª°y≥
 = 
yª°y≥
?yª°y≥->
ys_¨gumít
:
NULL
;

394 i‡(
ª°y≥
 && 
	`°rcmp
(restype, "empty") == 0){

395 
ªtvÆ
 = 0;

396 
d⁄e
;

398 i‡(
	`˛ic⁄_ty≥2cv
(
‹igty≥
, 
ª°y≥
, &
cvty≥
) < 0)

399 
d⁄e
;

401 i‡(
ª°y≥
 && 
	`°rcmp
(restype, "union") == 0){

403 
	`˝rötf
(
cb
, "(");

404 i‡(
	`y™g2˛i_v¨_uni⁄
(
h
, 
ys
, 
‹igty≥
, 
yª°y≥
, 
cb
, 
hñ±ext
) < 0)

405 
d⁄e
;

406 i‡(
	`˛ic⁄_˛i_gímodñ_com∂ëi⁄
(
h
)){

407 i‡(
	`˛i_ex∑nd_v¨_gíî©e
(
h
, 
ys
, 
cvty≥
, 
cb
,

408 
›ti⁄s
, 
‰a˘i⁄_digôs
) < 0)

409 
d⁄e
;

410 i‡(
hñ±ext
)

411 
	`˝rötf
(
cb
, "(\"%s\")", 
hñ±ext
);

413 
	`˝rötf
(
cb
, ")");

416 *
ty≥
;

417 
ty≥
 = 
yª°y≥
?yª°y≥->
ys_¨gumít
:
NULL
;

418 i‡(
ty≥
)

419 
com∂ëi⁄p
 = 
	`˛ic⁄_˛i_gímodñ_com∂ëi⁄
(
h
) &&

420 
	`°rcmp
(
ty≥
, "enumeration") != 0 &&

421 
	`°rcmp
(
ty≥
, "bits") != 0;

423 
com∂ëi⁄p
 = 
	`˛ic⁄_˛i_gímodñ_com∂ëi⁄
(
h
);

424 i‡(
com∂ëi⁄p
)

425 
	`˝rötf
(
cb
, "(");

426 i‡((
ªtvÆ
 = 
	`y™g2˛i_v¨_sub
(
h
, 
ys
, 
yª°y≥
, 
cb
, 
hñ±ext
, 
cvty≥
,

427 
›ti⁄s
, 
möcv
, 
maxcv
, 
∑âîn
, 
‰a˘i⁄_digôs
)) < 0)

428 
d⁄e
;

429 i‡(
com∂ëi⁄p
){

430 i‡(
	`˛i_ex∑nd_v¨_gíî©e
(
h
, 
ys
, 
cvty≥
, 
cb
,

431 
›ti⁄s
, 
‰a˘i⁄_digôs
) < 0)

432 
d⁄e
;

433 i‡(
hñ±ext
)

434 
	`˝rötf
(
cb
, "(\"%s\")", 
hñ±ext
);

435 
	`˝rötf
(
cb
, ")");

438 
ªtvÆ
 = 0;

439 
d⁄e
:

440  
ªtvÆ
;

441 
	}
}

452 
	$y™g2˛i_Àaf
(
˛ic⁄_h™dÀ
 
h
,

453 
y™g_°mt
 *
ys
,

454 
cbuf
 *cbuf,

455 
gímodñ_ty≥
 
gt
,

456 
Àvñ
,

457 
ˇŒback
)

459 
y™g_°mt
 *
yd
;

460 
ªtvÆ
 = -1;

461 *
hñ±ext
 = 
NULL
;

462 *
s
;

465 i‡((
yd
 = 
	`y™g_föd
((
y™g_node
*)
ys
, 
Y_DESCRIPTION
, 
NULL
)) != NULL){

466 i‡((
hñ±ext
 = 
	`°rdup
(
yd
->
ys_¨gumít
)Ë=
NULL
){

467 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "strdup");

468 
d⁄e
;

470 i‡((
s
 = 
	`°r°r
(
hñ±ext
, "\n\n")Ë!
NULL
)

471 *
s
 = '\0';

473 
	`˝rötf
(
cbuf
, "%*s", 
Àvñ
*3, "");

474 i‡(
gt
 =
GT_VARS
|| gà=
GT_ALL
){

475 
	`˝rötf
(
cbuf
, "%s", 
ys
->
ys_¨gumít
);

476 i‡(
hñ±ext
)

477 
	`˝rötf
(
cbuf
, "(\"%s\")", 
hñ±ext
);

478 
	`˝rötf
(
cbuf
, " ");

479 
	`y™g2˛i_v¨
(
h
, 
ys
, 
cbuf
, 
hñ±ext
);

482 
	`y™g2˛i_v¨
(
h
, 
ys
, 
cbuf
, 
hñ±ext
);

483 i‡(
ˇŒback
){

484 i‡(
	`˛i_ˇŒback_gíî©e
(
h
, 
ys
, 
cbuf
) < 0)

485 
d⁄e
;

486 
	`˝rötf
(
cbuf
, ";\n");

489 
ªtvÆ
 = 0;

490 
d⁄e
:

491 i‡(
hñ±ext
)

492 
	`‰ì
(
hñ±ext
);

493  
ªtvÆ
;

494 
	}
}

504 
	$y™g2˛i_c⁄èöî
(
˛ic⁄_h™dÀ
 
h
,

505 
y™g_°mt
 *
ys
,

506 
cbuf
 *cbuf,

507 
gímodñ_ty≥
 
gt
,

508 
Àvñ
)

510 
y™g_°mt
 *
yc
;

511 
y™g_°mt
 *
yd
;

512 
i
;

513 
ªtvÆ
 = -1;

514 *
hñ±ext
 = 
NULL
;

515 *
s
;

517 
	`˝rötf
(
cbuf
, "%*s%s", 
Àvñ
*3, "", 
ys
->
ys_¨gumít
);

518 i‡((
yd
 = 
	`y™g_föd
((
y™g_node
*)
ys
, 
Y_DESCRIPTION
, 
NULL
)) != NULL){

519 i‡((
hñ±ext
 = 
	`°rdup
(
yd
->
ys_¨gumít
)Ë=
NULL
){

520 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "strdup");

521 
d⁄e
;

523 i‡((
s
 = 
	`°r°r
(
hñ±ext
, "\n\n")Ë!
NULL
)

524 *
s
 = '\0';

525 
	`˝rötf
(
cbuf
, "(\"%s\")", 
hñ±ext
);

527 i‡(
	`˛i_ˇŒback_gíî©e
(
h
, 
ys
, 
cbuf
) < 0)

528 
d⁄e
;

529 
	`˝rötf
(
cbuf
, ";{\n");

530 
i
=0; i<
ys
->
ys_Àn
; i++)

531 i‡((
yc
 = 
ys
->
ys_°mt
[
i
]Ë!
NULL
)

532 i‡(
	`y™g2˛i_°mt
(
h
, 
yc
, 
cbuf
, 
gt
, 
Àvñ
+1) < 0)

533 
d⁄e
;

534 
	`˝rötf
(
cbuf
, "%*s}\n", 
Àvñ
*3, "");

535 
ªtvÆ
 = 0;

536 
d⁄e
:

537 i‡(
hñ±ext
)

538 
	`‰ì
(
hñ±ext
);

539  
ªtvÆ
;

540 
	}
}

550 
	$y™g2˛i_li°
(
˛ic⁄_h™dÀ
 
h
,

551 
y™g_°mt
 *
ys
,

552 
cbuf
 *cbuf,

553 
gímodñ_ty≥
 
gt
,

554 
Àvñ
)

556 
y™g_°mt
 *
yc
;

557 
y™g_°mt
 *
yd
;

558 
y™g_°mt
 *
yÀaf
;

559 
i
;

560 
cg_v¨
 *
cvi
;

561 *
key«me
;

562 
cvec
 *
cvk
 = 
NULL
;

563 
ªtvÆ
 = -1;

564 *
hñ±ext
 = 
NULL
;

565 *
s
;

567 
	`˝rötf
(
cbuf
, "%*s%s", 
Àvñ
*3, "", 
ys
->
ys_¨gumít
);

568 i‡((
yd
 = 
	`y™g_föd
((
y™g_node
*)
ys
, 
Y_DESCRIPTION
, 
NULL
)) != NULL){

569 i‡((
hñ±ext
 = 
	`°rdup
(
yd
->
ys_¨gumít
)Ë=
NULL
){

570 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "strdup");

571 
d⁄e
;

573 i‡((
s
 = 
	`°r°r
(
hñ±ext
, "\n\n")Ë!
NULL
)

574 *
s
 = '\0';

575 
	`˝rötf
(
cbuf
, "(\"%s\")", 
hñ±ext
);

578 
cvk
 = 
ys
->
ys_cvec
;

579 
cvi
 = 
NULL
;

581 (
cvi
 = 
	`cvec_óch
(
cvk
, cvi)Ë!
NULL
) {

582 
key«me
 = 
	`cv_°rög_gë
(
cvi
);

583 i‡((
yÀaf
 = 
	`y™g_föd
((
y™g_node
*)
ys
, 
Y_LEAF
, 
key«me
)Ë=
NULL
){

584 
	`˛ic⁄_îr
(
OE_XML
, 0, "List statement \"%s\" hasÇo keyÜeaf \"%s\"",

585 
ys
->
ys_¨gumít
, 
key«me
);

586 
d⁄e
;

591 i‡(
	`y™g2˛i_Àaf
(
h
, 
yÀaf
, 
cbuf
, 
gt
==
GT_VARS
?
GT_NONE
:gt, 
Àvñ
+1,

592 
	`cvec_√xt
(
cvk
, 
cvi
)?0:1) < 0)

593 
d⁄e
;

596 
	`˝rötf
(
cbuf
, "{\n");

597 
i
=0; i<
ys
->
ys_Àn
; i++)

598 i‡((
yc
 = 
ys
->
ys_°mt
[
i
]Ë!
NULL
){

602 
cvi
 = 
NULL
;

603 (
cvi
 = 
	`cvec_óch
(
cvk
, cvi)Ë!
NULL
) {

604 
key«me
 = 
	`cv_°rög_gë
(
cvi
);

605 i‡(
	`°rcmp
(
key«me
, 
yc
->
ys_¨gumít
) == 0)

608 i‡(
cvi
 !
NULL
)

610 i‡(
	`y™g2˛i_°mt
(
h
, 
yc
, 
cbuf
, 
gt
, 
Àvñ
+1) < 0)

611 
d⁄e
;

613 
	`˝rötf
(
cbuf
, "%*s}\n", 
Àvñ
*3, "");

614 
ªtvÆ
 = 0;

615 
d⁄e
:

616 i‡(
hñ±ext
)

617 
	`‰ì
(
hñ±ext
);

618  
ªtvÆ
;

619 
	}
}

638 
	$y™g2˛i_choi˚
(
˛ic⁄_h™dÀ
 
h
,

639 
y™g_°mt
 *
ys
,

640 
cbuf
 *cbuf,

641 
gímodñ_ty≥
 
gt
,

642 
Àvñ
)

644 
ªtvÆ
 = -1;

645 
y™g_°mt
 *
yc
;

646 
i
;

648 
i
=0; i<
ys
->
ys_Àn
; i++)

649 i‡((
yc
 = 
ys
->
ys_°mt
[
i
]Ë!
NULL
){

650 
yc
->
ys_keyw‹d
){

651 
Y_CASE
:

652 i‡(
	`y™g2˛i_°mt
(
h
, 
yc
, 
cbuf
, 
gt
, 
Àvñ
+2) < 0)

653 
d⁄e
;

655 
Y_CONTAINER
:

656 
Y_LEAF
:

657 
Y_LEAF_LIST
:

658 
Y_LIST
:

660 i‡(
	`y™g2˛i_°mt
(
h
, 
yc
, 
cbuf
, 
gt
, 
Àvñ
+1) < 0)

661 
d⁄e
;

665 
ªtvÆ
 = 0;

666 
d⁄e
:

667  
ªtvÆ
;

668 
	}
}

678 
	$y™g2˛i_°mt
(
˛ic⁄_h™dÀ
 
h
,

679 
y™g_°mt
 *
ys
,

680 
cbuf
 *cbuf,

681 
gímodñ_ty≥
 
gt
,

682 
Àvñ


685 
y™g_°mt
 *
yc
;

686 
ªtvÆ
 = -1;

687 
i
;

689 i‡(
	`y™g_c⁄fig
(
ys
)){

690 
ys
->
ys_keyw‹d
){

691 
Y_GROUPING
:

692 
Y_RPC
:

693 
Y_AUGMENT
:

696 
Y_CONTAINER
:

697 i‡(
	`y™g2˛i_c⁄èöî
(
h
, 
ys
, 
cbuf
, 
gt
, 
Àvñ
) < 0)

698 
d⁄e
;

700 
Y_LIST
:

701 i‡(
	`y™g2˛i_li°
(
h
, 
ys
, 
cbuf
, 
gt
, 
Àvñ
) < 0)

702 
d⁄e
;

704 
Y_CHOICE
:

705 i‡(
	`y™g2˛i_choi˚
(
h
, 
ys
, 
cbuf
, 
gt
, 
Àvñ
) < 0)

706 
d⁄e
;

708 
Y_LEAF_LIST
:

709 
Y_LEAF
:

710 i‡(
	`y™g2˛i_Àaf
(
h
, 
ys
, 
cbuf
, 
gt
, 
Àvñ
, 1) < 0)

711 
d⁄e
;

714 
i
=0; i<
ys
->
ys_Àn
; i++)

715 i‡((
yc
 = 
ys
->
ys_°mt
[
i
]Ë!
NULL
)

716 i‡(
	`y™g2˛i_°mt
(
h
, 
yc
, 
cbuf
, 
gt
, 
Àvñ
+1) < 0)

717 
d⁄e
;

722 
ªtvÆ
 = 0;

723 
d⁄e
:

724  
ªtvÆ
;

726 
	}
}

739 
	$y™g2˛i
(
˛ic⁄_h™dÀ
 
h
,

740 
y™g_•ec
 *
y•ec
,

741 
∑r£_åì
 *
±√w
,

742 
gímodñ_ty≥
 
gt
)

744 
cbuf
 *cbuf;

745 
i
;

746 
ªtvÆ
 = -1;

747 
y™g_°mt
 *
ymod
 = 
NULL
;

748 
cvec
 *
globÆs
;

750 i‡((
cbuf
 = 
	`cbuf_√w
()Ë=
NULL
){

751 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "%s: cbuf_√w", 
__FUNCTION__
);

752 
d⁄e
;

755 
i
=0; i<
y•ec
->
yp_Àn
; i++)

756 i‡((
ymod
 = 
y•ec
->
yp_°mt
[
i
]Ë!
NULL
){

757 i‡(
	`y™g2˛i_°mt
(
h
, 
ymod
, 
cbuf
, 
gt
, 0) < 0)

758 
d⁄e
;

760 
	`˛ic⁄_debug
(1, "%s: buf\n%s\n", 
__FUNCTION__
, 
	`cbuf_gë
(
cbuf
));

762 i‡((
globÆs
 = 
	`cvec_√w
(0)Ë=
NULL
)

763 
d⁄e
;

765 i‡(
	`˛igí_∑r£_°r
(
	`˛i_˛igí
(
h
), 
	`cbuf_gë
(
cbuf
),

766 "y™g2˛i", 
±√w
, 
globÆs
) < 0)

767 
d⁄e
;

768 
	`cvec_‰ì
(
globÆs
);

774 i‡(
	`˛igí_ex∑ndv_°r2‚
(*
±√w
, (
ex∑ndv_°r2‚_t
*)
˛ix⁄_°r2‚
, 
NULL
) < 0)

775 
d⁄e
;

777 
ªtvÆ
 = 0;

778 
d⁄e
:

779 
	`cbuf_‰ì
(
cbuf
);

780  
ªtvÆ
;

781 
	}
}

	@clixon-master/apps/cli/cli_generate.h

36 #i‚de‡
_CLI_GENERATE_H_


37 
	#_CLI_GENERATE_H_


	)

42 
y™g2˛i
(
˛ic⁄_h™dÀ
 
h
, 
y™g_•ec
 *
y•ec
, 
∑r£_åì
 *
±√w
,

43 
gímodñ_ty≥
 
gt
);

	@clixon-master/apps/cli/cli_handle.c

37 #ifde‡
HAVE_CONFIG_H


38 
	~"˛ix⁄_c⁄fig.h
"

41 
	~<°dio.h
>

42 
	~<°rög.h
>

43 
	~<°dlib.h
>

44 
	~<uni°d.h
>

45 
	~<°d¨g.h
>

46 
	~<sy¶og.h
>

47 
	~<î∫o.h
>

48 
	~<as£π.h
>

49 
	~<dlf˙.h
>

50 
	~<dúít.h
>

51 
	~<gΩ.h
>

52 
	~<sys/ty≥s.h
>

53 
	~<sys/°©.h
>

54 
	~<sys/∑øm.h
>

55 
	~<√töë/ö.h
>

58 
	~<˛igí/˛igí.h
>

61 
	~<˛ix⁄/˛ix⁄.h
>

63 
	~"˛ix⁄_˛i_≠i.h
"

64 
	~"˛i_∂ugö.h
"

65 
	~"˛i_h™dÀ.h
"

67 
	#CLICON_MAGIC
 0x99ØÁbe

	)

69 
	#h™dÀ
(
h
Ë(
	`as£π
(
	`˛ic⁄_h™dÀ_check
(h)==0),(
˛i_h™dÀ
 *)(h))

	)

70 
	#˛igí
(
h
Ë(
	`h™dÀ
(h)->
˛_˛igí
)

	)

78 
	s˛i_h™dÀ
 {

79 
	m˛_magic
;

80 
˛ic⁄_hash_t
 *
	m˛_c›t
;

81 
˛ic⁄_hash_t
 *
	m˛_d©a
;

83 
˛igí_h™dÀ
 
	m˛_˛igí
;

85 
˛i_sy¡ax_t
 *
	m˛_°x
;

91 
˛ic⁄_h™dÀ


92 
	$˛i_h™dÀ_öô
()

94 
˛i_h™dÀ
 *
˛
;

95 
˛igí_h™dÀ
 
˛ih
 = 
NULL
;

96 
˛ic⁄_h™dÀ
 
h
 = 
NULL
;

98 i‡((
˛
 = (
˛i_h™dÀ
 *)
	`˛ic⁄_h™dÀ_öô0
((˛i_h™dÀ))Ë=
NULL
)

99  
NULL
;

101 i‡((
˛ih
 = 
	`˛igí_öô
()Ë=
NULL
){

102 
	`˛ic⁄_h™dÀ_exô
((
˛ic⁄_h™dÀ
)
˛
);

103 
d⁄e
;

105 
	`˛igí_u£rh™dÀ_£t
(
˛ih
, 
˛
);

106 
˛
->
˛_˛igí
 = 
˛ih
;

107 
h
 = (
˛ic⁄_h™dÀ
)
˛
;

108 
d⁄e
:

109  
h
;

110 
	}
}

115 
	$˛i_h™dÀ_exô
(
˛ic⁄_h™dÀ
 
h
)

117 
˛igí_h™dÀ
 
ch
 = 
	`˛igí
(
h
);

118 
˛i_h™dÀ
 *
˛
 = 
	`h™dÀ
(
h
);

120 i‡(
˛
->
˛_°x
)

121 
	`‰ì
(
˛
->
˛_°x
);

122 
	`˛ic⁄_h™dÀ_exô
(
h
);

124 
	`˛igí_exô
(
ch
);

127 
	}
}

134 
˛i_sy¡ax_t
 *

135 
	$˛i_sy¡ax
(
˛ic⁄_h™dÀ
 
h
)

137 
˛i_h™dÀ
 *
˛
 = 
	`h™dÀ
(
h
);

138  
˛
->
˛_°x
;

139 
	}
}

143 
	$˛i_sy¡ax_£t
(
˛ic⁄_h™dÀ
 
h
,

144 
˛i_sy¡ax_t
 *
°x
)

146 
˛i_h™dÀ
 *
˛
 = 
	`h™dÀ
(
h
);

148 i‡(
˛
->
˛_°x
)

149 
	`‰ì
(
˛
->
˛_°x
);

150 
˛
->
˛_°x
 = 
°x
;

152 
	}
}

156 
˛igí_h™dÀ


157 
	$˛i_˛igí
(
˛ic⁄_h™dÀ
 
h
)

159  
	`˛igí
(
h
);

160 
	}
}

163 
	$˛i_∑r£_fûe
(
˛ic⁄_h™dÀ
 
h
,

164 
FILE
 *
f
,

165 *
«me
,

166 
∑r£_åì
 *
±
,

167 
cvec
 *
globÆs
)

169 
˛igí_h™dÀ
 
ch
 = 
	`˛igí
(
h
);

171  
	`˛igí_∑r£_fûe
(
ch
, 
f
, 
«me
, 
±
, 
globÆs
);

172 
	}
}

175 
	$˛i_su•_hook
(
˛ic⁄_h™dÀ
 
h
,

176 
˛igí_su•_cb_t
 *
‚
)

178 
˛igí_h™dÀ
 
ch
 = 
	`˛igí
(
h
);

181  
	`˛igí_su•_hook
(
ch
, 
‚
);

182 
	}
}

184 
	$˛i_öãºu±_hook
(
˛ic⁄_h™dÀ
 
h
,

185 
˛igí_öãºu±_cb_t
 *
‚
)

187 
˛igí_h™dÀ
 
ch
 = 
	`˛igí
(
h
);

190  
	`˛igí_öãºu±_hook
(
ch
, 
‚
);

191 
	}
}

194 
	$˛i_nom©ch
(
˛ic⁄_h™dÀ
 
h
)

196 
˛igí_h™dÀ
 
ch
 = 
	`˛igí
(
h
);

198  
	`˛igí_nom©ch
(
ch
);

199 
	}
}

202 
	$˛i_¥om±_£t
(
˛ic⁄_h™dÀ
 
h
, *
¥om±
)

204 
˛igí_h™dÀ
 
ch
 = 
	`˛igí
(
h
);

205  
	`˛igí_¥om±_£t
(
ch
, 
¥om±
);

206 
	}
}

209 
	$˛i_logsy¡ax_£t
(
˛ic⁄_h™dÀ
 
h
, 
°©us
)

211 
˛igí_h™dÀ
 
ch
 = 
	`˛igí
(
h
);

212  
	`˛igí_logsy¡ax_£t
(
ch
, 
°©us
);

213 
	}
}

	@clixon-master/apps/cli/cli_handle.h

37 #i‚de‡
_CLI_HANDLE_H_


38 
	#_CLI_HANDLE_H_


	)

44 
˛i_∑r£_fûe
(
˛ic⁄_h™dÀ
 
h
,

45 
FILE
 *
f
,

46 *
«me
,

47 
∑r£_åì
 *
±
,

48 
cvec
 *
globÆs
);

50 
˛i_su•_hook
(
˛ic⁄_h™dÀ
 
h
, 
˛igí_su•_cb_t
 *
‚
);

52 
˛i_öãºu±_hook
(
˛ic⁄_h™dÀ
 
h
, 
˛igí_öãºu±_cb_t
 *
‚
);

54 *
˛i_nom©ch
(
˛ic⁄_h™dÀ
 
h
);

56 
˛i_¥om±_£t
(
˛ic⁄_h™dÀ
 
h
, *
¥om±
);

58 
˛i_logsy¡ax_£t
(
˛ic⁄_h™dÀ
 
h
, 
°©us
);

61 
˛i_sy¡ax_t
 *
˛i_sy¡ax
(
˛ic⁄_h™dÀ
 
h
);

63 
˛i_sy¡ax_£t
(
˛ic⁄_h™dÀ
 
h
, 
˛i_sy¡ax_t
 *
°x
);

	@clixon-master/apps/cli/cli_main.c

37 #ifde‡
HAVE_CONFIG_H


38 
	~"˛ix⁄_c⁄fig.h
"

41 
	~<°dio.h
>

42 
	#__USE_GNU


	)

43 
	~<°rög.h
>

44 
	~<°dlib.h
>

45 
	~<°d¨g.h
>

46 
	~<dlf˙.h
>

47 
	~<dúít.h
>

48 
	~<uni°d.h
>

49 
	~<î∫o.h
>

50 
	~<sig«l.h
>

51 
	~<sy¶og.h
>

52 
	~<sys/ty≥s.h
>

53 
	~<sys/°©.h
>

54 
	~<sys/∑øm.h
>

55 
	~<√töë/ö.h
>

56 
	~<pwd.h
>

57 
	~<as£π.h
>

58 
	~<libgí.h
>

61 
	~<˛igí/˛igí.h
>

64 
	~<˛ix⁄/˛ix⁄.h
>

66 
	~"˛ix⁄_˛i_≠i.h
"

68 
	~"˛i_∂ugö.h
"

69 
	~"˛i_gíî©e.h
"

70 
	~"˛i_comm⁄.h
"

71 
	~"˛i_h™dÀ.h
"

74 
	#CLI_OPTS
 "hD:f:xl:F:1u:d:m:qpGLy:c:"

	)

78 
	$˛i_ãrmö©e
(
˛ic⁄_h™dÀ
 
h
)

80 
y™g_•ec
 *
y•ec
;

82 
	`˛ic⁄_Ωc_˛o£_£ssi⁄
(
h
);

83 i‡((
y•ec
 = 
	`˛ic⁄_db•ec_y™g
(
h
)Ë!
NULL
)

84 
	`y•ec_‰ì
(
y•ec
);

85 
	`˛i_∂ugö_föish
(
h
);

86 
	`˛i_h™dÀ_exô
(
h
);

88 
	}
}

93 
	$˛i_sig_ãrm
(
¨g
)

95 
	`˛ic⁄_log
(
LOG_NOTICE
, "%s: %u Terminated (killed by sig %d)",

96 
__PROGRAM__
, 
	`gëpid
(), 
¨g
);

97 
	`exô
(1);

98 
	}
}

103 
	$˛i_sig«l_öô
 (
˛ic⁄_h™dÀ
 
h
)

105 
	`˛i_sig«l_block
(
h
);

106 
	`£t_sig«l
(
SIGTERM
, 
˛i_sig_ãrm
, 
NULL
);

107 
	}
}

114 
	$˛i_öãø˘ive
(
˛ic⁄_h™dÀ
 
h
)

116 
ªtvÆ
 = -1;

117 
ªs
;

118 *
cmd
;

119 *
√w_mode
;

120 
ªsu…
;

123 !
	`˛igí_exôög
(
	`˛i_˛igí
(
h
))) {

124 
√w_mode
 = 
	`˛i_sy¡ax_mode
(
h
);

125 i‡((
cmd
 = 
	`˛ic⁄_˛úód
(
h
)Ë=
NULL
) {

126 
	`˛igí_exôög_£t
(
	`˛i_˛igí
(
h
), 1);

127 
ªtvÆ
 = -1;

128 
d⁄e
;

130 i‡((
ªs
 = 
	`˛ic⁄_∑r£
(
h
, 
cmd
, &
√w_mode
, &
ªsu…
)) < 0)

131 
d⁄e
;

133 
ªtvÆ
 = 0;

134 
d⁄e
:

135  
ªtvÆ
;

136 
	}
}

142 
	$dump_c⁄figfûe_xml_‚
(
FILE
 *
fout
,

143 c⁄° *
fûíame
)

145 
°©
 
°
;

146 
›t
[1024];

147 
vÆ
[1024];

148 
löe
[1024];

149 *
˝
;

150 
FILE
 *
f
 = 
NULL
;

151 
ªtvÆ
 = -1;

152 *
suffix
;

154 i‡(
fûíame
 =
NULL
 || !
	`°æí
(filename)){

155 
	`˛ic⁄_îr
(
OE_UNIX
, 0, "Not specified");

156 
d⁄e
;

158 i‡((
suffix
 = 
	`rödex
(
fûíame
, '.')Ë!
NULL
 &&

159 
	`°rcmp
((
suffix
+1), "xml") == 0){

160 
	`˛ic⁄_îr
(
OE_CFG
, 0, "C⁄figfûê%†shouldÇŸ bêXML", 
fûíame
);

161 
d⁄e
;

163 i‡(
	`°©
(
fûíame
, &
°
) < 0){

164 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "%s", 
fûíame
);

165 
d⁄e
;

167 i‡(!
	`S_ISREG
(
°
.
°_mode
)){

168 
	`˛ic⁄_îr
(
OE_UNIX
, 0, "%†i†nŸáÑeguœ∏fûe", 
fûíame
);

169 
d⁄e
;

171 i‡((
f
 = 
	`f›í
(
fûíame
, "r")Ë=
NULL
) {

172 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "c⁄figuª fûe: %s", 
fûíame
);

175 
	`˛ic⁄_debug
(2, "Ródög c⁄fig fûê%s", 
__FUNCTION__
, 
fûíame
);

176 
	`Ârötf
(
fout
, "<config>\n");

177 
	`fgës
(
löe
, ÷öe), 
f
)) {

178 i‡((
˝
 = 
	`°rchr
(
löe
, '\n')Ë!
NULL
)

179 *
˝
 = '\0';

181 i‡((
˝
 = 
	`°rchr
(
löe
, '#')Ë!
NULL
)

182 
	`mem˝y
(
˝
, "\n", 2);

183 i‡(
	`ssˇnf
(
löe
, "%†%s", 
›t
, 
vÆ
) < 2)

185 
	`Ârötf
(
fout
, "\t<%s>%s</%s>\n", 
›t
, 
vÆ
, opt);

187 
	`Ârötf
(
fout
, "</config>\n");

188 
ªtvÆ
 = 0;

189 
d⁄e
:

190 i‡(
f
)

191 
	`f˛o£
(
f
);

192  
ªtvÆ
;

193 
	}
}

196 
	$ußge
(*
¨gv0
, 
˛ic⁄_h™dÀ
 
h
)

198 *
c⁄fsock
 = 
	`˛ic⁄_sock
(
h
);

199 *
∂gdú
 = 
	`˛ic⁄_˛i_dú
(
h
);

201 
	`Ârötf
(
°dîr
, "usage:%s [options] [commands]\n"

220 
¨gv0
,

221 
c⁄fsock
 ? confsock : "none",

222 
∂gdú
 ?Ölgdir : "none"

224 
	`exô
(1);

225 
	}
}

230 
	$maö
(
¨gc
, **
¨gv
)

232 
c
;

233 
⁄˚
;

234 *
tmp
;

235 *
¨gv0
 = 
¨gv
[0];

236 
˛ic⁄_h™dÀ
 
h
;

237 
¥öt•ec
 = 0;

238 
¥ötgí
 = 0;

239 
log˛isy¡ax
 = 0;

240 
hñp
 = 0;

241 *
åì«me
 = 
NULL
;

242 
Àn
;

243 
logd°
 = 
CLICON_LOG_STDERR
;

244 *
ª°¨g
 = 
NULL
;

245 
dump_c⁄figfûe_xml
 = 0;

246 
y™g_•ec
 *
y•ec
;

247 
∑sswd
 *
pw
;

250 
⁄˚
 = 0;

253 
	`˛ic⁄_log_öô
(
__PROGRAM__
, 
LOG_INFO
, 
logd°
);

255 i‡((
h
 = 
	`˛i_h™dÀ_öô
()Ë=
NULL
)

256 
d⁄e
;

258 i‡((
pw
 = 
	`gëpwuid
(
	`gëuid
())Ë=
NULL
){

259 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "getpwuid");

260 
d⁄e
;

262 i‡(
	`˛ic⁄_u£∫ame_£t
(
h
, 
pw
->
pw_«me
) < 0)

263 
d⁄e
;

265 
	`˛igí_commít_£t
(
	`˛i_˛igí
(
h
), '#');

270 
›töd
 = 1;

271 
›ãº
 = 0;

272 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, 
CLI_OPTS
)) != -1)

273 
c
) {

280 
hñp
 = 1;

283 i‡(
	`ssˇnf
(
›èrg
, "%d", &
debug
) != 1)

284 
	`ußge
(
¨gv
[0], 
h
);

287 i‡(!
	`°æí
(
›èrg
))

288 
	`ußge
(
¨gv
[0], 
h
);

289 
	`˛ic⁄_›ti⁄_°r_£t
(
h
, "CLICON_CONFIGFILE", 
›èrg
);

292 
dump_c⁄figfûe_xml
++;

295 
›èrg
[0]){

297 
logd°
 = 
CLICON_LOG_SYSLOG
;

300 
logd°
 = 
CLICON_LOG_STDERR
;

303 
logd°
 = 
CLICON_LOG_STDOUT
;

306 
	`ußge
(
¨gv
[0], 
h
);

313 
	`˛ic⁄_log_öô
(
__PROGRAM__
, 
debug
?
LOG_DEBUG
:
LOG_INFO
, 
logd°
);

315 
	`˛ic⁄_debug_öô
(
debug
, 
NULL
);

318 i‡(
dump_c⁄figfûe_xml
) {

319 
˛ic⁄_hash_t
 *
c›t
 = 
	`˛ic⁄_›ti⁄s
(
h
);

320 *
c⁄figfûe
 = 
	`hash_vÆue
(
c›t
, "CLICON_CONFIGFILE", 
NULL
);

321 i‡(
	`dump_c⁄figfûe_xml_‚
(
°dout
, 
c⁄figfûe
) < 0)

322 
d⁄e
;

326 i‡(
	`˛ic⁄_›ti⁄s_maö
(
h
) < 0){

327 i‡(
hñp
)

328 
	`ußge
(
¨gv
[0], 
h
);

333 
›ãº
 = 0;

334 
›töd
 = 1;

335 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, 
CLI_OPTS
)) != -1){

336 
c
) {

343 i‡(
	`‰e›í
(
›èrg
, "r", 
°dö
Ë=
NULL
){

344 
	`˛i_ouçut
(
°dîr
, "‰e›í: %s\n", 
	`°ªº‹
(
î∫o
));

349 
⁄˚
 = 1;

352 i‡(!
	`°æí
(
›èrg
))

353 
	`ußge
(
¨gv
[0], 
h
);

354 
	`˛ic⁄_›ti⁄_°r_£t
(
h
, "CLICON_SOCK", 
›èrg
);

357 i‡(!
	`°æí
(
›èrg
))

358 
	`ußge
(
¨gv
[0], 
h
);

359 
	`˛ic⁄_›ti⁄_°r_£t
(
h
, "CLICON_CLI_DIR", 
›èrg
);

362 i‡(!
	`°æí
(
›èrg
))

363 
	`ußge
(
¨gv
[0], 
h
);

364 
	`˛ic⁄_›ti⁄_°r_£t
(
h
, "CLICON_CLI_MODE", 
›èrg
);

367 
	`˛ic⁄_quõt_mode_£t
(
h
, 1);

370 
¥öt•ec
++;

373 
¥ötgí
++;

376 
log˛isy¡ax
++;

379 
	`˛ic⁄_›ti⁄_°r_£t
(
h
, "CLICON_YANG_MODULE_MAIN", 
›èrg
);

383 
	`˛ic⁄_›ti⁄_°r_£t
(
h
, "CLICON_CLISPEC_FILE", 
›èrg
);

387 
	`ußge
(
¨gv
[0], 
h
);

391 
¨gc
 -
›töd
;

392 
¨gv
 +
›töd
;

395 i‡(
hñp
)

396 
	`ußge
(
¨gv
[0], 
h
);

399 
	`˛i_sig«l_öô
(
h
);

405 
	`cv_ex˛ude_keys
(
	`˛ic⁄_˛i_v¨⁄ly
(
h
));

408 i‡((
y•ec
 = 
	`y™g_•ec_maö
(
h
)Ë=
NULL
)

409 
d⁄e
;

410 i‡(
¥öt•ec
)

411 
	`y™g_¥öt
(
°dout
, (
y™g_node
*)
y•ec
);

416 i‡(
	`˛ic⁄_˛i_gímodñ
(
h
)){

417 
∑r£_åì
 
±
 = {0,};

420 i‡(
	`y™g2˛i
(
h
, 
y•ec
, &
±
, 
	`˛ic⁄_˛i_gímodñ_ty≥
(h)) < 0)

421 
d⁄e
;

423 
Àn
 = 
	`°æí
("d©amodñ:"Ë+ såÀn(
	`˛ic⁄_db•ec_«me
(
h
)) + 1;

424 i‡((
åì«me
 = 
	`mÆloc
(
Àn
)Ë=
NULL
){

425 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "malloc");

426 
d⁄e
;

428 
	`¢¥ötf
(
åì«me
, 
Àn
, "d©amodñ:%s", 
	`˛ic⁄_db•ec_«me
(
h
));

429 
	`˛igí_åì_add
(
	`˛i_˛igí
(
h
), 
åì«me
, 
±
);

431 i‡(
¥ötgí
)

432 
	`˛igí_¥öt
(
°dout
, 
±
, 1);

436 i‡(
	`˛i_sy¡ax_lﬂd
(
h
) < 0)

437 
d⁄e
;

440 i‡(
	`˛ic⁄_›ti⁄_exi°s
(
h
, "CLICON_CLI_MODE"))

441 i‡((
tmp
 = 
	`˛ic⁄_˛i_mode
(
h
)Ë!
NULL
)

442 i‡(
	`˛i_£t_sy¡ax_mode
(
h
, 
tmp
) == 0) {

443 
	`Ârötf
(
°dîr
, "FATAL: FaûedÅÿ£àsy¡ax modê'%s'\n", 
tmp
);

444 
d⁄e
;

447 i‡(!
	`˛i_sy¡ax_mode
(
h
)){

448 
	`Ârötf
 (
°dîr
, "FATAL: No cli mode set (use -m or CLICON_CLI_MODE)\n");

449 
d⁄e
;

451 i‡(
	`˛igí_åì_föd
(
	`˛i_˛igí
(
h
), 
	`˛i_sy¡ax_mode
(h)Ë=
NULL
)

452 
	`˛ic⁄_log
(
LOG_WARNING
, "Nÿsuch clòmode: %†(S≥cify clòmodêwôh CLICON_CLI_MODE i¿c⁄fig fûê‹ -m <mode> o¿comm™dÜöe", 
	`˛i_sy¡ax_mode
(
h
));

454 i‡(
log˛isy¡ax
)

455 
	`˛i_logsy¡ax_£t
(
h
, 
log˛isy¡ax
);

457 i‡(
debug
)

458 
	`˛ic⁄_›ti⁄_dump
(
h
, 
debug
);

461 
ª°¨g
 = 
	`˛ic⁄_°rjoö
(
¨gc
, 
¨gv
, " ");

464 
	`˛igí_m©ch_cgv¨_ßme
(1);

469 
tmp
 = *(
¨gv
-1);

470 *(
¨gv
-1Ë
¨gv0
;

471 
	`˛ix⁄_∂ugö_°¨t
(
h
, 
¨gc
+1, 
¨gv
-1);

472 *(
¨gv
-1Ë
tmp
;

474 
	`˛igí_löe_s¸ﬁlög_£t
(
	`˛i_˛igí
(
h
), 
	`˛ic⁄_›ti⁄_öt
(h,"CLICON_CLI_LINESCROLLING"));

476 i‡(
ª°¨g
 !
NULL
 && 
	`°æí
(restarg)){

477 *
mode
 = 
	`˛i_sy¡ax_mode
(
h
);

478 
ªsu…
;

479 
	`˛ic⁄_∑r£
(
h
, 
ª°¨g
, &
mode
, &
ªsu…
);

482 i‡(!
⁄˚
)

483 
	`˛i_öãø˘ive
(
h
);

484 
d⁄e
:

485 i‡(
åì«me
)

486 
	`‰ì
(
åì«me
);

487 i‡(
ª°¨g
)

488 
	`‰ì
(
ª°¨g
);

490 
	`˛ic⁄_log_öô
(
__PROGRAM__
, 
LOG_INFO
, 0);

491 
	`˛ic⁄_log
(
LOG_NOTICE
, "%s: %u Tîmö©ed\n", 
__PROGRAM__
, 
	`gëpid
());

492 i‡(
h
)

493 
	`˛i_ãrmö©e
(
h
);

496 
	}
}

	@clixon-master/apps/cli/cli_plugin.c

37 #ifde‡
HAVE_CONFIG_H


38 
	~"˛ix⁄_c⁄fig.h
"

41 
	~<°dio.h
>

42 
	~<°rög.h
>

43 
	~<°dlib.h
>

44 
	~<uni°d.h
>

45 
	~<°d¨g.h
>

46 
	~<sy¶og.h
>

47 
	~<î∫o.h
>

48 
	~<as£π.h
>

49 
	~<dlf˙.h
>

50 
	~<dúít.h
>

51 
	~<libgí.h
>

52 
	~<gΩ.h
>

53 
	~<sys/ty≥s.h
>

54 
	~<sys/°©.h
>

55 
	~<sys/∑øm.h
>

56 
	~<√töë/ö.h
>

59 
	~<˛igí/˛igí.h
>

62 
	~<˛ix⁄/˛ix⁄.h
>

65 
	~"˛ix⁄_˛i_≠i.h
"

66 
	~"˛i_∂ugö.h
"

67 
	~"˛i_h™dÀ.h
"

77 
˛i_sy¡axmode_t
 *

78 
	$sy¡ax_mode_föd
(
˛i_sy¡ax_t
 *
°x
,

79 c⁄° *
mode
,

80 
¸óã
)

82 
˛i_sy¡axmode_t
 *
m
;

84 
m
 = 
°x
->
°x_modes
;

85 i‡(
m
) {

87 i‡(
	`°rcmp
(
m
->
csm_«me
, 
mode
) == 0)

88  
m
;

89 
m
 = 
	`NEXTQ
(
˛i_sy¡axmode_t
 *, m);

90 } 
m
 && m !
°x
->
°x_modes
);

93 i‡(
¸óã
 == 0)

94  
NULL
;

96 i‡((
m
 = 
	`mÆloc
((
˛i_sy¡axmode_t
))Ë=
NULL
) {

97 
	`≥º‹
("malloc");

98  
NULL
;

100 
	`mem£t
 (
m
, 0,  (*m));

101 
	`°∫˝y
(
m
->
csm_«me
, 
mode
, (m->csm_name)-1);

102 
	`°∫˝y
(
m
->
csm_¥om±
, 
CLI_DEFAULT_PROMPT
, (m->csm_prompt)-1);

103 
	`INSQ
(
m
, 
°x
->
°x_modes
);

104 
°x
->
°x_nmodes
++;

106  
m
;

107 
	}
}

114 
	$gí_∑r£_åì
(
˛ic⁄_h™dÀ
 
h
,

115 
˛i_sy¡axmode_t
 *
m
)

117 
	`˛igí_åì_add
(
	`˛i_˛igí
(
h
), 
m
->
csm_«me
, m->
csm_±
);

119 
	}
}

125 
	$sy¡ax_≠≥nd
(
˛ic⁄_h™dÀ
 
h
,

126 
˛i_sy¡ax_t
 *
°x
,

127 c⁄° *
«me
,

128 
∑r£_åì
 
±
)

130 
˛i_sy¡axmode_t
 *
m
;

132 i‡((
m
 = 
	`sy¡ax_mode_föd
(
°x
, 
«me
, 1)Ë=
NULL
)

135 i‡(
	`˛igí_∑r£åì_mîge
(&
m
->
csm_±
, 
NULL
, 
±
) < 0)

139 
	}
}

145 
	$˛i_sy¡ax_u∆ﬂd
(
˛ic⁄_h™dÀ
 
h
)

147 
˛i_sy¡ax_t
 *
°x
 = 
	`˛i_sy¡ax
(
h
);

148 
˛i_sy¡axmode_t
 *
m
;

150 i‡(
°x
 =
NULL
)

153 
°x
->
°x_nmodes
 > 0) {

154 
m
 = 
°x
->
°x_modes
;

155 
	`DELQ
(
m
, 
°x
->
°x_modes
, 
˛i_sy¡axmode_t
 *);

156 i‡(
m
)

157 
	`‰ì
(
m
);

158 
°x
->
°x_nmodes
--;

161 
	}
}

179 
	$˛ix⁄_°r2‚
(*
«me
,

180 *
h™dÀ
,

181 **
îr‹
)

183 *
‚
 = 
NULL
;

186 *
îr‹
 = 
NULL
;

189 i‡(
h™dÀ
) {

190 
	`dÀº‹
();

191 
‚
 = 
	`dlsym
(
h™dÀ
, 
«me
);

192 i‡((*
îr‹
 = (*)
	`dÀº‹
()Ë=
NULL
)

193  
‚
;

200 
	`dÀº‹
();

201 
‚
 = 
	`dlsym
(
NULL
, 
«me
);

202 i‡((*
îr‹
 = (*)
	`dÀº‹
()Ë=
NULL
)

203  
‚
;

209  
NULL
;

210 
	}
}

218 
	$˛i_lﬂd_sy¡ax
(
˛ic⁄_h™dÀ
 
h
,

219 c⁄° *
fûíame
,

220 c⁄° *
dú
)

222 *
h™dÀ
 = 
NULL
;

223 *
mode
 = 
NULL
;

224 
∑r£_åì
 
±
 = {0,};

225 
ªtvÆ
 = -1;

226 
FILE
 *
f
;

227 
fûï©h
[
MAXPATHLEN
];

228 
cvec
 *
cvv
 = 
NULL
;

229 *
¥om±
 = 
NULL
;

230 **
vec
 = 
NULL
;

231 
i
, 
nvec
;

232 *
∂g«m
;

233 
˛ix⁄_∂ugö
 *
˝
;

235 i‡(
dú
)

236 
	`¢¥ötf
(
fûï©h
, 
MAXPATHLEN
-1, "%s/%s", 
dú
, 
fûíame
);

238 
	`¢¥ötf
(
fûï©h
, 
MAXPATHLEN
-1, "%s", 
fûíame
);

239 i‡((
cvv
 = 
	`cvec_√w
(0)Ë=
NULL
){

240 
	`˛ic⁄_îr
(
OE_PLUGIN
, 
î∫o
, "cvec_new");

241 
d⁄e
;

244 i‡((
f
 = 
	`f›í
(
fûï©h
, "r")Ë=
NULL
){

245 
	`˛ic⁄_îr
(
OE_PLUGIN
, 
î∫o
, "f›í %s", 
fûï©h
);

246 
d⁄e
;

250 i‡(
	`˛i_∑r£_fûe
(
h
, 
f
, 
fûï©h
, &
±
, 
cvv
) < 0){

251 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "ÁûedÅÿ∑r£ clòfûê%s", 
fûï©h
);

252 
	`f˛o£
(
f
);

253 
d⁄e
;

255 
	`f˛o£
(
f
);

258 
¥om±
 = 
	`cvec_föd_°r
(
cvv
, "CLICON_PROMPT");

259 
∂g«m
 = 
	`cvec_föd_°r
(
cvv
, "CLICON_PLUGIN");

260 
mode
 = 
	`cvec_föd_°r
(
cvv
, "CLICON_MODE");

262 i‡(
∂g«m
 !
NULL
) {

263 i‡((
˝
 = 
	`˛ix⁄_∂ugö_föd
(
h
, 
∂g«m
)Ë!
NULL
)

264 
h™dÀ
 = 
˝
->
˝_h™dÀ
;

265 i‡(
h™dÀ
 =
NULL
){

266 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "CLICON_PLUGIN setÅo '%s' in %s butÖlugin %s.soÇot found in %s\n",

267 
∂g«m
, 
fûíame
,Ölgnam,

268 
	`˛ic⁄_˛i_dú
(
h
));

269 
d⁄e
;

273 i‡(
	`˛igí_ˇŒbackv_°r2‚
(
±
, (
cgv_°r2‚_t
*)
˛ix⁄_°r2‚
, 
h™dÀ
) < 0){

274 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "Mismatch between CLIgen file '%s'ánd CLIÖlugin file '%s'. SomeÖossibleÉrrors:\n\t1. A function given inÅhe CLIgen file doesÇotÉxist inÅheÖlugin (ieÜinkÉrror)\n\t2. The CLIgen spec doesÇotÖointÅoÅhe correctÖlugin .so file (CLICON_PLUGIN=\"%s\" is wrong)",

275 
fûíame
, 
∂g«m
,Ölgnam);

276 
d⁄e
;

278 i‡(
	`˛igí_ex∑ndv_°r2‚
(
±
, (
ex∑ndv_°r2‚_t
*)
˛ix⁄_°r2‚
, 
h™dÀ
) < 0)

279 
d⁄e
;

282 i‡(
mode
 =
NULL
 || 
	`°æí
(mode) < 1) {

283 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "Nÿsy¡ax modê•ecifõd i¿%s", 
fûï©h
);

284 
d⁄e
;

286 i‡((
vec
 = 
	`˛ic⁄_°r£p
(
mode
, ":", &
nvec
)Ë=
NULL
)

287 
d⁄e
;

288 
i
 = 0; i < 
nvec
; i++) {

289 i‡(
	`sy¡ax_≠≥nd
(
h
,

290 
	`˛i_sy¡ax
(
h
),

291 
vec
[
i
],

292 
±
) < 0) {

293 
d⁄e
;

295 i‡(
¥om±
)

296 
	`˛i_£t_¥om±
(
h
, 
vec
[
i
], 
¥om±
);

299 
	`˛igí_∑r£åì_‰ì
(
±
, 1);

300 
ªtvÆ
 = 0;

302 
d⁄e
:

303 i‡(
cvv
)

304 
	`cvec_‰ì
(
cvv
);

305 i‡(
vec
)

306 
	`‰ì
(
vec
);

307  
ªtvÆ
;

308 
	}
}

314 
	$˛i_sy¡ax_lﬂd
 (
˛ic⁄_h™dÀ
 
h
)

316 
ªtvÆ
 = -1;

317 *
∂ugö_dú
 = 
NULL
;

318 *
˛i•ec_dú
 = 
NULL
;

319 *
˛i•ec_fûe
 = 
NULL
;

320 
ndp
;

321 
i
;

322 
dúít
 *
dp
 = 
NULL
;

323 
˛i_sy¡ax_t
 *
°x
;

324 
˛i_sy¡axmode_t
 *
m
;

325 
˛igí_su•_cb_t
 *
‚s
 = 
NULL
;

326 
˛igí_öãºu±_cb_t
 *
‚i
 = 
NULL
;

327 
˛ix⁄_∂ugö
 *
˝
;

330 i‡((
°x
 = 
	`˛i_sy¡ax
(
h
)Ë!
NULL
)

334 
∂ugö_dú
 = 
	`˛ic⁄_˛i_dú
(
h
);

335 
˛i•ec_dú
 = 
	`˛ic⁄_˛i•ec_dú
(
h
);

336 
˛i•ec_fûe
 = 
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_CLISPEC_FILE");

339 i‡((
°x
 = 
	`mÆloc
((*°x))Ë=
NULL
) {

340 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "malloc");

341 
d⁄e
;

343 
	`mem£t
 (
°x
, 0,  (*stx));

345 
	`˛i_sy¡ax_£t
(
h
, 
°x
);

348 i‡(
∂ugö_dú
 &&

349 
	`˛ix⁄_∂ugös_lﬂd
(
h
, 
CLIXON_PLUGIN_INIT
, 
∂ugö_dú
, 
NULL
)< 0)

350 
d⁄e
;

351 i‡(
˛i•ec_fûe
){

352 i‡(
	`˛i_lﬂd_sy¡ax
(
h
, 
˛i•ec_fûe
, 
NULL
) < 0)

353 
d⁄e
;

355 i‡(
˛i•ec_dú
){

357 i‡((
ndp
 = 
	`˛ic⁄_fûe_dúít
(
˛i•ec_dú
, &
dp
, "(.˛i)$", 
S_IFREG
)) < 0)

358 
d⁄e
;

360 
i
 = 0; i < 
ndp
; i++) {

361 
	`˛ic⁄_debug
(1, "DEBUG: Loading syntax '%.*s'",

362 ()
	`°æí
(
dp
[
i
].
d_«me
)-4, dp[i].d_name);

363 i‡(
	`˛i_lﬂd_sy¡ax
(
h
, 
dp
[
i
].
d_«me
, 
˛i•ec_dú
) < 0)

364 
d⁄e
;

368 i‡(
°x
->
°x_nmodes
 <= 0) {

369 
ªtvÆ
 = 0;

370 
d⁄e
;

373 
m
 = 
°x
->
°x_modes
;

375 i‡(
	`gí_∑r£_åì
(
h
, 
m
) != 0)

376 
d⁄e
;

377 
m
 = 
	`NEXTQ
(
˛i_sy¡axmode_t
 *, m);

378 } 
m
 && m !
°x
->
°x_modes
);

381 
˝
 = 
NULL
;

382 (
˝
 = 
	`˛ix⁄_∂ugö_óch
(
h
, cp)Ë!
NULL
) {

383 i‡(
‚s
==
NULL
 && (‚†
˝
->
˝_≠i
.
ˇ_su•íd
) != NULL)

384 i‡(
	`˛i_su•_hook
(
h
, 
‚s
) < 0)

385 
d⁄e
;

386 i‡(
‚i
==
NULL
 && (‚ò
˝
->
˝_≠i
.
ˇ_öãºu±
) != NULL)

387 i‡(
	`˛i_su•_hook
(
h
, 
‚s
) < 0)

388 
d⁄e
;

392 
ªtvÆ
 = 0;

394 
d⁄e
:

395 i‡(
ªtvÆ
 != 0) {

396 
	`˛ix⁄_∂ugö_exô
(
h
);

397 
	`˛i_sy¡ax_u∆ﬂd
(
h
);

398 
	`˛i_sy¡ax_£t
(
h
, 
NULL
);

400 i‡(
dp
)

401 
	`‰ì
(
dp
);

402  
ªtvÆ
;

403 
	}
}

409 
	$˛i_∂ugö_föish
(
˛ic⁄_h™dÀ
 
h
)

412 
	`˛ix⁄_∂ugö_exô
(
h
);

414 
	`˛i_sy¡ax_u∆ﬂd
(
h
);

415 
	`˛i_sy¡ax_£t
(
h
, 
NULL
);

417 
	}
}

425 
	$˛i_h™dÀr_îr
(
FILE
 *
f
)

427 i‡(
˛ic⁄_î∫o
){

428 
	`˛i_ouçut
(
f
, "%s: %s",

429 
	`˛ic⁄_°ªº‹
(
˛ic⁄_î∫o
),

430 
˛ic⁄_îr_ªas⁄
);

431 i‡(
˛ic⁄_subî∫o
)

432 
	`˛i_ouçut
(
f
, ": %s", 
	`°ªº‹
(
˛ic⁄_subî∫o
));

433 
	`˛i_ouçut
(
f
, "\n");

436 
	`˛i_ouçut
(
f
, "CLI commandÉrror\n");

438 
	}
}

446 
	$˛ic⁄_evÆ
(
˛ic⁄_h™dÀ
 
h
,

447 *
cmd
,

448 
cg_obj
 *
m©ch_obj
,

449 
cvec
 *
cvv
)

451 
	`˛i_ouçut_ª£t
();

452 i‡(!
	`˛igí_exôög
(
	`˛i_˛igí
(
h
))) {

453 
	`˛ic⁄_îr_ª£t
();

454 i‡(
	`˛igí_evÆ
(
	`˛i_˛igí
(
h
), 
m©ch_obj
, 
cvv
) < 0) {

459 
	`˛i_h™dÀr_îr
(
°dout
);

464 
	}
}

483 
	$˛ic⁄_∑r£
(
˛ic⁄_h™dÀ
 
h
,

484 *
cmd
,

485 **
modíamï
,

486 *
ªsu…
)

488 *
modíame
;

489 *
modíame0
;

490 
ªs
 = -1;

491 
r
;

492 
˛i_sy¡ax_t
 *
°x
 = 
NULL
;

493 
˛i_sy¡axmode_t
 *
smode
;

494 
∑r£_åì
 *
±
;

495 
cg_obj
 *
m©ch_obj
;

496 
cvec
 *
cvv
 = 
NULL
;

497 
FILE
 *
f
;

499 i‡(
	`˛ic⁄_gë_logÊags
()&
CLICON_LOG_STDOUT
)

500 
f
 = 
°dout
;

502 
f
 = 
°dîr
;

503 
°x
 = 
	`˛i_sy¡ax
(
h
);

504 i‡((
modíame
 = *
modíamï
Ë=
NULL
) {

505 
smode
 = 
°x
->
°x_a˘ive_mode
;

506 
modíame
 = 
smode
->
csm_«me
;

509 i‡((
smode
 = 
	`sy¡ax_mode_föd
(
°x
, 
modíame
, 0)Ë=
NULL
) {

510 
	`˛i_ouçut
(
f
, "C™'àföd sy¡ax modê'%s'\n", 
modíame
);

514 
smode
) {

515 
modíame0
 = 
NULL
;

516 i‡((
±
 = 
	`˛igí_åì_a˘ive_gë
(
	`˛i_˛igí
(
h
))Ë!
NULL
)

517 
modíame0
 = 
±
->
±_«me
;

518 i‡(
	`˛igí_åì_a˘ive_£t
(
	`˛i_˛igí
(
h
), 
modíame
) < 0){

519 
	`Ârötf
(
°dîr
, "NÿsuchÖ¨£-åìÑegi°îed: %s\n", 
modíame
);

520 
d⁄e
;

522 i‡((
±
 = 
	`˛igí_åì_a˘ive_gë
(
	`˛i_˛igí
(
h
))Ë=
NULL
){

523 
	`Ârötf
(
°dîr
, "NÿsuchÖ¨£-åìÑegi°îed: %s\n", 
modíame
);

524 
d⁄e
;

526 i‡((
cvv
 = 
	`cvec_√w
(0)Ë=
NULL
){

527 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "cvec_new");

528 
d⁄e
;;

530 
ªs
 = 
	`˛úód_∑r£
(
	`˛i_˛igí
(
h
), 
cmd
, 
±
, &
m©ch_obj
, 
cvv
);

531 i‡(
ªs
 !
CG_MATCH
)

532 
	`±_ex∑nd_˛ónup_1
(
±
);

533 i‡(
modíame0
){

534 
	`˛igí_åì_a˘ive_£t
(
	`˛i_˛igí
(
h
), 
modíame0
);

535 
modíame0
 = 
NULL
;

537 
ªs
) {

538 
CG_EOF
:

539 
CG_ERROR
:

540 
	`˛i_ouçut
(
f
, "CLIÖ¨£Éº‹: %s\n", 
cmd
);

541 
d⁄e
;

542 
CG_NOMATCH
:

543 
smode
 = 
NULL
;

546 
	`˛i_ouçut
(
f
, "CLI syntaxÉrror: \"%s\": %s\n",

547 
cmd
, 
	`˛i_nom©ch
(
h
));

549 
CG_MATCH
:

550 i‡(
	`°rcmp
(
modíame
, *
modíamï
)){

551 *
modíamï
 = 
modíame
;

552 
	`˛i_£t_sy¡ax_mode
(
h
, 
modíame
);

554 i‡((
r
 = 
	`˛ic⁄_evÆ
(
h
, 
cmd
, 
m©ch_obj
, 
cvv
)) < 0)

555 
	`˛i_h™dÀr_îr
(
°dout
);

556 
	`±_ex∑nd_˛ónup_1
(
±
);

557 i‡(
ªsu…
)

558 *
ªsu…
 = 
r
;

559 
d⁄e
;

562 
	`˛i_ouçut
(
f
, "CLI sy¡axÉº‹: \"%s\" i†ambiguous\n", 
cmd
);

563 
d⁄e
;

567 
d⁄e
:

568 i‡(
cvv
)

569 
	`cvec_‰ì
(
cvv
);

570  
ªs
;

571 
	}
}

579 
	$˛ic⁄_˛úód
(
˛ic⁄_h™dÀ
 
h
)

581 *
ªt
;

582 *
pfmt
 = 
NULL
;

583 
˛i_sy¡axmode_t
 *
mode
;

584 
˛i_sy¡ax_t
 *
°x
;

585 
˛i_¥om±hook_t
 *
‚
;

586 
˛ix⁄_∂ugö
 *
˝
;

588 
°x
 = 
	`˛i_sy¡ax
(
h
);

589 
mode
 = 
°x
->
°x_a˘ive_mode
;

591 
˝
 = 
NULL
;

592 (
˝
 = 
	`˛ix⁄_∂ugö_óch
(
h
, cp)Ë!
NULL
) {

593 i‡((
‚
 = 
˝
->
˝_≠i
.
ˇ_¥om±
Ë=
NULL
)

595 
pfmt
 = 
	`‚
(
h
, 
mode
->
csm_«me
);

598 i‡(
	`˛ic⁄_quõt_mode
(
h
))

599 
	`˛i_¥om±_£t
(
h
, "");

601 
	`˛i_¥om±_£t
(
h
, 
	`˛i_¥om±
(
pfmt
 ?Öfmà: 
mode
->
csm_¥om±
));

602 
	`˛igí_åì_a˘ive_£t
(
	`˛i_˛igí
(
h
), 
mode
->
csm_«me
);

603 
ªt
 = 
	`˛úód
(
	`˛i_˛igí
(
h
));

604 i‡(
pfmt
)

605 
	`‰ì
(
pfmt
);

606  
ªt
;

607 
	}
}

620 
	$˛i_£t_sy¡ax_mode
(
˛ic⁄_h™dÀ
 
h
,

621 c⁄° *
«me
)

623 
˛i_sy¡axmode_t
 *
mode
;

625 i‡((
mode
 = 
	`sy¡ax_mode_föd
(
	`˛i_sy¡ax
(
h
), 
«me
, 1)Ë=
NULL
)

628 
	`˛i_sy¡ax
(
h
)->
°x_a˘ive_mode
 = 
mode
;

630 
	}
}

636 
	$˛i_sy¡ax_mode
(
˛ic⁄_h™dÀ
 
h
)

638 
˛i_sy¡axmode_t
 *
csm
;

640 i‡((
csm
 = 
	`˛i_sy¡ax
(
h
)->
°x_a˘ive_mode
Ë=
NULL
)

641  
NULL
;

642  
csm
->
csm_«me
;

643 
	}
}

651 
	$˛i_£t_¥om±
(
˛ic⁄_h™dÀ
 
h
,

652 c⁄° *
«me
,

653 c⁄° *
¥om±
)

655 
˛i_sy¡axmode_t
 *
m
;

657 i‡((
m
 = 
	`sy¡ax_mode_föd
(
	`˛i_sy¡ax
(
h
), 
«me
, 1)Ë=
NULL
)

660 
	`°∫˝y
(
m
->
csm_¥om±
, 
¥om±
, (m->csm_prompt)-1);

662 
	}
}

670 
	$¥om±_fmt
 (*
¥om±
,

671 
size_t
 
∂í
,

672 *
fmt
, ...)

674 
va_li°
 
≠
;

675 *
s
 = 
fmt
;

676 
h«me
[1024];

677 
ây
[32];

678 *
tmp
;

679 
ªt
 = -1;

680 
cbuf
 *
cb
 = 
NULL
;

682 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
){

683 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cbuf_new");

684 
d⁄e
;

688 *
s
) {

689 i‡(*
s
 == '%' && *++s) {

690 *
s
) {

692 i‡(
	`gëho°«me
 (
h«me
,  (hname)) != 0)

693 
	`°∫˝y
(
h«me
, "unknown", (hname)-1);

694 
	`˝rötf
(
cb
, "%s", 
h«me
);

697 
tmp
 = 
	`gëív
("USER");

698 
	`˝rötf
(
cb
, "%s", 
tmp
?tmp:"nobody");

701 if(
	`ây«me_r
(
	`fûío
(
°dö
), 
ây
, (tty)-1) < 0)

702 
	`°r˝y
(
ây
, "notty");

703 
	`˝rötf
(
cb
, "%s", 
ây
);

706 
	`˝rötf
(
cb
, "%%");

707 
	`˝rötf
(
cb
, "%c", *
s
);

711 
	`˝rötf
(
cb
, "%c", *
s
);

712 
s
++;

714 
d⁄e
:

715 i‡(
cb
)

716 
fmt
 = 
	`cbuf_gë
(
cb
);

717 
	`va_°¨t
(
≠
, 
fmt
);

718 
ªt
 = 
	`v¢¥ötf
(
¥om±
, 
∂í
, 
fmt
, 
≠
);

719 
	`va_íd
(
≠
);

720 i‡(
cb
)

721 
	`cbuf_‰ì
(
cb
);

722  
ªt
;

723 
	}
}

729 
	$˛i_¥om±
(*
fmt
)

731 
¥om±
[
CLI_PROMPT_LEN
];

733 i‡(
	`¥om±_fmt
(
¥om±
, ’rom±), 
fmt
) < 0)

734  
CLI_DEFAULT_PROMPT
;

736  
¥om±
;

737 
	}
}

	@clixon-master/apps/cli/cli_plugin.h

36 #i‚de‡
_CLI_PLUGIN_H_


37 
	#_CLI_PLUGIN_H_


	)

39 
	~<°dio.h
>

40 
	~<öây≥s.h
>

41 
	~<√töë/ö.h
>

44 (
	t˛ic⁄_ˇŒback_t
)(
	t˛ic⁄_h™dÀ
 
	th
);

48 
qñem_t
 
csm_qñem
;

49 
csm_«me
[256];

50 
csm_¥om±
[
CLI_PROMPT_LEN
];

51 
csm_nsy¡ax
;

52 
∑r£_åì
 
csm_±
;

54 } 
	t˛i_sy¡axmode_t
;

58 
°x_nmodes
;

59 
˛i_sy¡axmode_t
 *
°x_a˘ive_mode
;

60 
˛i_sy¡axmode_t
 *
°x_modes
;

61 } 
	t˛i_sy¡ax_t
;

64 *
	`˛ix⁄_°r2‚
(*
«me
, *
h™dÀ
, **
îr‹
);

66 
	`˛ic⁄_evÆ
(
˛ic⁄_h™dÀ
 
h
, *
cmd
, 
cg_obj
 *
m©ch_obj
, 
cvec
 *
vr
);

68 
	`˛ic⁄_∑r£
(
˛ic⁄_h™dÀ
 
h
, *
cmd
, **
mode
, *
ªsu…
);

70 *
	`˛ic⁄_˛úód
(
˛ic⁄_h™dÀ
 
h
);

72 
	`˛i_∂ugö_föish
(
˛ic⁄_h™dÀ
 
h
);

	@clixon-master/apps/cli/cli_show.c

37 #ifde‡
HAVE_CONFIG_H


38 
	~"˛ix⁄_c⁄fig.h
"

41 
	~<°dlib.h
>

42 
	~<°dio.h
>

43 
	~<°rög.h
>

44 
	~<sig«l.h
>

45 
	~<î∫o.h
>

46 
	~<°d¨g.h
>

47 
	~<time.h
>

48 
	~<˘y≥.h
>

50 
	~<uni°d.h
>

51 #ifde‡
HAVE_CRYPT_H


52 
	~<¸y±.h
>

54 
	~<dúít.h
>

55 
	~<sy¶og.h
>

56 
	~<¨∑/öë.h
>

57 
	~<√töë/ö.h
>

58 
	~<sys/ty≥s.h
>

59 
	~<sys/°©.h
>

60 
	~<f˙é.h
>

61 
	~<sys/waô.h
>

62 
	~<sys/∑øm.h
>

63 
	~<sys/mou¡.h
>

64 
	~<pwd.h
>

65 
	~<as£π.h
>

68 
	~<˛igí/˛igí.h
>

71 
	~<˛ix⁄/˛ix⁄.h
>

74 
	~"˛ix⁄_˛i_≠i.h
"

75 
	~"˛i_comm⁄.h
"

93 
	$ex∑nd_dbv¨
(*
h
,

94 *
«me
,

95 
cvec
 *
cvv
,

96 
cvec
 *
¨gv
,

97 
cvec
 *
comm™ds
,

98 
cvec
 *
hñ±exts
)

100 
ªtvÆ
 = -1;

101 *
≠i_∑th_fmt
;

102 *
≠i_∑th
 = 
NULL
;

103 *
db°r
;

104 
cxobj
 *
xt
 = 
NULL
;

105 *
x∑th
 = 
NULL
;

106 
cxobj
 **
xvec
 = 
NULL
;

107 
cxobj
 *
xîr
;

108 
size_t
 
xÀn
 = 0;

109 
cxobj
 *
x
;

110 *
body°r
;

111 
i
;

112 
j
;

113 
k
;

114 
cg_v¨
 *
cv
;

115 
y™g_•ec
 *
y•ec
;

116 
cxobj
 *
xt›
 = 
NULL
;

117 
cxobj
 *
xbŸ
 = 
NULL
;

118 
y™g_node
 *
y
 = 
NULL
;

119 
y™g_°mt
 *
yty≥
;

120 
y™g_°mt
 *
y∑th
;

121 
cxobj
 *
xcur
;

122 *
x∑thcur
;

123 *
ªas⁄
 = 
NULL
;

125 i‡(
¨gv
 =
NULL
 || 
	`cvec_Àn
(argv) != 2){

126 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "%s:Ñequiresárguments: <db> <xmlkeyfmt>",

127 
__FUNCTION__
);

128 
d⁄e
;

130 i‡((
y•ec
 = 
	`˛ic⁄_db•ec_y™g
(
h
)Ë=
NULL
){

131 
	`˛ic⁄_îr
(
OE_FATAL
, 0, "No DB_SPEC");

132 
d⁄e
;

134 i‡((
cv
 = 
	`cvec_i
(
¨gv
, 0)Ë=
NULL
){

135 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "%s: Error whenáccessingárgument <db>");

136 
d⁄e
;

138 
db°r
 = 
	`cv_°rög_gë
(
cv
);

139 i‡(
	`°rcmp
(
db°r
, "running") != 0 &&

140 
	`°rcmp
(
db°r
, "candidate") != 0 &&

141 
	`°rcmp
(
db°r
, "startup") != 0){

142 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "Nÿsuch dbÇame: %s", 
db°r
);

143 
d⁄e
;

145 i‡((
cv
 = 
	`cvec_i
(
¨gv
, 1)Ë=
NULL
){

146 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "%s: Error whenáccessingárgument <api_path>");

147 
d⁄e
;

149 
≠i_∑th_fmt
 = 
	`cv_°rög_gë
(
cv
);

154 i‡(
	`≠i_∑th_fmt2x∑th
(
≠i_∑th_fmt
, 
cvv
, &
x∑th
) < 0)

155 
d⁄e
;

156 i‡(
	`≠i_∑th_fmt2≠i_∑th
(
≠i_∑th_fmt
, 
cvv
, &
≠i_∑th
) < 0)

157 
d⁄e
;

160 i‡(
	`˛ic⁄_Ωc_gë_c⁄fig
(
h
, 
db°r
, "/", &
xt
) < 0)

161 
d⁄e
;

162 i‡((
xîr
 = 
	`x∑th_fú°
(
xt
, "/Ωc-îr‹")Ë!
NULL
){

163 
	`˛ic⁄_Ωc_gíî©e_îr‹
("Gë c⁄figuøti⁄", 
xîr
);

164 
d⁄e
;

166 
xcur
 = 
xt
;

167 
x∑thcur
 = 
x∑th
;

169 i‡((
xt›
 = 
	`xml_√w
("c⁄fig", 
NULL
, NULL)) == NULL)

170 
d⁄e
;

171 
xbŸ
 = 
xt›
;

175 i‡(
≠i_∑th
 && 
	`≠i_∑th2xml
◊pi_∑th, 
y•ec
, 
xt›
, 
YC_DATANODE
, &
xbŸ
, &
y
) < 0)

176 
d⁄e
;

177 i‡(
y
==
NULL
)

178 
ok
;

187 i‡((
yty≥
 = 
	`y™g_föd
((
y™g_node
*)
y
, 
Y_TYPE
, 
NULL
)) != NULL)

188 i‡(
	`°rcmp
(
yty≥
->
ys_¨gumít
, "leafref")==0){

189 i‡((
y∑th
 = 
	`y™g_föd
((
y™g_node
*)
yty≥
, 
Y_PATH
, 
NULL
)) == NULL){

190 
	`˛ic⁄_îr
(
OE_DB
, 0, "Ló‰e‡%†ªquúe†∑th sèãmít", 
yty≥
->
ys_¨gumít
);

191 
d⁄e
;

193 
x∑thcur
 = 
y∑th
->
ys_¨gumít
;

194 i‡(
	`xml_mîge
(
xt
, 
xt›
, 
y•ec
, &
ªas⁄
) < 0)

195 
d⁄e
;

196 i‡(
ªas⁄
){

197 
	`˛i_ouçut
(
°dîr
, "%s\n", 
ªas⁄
);

198 
d⁄e
;

200 i‡((
xcur
 = 
	`x∑th_fú°
(
xt
, 
x∑th
)Ë=
NULL
){

201 
	`˛ic⁄_îr
(
OE_DB
, 0, "x∑th %†shouldÑëu∫ mîged c⁄ã¡", 
x∑th
);

202 
d⁄e
;

207 
j
 = 0;

208 i‡(
	`x∑th_vec
(
xcur
, 
x∑thcur
, &
xvec
, &
xÀn
) < 0)

209 
d⁄e
;

210 
i
 = 0; i < 
xÀn
; i++) {

211 *
°r
;

212 
x
 = 
xvec
[
i
];

213 i‡(
	`xml_ty≥
(
x
Ë=
CX_BODY
)

214 
body°r
 = 
	`xml_vÆue
(
x
);

216 
body°r
 = 
	`xml_body
(
x
);

217 i‡(
body°r
 =
NULL
){

221 
k
=0; k<
j
; k++){

222 i‡(
	`xml_ty≥
(
xvec
[
k
]Ë=
CX_BODY
)

223 
°r
 = 
	`xml_vÆue
(
xvec
[
k
]);

225 
°r
 = 
	`xml_body
(
xvec
[
k
]);

226 i‡(
	`°rcmp
(
°r
, 
body°r
)==0)

229 i‡(
k
==
j
)

230 
xvec
[
j
++] = 
x
;

232 
xÀn
 = 
j
;

233 
i
 = 0; i < 
xÀn
; i++) {

234 
x
 = 
xvec
[
i
];

235 i‡(
	`xml_ty≥
(
x
Ë=
CX_BODY
)

236 
body°r
 = 
	`xml_vÆue
(
x
);

238 
body°r
 = 
	`xml_body
(
x
);

239 i‡(
body°r
 =
NULL
){

240 
	`˛ic⁄_îr
(
OE_CFG
, 0, "No xml body");

241 
d⁄e
;

244 
	`cvec_add_°rög
(
comm™ds
, 
NULL
, 
body°r
);

246 
ok
:

247 
ªtvÆ
 = 0;

248 
d⁄e
:

249 i‡(
ªas⁄
)

250 
	`‰ì
(
ªas⁄
);

251 i‡(
≠i_∑th
)

252 
	`‰ì
(
≠i_∑th
);

253 i‡(
xvec
)

254 
	`‰ì
(
xvec
);

255 i‡(
xt›
)

256 
	`xml_‰ì
(
xt›
);

257 i‡(
xt
)

258 
	`xml_‰ì
(
xt
);

259 i‡(
x∑th
)

260 
	`‰ì
(
x∑th
);

261  
ªtvÆ
;

262 
	}
}

264 
	$ex∑ndv_dbv¨
(*
h
,

265 *
«me
,

266 
cvec
 *
cvv
,

267 
cvec
 *
¨gv
,

268 
cvec
 *
comm™ds
,

269 
cvec
 *
hñ±exts
)

271  
	`ex∑nd_dbv¨
(
h
, 
«me
, 
cvv
, 
¨gv
, 
comm™ds
, 
hñ±exts
);

272 
	}
}

276 
	$ex∑nd_dú
(*
dú
,

277 *
ƒ
,

278 ***
comm™ds
,

279 
mode_t
 
Êags
,

280 
dëaû
)

282 
DIR
 *
dúp
;

283 
dúít
 *
dp
;

284 
°©
 
°
;

285 *
°r
;

286 *
cmd
;

287 
Àn
;

288 
ªtvÆ
 = -1;

289 
∑sswd
 *
pw
;

290 
fûíame
[
MAXPATHLEN
];

292 i‡((
dúp
 = 
	`›ídú
(
dú
)) == 0){

293 
	`Ârötf
(
°dîr
, "expand_dir: opendir(%s) %s\n",

294 
dú
, 
	`°ªº‹
(
î∫o
));

297 *
ƒ
 = 0;

298 (
dp
 = 
	`ªaddú
(
dúp
)Ë!
NULL
) {

301 
	`°rcmp
(
dp
->
d_«me
, ".") != 0 &&

302 
	`°rcmp
(
dp
->
d_«me
, "..") != 0

304 
dp
->
d_«me
[0] != '.'

307 
	`¢¥ötf
(
fûíame
, 
MAXPATHLEN
-1, "%s/%s", 
dú
, 
dp
->
d_«me
);

308 i‡(
	`l°©
(
fûíame
, &
°
) == 0){

309 i‡((
°
.
°_mode
 & 
Êags
) == 0)

312 #i‡
EXPAND_RECURSIVE


313 i‡(
	`S_ISDIR
(
°
.
°_mode
)) {

314 
ƒßv
 = *
ƒ
;

315 if(
	`ex∑nd_dú
(
fûíame
, 
ƒ
, 
comm™ds
, 
dëaû
) < 0)

316 
quô
;

317 
ƒßv
 < *
ƒ
) {

318 
Àn
 = 
	`°æí
(
dp
->
d_«me
Ë+ såÀn((*
comm™ds
)[
ƒßv
]) + 2;

319 if((
°r
 = 
	`mÆloc
(
Àn
)Ë=
NULL
) {

320 
	`Ârötf
(
°dîr
, "expand_dir: malloc: %s\n",

321 
	`°ªº‹
(
î∫o
));

322 
quô
;

324 
	`¢¥ötf
(
°r
, 
Àn
-1, "%s/%s",

325 
dp
->
d_«me
, (*
comm™ds
)[
ƒßv
]);

326 
	`‰ì
((*
comm™ds
)[
ƒßv
]);

327 (*
comm™ds
)[
ƒßv
] = 
°r
;

329 
ƒßv
++;

334 i‡((
cmd
 = 
	`°rdup
(
dp
->
d_«me
)Ë=
NULL
) {

335 
	`Ârötf
(
°dîr
, "expand_dir: strdup: %s\n",

336 
	`°ªº‹
(
î∫o
));

337 
quô
;

339 #i‚de‡
__APPLE__


340 i‡(0 &&
dëaû
){

341 i‡((
pw
 = 
	`gëpwuid
(
°
.
°_uid
)Ë=
NULL
){

342 
	`Ârötf
(
°dîr
, "expand_dir: getpwuid(%d): %s\n",

343 
°
.
°_uid
, 
	`°ªº‹
(
î∫o
));

344 
quô
;

346 
Àn
 = 
	`°æí
(
cmd
) +

347 
	`°æí
(
pw
->
pw_«me
) +

348 #ifde‡
__FªeBSD__


349 
	`°æí
(
	`˘ime
(&
°
.
°_mtime•ec
.
tv_£c
)) +

351 
	`°æí
(
	`˘ime
(&
°
.
°_mtim
.
tv_£c
)) +

354 
	`°æí
("{ by }") + 1 ;

355 i‡((
°r
=
	`ªÆloc
(
cmd
, 
	`°æí
(cmd)+
Àn
)Ë=
NULL
) {

356 
	`Ârötf
(
°dîr
, "expand_dir: malloc: %s\n",

357 
	`°ªº‹
(
î∫o
));

358 
quô
;

360 
	`¢¥ötf
(
°r
 + 
	`°æí
(
dp
->
d_«me
),

361 
Àn
 - 
	`°æí
(
dp
->
d_«me
),

363 #ifde‡
__FªeBSD__


364 
	`˘ime
(&
°
.
°_mtime•ec
.
tv_£c
),

366 
	`˘ime
(&
°
.
°_mtim
.
tv_£c
),

369 
pw
->
pw_«me


371 
cmd
 = 
°r
;

374 i‡(((*
comm™ds
) =

375 
	`ªÆloc
(*
comm™ds
, ((*
ƒ
)+1)*(**))Ë=
NULL
){

376 
	`≥º‹
("expand_dir:Ñealloc");

377 
quô
;

379 (*
comm™ds
)[(*
ƒ
)] = 
cmd
;

380 (*
ƒ
)++;

381 i‡(*
ƒ
 >= 128)

386 
ªtvÆ
 = 0;

387 
quô
:

388 
	`˛o£dú
(
dúp
);

389  
ªtvÆ
;

390 
	}
}

394 
	$show_y™g
(
˛ic⁄_h™dÀ
 
h
,

395 
cvec
 *
cvv
,

396 
cvec
 *
¨gv
)

398 
y™g_node
 *
yn
;

399 *
°r
 = 
NULL
;

400 
y™g_•ec
 *
y•ec
;

402 
y•ec
 = 
	`˛ic⁄_db•ec_y™g
(
h
);

403 i‡(
	`cvec_Àn
(
¨gv
) > 0){

404 
°r
 = 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
, 0));

405 
yn
 = (
y™g_node
*)
	`y™g_föd
((y™g_node*)
y•ec
, 0, 
°r
);

408 
yn
 = (
y™g_node
*)
y•ec
;

409 
	`y™g_¥öt
(
°dout
, 
yn
);

411 
	}
}

412 
	$show_y™gv
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
)

414  
	`show_y™g
(
h
, 
v¨s
, 
¨gv
);

415 
	}
}

432 
	$˛i_show_c⁄fig
(
˛ic⁄_h™dÀ
 
h
,

433 
cvec
 *
cvv
,

434 
cvec
 *
¨gv
)

436 
ªtvÆ
 = -1;

437 *
db
;

438 *
f‹m©°r
;

439 *
x∑th
;

440 
f‹m©_íum
 
f‹m©
;

441 
cbuf
 *
cbx∑th
 = 
NULL
;

442 *
©å
 = 
NULL
;

443 
i
;

444 
j
;

445 
cg_v¨
 *
cv©å
;

446 *
vÆ
 = 
NULL
;

447 
cxobj
 *
xt
 = 
NULL
;

448 
cxobj
 *
xc
;

449 
cxobj
 *
xîr
;

450 
gímodñ_ty≥
 
gt
;

452 i‡(
	`cvec_Àn
(
¨gv
) != 3 && cvec_len(argv) != 4){

453 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "GŸ %dárgumíts. Ex≥˘ed: <db«me>,<f‹m©>,<x∑th>[,<©å>]", 
	`cvec_Àn
(
¨gv
));

455 
d⁄e
;

458 
db
 = 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
, 0));

460 
f‹m©°r
 = 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
, 1));

461 i‡((
f‹m©
 = 
	`f‹m©_°r2öt
(
f‹m©°r
)) < 0){

462 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "NŸ vÆid f‹m©: %s", 
f‹m©°r
);

463 
d⁄e
;

466 
x∑th
 = 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
, 2));

469 i‡((
cbx∑th
 = 
	`cbuf_√w
()Ë=
NULL
){

470 
	`˛ic⁄_îr
(
OE_PLUGIN
, 
î∫o
, "cbuf_new");

471 
d⁄e
;

474 i‡(
	`cvec_Àn
(
¨gv
) == 4){

475 
©å
 = 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
, 3));

476 
j
 = 0;

477 
i
=0; i<
	`°æí
(
x∑th
); i++)

478 i‡(
x∑th
[
i
] == '%')

479 
j
++;

480 i‡(
j
 != 1){

481 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "xpath '%s' doesÇot haveá single '%%'");

482 
d⁄e
;

484 i‡((
cv©å
 = 
	`cvec_föd_v¨
(
cvv
, 
©å
)Ë=
NULL
){

485 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "©å '%s'ÇŸ found i¿˛igí v¨Üi°", 
©å
);

486 
d⁄e
;

488 i‡((
vÆ
 = 
	`cv2°r_dup
(
cv©å
)Ë=
NULL
){

489 
	`˛ic⁄_îr
(
OE_PLUGIN
, 
î∫o
, "cv2str_dup");

490 
d⁄e
;

492 
	`˝rötf
(
cbx∑th
, 
x∑th
, 
vÆ
);

495 
	`˝rötf
(
cbx∑th
, "%s", 
x∑th
);

497 i‡(
	`˛ic⁄_Ωc_gë_c⁄fig
(
h
, 
db
, 
	`cbuf_gë
(
cbx∑th
), &
xt
) < 0)

498 
d⁄e
;

499 i‡((
xîr
 = 
	`x∑th_fú°
(
xt
, "/Ωc-îr‹")Ë!
NULL
){

500 
	`˛ic⁄_Ωc_gíî©e_îr‹
("Gë c⁄figuøti⁄", 
xîr
);

501 
d⁄e
;

504 
f‹m©
){

505 
FORMAT_XML
:

506 
xc
 = 
NULL
;

507 (
xc
 = 
	`xml_chûd_óch
(
xt
, xc, -1)Ë!
NULL
)

508 
	`˛ic⁄_xml2fûe
(
°dout
, 
xc
, 0, 1);

510 
FORMAT_JSON
:

511 
	`xml2js⁄
(
°dout
, 
xt
, 1);

513 
FORMAT_TEXT
:

514 
xc
 = 
NULL
;

515 (
xc
 = 
	`xml_chûd_óch
(
xt
, xc, -1)Ë!
NULL
)

516 
	`xml2txt
(
°dout
, 
xc
, 0);

518 
FORMAT_CLI
:

520 i‡((
gt
 = 
	`˛ic⁄_˛i_gímodñ_ty≥
(
h
)Ë=
GT_ERR
)

521 
d⁄e
;

522 
xc
 = 
NULL
;

523 (
xc
 = 
	`xml_chûd_óch
(
xt
, xc, -1)Ë!
NULL
)

524 
	`xml2˛i
(
°dout
, 
xc
, 
NULL
, 
gt
);

526 
FORMAT_NETCONF
:

527 
	`Ârötf
(
°dout
, "<rpc><edit-config><target><candidate/></target><config>\n");

528 
xc
 = 
NULL
;

529 (
xc
 = 
	`xml_chûd_óch
(
xt
, xc, -1)Ë!
NULL
)

530 
	`˛ic⁄_xml2fûe
(
°dout
, 
xc
, 2, 1);

531 
	`Ârötf
(
°dout
, "</config></edit-config></rpc>]]>]]>\n");

534 
ªtvÆ
 = 0;

535 
d⁄e
:

536 i‡(
xt
)

537 
	`xml_‰ì
(
xt
);

538 i‡(
vÆ
)

539 
	`‰ì
(
vÆ
);

540 i‡(
cbx∑th
)

541 
	`cbuf_‰ì
(
cbx∑th
);

542  
ªtvÆ
;

543 
	}
}

553 
	$show_c⁄f_x∑th
(
˛ic⁄_h™dÀ
 
h
,

554 
cvec
 *
cvv
,

555 
cvec
 *
¨gv
)

557 
ªtvÆ
 = -1;

558 *
°r
;

559 *
x∑th
;

560 
cg_v¨
 *
cv
;

561 
cxobj
 *
xt
 = 
NULL
;

562 
cxobj
 *
xîr
;

563 
cxobj
 **
xv
 = 
NULL
;

564 
size_t
 
xÀn
;

565 
i
;

567 i‡(
	`cvec_Àn
(
¨gv
) != 1){

568 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "%s: Requúe†⁄êñemíàtÿbê<db«me>", 
__FUNCTION__
);

569 
d⁄e
;

571 
°r
 = 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
, 0));

573 i‡(
	`°rcmp
(
°r
, "running") != 0 &&

574 
	`°rcmp
(
°r
, "candidate") != 0 &&

575 
	`°rcmp
(
°r
, "startup") != 0){

576 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "Nÿsuch dbÇame: %s", 
°r
);

577 
d⁄e
;

579 
cv
 = 
	`cvec_föd_v¨
(
cvv
, "xpath");

580 
x∑th
 = 
	`cv_°rög_gë
(
cv
);

581 i‡(
	`˛ic⁄_Ωc_gë_c⁄fig
(
h
, 
°r
, 
x∑th
, &
xt
) < 0)

582 
d⁄e
;

583 i‡((
xîr
 = 
	`x∑th_fú°
(
xt
, "/Ωc-îr‹")Ë!
NULL
){

584 
	`˛ic⁄_Ωc_gíî©e_îr‹
("Gë c⁄figuøti⁄", 
xîr
);

585 
d⁄e
;

587 i‡(
	`x∑th_vec
(
xt
, 
x∑th
, &
xv
, &
xÀn
) < 0)

588 
d⁄e
;

589 
i
=0; i<
xÀn
; i++)

590 
	`xml_¥öt
(
°dout
, 
xv
[
i
]);

592 
ªtvÆ
 = 0;

593 
d⁄e
:

594 i‡(
xv
)

595 
	`‰ì
(
xv
);

596 i‡(
xt
)

597 
	`xml_‰ì
(
xt
);

598  
ªtvÆ
;

599 
	}
}

601 
	$show_c⁄fv_x∑th
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
)

603  
	`show_c⁄f_x∑th
(
h
, 
v¨s
, 
¨gv
);

604 
	}
}

606 
	$˛i_show_vîsi⁄
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
)

608 
	`˛i_ouçut
(
°dout
, "%s\n", 
CLIXON_VERSION_STRING
);

610 
	}
}

	@clixon-master/apps/cli/clixon_cli.h

36 #i‚de‡
_CLIXON_CLI_H_


37 
	#_CLIXON_CLI_H_


	)

39 
	~<sys/ty≥s.h
>

42 
	~<˛ix⁄/˛ix⁄_˛i_≠i.h
>

50 
∂ugö_öô
(
˛ic⁄_h™dÀ
 
h
);

55 
∂ugö_°¨t
(
˛ic⁄_h™dÀ
 
h
, 
¨gc
, **
¨gv
);

60 
∂ugö_exô
(
˛ic⁄_h™dÀ
 
h
);

64 *
∂ugö_¥om±_hook
(
˛ic⁄_h™dÀ
 
h
, *
mode
);

67 *
∂ugö_∑r£_hook
(
˛ic⁄_h™dÀ
 
h
, *
cmd
, *
«me
);

70 
∂ugö_su•_hook
(
˛ic⁄_h™dÀ
 
h
, *
buf
, 
¥om±_width
, *
curs‹_loc
);

	@clixon-master/apps/cli/clixon_cli_api.h

37 #i‚de‡
_CLIXON_CLI_API_H_


38 
	#_CLIXON_CLI_API_H_


	)

44 
	#CLI_PROMPT_LEN
 64

	)

45 
	#CLI_DEFAULT_PROMPT
 ">"

	)

51 
˛i_£t_sy¡ax_mode
(
˛ic⁄_h™dÀ
 
h
, c⁄° *
mode
);

52 *
˛i_sy¡ax_mode
(
˛ic⁄_h™dÀ
 
h
);

53 
˛i_sy¡ax_lﬂd
(
˛ic⁄_h™dÀ
 
h
);

54 
˛i_h™dÀr_îr
(
FILE
 *
fd
);

55 
˛i_£t_¥om±
(
˛ic⁄_h™dÀ
 
h
, c⁄° *
mode
, c⁄° *
¥om±
);

56 *
˛i_¥om±
(*
fmt
);

57 
˛i_±push
(
˛ic⁄_h™dÀ
 
h
, *
mode
, *
°rög
, *
›
);

58 
˛i_±p›
(
˛ic⁄_h™dÀ
 
h
, *
mode
, *
›
);

61 
˛ic⁄_h™dÀ
 
˛i_h™dÀ_öô
();

62 
˛i_h™dÀ_exô
(
˛ic⁄_h™dÀ
 
h
);

63 
˛igí_h™dÀ
 
˛i_˛igí
(
˛ic⁄_h™dÀ
 
h
);

66 
˛i_nŸifiˇti⁄_ªgi°î
(
˛ic⁄_h™dÀ
 
h
, *
°ªam
, 
f‹m©_íum
 
f‹m©
,

67 *
fûãr
, 
°©us
,

68 (*
‚
)(, *), *
¨g
);

70 
	#˛i_ouçut
 
˛igí_ouçut


	)

74 
	`˛i_£t
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

75 
	`˛i_£tv
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

77 
	`˛i_mîge
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

78 
	`˛i_mîgev
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

80 
	`˛i_¸óã
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

81 
	`˛i_ªmove
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

83 
	`˛i_dñ
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

84 
	`˛i_dñv
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

86 
	`˛i_debug_˛i
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

87 
	`˛i_debug_˛iv
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

89 
	`˛i_debug_backíd
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

90 
	`˛i_debug_backídv
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

92 
	`˛i_£t_mode
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

93 
	`˛i_£t_modev
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

95 
	`˛i_°¨t_shñl
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

96 
	`˛i_°¨t_shñlv
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

98 
	`˛i_quô
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

99 
	`˛i_quôv
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

101 
	`˛i_commô
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

102 
	`˛i_commôv
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

104 
	`˛i_vÆid©e
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

105 
	`˛i_vÆid©ev
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

107 
	`com∑ª_dbs
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

108 
	`com∑ª_dbsv
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

110 
	`lﬂd_c⁄fig_fûe
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

111 
	`lﬂd_c⁄fig_fûev
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

113 
	`ßve_c⁄fig_fûe
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

114 
	`ßve_c⁄fig_fûev
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

116 
	`dñëe_Æl
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

117 
	`dñëe_Ælv
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

119 
	`disˇrd_ch™ges
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

120 
	`disˇrd_ch™gesv
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

122 
	`˛i_nŸify
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
cvv
, cve¯*
¨gv
);

123 
	`˛i_nŸifyv
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
cvv
, cve¯*
¨gv
);

125 
	`db_c›y
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
cvv
, cve¯*
¨gv
);

127 
	`˛i_lock
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
cvv
, cve¯*
¨gv
);

128 
	`˛i_u∆ock
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
cvv
, cve¯*
¨gv
);

129 
	`˛i_c›y_c⁄fig
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
cvv
, cve¯*
¨gv
);

131 
	`˛i_hñp
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

134 
	`ex∑nd_dú
(*
dú
, *
ƒ
, ***
comm™ds
, 
mode_t
 
Êags
, 
dëaû
);

135 
	`ex∑nd_dbv¨
(*
h
, *
«me
, 
cvec
 *
cvv
, cve¯*
¨gv
,

136 
cvec
 *
comm™ds
, cve¯*
hñ±exts
);

137 
	`ex∑ndv_dbv¨
(*
h
, *
«me
, 
cvec
 *
cvv
, cve¯*
¨gv
,

138 
cvec
 *
comm™ds
, cve¯*
hñ±exts
);

141 
	`show_y™g
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

142 
	`show_y™gv
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
v¨s
, cve¯*
¨gv
);

144 
	`show_c⁄f_x∑th
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
cvv
, cve¯*
¨gv
);

145 
	`show_c⁄fv_x∑th
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
cvv
, cve¯*
¨gv
);

147 
	`˛i_show_c⁄fig
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
cvv
, cve¯*
¨gv
);

	@clixon-master/apps/cli/test.c

1 
	$maö
(){
	}
}

	@clixon-master/apps/netconf/clixon_netconf.h

39 #i‚de‡
_CLIXON_NETCONF_H_


40 
	#_CLIXON_NETCONF_H_


	)

46 
√tc⁄f_ouçut
(
s
, 
cbuf
 *
xf
, *
msg
);

48 
√tc⁄f_x∑th
(
cxobj
 *
x£¨ch
,

49 
cxobj
 *
xfûãr
,

50 
cbuf
 *
xf
, cbu‡*
xf_îr
,

51 
cxobj
 *
xt
);

	@clixon-master/apps/netconf/netconf_filter.c

37 #ifde‡
HAVE_CONFIG_H


38 
	~"˛ix⁄_c⁄fig.h
"

41 
	~<°dio.h
>

42 
	~<°rög.h
>

43 
	~<uni°d.h
>

44 
	~<°dlib.h
>

45 
	~<î∫o.h
>

46 
	~<sig«l.h
>

47 
	~<f˙é.h
>

48 
	~<time.h
>

49 
	~<sys/°©.h
>

50 
	~<sys/time.h
>

51 
	~<sys/ty≥s.h
>

52 
	~<sys/sockë.h
>

53 
	~<√töë/ö.h
>

54 
	~<¨∑/öë.h
>

55 
	~<sys/∑øm.h
>

56 
	~<as£π.h
>

59 
	~<˛igí/˛igí.h
>

62 
	~<˛ix⁄/˛ix⁄.h
>

64 
	~"√tc⁄f_Ωc.h
"

65 
	~"√tc⁄f_lib.h
"

66 
	~"√tc⁄f_fûãr.h
"

83 
	$Àaf°rög
(
cxobj
 *
x
)

85 
cxobj
 *
c
;

87 i‡(
	`xml_ty≥
(
x
Ë!
CX_ELMNT
)

88  
NULL
;

89 i‡(
	`xml_chûd_ƒ
(
x
) != 1)

90  
NULL
;

91 
c
 = 
	`xml_chûd_i
(
x
, 0);

92 i‡(
	`xml_chûd_ƒ
(
c
) != 0)

93  
NULL
;

94 i‡(
	`xml_ty≥
(
c
Ë!
CX_BODY
)

95  
NULL
;

96  
	`xml_vÆue
(
c
);

97 
	}
}

108 
	$xml_fûãr_ªcursive
(
cxobj
 *
xfûãr
,

109 
cxobj
 *
x∑ª¡
,

110 *
ªmove_me
)

112 
cxobj
 *
s
;

113 
cxobj
 *
•ªv
;

114 
cxobj
 *
f
;

115 
cxobj
 *
©å
;

116 *
™
;

117 *
af
;

118 *
f°r
;

119 *
s°r
;

120 
c⁄èömíts
;

121 
ªmove_s
;

123 *
ªmove_me
 = 0;

124 
	`as£π
(
xfûãr
 && 
x∑ª¡
 && 
	`°rcmp
(
	`xml_«me
(xfilter), xml_name(xparent))==0);

126 i‡(
	`xml_chûd_ƒ
(
xfûãr
) == 0)

127 
m©ch
;

130 
f
 = 
NULL
;

131 
c⁄èömíts
 = 0;

132 (
f
 = 
	`xml_chûd_óch
(
xfûãr
, f, 
CX_ELMNT
)Ë!
NULL
) {

133 i‡(
	`Àaf°rög
(
f
))

135 
c⁄èömíts
++;

139 
©å
 = 
NULL
;

140 (
©å
 = 
	`xml_chûd_óch
(
xfûãr
,áâr, 
CX_ATTR
)Ë!
NULL
) {

141 
af
 = 
	`xml_vÆue
(
©å
);

142 
™
 = 
	`xml_föd_vÆue
(
xfûãr
, 
	`xml_«me
(
©å
));

143 i‡(
af
 && 
™
 && 
	`°rcmp
(af,án)==0)

146 
nom©ch
;

149 
f
 = 
NULL
;

150 (
f
 = 
	`xml_chûd_óch
(
xfûãr
, f, 
CX_ELMNT
)Ë!
NULL
) {

151 i‡((
f°r
 = 
	`Àaf°rög
(
f
)Ë=
NULL
)

153 i‡((
s
 = 
	`xml_föd
(
x∑ª¡
, 
	`xml_«me
(
f
))Ë=
NULL
)

154 
nom©ch
;

155 i‡((
s°r
 = 
	`Àaf°rög
(
s
)Ë=
NULL
)

157 i‡(
	`°rcmp
(
f°r
, 
s°r
))

158 
nom©ch
;

161 i‡(!
c⁄èömíts
)

162 
m©ch
;

164 
•ªv
 = 
s
 = 
NULL
;

165 (
s
 = 
	`xml_chûd_óch
(
x∑ª¡
, s, 
CX_ELMNT
)Ë!
NULL
) {

166 i‡((
f
 = 
	`xml_föd
(
xfûãr
, 
	`xml_«me
(
s
))Ë=
NULL
){

167 
	`xml_purge
(
s
);

168 
s
 = 
•ªv
;

171 i‡(
	`Àaf°rög
(
f
)){

172 
•ªv
 = 
s
;

176 
ªmove_s
 = 0;

177 i‡(
	`xml_fûãr_ªcursive
(
f
, 
s
, &
ªmove_s
) < 0)

179 i‡(
ªmove_s
){

180 
	`xml_purge
(
s
);

181 
s
 = 
•ªv
;

183 
•ªv
 = 
s
;

186 
m©ch
:

188 
nom©ch
:

189 *
ªmove_me
 = 1;

191 
	}
}

201 
	$xml_fûãr
(
cxobj
 *
xfûãr
,

202 
cxobj
 *
xc⁄fig
)

204 
ªtvÆ
;

205 
ªmove_s
;

208 
ªtvÆ
 = 
	`xml_fûãr_ªcursive
(
xfûãr
,

209 
xc⁄fig
,

210 &
ªmove_s
);

211  
ªtvÆ
;

212 
	}
}

	@clixon-master/apps/netconf/netconf_filter.h

37 #i‚de‡
_NETCONF_FILTER_H_


38 
	#_NETCONF_FILTER_H_


	)

43 
xml_fûãr
(
cxobj
 *
xf
, cxobj *
xn
);

	@clixon-master/apps/netconf/netconf_hello.c

52 #ifde‡
HAVE_CONFIG_H


53 
	~"˛ix⁄_c⁄fig.h
"

56 
	~<°dio.h
>

57 
	~<°rög.h
>

58 
	~<uni°d.h
>

59 
	~<°dlib.h
>

60 
	~<î∫o.h
>

61 
	~<sig«l.h
>

62 
	~<f˙é.h
>

63 
	~<time.h
>

64 
	~<sys/°©.h
>

65 
	~<sys/time.h
>

66 
	~<sys/ty≥s.h
>

67 
	~<sys/sockë.h
>

68 
	~<√töë/ö.h
>

69 
	~<¨∑/öë.h
>

70 
	~<sys/∑øm.h
>

71 
	~<as£π.h
>

74 
	~<˛igí/˛igí.h
>

77 
	~<˛ix⁄/˛ix⁄.h
>

79 
	~"√tc⁄f_lib.h
"

80 
	~"√tc⁄f_hñlo.h
"

83 
	$√tc⁄f_hñlo
(
cxobj
 *
xn
)

85 
cxobj
 *
x
;

87 
x
 = 
NULL
;

88 (
x
 = 
	`x∑th_óch
(
xn
, "//ˇ∑bûôy", x)Ë!
NULL
) {

92 
	}
}

95 
	$√tc⁄f_hñlo_di•©ch
(
cxobj
 *
xn
)

97 
cxobj
 *
xp
;

98 
ªtvÆ
 = -1;

100 i‡((
xp
 = 
	`x∑th_fú°
(
xn
, "//hñlo")Ë!
NULL
)

101 
ªtvÆ
 = 
	`√tc⁄f_hñlo
(
xp
);

102  
ªtvÆ
;

103 
	}
}

110 
	$√tc⁄f_¸óã_hñlo
(
cbuf
 *
xf
,

111 
£ssi⁄_id
)

113 
ªtvÆ
 = 0;

115 
	`add_¥ómbÀ
(
xf
);

116 
	`˝rötf
(
xf
, "<hello>");

117 
	`˝rötf
(
xf
, "<capabilities>");

118 
	`˝rötf
(
xf
, "<capability>urn:ietf:params:xml:ns:netconf:base:1.0</capability>\n");

119 
	`˝rötf
(
xf
, "<capability>urn:ietf:params:xml:ns:netconf:capability:candidate:1:0</capability>\n");

120 
	`˝rötf
(
xf
, "<capability>urn:ietf:params:xml:ns:netconf:capability:validate:1.0</capability>\n");

121 
	`˝rötf
(
xf
, "<capability>urn:ietf:params:netconf:capability:xpath:1.0</capability>\n");

122 
	`˝rötf
(
xf
, "<capability>urn:ietf:params:netconf:capability:notification:1.0</capability>\n");

123 
	`˝rötf
(
xf
, "<capability>urn:ietf:params:netconf:capability:startup:1.0</capability>\n");

124 
	`˝rötf
(
xf
, "</capabilities>");

125 
	`˝rötf
(
xf
, "<£ssi⁄-id>%lu</£ssi⁄-id>", ()42+
£ssi⁄_id
);

126 
	`˝rötf
(
xf
, "</hello>");

127 
	`add_po°ambÀ
(
xf
);

128  
ªtvÆ
;

129 
	}
}

	@clixon-master/apps/netconf/netconf_hello.h

37 #i‚de‡
_NETCONF_HELLO_H_


38 
	#_NETCONF_HELLO_H_


	)

43 
√tc⁄f_¸óã_hñlo
(
cbuf
 *
xf
, 
£ssi⁄_id
);

45 
√tc⁄f_hñlo_di•©ch
(
cxobj
 *
xn
);

	@clixon-master/apps/netconf/netconf_lib.c

37 #ifde‡
HAVE_CONFIG_H


38 
	~"˛ix⁄_c⁄fig.h
"

41 
	~<°dio.h
>

42 
	~<°rög.h
>

43 
	~<uni°d.h
>

44 
	~<°dlib.h
>

45 
	~<î∫o.h
>

46 
	~<sig«l.h
>

47 
	~<f˙é.h
>

48 
	~<time.h
>

49 
	~<sys/°©.h
>

50 
	~<sys/time.h
>

51 
	~<sys/ty≥s.h
>

52 
	~<sys/sockë.h
>

53 
	~<sy¶og.h
>

54 
	~<√töë/ö.h
>

55 
	~<¨∑/öë.h
>

56 
	~<sys/∑øm.h
>

57 
	~<as£π.h
>

60 
	~<˛igí/˛igí.h
>

63 
	~<˛ix⁄/˛ix⁄.h
>

65 
	~"√tc⁄f_Ωc.h
"

66 
	~"√tc⁄f_lib.h
"

71 
å™•‹t_ty≥
 
	gå™•‹t
 = 
NETCONF_SSH
;

72 
	gcc_˛o£d
 = 0;

78 
	$add_¥ómbÀ
(
cbuf
 *
cb
)

80 i‡(
å™•‹t
 =
NETCONF_SOAP
)

81 
	`˝rötf
(
cb
, "\n<soapenv:Envelope\n xmlns:soapenv=\"http://www.w3.org/2003/05/soap-envelope\">\n"

84 
	}
}

91 
	$add_po°ambÀ
(
cbuf
 *
cb
)

93 
å™•‹t
){

94 
NETCONF_SSH
:

95 
	`˝rötf
(
cb
, "]]>]]>");

97 
NETCONF_SOAP
:

98 
	`˝rötf
(
cb
, "\n</soapenv:Body>" "</soapenv:Envelope>");

102 
	}
}

110 
	$add_îr‹_¥ómbÀ
(
cbuf
 *
cb
,

111 *
ªas⁄
)

113 
å™•‹t
){

114 
NETCONF_SOAP
:

115 
	`˝rötf
(
cb
, "<soapenv:Envelope xmlns:soapenv=\"http://www.w3.org/2003/05/soap-envelope\" xmlns:xml=\"http://www.w3.org/XML/1998/namespace\">"

124 "<dëaû>", 
ªas⁄
);

127 i‡(
	`add_¥ómbÀ
(
cb
) < 0)

132 
	}
}

140 
	$add_îr‹_po°ambÀ
(
cbuf
 *
cb
)

142 
å™•‹t
){

143 
NETCONF_SOAP
:

144 
	`˝rötf
(
cb
, "</detail>" "</soapenv:Fault>");

146 i‡(
	`add_po°ambÀ
(
cb
) < 0)

151 
	}
}

161 
	$√tc⁄f_gë_èrgë
(
cxobj
 *
xn
,

162 *
∑th
)

164 
cxobj
 *
x
;

165 *
èrgë
 = 
NULL
;

167 i‡((
x
 = 
	`x∑th_fú°
(
xn
, 
∑th
)Ë!
NULL
){

168 i‡(
	`x∑th_fú°
(
x
, "ˇndid©e"Ë!
NULL
)

169 
èrgë
 = "candidate";

171 i‡(
	`x∑th_fú°
(
x
, "ru¬ög"Ë!
NULL
)

172 
èrgë
 = "running";

174 i‡(
	`x∑th_fú°
(
x
, "°¨tup"Ë!
NULL
)

175 
èrgë
 = "startup";

177  
èrgë
;

179 
	}
}

187 
	$√tc⁄f_ouçut
(
s
,

188 
cbuf
 *
cb
,

189 *
msg
)

191 *
buf
 = 
	`cbuf_gë
(
cb
);

192 
Àn
 = 
	`cbuf_Àn
(
cb
);

193 
ªtvÆ
 = -1;

195 
	`˛ic⁄_debug
(1, "SEND %s", 
msg
);

196 i‡(
debug
 > 1){

197 
cxobj
 *
xt
 = 
NULL
;

198 i‡(
	`xml_∑r£_°rög
(
buf
, 
NULL
, &
xt
) == 0){

199 
	`˛ic⁄_xml2fûe
(
°dîr
, 
	`xml_chûd_i
(
xt
, 0), 0, 0);

200 
	`Ârötf
(
°dîr
, "\n");

201 
	`xml_‰ì
(
xt
);

204 i‡(
	`wrôe
(
s
, 
buf
, 
Àn
) < 0){

205 i‡(
î∫o
 =
EPIPE
)

208 
	`˛ic⁄_log
(
LOG_ERR
, "%s: wrôe: %s", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

209 
d⁄e
;

211 
ªtvÆ
 = 0;

212 
d⁄e
:

213  
ªtvÆ
;

214 
	}
}

	@clixon-master/apps/netconf/netconf_lib.h

37 #i‚de‡
_NETCONF_LIB_H_


38 
	#_NETCONF_LIB_H_


	)

43 
	eèrgë_ty≥
{

44 
	mRUNNING
,

45 
	mCANDIDATE


47 
	eå™•‹t_ty≥
{

48 
	mNETCONF_SSH
,

49 
	mNETCONF_SOAP
,

52 
	eã°_›ti⁄
{

53 
	mSET
,

54 
	mTEST_THEN_SET
,

55 
	mTEST_ONLY


58 
	eîr‹_›ti⁄
{

59 
	mSTOP_ON_ERROR
,

60 
	mCONTINUE_ON_ERROR


66 
å™•‹t_ty≥
 
å™•‹t
;

67 
cc_˛o£d
;

72 
add_¥ómbÀ
(
cbuf
 *
xf
);

73 
add_po°ambÀ
(
cbuf
 *
xf
);

74 
add_îr‹_¥ómbÀ
(
cbuf
 *
xf
, *
ªas⁄
);

75 *
√tc⁄f_gë_èrgë
(
cxobj
 *
xn
, *
∑th
);

76 
add_îr‹_po°ambÀ
(
cbuf
 *
xf
);

77 
√tc⁄f_ouçut
(
s
, 
cbuf
 *
xf
, *
msg
);

	@clixon-master/apps/netconf/netconf_main.c

36 #ifde‡
HAVE_CONFIG_H


37 
	~"˛ix⁄_c⁄fig.h
"

40 
	~<°dio.h
>

41 
	~<°rög.h
>

42 
	~<°dlib.h
>

43 
	~<uni°d.h
>

44 
	~<°d¨g.h
>

45 
	~<î∫o.h
>

46 
	~<sig«l.h
>

47 
	~<f˙é.h
>

48 
	~<time.h
>

49 
	~<sy¶og.h
>

50 
	~<sys/time.h
>

51 
	~<sys/sockë.h
>

52 
	~<sys/∑øm.h
>

53 
	~<sys/ty≥s.h
>

54 
	~<sys/°©.h
>

55 
	~<√töë/ö.h
>

56 
	~<¨∑/öë.h
>

57 
	~<as£π.h
>

58 
	~<pwd.h
>

59 
	~<√töë/ö.h
>

60 
	~<libgí.h
>

63 
	~<˛igí/˛igí.h
>

66 
	~<˛ix⁄/˛ix⁄.h
>

68 
	~"˛ix⁄_√tc⁄f.h
"

69 
	~"√tc⁄f_lib.h
"

70 
	~"√tc⁄f_hñlo.h
"

71 
	~"√tc⁄f_Ωc.h
"

74 
	#NETCONF_OPTS
 "hDqf:d:Sy:"

	)

81 
	$¥o˚ss_öcomög_∑ckë
(
˛ic⁄_h™dÀ
 
h
,

82 
cbuf
 *
cb
)

84 *
°r
;

85 *
°r0
;

86 
cxobj
 *
xªq
 = 
NULL
;

87 
i§pc
 = 0;

88 
cbuf
 *
cbªt
 = 
NULL
;

89 
cxobj
 *
xªt
 = 
NULL
;

90 
cxobj
 *
xΩc
;

91 
cxobj
 *
xc
;

93 
	`˛ic⁄_debug
(1, "RECV");

94 
	`˛ic⁄_debug
(2, "%s: RCV: \"%s\"", 
__FUNCTION__
, 
	`cbuf_gë
(
cb
));

95 i‡((
°r0
 = 
	`°rdup
(
	`cbuf_gë
(
cb
))Ë=
NULL
){

96 
	`˛ic⁄_log
(
LOG_ERR
, "%s: sådup: %s", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

99 
°r
 = 
°r0
;

101 i‡(
	`xml_∑r£_°rög
(
°r
, 
NULL
, &
xªq
) < 0){

102 i‡((
cbªt
 = 
	`cbuf_√w
()Ë=
NULL
){

103 i‡(
	`√tc⁄f_›î©i⁄_Áûed
(
cbªt
, "rpc", "internalÉrror")< 0)

104 
d⁄e
;

105 
	`√tc⁄f_ouçut
(1, 
cbªt
, "rpc-error");

108 
	`˛ic⁄_log
(
LOG_ERR
, "%s: cbuf_√w", 
__FUNCTION__
);

109 
	`‰ì
(
°r0
);

110 
d⁄e
;

112 
	`‰ì
(
°r0
);

113 i‡((
xΩc
=
	`x∑th_fú°
(
xªq
, "//Ωc")Ë!
NULL
)

114 
i§pc
++;

116 i‡(
	`x∑th_fú°
(
xªq
, "//hñlo"Ë!
NULL
)

119 
	`˛ic⁄_log
(
LOG_WARNING
, "InvalidÇetconf msg:ÇeitherÑpc or hello: dropped");

120 
d⁄e
;

122 i‡(!
i§pc
){

123 i‡(
	`√tc⁄f_hñlo_di•©ch
(
xªq
) < 0)

124 
d⁄e
;

127 i‡(
	`√tc⁄f_Ωc_di•©ch
(
h
, 
xΩc
, &
xªt
) < 0){

128 
d⁄e
;

131 
cxobj
 *
xa
, *
xa2
;

132 
	`as£π
(
xªt
);

134 i‡((
cbªt
 = 
	`cbuf_√w
()Ë!
NULL
){

135 i‡((
xc
 = 
	`xml_chûd_i
(
xªt
,0))!=
NULL
){

136 
xa
=
NULL
;

137 (
xa
 = 
	`xml_chûd_óch
(
xΩc
, xa, 
CX_ATTR
)Ë!
NULL
){

138 i‡((
xa2
 = 
	`xml_dup
(
xa
)Ë==
NULL
)

139 
d⁄e
;

140 i‡(
	`xml_addsub
(
xc
, 
xa2
) < 0)

141 
d⁄e
;

143 
	`add_¥ómbÀ
(
cbªt
);

145 
	`˛ic⁄_xml2cbuf
(
cbªt
, 
	`xml_chûd_i
(
xªt
,0), 0, 0);

146 
	`add_po°ambÀ
(
cbªt
);

147 i‡(
	`√tc⁄f_ouçut
(1, 
cbªt
, "rpc-reply") < 0){

148 
	`cbuf_‰ì
(
cbªt
);

149 
d⁄e
;

154 
d⁄e
:

155 i‡(
xªq
)

156 
	`xml_‰ì
(
xªq
);

157 i‡(
xªt
)

158 
	`xml_‰ì
(
xªt
);

159 i‡(
cbªt
)

160 
	`cbuf_‰ì
(
cbªt
);

162 
	}
}

172 
	$√tc⁄f_öput_cb
(
s
,

173 *
¨g
)

175 
ªtvÆ
 = -1;

176 
˛ic⁄_h™dÀ
 
h
 = 
¨g
;

177 
buf
[
BUFSIZ
];

178 
i
;

179 
Àn
;

180 
cbuf
 *
cb
=
NULL
;

181 
xml_°©e
 = 0;

182 
pﬁl
;

184 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
){

185 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "%s: cbuf_√w", 
__FUNCTION__
);

186  
ªtvÆ
;

188 
	`mem£t
(
buf
, 0, (buf));

190 i‡((
Àn
 = 
	`ªad
(
s
, 
buf
, (buf))) < 0){

191 i‡(
î∫o
 =
ECONNRESET
)

192 
Àn
 = 0;

194 
	`˛ic⁄_log
(
LOG_ERR
, "%s:Ñód: %s", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

195 
d⁄e
;

198 i‡(
Àn
 == 0){

199 
cc_˛o£d
++;

200 
	`˛o£
(
s
);

201 
ªtvÆ
 = 0;

202 
d⁄e
;

204 
i
=0; i<
Àn
; i++){

205 i‡(
buf
[
i
] == 0)

207 
	`˝rötf
(
cb
, "%c", 
buf
[
i
]);

208 i‡(
	`dëe˘_ídèg
("]]>]]>",

209 
buf
[
i
],

210 &
xml_°©e
)) {

213 *(((*)
	`cbuf_gë
(
cb
)Ë+ 
	`cbuf_Àn
(cbË- 
	`°æí
("]]>]]>")) = '\0';

214 i‡(
	`¥o˚ss_öcomög_∑ckë
(
h
, 
cb
) < 0)

215 
d⁄e
;

216 i‡(
cc_˛o£d
)

218 
	`cbuf_ª£t
(
cb
);

222 i‡((
pﬁl
 = 
	`evít_pﬁl
(
s
)) < 0)

223 
d⁄e
;

224 i‡(
pﬁl
 == 0)

227 
ªtvÆ
 = 0;

228 
d⁄e
:

229 i‡(
cb
)

230 
	`cbuf_‰ì
(
cb
);

231 i‡(
cc_˛o£d
)

232 
ªtvÆ
 = -1;

233  
ªtvÆ
;

234 
	}
}

241 
	$£nd_hñlo
(
s
)

243 
cbuf
 *
xf
;

244 
ªtvÆ
 = -1;

246 i‡((
xf
 = 
	`cbuf_√w
()Ë=
NULL
){

247 
	`˛ic⁄_log
(
LOG_ERR
, "%s: cbuf_√w", 
__FUNCTION__
);

248 
d⁄e
;

250 i‡(
	`√tc⁄f_¸óã_hñlo
(
xf
, 
	`gëpid
()) < 0)

251 
d⁄e
;

252 i‡(
	`√tc⁄f_ouçut
(
s
, 
xf
, "hello") < 0)

253 
d⁄e
;

254 
ªtvÆ
 = 0;

255 
d⁄e
:

256 i‡(
xf
)

257 
	`cbuf_‰ì
(
xf
);

258  
ªtvÆ
;

259 
	}
}

262 
	$√tc⁄f_ãrmö©e
(
˛ic⁄_h™dÀ
 
h
)

264 
y™g_•ec
 *
y•ec
;

266 
	`˛ix⁄_∂ugö_exô
(
h
);

267 
	`Ωc_ˇŒback_dñëe_Æl
();

268 
	`˛ic⁄_Ωc_˛o£_£ssi⁄
(
h
);

269 i‡((
y•ec
 = 
	`˛ic⁄_db•ec_y™g
(
h
)Ë!
NULL
)

270 
	`y•ec_‰ì
(
y•ec
);

271 i‡((
y•ec
 = 
	`˛ic⁄_√tc⁄f_y™g
(
h
)Ë!
NULL
)

272 
	`y•ec_‰ì
(
y•ec
);

273 
	`evít_exô
();

274 
	`˛ic⁄_h™dÀ_exô
(
h
);

276 
	}
}

284 
	$ußge
(
˛ic⁄_h™dÀ
 
h
,

285 *
¨gv0
)

287 
	`Ârötf
(
°dîr
, "usage:%s\n"

296 
¨gv0
,

297 
	`˛ic⁄_√tc⁄f_dú
(
h
)

299 
	`exô
(0);

300 
	}
}

303 
	$maö
(
¨gc
,

304 **
¨gv
)

306 
c
;

307 *
tmp
;

308 *
¨gv0
 = 
¨gv
[0];

309 
quõt
 = 0;

310 
˛ic⁄_h™dÀ
 
h
;

311 
u£_sy¶og
;

312 *
dú
;

313 
∑sswd
 *
pw
;

316 
u£_sy¶og
 = 0;

319 
	`˛ic⁄_log_öô
(
__PROGRAM__
, 
LOG_INFO
, 
CLICON_LOG_STDERR
);

321 i‡((
h
 = 
	`˛ic⁄_h™dÀ_öô
()Ë=
NULL
)

325 i‡((
pw
 = 
	`gëpwuid
(
	`gëuid
())Ë=
NULL
){

326 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "getpwuid");

327 
d⁄e
;

329 i‡(
	`˛ic⁄_u£∫ame_£t
(
h
, 
pw
->
pw_«me
) < 0)

330 
d⁄e
;

332 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, 
NETCONF_OPTS
)) != -1)

333 
c
) {

335 
	`ußge
(
h
, 
¨gv
[0]);

338 
debug
 = 1;

341 i‡(!
	`°æí
(
›èrg
))

342 
	`ußge
(
h
, 
¨gv
[0]);

343 
	`˛ic⁄_›ti⁄_°r_£t
(
h
, "CLICON_CONFIGFILE", 
›èrg
);

346 
u£_sy¶og
 = 1;

352 
	`˛ic⁄_log_öô
(
__PROGRAM__
, 
debug
?
LOG_DEBUG
:
LOG_INFO
,

353 
u£_sy¶og
?
CLICON_LOG_SYSLOG
:
CLICON_LOG_STDERR
);

354 
	`˛ic⁄_debug_öô
(
debug
, 
NULL
);

357 i‡(
	`˛ic⁄_›ti⁄s_maö
(
h
) < 0)

361 
›töd
 = 1;

362 
›ãº
 = 0;

363 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, 
NETCONF_OPTS
)) != -1)

364 
c
) {

371 
quõt
++;

374 i‡(!
	`°æí
(
›èrg
))

375 
	`ußge
(
h
, 
¨gv
[0]);

376 
	`˛ic⁄_›ti⁄_°r_£t
(
h
, "CLICON_NETCONF_DIR", 
›èrg
);

379 
	`˛ic⁄_›ti⁄_°r_£t
(
h
, "CLICON_YANG_MODULE_MAIN", 
›èrg
);

383 
	`ußge
(
h
, 
¨gv
[0]);

386 
¨gc
 -
›töd
;

387 
¨gv
 +
›töd
;

392 i‡(
	`y™g_•ec_maö
(
h
Ë=
NULL
)

393 
d⁄e
;

396 i‡(
	`y™g_•ec_√tc⁄f
(
h
Ë=
NULL
)

397 
d⁄e
;

400 i‡((
dú
 = 
	`˛ic⁄_√tc⁄f_dú
(
h
)Ë!
NULL
)

401 i‡(
	`˛ix⁄_∂ugös_lﬂd
(
h
, 
CLIXON_PLUGIN_INIT
, 
dú
, 
NULL
) < 0)

402 
d⁄e
;

405 
tmp
 = *(
¨gv
-1);

406 *(
¨gv
-1Ë
¨gv0
;

407 
	`˛ix⁄_∂ugö_°¨t
(
h
, 
¨gc
+1, 
¨gv
-1);

408 *(
¨gv
-1Ë
tmp
;

410 i‡(!
quõt
)

411 
	`£nd_hñlo
(1);

412 i‡(
	`evít_ªg_fd
(0, 
√tc⁄f_öput_cb
, 
h
, "netconf socket") < 0)

413 
d⁄e
;

414 i‡(
debug
)

415 
	`˛ic⁄_›ti⁄_dump
(
h
, 
debug
);

416 i‡(
	`evít_lo›
() < 0)

417 
d⁄e
;

418 
d⁄e
:

419 
	`√tc⁄f_ãrmö©e
(
h
);

420 
	`˛ic⁄_log_öô
(
__PROGRAM__
, 
LOG_INFO
, 0);

421 
	`˛ic⁄_log
(
LOG_NOTICE
, "%s: %u Tîmö©ed\n", 
__PROGRAM__
, 
	`gëpid
());

423 
	}
}

	@clixon-master/apps/netconf/netconf_rpc.c

37 #ifde‡
HAVE_CONFIG_H


38 
	~"˛ix⁄_c⁄fig.h
"

41 
	~<°dio.h
>

42 
	~<°rög.h
>

43 
	~<uni°d.h
>

44 
	~<°dlib.h
>

45 
	~<î∫o.h
>

46 
	~<sig«l.h
>

47 
	~<f˙é.h
>

48 
	~<time.h
>

49 
	~<sys/°©.h
>

50 
	~<sys/time.h
>

51 
	~<sys/ty≥s.h
>

52 
	~<sys/sockë.h
>

53 
	~<√töë/ö.h
>

54 
	~<¨∑/öë.h
>

55 
	~<sys/∑øm.h
>

56 
	~<as£π.h
>

57 
	~<gΩ.h
>

60 
	~<˛igí/˛igí.h
>

63 
	~<˛ix⁄/˛ix⁄.h
>

65 
	~"˛ix⁄_√tc⁄f.h
"

66 
	~"√tc⁄f_lib.h
"

67 
	~"√tc⁄f_fûãr.h
"

68 
	~"√tc⁄f_Ωc.h
"

125 
	$√tc⁄f_gë_c⁄fig
(
˛ic⁄_h™dÀ
 
h
,

126 
cxobj
 *
xn
,

127 
cxobj
 **
xªt
)

129 
cxobj
 *
xfûãr
;

130 
ªtvÆ
 = -1;

131 *
sour˚
;

132 *
·y≥
 = 
NULL
;

133 
cxobj
 *
xfûãrc⁄f
;

134 
cxobj
 *
xc⁄f
;

136 i‡((
sour˚
 = 
	`√tc⁄f_gë_èrgë
(
xn
, "sour˚")Ë=
NULL
){

137 
	`xml_∑r£_va
(
xªt
, 
NULL
, "<rpc-reply><rpc-error>"

143 
ok
;

146 i‡((
xfûãr
 = 
	`x∑th_fú°
(
xn
, "fûãr")Ë!
NULL
)

147 
·y≥
 = 
	`xml_föd_vÆue
(
xfûãr
, "type");

148 i‡(
·y≥
 =
NULL
 || 
	`°rcmp
(ftype, "xpath")==0){

149 i‡(
	`˛ic⁄_Ωc_√tc⁄f_xml
(
h
, 
	`xml_∑ª¡
(
xn
), 
xªt
, 
NULL
) < 0)

150 
d⁄e
;

152 i‡(
	`°rcmp
(
·y≥
, "subtree")==0){

157 i‡(
	`˛ic⁄_Ωc_√tc⁄f_xml
(
h
, 
	`xml_∑ª¡
(
xn
), 
xªt
, 
NULL
) < 0)

158 
d⁄e
;

159 i‡(
xfûãr
 &&

160 (
xfûãrc⁄f
 = 
	`x∑th_fú°
(
xfûãr
, "//c⁄figuøti⁄"))!
NULL
 &&

161 (
xc⁄f
 = 
	`x∑th_fú°
(*
xªt
, "/Ωc-ª∂y/d©a")Ë!
NULL
){

163 i‡((
	`°rcmp
(
	`xml_«me
(
xfûãrc⁄f
), xml_«me(
xc⁄f
))!=0) ||

164 
	`xml_fûãr
(
xfûãrc⁄f
, 
xc⁄f
) < 0){

165 
	`xml_∑r£_va
(
xªt
, 
NULL
, "<rpc-reply><rpc-error>"

175 
	`xml_∑r£_va
(
xªt
, 
NULL
, "<rpc-reply><rpc-error>"

183 
ok
:

184 
ªtvÆ
 = 0;

185 
d⁄e
:

186  
ªtvÆ
;

187 
	}
}

206 
	$gë_edô_›ts
(
cxobj
 *
xn
,

207 
ã°_›ti⁄
 *
ã°›t
,

208 
îr‹_›ti⁄
 *
îr›t
,

209 
cxobj
 **
xªt
)

211 
ªtvÆ
 = -1;

212 
cxobj
 *
x
;

213 *
›t°r
;

215 i‡((
x
 = 
	`x∑th_fú°
(
xn
, "ã°-›ti⁄")Ë!
NULL
){

216 i‡((
›t°r
 = 
	`xml_body
(
x
)Ë!
NULL
){

217 i‡(
	`°rcmp
(
›t°r
, "test-then-set") == 0)

218 *
ã°›t
 = 
TEST_THEN_SET
;

220 i‡(
	`°rcmp
(
›t°r
, "set") == 0)

221 *
ã°›t
 = 
SET
;

223 i‡(
	`°rcmp
(
›t°r
, "test-only") == 0)

224 *
ã°›t
 = 
TEST_ONLY
;

226 
∑ªº
;

229 i‡((
x
 = 
	`x∑th_fú°
(
xn
, "îr‹-›ti⁄")Ë!
NULL
){

230 i‡((
›t°r
 = 
	`xml_body
(
x
)Ë!
NULL
){

231 i‡(
	`°rcmp
(
›t°r
, "stop-on-error") == 0)

232 *
îr›t
 = 
STOP_ON_ERROR
;

234 i‡(
	`°rcmp
(
›t°r
, "continue-on-error") == 0)

235 *
îr›t
 = 
CONTINUE_ON_ERROR
;

237 
∑ªº
;

240 
ªtvÆ
 = 1;

241  
ªtvÆ
;

242 
∑ªº
:

243 
	`xml_∑r£_va
(
xªt
, 
NULL
, "<rpc-reply><rpc-error>"

249 
	}
}

301 
	$√tc⁄f_edô_c⁄fig
(
˛ic⁄_h™dÀ
 
h
,

302 
cxobj
 *
xn
,

303 
cxobj
 **
xªt
)

305 
ªtvÆ
 = -1;

306 
›åë
;

307 
›î©i⁄_ty≥
 
›î©i⁄
 = 
OP_MERGE
;

308 
ã°_›ti⁄
 
ã°›t
 = 
TEST_THEN_SET
;

309 
îr‹_›ti⁄
 
îr›t
 = 
STOP_ON_ERROR
;

310 
cxobj
 *
xc
;

311 
cxobj
 *
x
;

312 
cxobj
 *
xfûãr
;

313 *
·y≥
 = 
NULL
;

314 *
èrgë
;

317 i‡((
èrgë
 = 
	`√tc⁄f_gë_èrgë
(
xn
, "èrgë")Ë=
NULL
 ||

318 
	`°rcmp
(
èrgë
, "candidate")){

319 
	`xml_∑r£_va
(
xªt
, 
NULL
, "<rpc-reply><rpc-error>"

325 
ok
;

328 i‡((
xfûãr
 = 
	`x∑th_fú°
(
xn
, "fûãr")Ë!
NULL
) {

329 i‡((
·y≥
 = 
	`xml_föd_vÆue
(
xfûãr
, "ty≥")Ë!
NULL
)

330 i‡(
	`°rcmp
(
·y≥
,"restconf")){

331 
	`xml_∑r£_va
(
xªt
, 
NULL
, "<rpc-reply><rpc-error>"

336 
ok
;

339 i‡((
x
 = 
	`x∑th_fú°
(
xn
, "deÁu…-›î©i⁄")Ë!
NULL
){

340 i‡(
	`xml_›î©i⁄
(
	`xml_body
(
x
), &
›î©i⁄
) < 0){

341 
	`xml_∑r£_va
(
xªt
, 
NULL
, "<rpc-reply><rpc-error>"

346 
ok
;

349 i‡((
›åë
 = 
	`gë_edô_›ts
(
xn
, &
ã°›t
, &
îr›t
, 
xªt
)) < 0)

350 
d⁄e
;

351 i‡(
›åë
 == 0)

352 
ok
;

354 i‡(
ã°›t
!=
TEST_THEN_SET
 || 
îr›t
!=
STOP_ON_ERROR
){

355 
	`xml_∑r£_va
(
xªt
, 
NULL
, "<rpc-reply><rpc-error>"

360 
ok
;

364 i‡((
xc
 = 
	`x∑th_fú°
(
xn
, "c⁄fig")Ë!
NULL
){

367 i‡((
ªt
 = 
	`√tc⁄f_∂ugö_ˇŒbacks
(
h
, 
xc
, 
xªt
)) < 0){

368 
ok
;

371 i‡(
	`˛ic⁄_Ωc_√tc⁄f_xml
(
h
, 
	`xml_∑ª¡
(
xn
), 
xªt
, 
NULL
) < 0)

372 
d⁄e
;

374 
ok
:

375 
ªtvÆ
 = 0;

376 
d⁄e
:

377  
ªtvÆ
;

378 
	}
}

396 
	$√tc⁄f_c›y_c⁄fig
(
˛ic⁄_h™dÀ
 
h
,

397 
cxobj
 *
xn
,

398 
cxobj
 **
xªt
)

400 
ªtvÆ
 = -1;

401 *
sour˚
;

402 *
èrgë
;

404 i‡((
sour˚
 = 
	`√tc⁄f_gë_èrgë
(
xn
, "sour˚")Ë=
NULL
){

405 
	`xml_∑r£_va
(
xªt
, 
NULL
, "<rpc-reply><rpc-error>"

411 
ok
;

413 i‡((
èrgë
 = 
	`√tc⁄f_gë_èrgë
(
xn
, "èrgë")Ë=
NULL
){

414 
	`xml_∑r£_va
(
xªt
, 
NULL
, "<rpc-reply><rpc-error>"

420 
ok
;

422 i‡(
	`˛ic⁄_Ωc_√tc⁄f_xml
(
h
, 
	`xml_∑ª¡
(
xn
), 
xªt
, 
NULL
) < 0)

423 
d⁄e
;

424 
ok
:

425 
ªtvÆ
 = 0;

426 
d⁄e
:

427  
ªtvÆ
;

428 
	}
}

443 
	$√tc⁄f_dñëe_c⁄fig
(
˛ic⁄_h™dÀ
 
h
,

444 
cxobj
 *
xn
,

445 
cxobj
 **
xªt
)

447 *
èrgë
;

448 
ªtvÆ
 = -1;

450 i‡((
èrgë
 = 
	`√tc⁄f_gë_èrgë
(
xn
, "èrgë")Ë=
NULL
 ||

451 
	`°rcmp
(
èrgë
, "running")==0){

452 
	`xml_∑r£_va
(
xªt
, 
NULL
, "<rpc-reply><rpc-error>"

458 
ok
;

460 i‡(
	`˛ic⁄_Ωc_√tc⁄f_xml
(
h
, 
	`xml_∑ª¡
(
xn
), 
xªt
, 
NULL
) < 0)

461 
d⁄e
;

462 
ok
:

463 
ªtvÆ
 = 0;

464 
d⁄e
:

465  
ªtvÆ
;

466 
	}
}

480 
	$√tc⁄f_lock
(
˛ic⁄_h™dÀ
 
h
,

481 
cxobj
 *
xn
,

482 
cxobj
 **
xªt
)

484 
ªtvÆ
 = -1;

485 *
èrgë
;

487 i‡((
èrgë
 = 
	`√tc⁄f_gë_èrgë
(
xn
, "èrgë")Ë=
NULL
){

488 
	`xml_∑r£_va
(
xªt
, 
NULL
, "<rpc-reply><rpc-error>"

494 
ok
;

496 i‡(
	`˛ic⁄_Ωc_√tc⁄f_xml
(
h
, 
	`xml_∑ª¡
(
xn
), 
xªt
, 
NULL
) < 0)

497 
d⁄e
;

498 
ok
:

499 
ªtvÆ
 = 0;

500 
d⁄e
:

501  
ªtvÆ
;

502 
	}
}

516 
	$√tc⁄f_u∆ock
(
˛ic⁄_h™dÀ
 
h
,

517 
cxobj
 *
xn
,

518 
cxobj
 **
xªt
)

520  
	`√tc⁄f_lock
(
h
, 
xn
, 
xªt
);

521 
	}
}

538 
	$√tc⁄f_gë
(
˛ic⁄_h™dÀ
 
h
,

539 
cxobj
 *
xn
,

540 
cxobj
 **
xªt
)

542 
cxobj
 *
xfûãr
;

543 
ªtvÆ
 = -1;

544 *
·y≥
 = 
NULL
;

545 
cxobj
 *
xfûãrc⁄f
;

546 
cxobj
 *
xc⁄f
;

549 i‡((
xfûãr
 = 
	`x∑th_fú°
(
xn
, "fûãr")Ë!
NULL
)

550 
·y≥
 = 
	`xml_föd_vÆue
(
xfûãr
, "type");

551 i‡(
·y≥
 =
NULL
 || 
	`°rcmp
(ftype, "xpath")==0){

552 i‡(
	`˛ic⁄_Ωc_√tc⁄f_xml
(
h
, 
	`xml_∑ª¡
(
xn
), 
xªt
, 
NULL
) < 0)

553 
d⁄e
;

555 i‡(
	`°rcmp
(
·y≥
, "subtree")==0){

560 i‡(
	`˛ic⁄_Ωc_√tc⁄f_xml
(
h
, 
	`xml_∑ª¡
(
xn
), 
xªt
, 
NULL
) < 0)

561 
d⁄e
;

562 i‡(
xfûãr
 &&

563 (
xfûãrc⁄f
 = 
	`x∑th_fú°
(
xfûãr
, "//c⁄figuøti⁄"))!
NULL
 &&

564 (
xc⁄f
 = 
	`x∑th_fú°
(*
xªt
, "/Ωc-ª∂y/d©a")Ë!
NULL
){

566 i‡((
	`°rcmp
(
	`xml_«me
(
xfûãrc⁄f
), xml_«me(
xc⁄f
))!=0) ||

567 
	`xml_fûãr
(
xfûãrc⁄f
, 
xc⁄f
) < 0){

568 
	`xml_∑r£_va
(
xªt
, 
NULL
, "<rpc-reply><rpc-error>"

578 
	`xml_∑r£_va
(
xªt
, 
NULL
, "<rpc-reply><rpc-error>"

587 
ªtvÆ
 = 0;

588 
d⁄e
:

589  
ªtvÆ
;

590 
	}
}

599 
	$√tc⁄f_˛o£_£ssi⁄
(
˛ic⁄_h™dÀ
 
h
,

600 
cxobj
 *
xn
,

601 
cxobj
 **
xªt
)

603 
ªtvÆ
 = -1;

605 
cc_˛o£d
++;

606 i‡(
	`˛ic⁄_Ωc_√tc⁄f_xml
(
h
, 
	`xml_∑ª¡
(
xn
), 
xªt
, 
NULL
) < 0)

607 
d⁄e
;

608 
ªtvÆ
 = 0;

609 
d⁄e
:

610  
ªtvÆ
;

611 
	}
}

621 
	$√tc⁄f_kûl_£ssi⁄
(
˛ic⁄_h™dÀ
 
h
,

622 
cxobj
 *
xn
,

623 
cxobj
 **
xªt
)

625 
ªtvÆ
=-1;

626 
cxobj
 *
xs
;

628 i‡((
xs
 = 
	`x∑th_fú°
(
xn
, "//£ssi⁄-id")Ë=
NULL
){

629 
	`xml_∑r£_va
(
xªt
, 
NULL
, "<rpc-reply><rpc-error>"

635 
ok
;

637 i‡(
	`˛ic⁄_Ωc_√tc⁄f_xml
(
h
, 
	`xml_∑ª¡
(
xn
), 
xªt
, 
NULL
) < 0)

638 
d⁄e
;

639 
ok
:

640 
ªtvÆ
 = 0;

641 
d⁄e
:

642  
ªtvÆ
;

643 
	}
}

652 
	$√tc⁄f_vÆid©e
(
˛ic⁄_h™dÀ
 
h
,

653 
cxobj
 *
xn
,

654 
cxobj
 **
xªt
)

656 
ªtvÆ
 = -1;

657 *
èrgë
;

659 i‡((
èrgë
 = 
	`√tc⁄f_gë_èrgë
(
xn
, "sour˚")Ë=
NULL
){

660 
	`xml_∑r£_va
(
xªt
, 
NULL
, "<rpc-reply><rpc-error>"

666 
ok
;

668 i‡(
	`˛ic⁄_Ωc_√tc⁄f_xml
(
h
, 
	`xml_∑ª¡
(
xn
), 
xªt
, 
NULL
) < 0)

669 
d⁄e
;

670 
ok
:

671 
ªtvÆ
 = 0;

672 
d⁄e
:

673  
ªtvÆ
;

674 
	}
}

684 
	$√tc⁄f_commô
(
˛ic⁄_h™dÀ
 
h
,

685 
cxobj
 *
xn
,

686 
cxobj
 **
xªt
)

688 
ªtvÆ
 = -1;

690 i‡(
	`˛ic⁄_Ωc_√tc⁄f_xml
(
h
, 
	`xml_∑ª¡
(
xn
), 
xªt
, 
NULL
) < 0)

691 
d⁄e
;

692 
ªtvÆ
 = 0;

693 
d⁄e
:

694  
ªtvÆ
;

695 
	}
}

705 
	$√tc⁄f_disˇrd_ch™ges
(
˛ic⁄_h™dÀ
 
h
,

706 
cxobj
 *
xn
,

707 
cxobj
 **
xªt
)

709 
ªtvÆ
 = -1;

711 i‡(
	`˛ic⁄_Ωc_√tc⁄f_xml
(
h
, 
	`xml_∑ª¡
(
xn
), 
xªt
, 
NULL
) < 0)

712 
d⁄e
;

713 
ªtvÆ
 = 0;

714 
d⁄e
:

715  
ªtvÆ
;

716 
	}
}

733 
	$√tc⁄f_nŸifiˇti⁄_cb
(
s
,

734 *
¨g
)

736 
cxobj
 *
xfûãr
 = (cxobj *)
¨g
;

737 *
£À˘‹
;

738 
˛ic⁄_msg
 *
ª∂y
 = 
NULL
;

739 
eof
;

740 *
evít
 = 
NULL
;

741 
ªtvÆ
 = -1;

742 
cbuf
 *
cb
;

743 
cxobj
 *
xe
 = 
NULL
;

744 
cxobj
 *
xt
 = 
NULL
;

747 
	`Ârötf
(
°dîr
, "%s\n", 
__FUNCTION__
);

748 
	`xml_¥öt
(
°dîr
, 
xfûãr
);

751 i‡(
	`˛ic⁄_msg_rcv
(
s
, &
ª∂y
, &
eof
) < 0)

752 
d⁄e
;

754 i‡(
eof
){

755 
	`˛ic⁄_îr
(
OE_PROTO
, 
ESHUTDOWN
, "%s: Sockë u√x≥˘ed clo£", 
__FUNCTION__
);

756 
	`˛o£
(
s
);

757 
î∫o
 = 
ESHUTDOWN
;

758 
	`evít_uƒeg_fd
(
s
, 
√tc⁄f_nŸifiˇti⁄_cb
);

759 i‡(
xfûãr
)

760 
	`xml_‰ì
(
xfûãr
);

761 
d⁄e
;

763 i‡(
	`˛ic⁄_msg_decode
(
ª∂y
, &
xt
) < 0)

764 
d⁄e
;

765 i‡((
xe
 = 
	`x∑th_fú°
(
xt
, "//evít")Ë!
NULL
)

766 
evít
 = 
	`xml_body
(
xe
);

771 i‡((
£À˘‹
 = 
	`xml_föd_vÆue
(
xfûãr
, "£À˘")Ë=
NULL
)

772 
d⁄e
;

773 i‡(
	`x∑th_fú°
(
xe
, 
£À˘‹
Ë=
NULL
) {

774 
	`Ârötf
(
°dîr
, "%†nÿm©ch\n", 
__FUNCTION__
);

778 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
){

779 
	`˛ic⁄_îr
(
OE_PLUGIN
, 
î∫o
, "%s: cbuf_√w", 
__FUNCTION__
);

780 
d⁄e
;

782 
	`add_¥ómbÀ
(
cb
);

783 
	`˝rötf
(
cb
, "<nŸifiˇti⁄><evít>%s</evít></nŸifiˇti⁄>", 
evít
);

784 
	`add_po°ambÀ
(
cb
);

786 i‡(
	`√tc⁄f_ouçut
(1, 
cb
, "notification") < 0){

787 
	`cbuf_‰ì
(
cb
);

788 
d⁄e
;

790 
	`fÊush
(
°dout
);

791 
	`cbuf_‰ì
(
cb
);

792 
ªtvÆ
 = 0;

793 
d⁄e
:

794 i‡(
xt
 !
NULL
)

795 
	`xml_‰ì
(
xt
);

796 i‡(
ª∂y
)

797 
	`‰ì
(
ª∂y
);

798  
ªtvÆ
;

799 
	}
}

816 
	$√tc⁄f_¸óã_subs¸ùti⁄
(
˛ic⁄_h™dÀ
 
h
,

817 
cxobj
 *
xn
,

818 
cxobj
 **
xªt
)

820 
ªtvÆ
 = -1;

821 
cxobj
 *
xfûãr
;

822 
s
;

823 *
·y≥
;

825 i‡((
xfûãr
 = 
	`x∑th_fú°
(
xn
, "//fûãr")Ë!
NULL
){

826 i‡((
·y≥
 = 
	`xml_föd_vÆue
(
xfûãr
, "ty≥")Ë!
NULL
){

827 i‡(
	`°rcmp
(
·y≥
, "xpath") != 0){

828 
	`xml_∑r£_va
(
xªt
, 
NULL
, "<rpc-reply><rpc-error>"

835 
ok
;

839 i‡(
	`˛ic⁄_Ωc_√tc⁄f_xml
(
h
, 
	`xml_∑ª¡
(
xn
), 
xªt
, &
s
) < 0)

840 
d⁄e
;

841 i‡(
	`evít_ªg_fd
(
s
,

842 
√tc⁄f_nŸifiˇti⁄_cb
,

843 
xfûãr
?
	`xml_dup
(xfûãr):
NULL
,

845 
d⁄e
;

846 
ok
:

847 
ªtvÆ
 = 0;

848 
d⁄e
:

849  
ªtvÆ
;

850 
	}
}

865 
	$√tc⁄f_≠∂iˇti⁄_Ωc
(
˛ic⁄_h™dÀ
 
h
,

866 
cxobj
 *
xn
,

867 
cxobj
 **
xªt
)

869 
ªtvÆ
 = -1;

870 
y™g_•ec
 *
y•ec
 = 
NULL
;

871 
y™g_°mt
 *
yΩc
 = 
NULL
;

872 
y™g_°mt
 *
yöput
;

873 
y™g_°mt
 *
youçut
;

874 
cxobj
 *
xouçut
;

875 
cbuf
 *
cb
 = 
NULL
;

876 
cbuf
 *
cbªt
 = 
NULL
;

877 
ªt
;

880 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
){

881 
	`˛ic⁄_îr
(
OE_UNIX
, 0, "cbuf_new");

882 
d⁄e
;

886 i‡((
y•ec
 = 
	`˛ic⁄_db•ec_y™g
(
h
)Ë=
NULL
){

887 
	`˛ic⁄_îr
(
OE_YANG
, 
ENOENT
, "No yang spec");

888 
d⁄e
;

890 
	`cbuf_ª£t
(
cb
);

892 
	`˝rötf
(
cb
, "/%s:%s", 
	`xml_«me•a˚
(
xn
), 
	`xml_«me
(xn));

896 i‡(
	`y™g_abs_schema_nodeid
(
y•ec
, 
	`cbuf_gë
(
cb
), 
Y_RPC
, &
yΩc
) < 0)

897 
d⁄e
;

899 i‡(
yΩc
 !
NULL
){

901 i‡((
yöput
 = 
	`y™g_föd
((
y™g_node
*)
yΩc
, 
Y_INPUT
, 
NULL
)) != NULL){

902 
	`xml_•ec_£t
(
xn
, 
yöput
);

903 i‡(
	`xml_≠∂y
(
xn
, 
CX_ELMNT
, 
xml_•ec_p›uœã
, 
yöput
) < 0)

904 
d⁄e
;

905 i‡(
	`xml_≠∂y
(
xn
, 
CX_ELMNT
,

906 (
xml_≠∂y‚_t
*)
xml_y™g_vÆid©e_Æl
, 
NULL
) < 0)

907 
d⁄e
;

908 i‡(
	`xml_y™g_vÆid©e_add
(
xn
, 
NULL
) < 0)

909 
d⁄e
;

911 i‡((
cbªt
 = 
	`cbuf_√w
()Ë=
NULL
){

912 
	`˛ic⁄_îr
(
OE_UNIX
, 0, "cbuf_new");

913 
d⁄e
;

916 i‡((
ªt
 = 
	`Ωc_ˇŒback_ˇŒ
(
h
, 
xn
, 
cbªt
, 
NULL
)) < 0)

917 
d⁄e
;

918 i‡(
ªt
 == 1){

919 i‡(
	`xml_∑r£_°rög
(
	`cbuf_gë
(
cbªt
), 
NULL
, 
xªt
) < 0)

920 
d⁄e
;

923 i‡(
	`˛ic⁄_Ωc_√tc⁄f_xml
(
h
, 
	`xml_∑ª¡
(
xn
), 
xªt
, 
NULL
) < 0)

924 
d⁄e
;

926 i‡((
youçut
 = 
	`y™g_föd
((
y™g_node
*)
yΩc
, 
Y_OUTPUT
, 
NULL
)) != NULL){

927 
xouçut
=
	`x∑th_fú°
(*
xªt
, "/");

928 
	`xml_•ec_£t
(
xouçut
, 
youçut
);

929 i‡(
	`xml_≠∂y
(
xouçut
, 
CX_ELMNT
, 
xml_•ec_p›uœã
, 
youçut
) < 0)

930 
d⁄e
;

931 i‡(
	`xml_≠∂y
(
xouçut
, 
CX_ELMNT
,

932 (
xml_≠∂y‚_t
*)
xml_y™g_vÆid©e_Æl
, 
NULL
) < 0)

933 
d⁄e
;

934 i‡(
	`xml_y™g_vÆid©e_add
(
xouçut
, 
NULL
) < 0)

935 
d⁄e
;

937 
ªtvÆ
 = 1;

938 
d⁄e
;

940 
ªtvÆ
 = 0;

941 
d⁄e
:

942 i‡(
cb
)

943 
	`cbuf_‰ì
(
cb
);

944 i‡(
cbªt
)

945 
	`cbuf_‰ì
(
cbªt
);

946  
ªtvÆ
;

947 
	}
}

960 
	$√tc⁄f_Ωc_di•©ch
(
˛ic⁄_h™dÀ
 
h
,

961 
cxobj
 *
xn
,

962 
cxobj
 **
xªt
)

964 
ªtvÆ
 = -1;

965 
cxobj
 *
xe
;

966 
y™g_•ec
 *
y•ec
 = 
NULL
;

969 i‡((
y•ec
 = 
	`˛ic⁄_√tc⁄f_y™g
(
h
)Ë=
NULL
){

970 
	`˛ic⁄_îr
(
OE_YANG
, 
ENOENT
, "NoÇetconf yang spec");

971 
d⁄e
;

973 
xe
 = 
NULL
;

974 (
xe
 = 
	`xml_chûd_óch
(
xn
, xe, 
CX_ELMNT
)Ë!
NULL
) {

975 i‡(
	`°rcmp
(
	`xml_«me
(
xe
), "get-config") == 0){

976 i‡(
	`√tc⁄f_gë_c⁄fig
(
h
, 
xe
, 
xªt
) < 0)

977 
d⁄e
;

979 i‡(
	`°rcmp
(
	`xml_«me
(
xe
), "edit-config") == 0){

980 i‡(
	`√tc⁄f_edô_c⁄fig
(
h
, 
xe
, 
xªt
) < 0)

981 
d⁄e
;

983 i‡(
	`°rcmp
(
	`xml_«me
(
xe
), "copy-config") == 0){

984 i‡(
	`√tc⁄f_c›y_c⁄fig
(
h
, 
xe
, 
xªt
) < 0)

985 
d⁄e
;

987 i‡(
	`°rcmp
(
	`xml_«me
(
xe
), "delete-config") == 0){

988 i‡(
	`√tc⁄f_dñëe_c⁄fig
(
h
, 
xe
, 
xªt
) < 0)

989 
d⁄e
;

991 i‡(
	`°rcmp
(
	`xml_«me
(
xe
), "lock") == 0) {

992 i‡(
	`√tc⁄f_lock
(
h
, 
xe
, 
xªt
) < 0)

993 
d⁄e
;

995 i‡(
	`°rcmp
(
	`xml_«me
(
xe
), "unlock") == 0){

996 i‡(
	`√tc⁄f_u∆ock
(
h
, 
xe
, 
xªt
) < 0)

997 
d⁄e
;

999 i‡(
	`°rcmp
(
	`xml_«me
(
xe
), "get") == 0){

1000 i‡(
	`√tc⁄f_gë
(
h
, 
xe
, 
xªt
) < 0)

1001 
d⁄e
;

1003 i‡(
	`°rcmp
(
	`xml_«me
(
xe
), "close-session") == 0){

1004 i‡(
	`√tc⁄f_˛o£_£ssi⁄
(
h
, 
xe
, 
xªt
) < 0)

1005 
d⁄e
;

1007 i‡(
	`°rcmp
(
	`xml_«me
(
xe
), "kill-session") == 0) {

1008 i‡(
	`√tc⁄f_kûl_£ssi⁄
(
h
, 
xe
, 
xªt
) < 0)

1009 
d⁄e
;

1012 i‡(
	`°rcmp
(
	`xml_«me
(
xe
), "validate") == 0){

1013 i‡(
	`√tc⁄f_vÆid©e
(
h
, 
xe
, 
xªt
) < 0)

1014 
d⁄e
;

1017 i‡(
	`°rcmp
(
	`xml_«me
(
xe
), "commit") == 0){

1018 i‡(
	`√tc⁄f_commô
(
h
, 
xe
, 
xªt
) < 0)

1019 
d⁄e
;

1021 i‡(
	`°rcmp
(
	`xml_«me
(
xe
), "discard-changes") == 0){

1022 i‡(
	`√tc⁄f_disˇrd_ch™ges
(
h
, 
xe
, 
xªt
) < 0)

1023 
d⁄e
;

1026 i‡(
	`°rcmp
(
	`xml_«me
(
xe
), "create-subscription") == 0){

1027 i‡(
	`√tc⁄f_¸óã_subs¸ùti⁄
(
h
, 
xe
, 
xªt
) < 0)

1028 
d⁄e
;

1034 i‡((
ªtvÆ
 = 
	`√tc⁄f_≠∂iˇti⁄_Ωc
(
h
, 
xe
, 
xªt
)) < 0)

1035 
d⁄e
;

1036 i‡(
ªtvÆ
 == 0){

1037 
	`xml_∑r£_va
(
xªt
, 
NULL
, "<rpc-reply><rpc-error>"

1043 "</Ωc-îr‹></Ωc-ª∂y>", 
	`xml_«me
(
xe
));

1044 
d⁄e
;

1048 
ªtvÆ
 = 0;

1049 
d⁄e
:

1050  
ªtvÆ
;

1051 
	}
}

	@clixon-master/apps/netconf/netconf_rpc.h

37 #i‚de‡
_NETCONF_RPC_H_


38 
	#_NETCONF_RPC_H_


	)

44 
√tc⁄f_Ωc_di•©ch
(
˛ic⁄_h™dÀ
 
h
,

45 
cxobj
 *
xn
,

46 
cxobj
 **
xªt
);

	@clixon-master/apps/restconf/clixon_restconf.h

38 #i‚de‡
_CLIXON_RESTCONF_H_


39 
	#_CLIXON_RESTCONF_H_


	)

44 
ª°c⁄f_îr2code
(*
èg
);

45 c⁄° *
ª°c⁄f_code2ªas⁄
(
code
);

47 
badªque°
(
FCGX_Reque°
 *
r
);

48 
u«uth‹ized
(
FCGX_Reque°
 *
r
);

49 
f‹biddí
(
FCGX_Reque°
 *
r
);

50 
nŸfound
(
FCGX_Reque°
 *
r
);

51 
c⁄Êi˘
(
FCGX_Reque°
 *
r
);

52 
öã∫Æ_£rvî_îr‹
(
FCGX_Reque°
 *
r
);

53 
nŸim∂emíãd
(
FCGX_Reque°
 *
r
);

55 
˛ic⁄_debug_xml
(
dbgÀvñ
, *
°r
, 
cxobj
 *
cx
);

56 
ã°
(
FCGX_Reque°
 *
r
, 
dbg
);

57 
cbuf
 *
ªadd©a
(
FCGX_Reque°
 *
r
);

58 
gë_u£r_cookõ
(*
cookõ°r
, *
©åibuã
, **
vÆ
);

59 
≠i_ªtu∫_îr
(
˛ic⁄_h™dÀ
 
h
, 
FCGX_Reque°
 *
r
, 
cxobj
 *
xîr
,

60 
¥ëty
, 
u£_xml
);

	@clixon-master/apps/restconf/restconf_lib.c

36 
	~<°dlib.h
>

37 
	~<°rög.h
>

38 
	~<uni°d.h
>

39 
	~<î∫o.h
>

40 
	~<sig«l.h
>

41 
	~<sy¶og.h
>

42 
	~<f˙é.h
>

43 
	~<˘y≥.h
>

44 
	~<time.h
>

45 
	~<sig«l.h
>

46 
	~<dlf˙.h
>

47 
	~<sys/∑øm.h
>

48 
	~<sys/time.h
>

49 
	~<sys/waô.h
>

52 
	~<˛igí/˛igí.h
>

55 
	~<˛ix⁄/˛ix⁄.h
>

57 
	~<fcgi_°dio.h
>

59 
	~"ª°c⁄f_lib.h
"

64 c⁄° 
m≠_°r2öt
 
	g√tc⁄f_ª°c⁄f_m≠
[] = {

90 {
NULL
, -1}

95 c⁄° 
m≠_°r2öt
 
	ghâp_ªas⁄_phø£_m≠
[] = {

137 {
NULL
, -1}

141 
	$ª°c⁄f_îr2code
(*
èg
)

143  
	`˛ic⁄_°r2öt
(
√tc⁄f_ª°c⁄f_m≠
, 
èg
);

144 
	}
}

147 
	$ª°c⁄f_code2ªas⁄
(
code
)

149  
	`˛ic⁄_öt2°r
(
hâp_ªas⁄_phø£_m≠
, 
code
);

150 
	}
}

156 
	$badªque°
(
FCGX_Reque°
 *
r
)

158 *
∑th
;

160 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

161 
∑th
 = 
	`FCGX_GëP¨am
("DOCUMENT_URI", 
r
->
ívp
);

162 
	`FCGX_FPrötF
(
r
->
out
, "Status: 400\r\n");

163 
	`FCGX_FPrötF
(
r
->
out
, "Content-Type:Åext/html\r\n\r\n");

164 
	`FCGX_FPrötF
(
r
->
out
, "<h1>Clixon BadÑequest/h1>\n");

165 
	`FCGX_FPrötF
(
r
->
out
, "TheÑequested URL %s or data is in some way badly formed.\n",

166 
∑th
);

168 
	}
}

174 
	$u«uth‹ized
(
FCGX_Reque°
 *
r
)

176 *
∑th
;

178 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

179 
∑th
 = 
	`FCGX_GëP¨am
("DOCUMENT_URI", 
r
->
ívp
);

180 
	`FCGX_FPrötF
(
r
->
out
, "Status: 401\r\n");

181 
	`FCGX_FPrötF
(
r
->
out
, "Content-Type:Åext/html\r\n\r\n");

182 
	`FCGX_FPrötF
(
r
->
out
, "<error-tag>access-denied</error-tag>\n");

183 
	`FCGX_FPrötF
(
r
->
out
, "Thêªque°ed URL %†wa†u«uth‹ized.\n", 
∑th
);

185 
	}
}

191 
	$f‹biddí
(
FCGX_Reque°
 *
r
)

193 *
∑th
;

195 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

196 
∑th
 = 
	`FCGX_GëP¨am
("DOCUMENT_URI", 
r
->
ívp
);

197 
	`FCGX_FPrötF
(
r
->
out
, "Status: 403\r\n");

198 
	`FCGX_FPrötF
(
r
->
out
, "Content-Type:Åext/html\r\n\r\n");

199 
	`FCGX_FPrötF
(
r
->
out
, "<h1>Grideye Forbidden</h1>\n");

200 
	`FCGX_FPrötF
(
r
->
out
, "Thêªque°ed URL %†wa†f‹biddí.\n", 
∑th
);

202 
	}
}

208 
	$nŸfound
(
FCGX_Reque°
 *
r
)

210 *
∑th
;

212 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

213 
∑th
 = 
	`FCGX_GëP¨am
("DOCUMENT_URI", 
r
->
ívp
);

214 
	`FCGX_FPrötF
(
r
->
out
, "Status: 404\r\n");

216 
	`FCGX_FPrötF
(
r
->
out
, "Content-Type:Åext/html\r\n\r\n");

217 
	`FCGX_FPrötF
(
r
->
out
, "<h1>Not Found</h1>\n");

218 
	`FCGX_FPrötF
(
r
->
out
, "Not Found\n");

219 
	`FCGX_FPrötF
(
r
->
out
, "TheÑequested URL %s wasÇot found onÅhis server.\n",

220 
∑th
);

222 
	}
}

228 
	$c⁄Êi˘
(
FCGX_Reque°
 *
r
)

230 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

231 
	`FCGX_FPrötF
(
r
->
out
, "Status: 409\r\n");

232 
	`FCGX_FPrötF
(
r
->
out
, "Content-Type:Åext/html\r\n\r\n");

233 
	`FCGX_FPrötF
(
r
->
out
, "<h1>DataÑesourceálreadyÉxists</h1>\n");

235 
	}
}

241 
	$öã∫Æ_£rvî_îr‹
(
FCGX_Reque°
 *
r
)

243 *
∑th
;

245 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

246 
∑th
 = 
	`FCGX_GëP¨am
("DOCUMENT_URI", 
r
->
ívp
);

247 
	`FCGX_FPrötF
(
r
->
out
, "Status: 500\r\n");

248 
	`FCGX_FPrötF
(
r
->
out
, "Content-Type:Åext/html\r\n\r\n");

249 
	`FCGX_FPrötF
(
r
->
out
, "<h1>GrideyêI¡î«»£rvîÉº‹ whíác˚ssög %s</h1>\n", 
∑th
);

251 
	}
}

257 
	$nŸim∂emíãd
(
FCGX_Reque°
 *
r
)

259 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

260 
	`FCGX_FPrötF
(
r
->
out
, "Status: 501\r\n");

261 
	`FCGX_FPrötF
(
r
->
out
, "Content-Type:Åext/html\r\n\r\n");

262 
	`FCGX_FPrötF
(
r
->
out
, "<h1>Not Implemented/h1>\n");

264 
	}
}

268 
	$˛ic⁄_debug_xml
(
dbgÀvñ
,

269 *
°r
,

270 
cxobj
 *
x
)

272 
ªtvÆ
 = -1;

273 
cbuf
 *
cb
;

275 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
)

276 
d⁄e
;

277 i‡(
	`˛ic⁄_xml2cbuf
(
cb
, 
x
, 0, 0) < 0)

278 
d⁄e
;

279 
	`˛ic⁄_debug
(1, "%†%s", 
°r
, 
	`cbuf_gë
(
cb
));

280 
ªtvÆ
 = 0;

281 
d⁄e
:

282 i‡(
cb
!=
NULL
)

283 
	`cbuf_‰ì
(
cb
);

284  
ªtvÆ
;

285 
	}
}

291 
	$¥öç¨am
(
FCGX_Reque°
 *
r
,

292 *
e
,

293 
dbgp
)

295 *
p
 = 
	`FCGX_GëP¨am
(
e
, 
r
->
ívp
);

297 i‡(
dbgp
)

298 
	`˛ic⁄_debug
(1, "%†'%s'", 
e
, 
p
?p:"");

300 
	`FCGX_FPrötF
(
r
->
out
, "%†'%s'\n", 
e
, 
p
?p:"");

302 
	}
}

308 
	$ã°
(
FCGX_Reque°
 *
r
,

309 
dbg
)

311 
	`¥öç¨am
(
r
, "QUERY_STRING", 
dbg
);

312 
	`¥öç¨am
(
r
, "REQUEST_METHOD", 
dbg
);

313 
	`¥öç¨am
(
r
, "CONTENT_TYPE", 
dbg
);

314 
	`¥öç¨am
(
r
, "CONTENT_LENGTH", 
dbg
);

315 
	`¥öç¨am
(
r
, "SCRIPT_FILENAME", 
dbg
);

316 
	`¥öç¨am
(
r
, "SCRIPT_NAME", 
dbg
);

317 
	`¥öç¨am
(
r
, "REQUEST_URI", 
dbg
);

318 
	`¥öç¨am
(
r
, "DOCUMENT_URI", 
dbg
);

319 
	`¥öç¨am
(
r
, "DOCUMENT_ROOT", 
dbg
);

320 
	`¥öç¨am
(
r
, "SERVER_PROTOCOL", 
dbg
);

321 
	`¥öç¨am
(
r
, "GATEWAY_INTERFACE", 
dbg
);

322 
	`¥öç¨am
(
r
, "SERVER_SOFTWARE", 
dbg
);

323 
	`¥öç¨am
(
r
, "REMOTE_ADDR", 
dbg
);

324 
	`¥öç¨am
(
r
, "REMOTE_PORT", 
dbg
);

325 
	`¥öç¨am
(
r
, "SERVER_ADDR", 
dbg
);

326 
	`¥öç¨am
(
r
, "SERVER_PORT", 
dbg
);

327 
	`¥öç¨am
(
r
, "SERVER_NAME", 
dbg
);

328 
	`¥öç¨am
(
r
, "HTTP_COOKIE", 
dbg
);

329 
	`¥öç¨am
(
r
, "HTTPS", 
dbg
);

330 
	`¥öç¨am
(
r
, "HTTP_ACCEPT", 
dbg
);

331 
	`¥öç¨am
(
r
, "HTTP_CONTENT_TYPE", 
dbg
);

332 
	`¥öç¨am
(
r
, "HTTP_AUTHORIZATION", 
dbg
);

334 
	`˛ic⁄_debug
(1, "AllÉnvironment vars:");

336 **
ívú⁄
;

337 
i
;

338 
i
 = 0; 
ívú⁄
[i] !
NULL
; i++){

339 
	`˛ic⁄_debug
(1, "%s", 
ívú⁄
[
i
]);

342 
	`˛ic⁄_debug
(1, "EndÉnvironment vars:");

345 
	}
}

350 
cbuf
 *

351 
	$ªadd©a
(
FCGX_Reque°
 *
r
)

353 
c
;

354 
cbuf
 *
cb
;

356 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
)

357  
NULL
;

358 (
c
 = 
	`FCGX_GëCh¨
(
r
->
ö
)) != -1)

359 
	`˝rötf
(
cb
, "%c", 
c
);

360  
cb
;

361 
	}
}

369 
	$gë_u£r_cookõ
(*
cookõ°r
,

370 *
©åibuã
,

371 **
vÆ
)

373 
ªtvÆ
 = -1;

374 
cvec
 *
cvv
 = 
NULL
;

375 *
c
;

377 i‡(
	`°r2cvec
(
cookõ°r
, ';', '=', &
cvv
) < 0)

378 
d⁄e
;

379 i‡((
c
 = 
	`cvec_föd_°r
(
cvv
, 
©åibuã
)Ë!
NULL
){

380 i‡((*
vÆ
 = 
	`°rdup
(
c
)Ë=
NULL
)

381 
d⁄e
;

383 
ªtvÆ
 = 0;

384 
d⁄e
:

385 i‡(
cvv
)

386 
	`cvec_‰ì
(
cvv
);

387  
ªtvÆ
;

388 
	}
}

398 
	$≠i_ªtu∫_îr
(
˛ic⁄_h™dÀ
 
h
,

399 
FCGX_Reque°
 *
r
,

400 
cxobj
 *
xîr
,

401 
¥ëty
,

402 
u£_xml
)

404 
ªtvÆ
 = -1;

405 
cbuf
 *
cb
 = 
NULL
;

406 
cxobj
 *
xèg
;

407 *
èg°r
;

408 
code
;

409 c⁄° *
ªas⁄_phø£
;

411 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

412 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
)

413 
d⁄e
;

414 i‡((
xèg
 = 
	`x∑th_fú°
(
xîr
, "//îr‹-èg")Ë=
NULL
){

415 
	`nŸfound
(
r
);

416 
ok
;

418 
èg°r
 = 
	`xml_body
(
xèg
);

419 
code
 = 
	`ª°c⁄f_îr2code
(
èg°r
);

420 i‡((
ªas⁄_phø£
 = 
	`ª°c⁄f_code2ªas⁄
(
code
)Ë=
NULL
)

421 
ªas⁄_phø£
="";

422 i‡(
	`xml_«me_£t
(
xîr
, "error") < 0)

423 
d⁄e
;

424 i‡(
u£_xml
){

425 i‡(
	`˛ic⁄_xml2cbuf
(
cb
, 
xîr
, 2, 
¥ëty
) < 0)

426 
d⁄e
;

429 i‡(
	`xml2js⁄_cbuf
(
cb
, 
xîr
, 
¥ëty
) < 0)

430 
d⁄e
;

431 
	`FCGX_FPrötF
(
r
->
out
, "Sètus: %d %s\r\n", 
code
, 
ªas⁄_phø£
);

432 
	`FCGX_FPrötF
(
r
->
out
, "Content-Type:ápplication/yang-data+%s\r\n\r\n",

433 
u£_xml
?"xml":"json");

434 i‡(
u£_xml
){

435 i‡(
¥ëty
){

436 
	`FCGX_FPrötF
(
r
->
out
, " <îr‹†xm s=\"u∫:õtf:∑øms:xml:ns:y™g:õtf-ª°c⁄f\">\n", 
	`cbuf_gë
(
cb
));

437 
	`FCGX_FPrötF
(
r
->
out
, "%s", 
	`cbuf_gë
(
cb
));

438 
	`FCGX_FPrötF
(
r
->
out
, " </errors>\r\n");

441 
	`FCGX_FPrötF
(
r
->
out
, "<îr‹†xm s=\"u∫:õtf:∑øms:xml:ns:y™g:õtf-ª°c⁄f\">", 
	`cbuf_gë
(
cb
));

442 
	`FCGX_FPrötF
(
r
->
out
, "%s", 
	`cbuf_gë
(
cb
));

443 
	`FCGX_FPrötF
(
r
->
out
, "</errors>\r\n");

447 i‡(
¥ëty
){

448 
	`FCGX_FPrötF
(
r
->
out
, "{\n");

449 
	`FCGX_FPrötF
(
r
->
out
, " \"ietf-restconf:errors\" : %s\n",

450 
	`cbuf_gë
(
cb
));

451 
	`FCGX_FPrötF
(
r
->
out
, "}\r\n");

454 
	`FCGX_FPrötF
(
r
->
out
, "{");

455 
	`FCGX_FPrötF
(
r
->
out
, "\"ietf-restconf:errors\" : ");

456 
	`FCGX_FPrötF
(
r
->
out
, "%s", 
	`cbuf_gë
(
cb
));

457 
	`FCGX_FPrötF
(
r
->
out
, "}\r\n");

460 
ok
:

461 
ªtvÆ
 = 0;

462 
d⁄e
:

463 
	`˛ic⁄_debug
(1, "%†ªtvÆ:%d", 
__FUNCTION__
, 
ªtvÆ
);

464 i‡(
cb
)

465 
	`cbuf_‰ì
(
cb
);

466  
ªtvÆ
;

467 
	}
}

	@clixon-master/apps/restconf/restconf_lib.h

36 #i‚de‡
_RESTCONF_LIB_H_


37 
	#_RESTCONF_LIB_H_


	)

42 
ª°c⁄f_îr2code
(*
èg
);

43 c⁄° *
ª°c⁄f_code2ªas⁄
(
code
);

45 
badªque°
(
FCGX_Reque°
 *
r
);

46 
u«uth‹ized
(
FCGX_Reque°
 *
r
);

47 
f‹biddí
(
FCGX_Reque°
 *
r
);

48 
nŸfound
(
FCGX_Reque°
 *
r
);

49 
c⁄Êi˘
(
FCGX_Reque°
 *
r
);

50 
öã∫Æ_£rvî_îr‹
(
FCGX_Reque°
 *
r
);

51 
nŸim∂emíãd
(
FCGX_Reque°
 *
r
);

53 
˛ic⁄_debug_xml
(
dbgÀvñ
, *
°r
, 
cxobj
 *
cx
);

54 
ã°
(
FCGX_Reque°
 *
r
, 
dbg
);

55 
cbuf
 *
ªadd©a
(
FCGX_Reque°
 *
r
);

56 
gë_u£r_cookõ
(*
cookõ°r
, *
©åibuã
, **
vÆ
);

57 
≠i_ªtu∫_îr
(
˛ic⁄_h™dÀ
 
h
, 
FCGX_Reque°
 *
r
, 
cxobj
 *
xîr
,

58 
¥ëty
, 
u£_xml
);

	@clixon-master/apps/restconf/restconf_main.c

49 
	~<°dlib.h
>

50 
	~<°rög.h
>

51 
	~<uni°d.h
>

52 
	~<î∫o.h
>

53 
	~<sig«l.h
>

54 
	~<sy¶og.h
>

55 
	~<f˙é.h
>

56 
	~<time.h
>

57 
	~<limôs.h
>

59 
	~<sig«l.h
>

60 
	~<sys/time.h
>

61 
	~<sys/waô.h
>

62 
	~<libgí.h
>

65 
	~<˛igí/˛igí.h
>

68 
	~<˛ix⁄/˛ix⁄.h
>

70 
	~<fcgi_°dio.h
>

73 
	~"ª°c⁄f_lib.h
"

74 
	~"ª°c⁄f_mëhods.h
"

77 
	#RESTCONF_OPTS
 "hDf:p:y:"

	)

83 
	#RESTCONF_WELL_KNOWN
 "/.wñl-known/ho°-mëa"

	)

85 
	#RESTCONF_API
 "ª°c⁄f"

	)

86 
	#RESTCONF_API_ROOT
 "/ª°c⁄f"

	)

101 
	$≠i_d©a
(
˛ic⁄_h™dÀ
 
h
,

102 
FCGX_Reque°
 *
r
,

103 *
≠i_∑th
,

104 
cvec
 *
pcvec
,

105 
pi
,

106 
cvec
 *
qvec
,

107 *
d©a
,

108 
¥ëty
,

109 
u£_xml
,

110 
∑r£_xml
)

112 
ªtvÆ
 = -1;

113 *
ªque°_mëhod
;

115 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

116 
ªque°_mëhod
 = 
	`FCGX_GëP¨am
("REQUEST_METHOD", 
r
->
ívp
);

117 
	`˛ic⁄_debug
(1, "%†mëhod:%s", 
__FUNCTION__
, 
ªque°_mëhod
);

118 i‡(
	`°rcmp
(
ªque°_mëhod
, "OPTIONS")==0)

119 
ªtvÆ
 = 
	`≠i_d©a_›ti⁄s
(
h
, 
r
);

120 i‡(
	`°rcmp
(
ªque°_mëhod
, "HEAD")==0)

121 
ªtvÆ
 = 
	`≠i_d©a_hód
(
h
, 
r
, 
pcvec
, 
pi
, 
qvec
, 
¥ëty
, 
u£_xml
);

122 i‡(
	`°rcmp
(
ªque°_mëhod
, "GET")==0)

123 
ªtvÆ
 = 
	`≠i_d©a_gë
(
h
, 
r
, 
pcvec
, 
pi
, 
qvec
, 
¥ëty
, 
u£_xml
);

124 i‡(
	`°rcmp
(
ªque°_mëhod
, "POST")==0)

125 
ªtvÆ
 = 
	`≠i_d©a_po°
(
h
, 
r
, 
≠i_∑th
, 
pcvec
, 
pi
, 
qvec
, 
d©a
, 
¥ëty
, 
u£_xml
, 
∑r£_xml
);

126 i‡(
	`°rcmp
(
ªque°_mëhod
, "PUT")==0)

127 
ªtvÆ
 = 
	`≠i_d©a_put
(
h
, 
r
, 
≠i_∑th
, 
pcvec
, 
pi
, 
qvec
, 
d©a
, 
¥ëty
, 
u£_xml
, 
∑r£_xml
);

128 i‡(
	`°rcmp
(
ªque°_mëhod
, "PATCH")==0)

129 
ªtvÆ
 = 
	`≠i_d©a_∑tch
(
h
, 
r
, 
≠i_∑th
, 
pcvec
, 
pi
, 
qvec
, 
d©a
);

130 i‡(
	`°rcmp
(
ªque°_mëhod
, "DELETE")==0)

131 
ªtvÆ
 = 
	`≠i_d©a_dñëe
(
h
, 
r
, 
≠i_∑th
, 
pi
, 
¥ëty
, 
u£_xml
);

133 
ªtvÆ
 = 
	`nŸfound
(
r
);

134 
	`˛ic⁄_debug
(1, "%†ªtvÆ:%d", 
__FUNCTION__
, 
ªtvÆ
);

135  
ªtvÆ
;

136 
	}
}

149 
	$≠i_›î©i⁄s
(
˛ic⁄_h™dÀ
 
h
,

150 
FCGX_Reque°
 *
r
,

151 *
∑th
,

152 
cvec
 *
pcvec
,

153 
pi
,

154 
cvec
 *
qvec
,

155 *
d©a
,

156 
¥ëty
,

157 
u£_xml
,

158 
∑r£_xml
)

160 
ªtvÆ
 = -1;

161 *
ªque°_mëhod
;

163 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

164 
ªque°_mëhod
 = 
	`FCGX_GëP¨am
("REQUEST_METHOD", 
r
->
ívp
);

165 
	`˛ic⁄_debug
(1, "%†mëhod:%s", 
__FUNCTION__
, 
ªque°_mëhod
);

166 i‡(
	`°rcmp
(
ªque°_mëhod
, "GET")==0)

167 
ªtvÆ
 = 
	`≠i_›î©i⁄s_gë
(
h
, 
r
, 
∑th
, 
pcvec
, 
pi
, 
qvec
, 
d©a
, 
¥ëty
, 
u£_xml
);

168 i‡(
	`°rcmp
(
ªque°_mëhod
, "POST")==0)

169 
ªtvÆ
 = 
	`≠i_›î©i⁄s_po°
(
h
, 
r
, 
∑th
, 
pcvec
, 
pi
, 
qvec
, 
d©a
,

170 
¥ëty
, 
u£_xml
, 
∑r£_xml
);

172 
ªtvÆ
 = 
	`nŸfound
(
r
);

173  
ªtvÆ
;

174 
	}
}

185 
	$≠i_wñl_known
(
˛ic⁄_h™dÀ
 
h
,

186 
FCGX_Reque°
 *
r
)

188 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

189 
	`FCGX_FPrötF
(
r
->
out
, "Content-Type:ápplication/xrd+xml\r\n");

190 
	`FCGX_FPrötF
(
r
->
out
, "\r\n");

191 
	`FCGX_SëExôSètus
(200, 
r
->
out
);

192 
	`FCGX_FPrötF
(
r
->
out
, "<XRD xmlns='http://docs.oasis-open.org/ns/xri/xrd-1.0'>\n");

193 
	`FCGX_FPrötF
(
r
->
out
, " <LinkÑel='restconf' href='/restconf'/>\n");

194 
	`FCGX_FPrötF
(
r
->
out
, "</XRD>\r\n");

197 
	}
}

206 
	$≠i_roŸ
(
˛ic⁄_h™dÀ
 
h
,

207 
FCGX_Reque°
 *
r
)

209 
ªtvÆ
 = -1;

210 *
medü_ac˚±
;

211 
u£_xml
 = 0;

212 
cxobj
 *
xt
 = 
NULL
;

213 
cbuf
 *
cb
 = 
NULL
;

214 
¥ëty
;

216 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

217 
¥ëty
 = 
	`˛ic⁄_›ti⁄_boﬁ
(
h
, "CLICON_RESTCONF_PRETTY");

218 
medü_ac˚±
 = 
	`FCGX_GëP¨am
("HTTP_ACCEPT", 
r
->
ívp
);

219 i‡(
	`°rcmp
(
medü_ac˚±
, "application/yang-data+xml")==0)

220 
u£_xml
++;

221 
	`˛ic⁄_debug
(1, "%†u£-xml:%d medü-ac˚±:%s", 
__FUNCTION__
, 
u£_xml
, 
medü_ac˚±
);

222 
	`FCGX_SëExôSètus
(200, 
r
->
out
);

223 
	`FCGX_FPrötF
(
r
->
out
, "C⁄ã¡-Ty≥:áµliˇti⁄/y™g-d©a+%s\r\n", 
u£_xml
?"xml":"json");

224 
	`FCGX_FPrötF
(
r
->
out
, "\r\n");

226 i‡(
	`xml_∑r£_°rög
("<ª°c⁄f><d©a></d©a><›î©i⁄s></›î©i⁄s><y™g-libøry-vîsi⁄>2016-06-21</y™g-libøry-vîsi⁄></ª°c⁄f>", 
NULL
, &
xt
) < 0)

227 
d⁄e
;

228 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
){

229 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cbuf_new");

230 
d⁄e
;

232 i‡(
	`xml_roŸchûd
(
xt
, 0, &xt) < 0)

233 
d⁄e
;

234 i‡(
u£_xml
){

235 i‡(
	`˛ic⁄_xml2cbuf
(
cb
, 
xt
, 0, 
¥ëty
) < 0)

236 
d⁄e
;

239 i‡(
	`xml2js⁄_cbuf
(
cb
, 
xt
, 
¥ëty
) < 0)

240 
d⁄e
;

241 
	`FCGX_FPrötF
(
r
->
out
, "%s", 
cb
?
	`cbuf_gë
(cb):"");

242 
	`FCGX_FPrötF
(
r
->
out
, "\r\n\r\n");

243 
ªtvÆ
 = 0;

244 
d⁄e
:

245 i‡(
cb
)

246 
	`cbuf_‰ì
(
cb
);

247 i‡(
xt
)

248 
	`xml_‰ì
(
xt
);

249  
ªtvÆ
;

250 
	}
}

256 
	$≠i_y™g_libøry_vîsi⁄
(
˛ic⁄_h™dÀ
 
h
,

257 
FCGX_Reque°
 *
r
)

259 
ªtvÆ
 = -1;

260 *
medü_ac˚±
;

261 
u£_xml
 = 0;

262 
cxobj
 *
xt
 = 
NULL
;

263 
cbuf
 *
cb
 = 
NULL
;

264 
¥ëty
;

266 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

267 
¥ëty
 = 
	`˛ic⁄_›ti⁄_boﬁ
(
h
, "CLICON_RESTCONF_PRETTY");

268 
medü_ac˚±
 = 
	`FCGX_GëP¨am
("HTTP_ACCEPT", 
r
->
ívp
);

269 i‡(
	`°rcmp
(
medü_ac˚±
, "application/yang-data+xml")==0)

270 
u£_xml
++;

271 
	`FCGX_SëExôSètus
(200, 
r
->
out
);

272 
	`FCGX_FPrötF
(
r
->
out
, "C⁄ã¡-Ty≥:áµliˇti⁄/y™g-d©a+%s\r\n", 
u£_xml
?"xml":"json");

273 
	`FCGX_FPrötF
(
r
->
out
, "\r\n");

274 i‡(
	`xml_∑r£_°rög
("<y™g-libøry-vîsi⁄>2016-06-21</y™g-libøry-vîsi⁄>", 
NULL
, &
xt
) < 0)

275 
d⁄e
;

276 i‡(
	`xml_roŸchûd
(
xt
, 0, &xt) < 0)

277 
d⁄e
;

278 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
){

279 
d⁄e
;

281 i‡(
u£_xml
){

282 i‡(
	`˛ic⁄_xml2cbuf
(
cb
, 
xt
, 0, 
¥ëty
) < 0)

283 
d⁄e
;

286 i‡(
	`xml2js⁄_cbuf
(
cb
, 
xt
, 
¥ëty
) < 0)

287 
d⁄e
;

289 
	`˛ic⁄_debug
(1, "%†cb%s", 
__FUNCTION__
, 
	`cbuf_gë
(
cb
));

290 
	`FCGX_FPrötF
(
r
->
out
, "%s\n", 
cb
?
	`cbuf_gë
(cb):"");

291 
	`FCGX_FPrötF
(
r
->
out
, "\n\n");

292 
ªtvÆ
 = 0;

293 
d⁄e
:

294 i‡(
cb
)

295 
	`cbuf_‰ì
(
cb
);

296 i‡(
xt
)

297 
	`xml_‰ì
(
xt
);

298  
ªtvÆ
;

299 
	}
}

305 
	$≠i_ª°c⁄f
(
˛ic⁄_h™dÀ
 
h
,

306 
FCGX_Reque°
 *
r
)

308 
ªtvÆ
 = -1;

309 *
∑th
;

310 *
quîy
;

311 *
mëhod
;

312 **
pvec
 = 
NULL
;

313 
≤
;

314 
cvec
 *
qvec
 = 
NULL
;

315 
cvec
 *
dvec
 = 
NULL
;

316 
cvec
 *
pcvec
 = 
NULL
;

317 
cbuf
 *
cb
 = 
NULL
;

318 *
d©a
;

319 
authítiˇãd
 = 0;

320 *
medü_ac˚±
;

321 *
medü_c⁄ã¡_ty≥
;

322 
¥ëty
;

323 
∑r£_xml
 = 0;

324 
u£_xml
 = 0;

325 
cbuf
 *
cbªt
 = 
NULL
;

326 
cxobj
 *
xªt
 = 
NULL
;

327 
cxobj
 *
xîr
;

329 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

330 
∑th
 = 
	`FCGX_GëP¨am
("REQUEST_URI", 
r
->
ívp
);

331 
quîy
 = 
	`FCGX_GëP¨am
("QUERY_STRING", 
r
->
ívp
);

332 
¥ëty
 = 
	`˛ic⁄_›ti⁄_boﬁ
(
h
, "CLICON_RESTCONF_PRETTY");

334 
medü_ac˚±
 = 
	`FCGX_GëP¨am
("HTTP_ACCEPT", 
r
->
ívp
);

335 i‡(
medü_ac˚±
 && 
	`°rcmp
(media_accept, "application/yang-data+xml")==0)

336 
u£_xml
++;

337 
medü_c⁄ã¡_ty≥
 = 
	`FCGX_GëP¨am
("HTTP_CONTENT_TYPE", 
r
->
ívp
);

338 i‡(
medü_c⁄ã¡_ty≥
 &&

339 
	`°rcmp
(
medü_c⁄ã¡_ty≥
, "application/yang-data+xml")==0)

340 
∑r£_xml
++;

341 i‡((
pvec
 = 
	`˛ic⁄_°r£p
(
∑th
, "/", &
≤
)Ë=
NULL
)

342 
d⁄e
;

344 i‡(
≤
 < 2){

345 
	`nŸfound
(
r
);

346 
ok
;

348 i‡(
	`°æí
(
pvec
[0]) != 0){

349 
ªtvÆ
 = 
	`nŸfound
(
r
);

350 
d⁄e
;

352 i‡(
	`°rcmp
(
pvec
[1], 
RESTCONF_API
)){

353 
ªtvÆ
 = 
	`nŸfound
(
r
);

354 
d⁄e
;

356 
	`ã°
(
r
, 1);

358 i‡(
≤
 == 2){

359 
ªtvÆ
 = 
	`≠i_roŸ
(
h
, 
r
);

360 
d⁄e
;

362 i‡((
mëhod
 = 
pvec
[2]Ë=
NULL
){

363 
ªtvÆ
 = 
	`nŸfound
(
r
);

364 
d⁄e
;

366 
	`˛ic⁄_debug
(1, "%s: mëhod=%s", 
__FUNCTION__
, 
mëhod
);

367 i‡(
	`°r2cvec
(
quîy
, '&', '=', &
qvec
) < 0)

368 
d⁄e
;

369 i‡(
	`°r2cvec
(
∑th
, '/', '=', &
pcvec
) < 0)

370 
d⁄e
;

372 i‡((
cb
 = 
	`ªadd©a
(
r
)Ë=
NULL
)

373 
d⁄e
;

374 
d©a
 = 
	`cbuf_gë
(
cb
);

375 
	`˛ic⁄_debug
(1, "%†DATA=%s", 
__FUNCTION__
, 
d©a
);

377 i‡(
	`°r2cvec
(
d©a
, '&', '=', &
dvec
) < 0)

378 
d⁄e
;

382 i‡((
authítiˇãd
 = 
	`˛ix⁄_∂ugö_auth
(
h
, 
r
)) < 0)

383 
d⁄e
;

384 
	`˛ic⁄_debug
(1, "%†auth:%d %s", 
__FUNCTION__
, 
authítiˇãd
, 
	`˛ic⁄_u£∫ame_gë
(
h
));

387 i‡(
authítiˇãd
){

388 i‡(
	`˛ic⁄_u£∫ame_gë
(
h
Ë=
NULL
)

389 
	`˛ic⁄_u£∫ame_£t
(
h
, "none");

392 i‡(
	`√tc⁄f_ac˚ss_díõd_xml
(&
xªt
, "protocol", "TheÑequested URL was unauthorized") < 0)

393 
d⁄e
;

394 i‡((
xîr
 = 
	`x∑th_fú°
(
xªt
, "//Ωc-îr‹")Ë!
NULL
){

395 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xîr
, 
¥ëty
, 
u£_xml
) < 0)

396 
d⁄e
;

397 
ok
;

399 
ok
;

401 
	`˛ic⁄_debug
(1, "%†auth2:%d %s", 
__FUNCTION__
, 
authítiˇãd
, 
	`˛ic⁄_u£∫ame_gë
(
h
));

402 i‡(
	`°rcmp
(
mëhod
, "yang-library-version")==0){

403 i‡(
	`≠i_y™g_libøry_vîsi⁄
(
h
, 
r
) < 0)

404 
d⁄e
;

406 i‡(
	`°rcmp
(
mëhod
, "data") == 0){

407 i‡(
	`≠i_d©a
(
h
, 
r
, 
∑th
, 
pcvec
, 2, 
qvec
, 
d©a
,

408 
¥ëty
, 
u£_xml
, 
∑r£_xml
) < 0)

409 
d⁄e
;

411 i‡(
	`°rcmp
(
mëhod
, "operations") == 0){

412 i‡(
	`≠i_›î©i⁄s
(
h
, 
r
, 
∑th
, 
pcvec
, 2, 
qvec
, 
d©a
,

413 
¥ëty
, 
u£_xml
, 
∑r£_xml
) < 0)

414 
d⁄e
;

416 i‡(
	`°rcmp
(
mëhod
, "test") == 0)

417 
	`ã°
(
r
, 0);

419 
	`nŸfound
(
r
);

420 
ok
:

421 
ªtvÆ
 = 0;

422 
d⁄e
:

423 
	`˛ic⁄_debug
(1, "%†ªtvÆ:%d", 
__FUNCTION__
, 
ªtvÆ
);

424 i‡(
pvec
)

425 
	`‰ì
(
pvec
);

426 i‡(
dvec
)

427 
	`cvec_‰ì
(
dvec
);

428 i‡(
qvec
)

429 
	`cvec_‰ì
(
qvec
);

430 i‡(
pcvec
)

431 
	`cvec_‰ì
(
pcvec
);

432 i‡(
cb
)

433 
	`cbuf_‰ì
(
cb
);

434 i‡(
cbªt
)

435 
	`cbuf_‰ì
(
cbªt
);

436 i‡(
xªt
)

437 
	`xml_‰ì
(
xªt
);

438  
ªtvÆ
;

439 
	}
}

442 
	$ª°c⁄f_ãrmö©e
(
˛ic⁄_h™dÀ
 
h
)

444 
y™g_•ec
 *
y•ec
;

446 
	`˛ix⁄_∂ugö_exô
(
h
);

447 
	`Ωc_ˇŒback_dñëe_Æl
();

448 
	`˛ic⁄_Ωc_˛o£_£ssi⁄
(
h
);

449 i‡((
y•ec
 = 
	`˛ic⁄_db•ec_y™g
(
h
)Ë!
NULL
)

450 
	`y•ec_‰ì
(
y•ec
);

451 
	`˛ic⁄_h™dÀ_exô
(
h
);

453 
	}
}

456 
˛ic⁄_h™dÀ
 
	g_CLICON_HANDLE
 = 
NULL
;

461 
	$ª°c⁄f_sig_ãrm
(
¨g
)

463 
i
=0;

465 i‡(
i
++ == 0)

466 
	`˛ic⁄_log
(
LOG_NOTICE
, "%s: %s:Öid: %u Signal %d",

467 
__PROGRAM__
, 
__FUNCTION__
, 
	`gëpid
(), 
¨g
);

469 
	`exô
(-1);

470 i‡(
_CLICON_HANDLE
)

471 
	`ª°c⁄f_ãrmö©e
(
_CLICON_HANDLE
);

472 
	`˛ic⁄_exô_£t
();

473 
	`exô
(-1);

474 
	}
}

481 
	$ußge
(
˛ic⁄_h™dÀ
 
h
,

482 *
¨gv0
)

485 
	`Ârötf
(
°dîr
, "usage:%s [options]\n"

492 
¨gv0
,

493 
	`˛ic⁄_ª°c⁄f_dú
(
h
)

495 
	`exô
(0);

496 
	}
}

501 
	$maö
(
¨gc
,

502 **
¨gv
)

504 
ªtvÆ
 = -1;

505 
sock
;

506 *
¨gv0
 = 
¨gv
[0];

507 
FCGX_Reque°
 
ªque°
;

508 
FCGX_Reque°
 *
r
 = &
ªque°
;

509 
c
;

510 *
sock∑th
;

511 *
∑th
;

512 
˛ic⁄_h™dÀ
 
h
;

513 *
y™g•ec
=
NULL
;

514 *
dú
;

515 *
tmp
;

518 
	`˛ic⁄_log_öô
(
__PROGRAM__
, 
LOG_INFO
, 
CLICON_LOG_SYSLOG
);

520 i‡((
h
 = 
	`˛ic⁄_h™dÀ_öô
()Ë=
NULL
)

521 
d⁄e
;

522 
_CLICON_HANDLE
 = 
h
;

523 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, 
RESTCONF_OPTS
)) != -1)

524 
c
) {

526 
	`ußge
(
h
, 
¨gv
[0]);

529 
debug
 = 1;

532 i‡(!
	`°æí
(
›èrg
))

533 
	`ußge
(
h
, 
¨gv
[0]);

534 
	`˛ic⁄_›ti⁄_°r_£t
(
h
, "CLICON_CONFIGFILE", 
›èrg
);

537 i‡(!
	`°æí
(
›èrg
))

538 
	`ußge
(
h
, 
¨gv
[0]);

539 
	`˛ic⁄_›ti⁄_°r_£t
(
h
, "CLICON_RESTCONF_DIR", 
›èrg
);

542 
y™g•ec
 = 
›èrg
;

545 
	`ußge
(
h
, 
¨gv
[0]);

548 
¨gc
 -
›töd
;

549 
¨gv
 +
›töd
;

551 
	`˛ic⁄_log_öô
(
__PROGRAM__
, 
debug
?
LOG_DEBUG
:
LOG_INFO
, 
CLICON_LOG_SYSLOG
);

552 
	`˛ic⁄_debug_öô
(
debug
, 
NULL
);

553 
	`˛ic⁄_log
(
LOG_NOTICE
, "%s: %u Sèπed", 
__PROGRAM__
, 
	`gëpid
());

554 i‡(
	`£t_sig«l
(
SIGTERM
, 
ª°c⁄f_sig_ãrm
, 
NULL
) < 0){

555 
	`˛ic⁄_îr
(
OE_DEMON
, 
î∫o
, "Setting signal");

556 
d⁄e
;

558 i‡(
	`£t_sig«l
(
SIGINT
, 
ª°c⁄f_sig_ãrm
, 
NULL
) < 0){

559 
	`˛ic⁄_îr
(
OE_DEMON
, 
î∫o
, "Setting signal");

560 
d⁄e
;

564 i‡(
	`˛ic⁄_›ti⁄s_maö
(
h
) < 0)

565 
d⁄e
;

568 i‡(
y™g•ec
)

569 
	`˛ic⁄_›ti⁄_°r_£t
(
h
, "CLICON_YANG_MODULE_MAIN", 
y™g•ec
);

572 i‡((
dú
 = 
	`˛ic⁄_ª°c⁄f_dú
(
h
)Ë!
NULL
)

573 i‡(
	`˛ix⁄_∂ugös_lﬂd
(
h
, 
CLIXON_PLUGIN_INIT
, 
dú
, 
NULL
) < 0)

577 i‡(
	`y™g_•ec_maö
(
h
Ë=
NULL
)

578 
d⁄e
;

583 
tmp
 = *(
¨gv
-1);

584 *(
¨gv
-1Ë
¨gv0
;

585 
	`˛ix⁄_∂ugö_°¨t
(
h
, 
¨gc
+1, 
¨gv
-1);

586 *(
¨gv
-1Ë
tmp
;

588 i‡((
sock∑th
 = 
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_RESTCONF_PATH")Ë=
NULL
){

589 
	`˛ic⁄_îr
(
OE_CFG
, 
î∫o
, "No CLICON_RESTCONF_PATH in clixon configure file");

590 
d⁄e
;

592 i‡(
	`FCGX_Inô
() != 0){

593 
	`˛ic⁄_îr
(
OE_CFG
, 
î∫o
, "FCGX_Init");

594 
d⁄e
;

596 i‡((
sock
 = 
	`FCGX_O≥nSockë
(
sock∑th
, 10)) < 0){

597 
	`˛ic⁄_îr
(
OE_CFG
, 
î∫o
, "FCGX_OpenSocket");

598 
d⁄e
;

601 i‡(
	`FCGX_InôReque°
(
r
, 
sock
, 0) != 0){

602 
	`˛ic⁄_îr
(
OE_CFG
, 
î∫o
, "FCGX_InitRequest");

603 
d⁄e
;

606 i‡(
	`FCGX_Ac˚±_r
(
r
) < 0) {

607 
	`˛ic⁄_îr
(
OE_CFG
, 
î∫o
, "FCGX_Accept_r");

608 
d⁄e
;

610 
	`˛ic⁄_debug
(1, "------------");

611 i‡((
∑th
 = 
	`FCGX_GëP¨am
("REQUEST_URI", 
r
->
ívp
)Ë!
NULL
){

612 
	`˛ic⁄_debug
(1, "∑th:%s", 
∑th
);

613 i‡(
	`°∫cmp
(
∑th
, 
RESTCONF_API_ROOT
, 
	`°æí
(RESTCONF_API_ROOT)) == 0)

614 
	`≠i_ª°c⁄f
(
h
, 
r
);

615 i‡(
	`°∫cmp
(
∑th
, 
RESTCONF_WELL_KNOWN
, 
	`°æí
(RESTCONF_WELL_KNOWN)) == 0) {

616 
	`≠i_wñl_known
(
h
, 
r
);

619 
	`˛ic⁄_debug
(1, "t›-Àvñ %†nŸ found", 
∑th
);

620 
	`nŸfound
(
r
);

624 
	`˛ic⁄_debug
(1, "NULL URI");

625 
	`FCGX_Föish_r
(
r
);

627 
ªtvÆ
 = 0;

628 
d⁄e
:

629 
	`ª°c⁄f_ãrmö©e
(
h
);

630  
ªtvÆ
;

631 
	}
}

	@clixon-master/apps/restconf/restconf_methods.c

98 
	~<°dlib.h
>

99 
	~<°rög.h
>

100 
	~<uni°d.h
>

101 
	~<î∫o.h
>

102 
	~<sig«l.h
>

103 
	~<sy¶og.h
>

104 
	~<f˙é.h
>

105 
	~<as£π.h
>

106 
	~<time.h
>

107 
	~<sig«l.h
>

108 
	~<limôs.h
>

109 
	~<sys/time.h
>

110 
	~<sys/waô.h
>

113 
	~<˛igí/˛igí.h
>

116 
	~<˛ix⁄/˛ix⁄.h
>

118 
	~<fcgi_°dio.h
>

120 
	~"ª°c⁄f_lib.h
"

121 
	~"ª°c⁄f_mëhods.h
"

135 
	$≠i_d©a_›ti⁄s
(
˛ic⁄_h™dÀ
 
h
,

136 
FCGX_Reque°
 *
r
)

138 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

139 
	`FCGX_SëExôSètus
(200, 
r
->
out
);

140 
	`FCGX_FPrötF
(
r
->
out
, "Allow: OPTIONS,HEAD,GET,POST,PUT,DELETE\r\n");

141 
	`FCGX_FPrötF
(
r
->
out
, "\r\n");

143 
	}
}

174 
	$≠i_d©a_gë2
(
˛ic⁄_h™dÀ
 
h
,

175 
FCGX_Reque°
 *
r
,

176 
cvec
 *
pcvec
,

177 
pi
,

178 
cvec
 *
qvec
,

179 
¥ëty
,

180 
u£_xml
,

181 
hód
)

183 
ªtvÆ
 = -1;

184 
cbuf
 *
cb∑th
 = 
NULL
;

185 *
∑th
;

186 
cbuf
 *
cbx
 = 
NULL
;

187 
y™g_•ec
 *
y•ec
;

188 
cxobj
 *
xªt
 = 
NULL
;

189 
cxobj
 *
xîr
 = 
NULL
;

190 
cxobj
 *
xe
;

191 
cxobj
 **
xvec
 = 
NULL
;

192 
size_t
 
xÀn
;

193 
i
;

194 
cxobj
 *
x
;

196 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

197 
y•ec
 = 
	`˛ic⁄_db•ec_y™g
(
h
);

198 i‡((
cb∑th
 = 
	`cbuf_√w
()Ë=
NULL
)

199 
d⁄e
;

200 
	`˝rötf
(
cb∑th
, "/");

201 
	`˛ic⁄_debug
(1, "%†pi:%d", 
__FUNCTION__
, 
pi
);

203 i‡(
	`≠i_∑th2x∑th_cvv
(
y•ec
, 
pcvec
, 
pi
, 
cb∑th
) < 0){

204 i‡(
	`√tc⁄f_›î©i⁄_Áûed_xml
(&
xîr
, "¥Ÿocﬁ", 
˛ic⁄_îr_ªas⁄
) < 0)

205 
d⁄e
;

206 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xîr
, 
¥ëty
, 
u£_xml
) < 0)

207 
d⁄e
;

208 
ok
;

210 
∑th
 = 
	`cbuf_gë
(
cb∑th
);

211 
	`˛ic⁄_debug
(1, "%†∑th:%s", 
__FUNCTION__
, 
∑th
);

212 i‡(
	`˛ic⁄_Ωc_gë
(
h
, 
∑th
, &
xªt
) < 0){

213 i‡(
	`√tc⁄f_›î©i⁄_Áûed_xml
(&
xîr
, "¥Ÿocﬁ", 
˛ic⁄_îr_ªas⁄
) < 0)

214 
d⁄e
;

215 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xîr
, 
¥ëty
, 
u£_xml
) < 0)

216 
d⁄e
;

217 
ok
;

224 
cbuf
 *
cb
 = 
	`cbuf_√w
();

225 
	`˛ic⁄_xml2cbuf
(
cb
, 
xªt
, 0, 0);

226 
	`˛ic⁄_debug
(1, "%†xªt:%s", 
__FUNCTION__
, 
	`cbuf_gë
(
cb
));

227 
	`cbuf_‰ì
(
cb
);

231 i‡((
xe
 = 
	`x∑th_fú°
(
xªt
, "/Ωc-îr‹")Ë!
NULL
){

232 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xe
, 
¥ëty
, 
u£_xml
) < 0)

233 
d⁄e
;

234 
ok
;

237 i‡((
cbx
 = 
	`cbuf_√w
()Ë=
NULL
)

238 
d⁄e
;

239 
	`FCGX_SëExôSètus
(200, 
r
->
out
);

240 
	`FCGX_FPrötF
(
r
->
out
, "C⁄ã¡-Ty≥:áµliˇti⁄/y™g-d©a+%s\r\n", 
u£_xml
?"xml":"json");

241 
	`FCGX_FPrötF
(
r
->
out
, "\r\n");

242 i‡(
hód
)

243 
ok
;

244 i‡(
∑th
==
NULL
 || 
	`°rcmp
(path,"/")==0){

245 i‡(
u£_xml
){

246 i‡(
	`˛ic⁄_xml2cbuf
(
cbx
, 
xªt
, 0, 
¥ëty
) < 0)

247 
d⁄e
;

250 i‡(
	`xml2js⁄_cbuf
(
cbx
, 
xªt
, 
¥ëty
) < 0)

251 
d⁄e
;

255 i‡(
	`x∑th_vec
(
xªt
, 
∑th
, &
xvec
, &
xÀn
) < 0)

256 
d⁄e
;

257 
	`˛ic⁄_debug
(1, "%s: x∑th:%†xÀn:%d", 
__FUNCTION__
, 
∑th
, 
xÀn
);

258 i‡(
u£_xml
){

259 
i
=0; i<
xÀn
; i++){

260 
x
 = 
xvec
[
i
];

261 i‡(
	`˛ic⁄_xml2cbuf
(
cbx
, 
x
, 0, 
¥ëty
) < 0)

262 
d⁄e
;

266 i‡(
	`xml2js⁄_cbuf_vec
(
cbx
, 
xvec
, 
xÀn
, 
¥ëty
) < 0)

267 
d⁄e
;

269 
	`˛ic⁄_debug
(1, "%†cbuf:%s", 
__FUNCTION__
, 
	`cbuf_gë
(
cbx
));

270 
	`FCGX_FPrötF
(
r
->
out
, "%s", 
cbx
?
	`cbuf_gë
(cbx):"");

271 
	`FCGX_FPrötF
(
r
->
out
, "\r\n\r\n");

272 
ok
:

273 
ªtvÆ
 = 0;

274 
d⁄e
:

275 
	`˛ic⁄_debug
(1, "%†ªtvÆ:%d", 
__FUNCTION__
, 
ªtvÆ
);

276 i‡(
cbx
)

277 
	`cbuf_‰ì
(
cbx
);

278 i‡(
cb∑th
)

279 
	`cbuf_‰ì
(
cb∑th
);

280 i‡(
xªt
)

281 
	`xml_‰ì
(
xªt
);

282 i‡(
xîr
)

283 
	`xml_‰ì
(
xîr
);

284 i‡(
xvec
)

285 
	`‰ì
(
xvec
);

286  
ªtvÆ
;

287 
	}
}

304 
	$≠i_d©a_hód
(
˛ic⁄_h™dÀ
 
h
,

305 
FCGX_Reque°
 *
r
,

306 
cvec
 *
pcvec
,

307 
pi
,

308 
cvec
 *
qvec
,

309 
¥ëty
,

310 
u£_xml
)

312  
	`≠i_d©a_gë2
(
h
, 
r
, 
pcvec
, 
pi
, 
qvec
, 
¥ëty
, 
u£_xml
, 1);

313 
	}
}

341 
	$≠i_d©a_gë
(
˛ic⁄_h™dÀ
 
h
,

342 
FCGX_Reque°
 *
r
,

343 
cvec
 *
pcvec
,

344 
pi
,

345 
cvec
 *
qvec
,

346 
¥ëty
,

347 
u£_xml
)

349  
	`≠i_d©a_gë2
(
h
, 
r
, 
pcvec
, 
pi
, 
qvec
, 
¥ëty
, 
u£_xml
, 0);

350 
	}
}

385 
	$≠i_d©a_po°
(
˛ic⁄_h™dÀ
 
h
,

386 
FCGX_Reque°
 *
r
,

387 *
≠i_∑th
,

388 
cvec
 *
pcvec
,

389 
pi
,

390 
cvec
 *
qvec
,

391 *
d©a
,

392 
¥ëty
,

393 
u£_xml
,

394 
∑r£_xml
)

396 
ªtvÆ
 = -1;

397 
›î©i⁄_ty≥
 
›
 = 
OP_CREATE
;

398 
i
;

399 
cxobj
 *
xd©a
 = 
NULL
;

400 
cbuf
 *
cbx
 = 
NULL
;

401 
cxobj
 *
xt›
 = 
NULL
;

402 
cxobj
 *
xbŸ
 = 
NULL
;

403 
cxobj
 *
x
;

404 
y™g_node
 *
y
 = 
NULL
;

405 
y™g_•ec
 *
y•ec
;

406 
cxobj
 *
xa
;

407 
cxobj
 *
xªt
 = 
NULL
;

408 
cxobj
 *
xªtcom
 = 
NULL
;

409 
cxobj
 *
xîr
 = 
NULL
;

410 
cxobj
 *
xe
;

411 *
u£∫ame
;

413 
	`˛ic⁄_debug
(1, "%sápi_path:\"%s\" json:\"%s\"",

414 
__FUNCTION__
,

415 
≠i_∑th
, 
d©a
);

416 i‡((
y•ec
 = 
	`˛ic⁄_db•ec_y™g
(
h
)Ë=
NULL
){

417 
	`˛ic⁄_îr
(
OE_FATAL
, 0, "No DB_SPEC");

418 
d⁄e
;

420 
i
=0; i<
pi
; i++)

421 
≠i_∑th
 = 
	`ödex
(api_path+1, '/');

423 i‡((
xt›
 = 
	`xml_√w
("c⁄fig", 
NULL
, NULL)) == NULL)

424 
d⁄e
;

426 
xbŸ
 = 
xt›
;

427 i‡(
≠i_∑th
 && 
	`≠i_∑th2xml
◊pi_∑th, 
y•ec
, 
xt›
, 
YC_DATANODE
, &
xbŸ
, &
y
) < 0)

428 
d⁄e
;

430 i‡(
∑r£_xml
){

431 i‡(
	`xml_∑r£_°rög
(
d©a
, 
NULL
, &
xd©a
) < 0){

432 i‡(
	`√tc⁄f_mÆf‹med_mesßge_xml
(&
xîr
, 
˛ic⁄_îr_ªas⁄
) < 0)

433 
d⁄e
;

434 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xîr
, 
¥ëty
, 
u£_xml
) < 0)

435 
d⁄e
;

436 
ok
;

439 i‡(
	`js⁄_∑r£_°r
(
d©a
, &
xd©a
) < 0){

440 i‡(
	`√tc⁄f_mÆf‹med_mesßge_xml
(&
xîr
, 
˛ic⁄_îr_ªas⁄
) < 0)

441 
d⁄e
;

442 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xîr
, 
¥ëty
, 
u£_xml
) < 0)

443 
d⁄e
;

444 
ok
;

449 i‡(
	`xml_chûd_ƒ
(
xd©a
) != 1){

450 i‡(
	`√tc⁄f_mÆf‹med_mesßge_xml
(&
xîr
, 
˛ic⁄_îr_ªas⁄
) < 0)

451 
d⁄e
;

452 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xîr
, 
¥ëty
, 
u£_xml
) < 0)

453 
d⁄e
;

454 
ok
;

456 
x
 = 
	`xml_chûd_i
(
xd©a
,0);

458 i‡((
xa
 = 
	`xml_√w
("›î©i⁄", 
x
, 
NULL
)) == NULL)

459 
d⁄e
;

460 
	`xml_ty≥_£t
(
xa
, 
CX_ATTR
);

461 i‡(
	`xml_vÆue_£t
(
xa
, 
	`xml_›î©i⁄2°r
(
›
)) < 0)

462 
d⁄e
;

464 i‡(
	`xml_addsub
(
xbŸ
, 
x
) < 0)

465 
d⁄e
;

467 i‡((
cbx
 = 
	`cbuf_√w
()Ë=
NULL
)

468 
d⁄e
;

471 
u£∫ame
 = 
	`˛ic⁄_u£∫ame_gë
(
h
);

472 
	`˝rötf
(
cbx
, "<Ω¯u£∫ame=\"%s\">", 
u£∫ame
?username:"");

473 
	`˝rötf
(
cbx
, "<edit-config><target><candidate /></target>");

474 
	`˝rötf
(
cbx
, "<default-operation>none</default-operation>");

475 i‡(
	`˛ic⁄_xml2cbuf
(
cbx
, 
xt›
, 0, 0) < 0)

476 
d⁄e
;

477 
	`˝rötf
(
cbx
, "</edit-config></rpc>");

478 
	`˛ic⁄_debug
(1, "%†xml: %†≠i_∑th:%s",
__FUNCTION__
, 
	`cbuf_gë
(
cbx
), 
≠i_∑th
);

479 i‡(
	`˛ic⁄_Ωc_√tc⁄f
(
h
, 
	`cbuf_gë
(
cbx
), &
xªt
, 
NULL
) < 0)

480 
d⁄e
;

481 i‡((
xe
 = 
	`x∑th_fú°
(
xªt
, "//Ωc-îr‹")Ë!
NULL
){

482 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xe
, 
¥ëty
, 
u£_xml
) < 0)

483 
d⁄e
;

484 
ok
;

487 
	`cbuf_ª£t
(
cbx
);

488 
	`˝rötf
(
cbx
, "<Ω¯u£∫ame=\"%s\">", 
u£∫ame
?username:"");

489 
	`˝rötf
(
cbx
, "<commit/></rpc>");

490 i‡(
	`˛ic⁄_Ωc_√tc⁄f
(
h
, 
	`cbuf_gë
(
cbx
), &
xªtcom
, 
NULL
) < 0)

491 
d⁄e
;

492 i‡((
xe
 = 
	`x∑th_fú°
(
xªtcom
, "//Ωc-îr‹")Ë!
NULL
){

493 i‡(
	`˛ic⁄_Ωc_disˇrd_ch™ges
(
h
) < 0)

494 
d⁄e
;

495 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xe
, 
¥ëty
, 
u£_xml
) < 0)

496 
d⁄e
;

497 
ok
;

499 
	`FCGX_SëExôSètus
(201, 
r
->
out
);

500 
	`FCGX_FPrötF
(
r
->
out
, "Content-Type:Åext/plain\r\n");

501 
	`FCGX_FPrötF
(
r
->
out
, "\r\n");

502 
ok
:

503 
ªtvÆ
 = 0;

504 
d⁄e
:

505 
	`˛ic⁄_debug
(1, "%†ªtvÆ:%d", 
__FUNCTION__
, 
ªtvÆ
);

506 i‡(
xªt
)

507 
	`xml_‰ì
(
xªt
);

508 i‡(
xîr
)

509 
	`xml_‰ì
(
xîr
);

510 i‡(
xªtcom
)

511 
	`xml_‰ì
(
xªtcom
);

512 i‡(
xt›
)

513 
	`xml_‰ì
(
xt›
);

514 i‡(
xd©a
)

515 
	`xml_‰ì
(
xd©a
);

516 i‡(
cbx
)

517 
	`cbuf_‰ì
(
cbx
);

518  
ªtvÆ
;

519 
	}
}

538 
	$m©ch_li°_keys
(
y™g_°mt
 *
y
,

539 
cxobj
 *
xd©a
,

540 
cxobj
 *
x≠ù©h
)

542 
ªtvÆ
 = -1;

543 
cvec
 *
cvk
 = 
NULL
;

544 
cg_v¨
 *
cvi
;

545 *
key«me
;

546 
cxobj
 *
xkeya
;

547 
cxobj
 *
xkeyd
;

548 *
keya
;

549 *
keyd
;

551 i‡(
y
->
ys_keyw‹d
 !
Y_LIST
 &&y->ys_keyw‹d !
Y_LEAF_LIST
)

553 
cvk
 = 
y
->
ys_cvec
;

554 
cvi
 = 
NULL
;

555 (
cvi
 = 
	`cvec_óch
(
cvk
, cvi)Ë!
NULL
) {

556 
key«me
 = 
	`cv_°rög_gë
(
cvi
);

557 i‡((
xkeya
 = 
	`xml_föd
(
x≠ù©h
, 
key«me
)Ë=
NULL
)

558 
d⁄e
;

560 
keya
 = 
	`xml_body
(
xkeya
);

561 i‡((
xkeyd
 = 
	`xml_föd
(
xd©a
, 
key«me
)Ë=
NULL
)

562 
d⁄e
;

563 
keyd
 = 
	`xml_body
(
xkeyd
);

564 i‡(
	`°rcmp
(
keya
, 
keyd
) != 0)

565 
d⁄e
;

567 
ªtvÆ
 = 0;

568 
d⁄e
:

569 
	`˛ic⁄_debug
(1, "%†ªtvÆ:%d", 
__FUNCTION__
, 
ªtvÆ
);

570  
ªtvÆ
;

571 
	}
}

598 
	$≠i_d©a_put
(
˛ic⁄_h™dÀ
 
h
,

599 
FCGX_Reque°
 *
r
,

600 *
≠i_∑th0
,

601 
cvec
 *
pcvec
,

602 
pi
,

603 
cvec
 *
qvec
,

604 *
d©a
,

605 
¥ëty
,

606 
u£_xml
,

607 
∑r£_xml
)

609 
ªtvÆ
 = -1;

610 
›î©i⁄_ty≥
 
›
 = 
OP_REPLACE
;

611 
i
;

612 
cxobj
 *
xd©a
 = 
NULL
;

613 
cbuf
 *
cbx
 = 
NULL
;

614 
cxobj
 *
xt›
 = 
NULL
;

615 
cxobj
 *
xbŸ
 = 
NULL
;

616 
cxobj
 *
x∑ª¡
;

617 
cxobj
 *
x
;

618 
y™g_node
 *
y
 = 
NULL
;

619 
y™g_•ec
 *
y•ec
;

620 
cxobj
 *
xa
;

621 *
≠i_∑th
;

622 
cxobj
 *
xªt
 = 
NULL
;

623 
cxobj
 *
xªtcom
 = 
NULL
;

624 
cxobj
 *
xîr
 = 
NULL
;

625 
cxobj
 *
xe
;

626 *
u£∫ame
;

628 
	`˛ic⁄_debug
(1, "%sápi_path:\"%s\" json:\"%s\"",

629 
__FUNCTION__
, 
≠i_∑th0
, 
d©a
);

630 i‡((
y•ec
 = 
	`˛ic⁄_db•ec_y™g
(
h
)Ë=
NULL
){

631 
	`˛ic⁄_îr
(
OE_FATAL
, 0, "No DB_SPEC");

632 
d⁄e
;

634 
≠i_∑th
=
≠i_∑th0
;

635 
i
=0; i<
pi
; i++)

636 
≠i_∑th
 = 
	`ödex
(api_path+1, '/');

638 i‡((
xt›
 = 
	`xml_√w
("c⁄fig", 
NULL
, NULL)) == NULL)

639 
d⁄e
;

641 
xbŸ
 = 
xt›
;

643 i‡(
≠i_∑th
 && 
	`≠i_∑th2xml
◊pi_∑th, 
y•ec
, 
xt›
, 
YC_DATANODE
, &
xbŸ
, &
y
) < 0)

644 
d⁄e
;

646 i‡(
∑r£_xml
){

647 i‡(
	`xml_∑r£_°rög
(
d©a
, 
NULL
, &
xd©a
) < 0){

648 i‡(
	`√tc⁄f_mÆf‹med_mesßge_xml
(&
xîr
, 
˛ic⁄_îr_ªas⁄
) < 0)

649 
d⁄e
;

650 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xîr
, 
¥ëty
, 
u£_xml
) < 0)

651 
d⁄e
;

652 
ok
;

655 i‡(
	`js⁄_∑r£_°r
(
d©a
, &
xd©a
) < 0){

656 i‡(
	`√tc⁄f_mÆf‹med_mesßge_xml
(&
xîr
, 
˛ic⁄_îr_ªas⁄
) < 0)

657 
d⁄e
;

658 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xîr
, 
¥ëty
, 
u£_xml
) < 0)

659 
d⁄e
;

660 
ok
;

665 i‡(
	`xml_chûd_ƒ
(
xd©a
) != 1){

666 i‡(
	`√tc⁄f_mÆf‹med_mesßge_xml
(&
xîr
, 
˛ic⁄_îr_ªas⁄
) < 0)

667 
d⁄e
;

668 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xîr
, 
¥ëty
, 
u£_xml
) < 0)

669 
d⁄e
;

670 
ok
;

672 
x
 = 
	`xml_chûd_i
(
xd©a
,0);

674 i‡((
xa
 = 
	`xml_√w
("›î©i⁄", 
x
, 
NULL
)) == NULL)

675 
d⁄e
;

676 
	`xml_ty≥_£t
(
xa
, 
CX_ATTR
);

677 i‡(
	`xml_vÆue_£t
(
xa
, 
	`xml_›î©i⁄2°r
(
›
)) < 0)

678 
d⁄e
;

680 i‡(
≠i_∑th
==
NULL
 && 
	`°rcmp
(
	`xml_«me
(
x
),"data")==0){

681 i‡(
	`xml_addsub
(
NULL
, 
x
) < 0)

682 
d⁄e
;

683 i‡(
xt›
)

684 
	`xml_‰ì
(
xt›
);

685 
xt›
 = 
x
;

686 
	`xml_«me_£t
(
xt›
, "config");

690 i‡(
	`°rcmp
(
	`xml_«me
(
x
), xml_«me(
xbŸ
))){

691 i‡(
	`√tc⁄f_›î©i⁄_Áûed_xml
(&
xîr
, "protocol", "Not same symbol inápi-pathás data") < 0)

692 
d⁄e
;

693 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xîr
, 
¥ëty
, 
u£_xml
) < 0)

694 
d⁄e
;

695 
ok
;

698 i‡(
y
 && (y->
yn_keyw‹d
 =
Y_LIST
 ||y->yn_keyw‹d =
Y_LEAF_LIST
)){

699 i‡(
	`m©ch_li°_keys
((
y™g_°mt
*)
y
, 
x
, 
xbŸ
) < 0){

700 i‡(
	`√tc⁄f_›î©i⁄_Áûed_xml
(&
xîr
, "protocol", "api-path keys doÇot match data keys") < 0)

701 
d⁄e
;

702 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xîr
, 
¥ëty
, 
u£_xml
) < 0)

703 
d⁄e
;

704 
ok
;

707 
x∑ª¡
 = 
	`xml_∑ª¡
(
xbŸ
);

708 
	`xml_purge
(
xbŸ
);

709 i‡(
	`xml_addsub
(
x∑ª¡
, 
x
) < 0)

710 
d⁄e
;

714 i‡((
cbx
 = 
	`cbuf_√w
()Ë=
NULL
)

715 
d⁄e
;

718 
u£∫ame
 = 
	`˛ic⁄_u£∫ame_gë
(
h
);

719 
	`˝rötf
(
cbx
, "<Ω¯u£∫ame=\"%s\">", 
u£∫ame
?username:"");

720 
	`˝rötf
(
cbx
, "<edit-config><target><candidate /></target>");

721 
	`˝rötf
(
cbx
, "<default-operation>none</default-operation>");

722 i‡(
	`˛ic⁄_xml2cbuf
(
cbx
, 
xt›
, 0, 0) < 0)

723 
d⁄e
;

724 
	`˝rötf
(
cbx
, "</edit-config></rpc>");

725 
	`˛ic⁄_debug
(1, "%†xml: %†≠i_∑th:%s",
__FUNCTION__
, 
	`cbuf_gë
(
cbx
), 
≠i_∑th
);

726 i‡(
	`˛ic⁄_Ωc_√tc⁄f
(
h
, 
	`cbuf_gë
(
cbx
), &
xªt
, 
NULL
) < 0)

727 
d⁄e
;

728 i‡((
xe
 = 
	`x∑th_fú°
(
xªt
, "//Ωc-îr‹")Ë!
NULL
){

729 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xe
, 
¥ëty
, 
u£_xml
) < 0)

730 
d⁄e
;

731 
ok
;

733 
	`cbuf_ª£t
(
cbx
);

734 
	`˝rötf
(
cbx
, "<Ω¯u£∫ame=\"%s\">", 
u£∫ame
?username:"");

735 
	`˝rötf
(
cbx
, "<commit/></rpc>");

736 i‡(
	`˛ic⁄_Ωc_√tc⁄f
(
h
, 
	`cbuf_gë
(
cbx
), &
xªtcom
, 
NULL
) < 0)

737 
d⁄e
;

738 i‡((
xe
 = 
	`x∑th_fú°
(
xªtcom
, "//Ωc-îr‹")Ë!
NULL
){

739 i‡(
	`˛ic⁄_Ωc_disˇrd_ch™ges
(
h
) < 0)

740 
d⁄e
;

741 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xe
, 
¥ëty
, 
u£_xml
) < 0)

742 
d⁄e
;

743 
ok
;

745 
	`FCGX_SëExôSètus
(201, 
r
->
out
);

746 
	`FCGX_FPrötF
(
r
->
out
, "Content-Type:Åext/plain\r\n");

747 
	`FCGX_FPrötF
(
r
->
out
, "\r\n");

748 
ok
:

749 
ªtvÆ
 = 0;

750 
d⁄e
:

751 
	`˛ic⁄_debug
(1, "%†ªtvÆ:%d", 
__FUNCTION__
, 
ªtvÆ
);

752 i‡(
xªt
)

753 
	`xml_‰ì
(
xªt
);

754 i‡(
xîr
)

755 
	`xml_‰ì
(
xîr
);

756 i‡(
xªtcom
)

757 
	`xml_‰ì
(
xªtcom
);

758 i‡(
xt›
)

759 
	`xml_‰ì
(
xt›
);

760 i‡(
xd©a
)

761 
	`xml_‰ì
(
xd©a
);

762 i‡(
cbx
)

763 
	`cbuf_‰ì
(
cbx
);

764  
ªtvÆ
;

765 
	}
}

779 
	$≠i_d©a_∑tch
(
˛ic⁄_h™dÀ
 
h
,

780 
FCGX_Reque°
 *
r
,

781 *
≠i_∑th
,

782 
cvec
 *
pcvec
,

783 
pi
,

784 
cvec
 *
qvec
,

785 *
d©a
)

787 
	`nŸim∂emíãd
(
r
);

789 
	}
}

804 
	$≠i_d©a_dñëe
(
˛ic⁄_h™dÀ
 
h
,

805 
FCGX_Reque°
 *
r
,

806 *
≠i_∑th
,

807 
pi
,

808 
¥ëty
,

809 
u£_xml
)

811 
ªtvÆ
 = -1;

812 
i
;

813 
cxobj
 *
xt›
 = 
NULL
;

814 
cxobj
 *
xbŸ
 = 
NULL
;

815 
cxobj
 *
xa
;

816 
cbuf
 *
cbx
 = 
NULL
;

817 
y™g_node
 *
y
 = 
NULL
;

818 
y™g_•ec
 *
y•ec
;

819 
›î©i⁄_ty≥
 
›
 = 
OP_DELETE
;

820 
cxobj
 *
xªt
 = 
NULL
;

821 
cxobj
 *
xªtcom
 = 
NULL
;

822 
cxobj
 *
xîr
 = 
NULL
;

823 *
u£∫ame
;

825 
	`˛ic⁄_debug
(1, "%†≠i_∑th:%s", 
__FUNCTION__
, 
≠i_∑th
);

826 i‡((
y•ec
 = 
	`˛ic⁄_db•ec_y™g
(
h
)Ë=
NULL
){

827 
	`˛ic⁄_îr
(
OE_FATAL
, 0, "No DB_SPEC");

828 
d⁄e
;

830 
i
=0; i<
pi
; i++)

831 
≠i_∑th
 = 
	`ödex
(api_path+1, '/');

833 i‡((
xt›
 = 
	`xml_√w
("c⁄fig", 
NULL
, NULL)) == NULL)

834 
d⁄e
;

835 
xbŸ
 = 
xt›
;

837 i‡(
≠i_∑th
 && 
	`≠i_∑th2xml
◊pi_∑th, 
y•ec
, 
xt›
, 
YC_DATANODE
, &
xbŸ
, &
y
) < 0)

838 
d⁄e
;

839 i‡((
xa
 = 
	`xml_√w
("›î©i⁄", 
xbŸ
, 
NULL
)) == NULL)

840 
d⁄e
;

841 
	`xml_ty≥_£t
(
xa
, 
CX_ATTR
);

842 i‡(
	`xml_vÆue_£t
(
xa
, 
	`xml_›î©i⁄2°r
(
›
)) < 0)

843 
d⁄e
;

844 i‡((
cbx
 = 
	`cbuf_√w
()Ë=
NULL
)

845 
d⁄e
;

848 
u£∫ame
 = 
	`˛ic⁄_u£∫ame_gë
(
h
);

849 
	`˝rötf
(
cbx
, "<Ω¯u£∫ame=\"%s\">", 
u£∫ame
?username:"");

850 
	`˝rötf
(
cbx
, "<edit-config><target><candidate /></target>");

851 
	`˝rötf
(
cbx
, "<default-operation>none</default-operation>");

852 i‡(
	`˛ic⁄_xml2cbuf
(
cbx
, 
xt›
, 0, 0) < 0)

853 
d⁄e
;

854 
	`˝rötf
(
cbx
, "</edit-config></rpc>");

855 i‡(
	`˛ic⁄_Ωc_√tc⁄f
(
h
, 
	`cbuf_gë
(
cbx
), &
xªt
, 
NULL
) < 0)

856 
d⁄e
;

857 i‡((
xîr
 = 
	`x∑th_fú°
(
xªt
, "//Ωc-îr‹")Ë!
NULL
){

858 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xîr
, 
¥ëty
, 
u£_xml
) < 0)

859 
d⁄e
;

860 
ok
;

863 
	`cbuf_ª£t
(
cbx
);

864 
	`˝rötf
(
cbx
, "<Ω¯u£∫ame=\"%s\">", 
u£∫ame
?username:"");

865 
	`˝rötf
(
cbx
, "<commit/></rpc>");

866 i‡(
	`˛ic⁄_Ωc_√tc⁄f
(
h
, 
	`cbuf_gë
(
cbx
), &
xªtcom
, 
NULL
) < 0)

867 
d⁄e
;

868 i‡((
xîr
 = 
	`x∑th_fú°
(
xªtcom
, "//Ωc-îr‹")Ë!
NULL
){

869 i‡(
	`˛ic⁄_Ωc_disˇrd_ch™ges
(
h
) < 0)

870 
d⁄e
;

871 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xîr
, 
¥ëty
, 
u£_xml
) < 0)

872 
d⁄e
;

873 
ok
;

875 
	`FCGX_SëExôSètus
(201, 
r
->
out
);

876 
	`FCGX_FPrötF
(
r
->
out
, "Content-Type:Åext/plain\r\n");

877 
	`FCGX_FPrötF
(
r
->
out
, "\r\n");

878 
ok
:

879 
ªtvÆ
 = 0;

880 
d⁄e
:

881 i‡(
cbx
)

882 
	`cbuf_‰ì
(
cbx
);

883 i‡(
xªt
)

884 
	`xml_‰ì
(
xªt
);

885 i‡(
xªtcom
)

886 
	`xml_‰ì
(
xªtcom
);

887 i‡(
xt›
)

888 
	`xml_‰ì
(
xt›
);

889 
	`˛ic⁄_debug
(1, "%†ªtvÆ:%d", 
__FUNCTION__
, 
ªtvÆ
);

890  
ªtvÆ
;

891 
	}
}

914 
	$≠i_›î©i⁄s_gë
(
˛ic⁄_h™dÀ
 
h
,

915 
FCGX_Reque°
 *
r
,

916 *
∑th
,

917 
cvec
 *
pcvec
,

918 
pi
,

919 
cvec
 *
qvec
,

920 *
d©a
,

921 
¥ëty
,

922 
u£_xml
)

924 
ªtvÆ
 = -1;

925 
y™g_•ec
 *
y•ec
;

926 
y™g_°mt
 *
ym
;

927 
y™g_°mt
 *
yc
;

928 
y™g_°mt
 *
y¥efix
;

929 *
¥efix
;

930 
cbuf
 *
cbx
 = 
NULL
;

931 
cxobj
 *
xt
 = 
NULL
;

933 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

934 
y•ec
 = 
	`˛ic⁄_db•ec_y™g
(
h
);

935 i‡((
cbx
 = 
	`cbuf_√w
()Ë=
NULL
)

936 
d⁄e
;

937 
	`˝rötf
(
cbx
, "<operations>");

938 
ym
 = 
NULL
;

939 (
ym
 = 
	`yn_óch
((
y™g_node
*)
y•ec
, ym)Ë!
NULL
) {

940 i‡((
y¥efix
 = 
	`y™g_föd
((
y™g_node
*)
ym
, 
Y_PREFIX
, 
NULL
)) != NULL)

941 
¥efix
 = 
y¥efix
->
ys_¨gumít
;

944 
yc
 = 
NULL
;

945 (
yc
 = 
	`yn_óch
((
y™g_node
*)
ym
, yc)Ë!
NULL
) {

946 i‡(
yc
->
ys_keyw‹d
 !
Y_RPC
)

948 
	`˝rötf
(
cbx
, "<%s:%†/>", 
¥efix
, 
yc
->
ys_¨gumít
);

951 
	`˝rötf
(
cbx
, "</operations>");

952 
	`˛ic⁄_debug
(1, "%†xml:%s", 
__FUNCTION__
, 
	`cbuf_gë
(
cbx
));

953 i‡(
	`xml_∑r£_°rög
(
	`cbuf_gë
(
cbx
), 
y•ec
, &
xt
) < 0)

954 
d⁄e
;

955 i‡(
	`xml_roŸchûd
(
xt
, 0, &xt) < 0)

956 
d⁄e
;

957 
	`cbuf_ª£t
(
cbx
);

958 i‡(
u£_xml
){

959 i‡(
	`˛ic⁄_xml2cbuf
(
cbx
, 
xt
, 0, 
¥ëty
) < 0)

960 
d⁄e
;

963 i‡(
	`xml2js⁄_cbuf
(
cbx
, 
xt
, 
¥ëty
) < 0)

964 
d⁄e
;

966 
	`˛ic⁄_debug
(1, "%†ªt:%s", 
__FUNCTION__
, 
	`cbuf_gë
(
cbx
));

967 
	`FCGX_SëExôSètus
(200, 
r
->
out
);

968 
	`FCGX_FPrötF
(
r
->
out
, "C⁄ã¡-Ty≥:áµliˇti⁄/y™g-d©a+%s\r\n", 
u£_xml
?"xml":"json");

969 
	`FCGX_FPrötF
(
r
->
out
, "\r\n");

970 
	`FCGX_FPrötF
(
r
->
out
, "%s", 
cbx
?
	`cbuf_gë
(cbx):"");

971 
	`FCGX_FPrötF
(
r
->
out
, "\r\n\r\n");

973 
ªtvÆ
 = 0;

974 
d⁄e
:

975 
	`˛ic⁄_debug
(1, "%†ªtvÆ:%d", 
__FUNCTION__
, 
ªtvÆ
);

976 i‡(
cbx
)

977 
	`cbuf_‰ì
(
cbx
);

978 i‡(
xt
)

979 
	`xml_‰ì
(
xt
);

980  
ªtvÆ
;

981 
	}
}

999 
	$≠i_›î©i⁄s_po°
(
˛ic⁄_h™dÀ
 
h
,

1000 
FCGX_Reque°
 *
r
,

1001 *
∑th
,

1002 
cvec
 *
pcvec
,

1003 
pi
,

1004 
cvec
 *
qvec
,

1005 *
d©a
,

1006 
¥ëty
,

1007 
u£_xml
,

1008 
∑r£_xml
)

1010 
ªtvÆ
 = -1;

1011 
i
;

1012 *
›∑th
 = 
∑th
;

1013 
y™g_°mt
 *
yΩc
 = 
NULL
;

1014 
y™g_•ec
 *
y•ec
;

1015 
y™g_°mt
 *
yöput
;

1016 
y™g_°mt
 *
youçut
;

1017 
cxobj
 *
xd©a
 = 
NULL
;

1018 
cxobj
 *
xªt
 = 
NULL
;

1019 
cxobj
 *
xîr
 = 
NULL
;

1020 
cxobj
 *
xî
;

1021 
cbuf
 *
cbx
 = 
NULL
;

1022 
cxobj
 *
xt›
 = 
NULL
;

1023 
cxobj
 *
xbŸ
 = 
NULL
;

1024 
y™g_node
 *
y
 = 
NULL
;

1025 
cxobj
 *
xöput
;

1026 
cxobj
 *
xouçut
;

1027 
cxobj
 *
x
;

1028 
cxobj
 *
xa
;

1029 
cxobj
 *
xe
;

1030 *
u£∫ame
;

1031 
cbuf
 *
cbªt
 = 
NULL
;

1032 
ªt
 = 0;

1034 
	`˛ic⁄_debug
(1, "%†js⁄:\"%s\"Ö©h:\"%s\"", 
__FUNCTION__
, 
d©a
, 
∑th
);

1035 i‡((
y•ec
 = 
	`˛ic⁄_db•ec_y™g
(
h
)Ë=
NULL
){

1036 
	`˛ic⁄_îr
(
OE_FATAL
, 0, "No DB_SPEC");

1037 
d⁄e
;

1039 
i
=0; i<
pi
; i++)

1040 
›∑th
 = 
	`ödex
(oppath+1, '/');

1041 i‡(
›∑th
 =
NULL
 || 
	`°rcmp
(oppath,"/")==0){

1042 i‡(
	`√tc⁄f_›î©i⁄_Áûed_xml
(&
xîr
, "protocol", "OperationÇameÉxpected") < 0)

1043 
d⁄e
;

1044 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xîr
, 
¥ëty
, 
u£_xml
) < 0)

1045 
d⁄e
;

1046 
ok
;

1048 
	`˛ic⁄_debug
(1, "%†›∑th: %s", 
__FUNCTION__
, 
›∑th
);

1051 i‡(
	`y™g_abs_schema_nodeid
(
y•ec
, 
›∑th
, 
Y_RPC
, &
yΩc
) < 0)

1052 
d⁄e
;

1053 i‡(
yΩc
 =
NULL
){

1054 i‡(
	`√tc⁄f_›î©i⁄_Áûed_xml
(&
xîr
, "protocol", "yangÇodeÇot found") < 0)

1055 
d⁄e
;

1056 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xîr
, 
¥ëty
, 
u£_xml
) < 0)

1057 
d⁄e
;

1058 
ok
;

1065 i‡((
xt›
 = 
	`xml_√w
("Ωc", 
NULL
, NULL)) == NULL)

1066 
d⁄e
;

1067 
xbŸ
 = 
xt›
;

1070 i‡((
u£∫ame
 = 
	`˛ic⁄_u£∫ame_gë
(
h
)Ë!
NULL
){

1071 i‡((
xa
 = 
	`xml_√w
("u£∫ame", 
xt›
, 
NULL
)) == NULL)

1072 
d⁄e
;

1073 
	`xml_ty≥_£t
(
xa
, 
CX_ATTR
);

1074 i‡(
	`xml_vÆue_£t
(
xa
, 
u£∫ame
) < 0)

1075 
d⁄e
;

1079 i‡(
	`≠i_∑th2xml
(
›∑th
, 
y•ec
, 
xt›
, 
YC_SCHEMANODE
, &
xbŸ
, &
y
) < 0)

1080 
d⁄e
;

1083 
cbuf
 *
c
 = 
	`cbuf_√w
();

1084 
	`˛ic⁄_xml2cbuf
(
c
, 
xt›
, 0, 0);

1085 
	`˛ic⁄_debug
(1, "%†xt›:%s", 
__FUNCTION__
, 
	`cbuf_gë
(
c
));

1086 
	`cbuf_‰ì
(
c
);

1089 i‡(
d©a
 && 
	`°æí
(data)){

1091 i‡(
∑r£_xml
){

1092 i‡(
	`xml_∑r£_°rög
(
d©a
, 
NULL
, &
xd©a
) < 0){

1093 i‡(
	`√tc⁄f_mÆf‹med_mesßge_xml
(&
xîr
, 
˛ic⁄_îr_ªas⁄
) < 0)

1094 
d⁄e
;

1095 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xîr
, 
¥ëty
, 
u£_xml
) < 0)

1096 
d⁄e
;

1097 
ok
;

1100 i‡(
	`js⁄_∑r£_°r
(
d©a
, &
xd©a
) < 0){

1101 i‡(
	`√tc⁄f_mÆf‹med_mesßge_xml
(&
xîr
, 
˛ic⁄_îr_ªas⁄
) < 0)

1102 
d⁄e
;

1103 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xîr
, 
¥ëty
, 
u£_xml
) < 0)

1104 
d⁄e
;

1105 
ok
;

1107 
yöput
 = 
	`y™g_föd
((
y™g_node
*)
yΩc
, 
Y_INPUT
, 
NULL
);

1109 i‡((
xöput
 = 
	`x∑th_fú°
(
xd©a
, "/öput")Ë=
NULL
){

1110 
	`xml_«me_£t
(
xd©a
, "input");

1111 
	`xml_•ec_£t
(
xd©a
, 
yöput
);

1112 i‡(
yöput
){

1113 i‡(
	`xml_y™g_vÆid©e_add
(
xd©a
, 
NULL
) < 0){

1114 i‡(
	`√tc⁄f_›î©i⁄_Áûed_xml
(&
xîr
, "¥Ÿocﬁ", 
˛ic⁄_îr_ªas⁄
) < 0)

1115 
d⁄e
;

1116 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xîr
, 
¥ëty
, 
u£_xml
) < 0)

1117 
d⁄e
;

1118 
ok
;

1124 
x
 = 
NULL
;

1125 
	`xml_chûd_ƒ
(
xöput
)){

1126 
x
 = 
	`xml_chûd_i
(
xöput
, 0);

1127 i‡(
	`xml_addsub
(
xbŸ
, 
x
) < 0)

1128 
d⁄e
;

1130 i‡(
yöput
){

1131 
	`xml_•ec_£t
(
xbŸ
, 
yöput
);

1132 i‡(
	`xml_≠∂y
(
xbŸ
, 
CX_ELMNT
, 
xml_•ec_p›uœã
, 
yöput
) < 0)

1133 
d⁄e
;

1134 i‡(
	`xml_≠∂y
(
xbŸ
, 
CX_ELMNT
,

1135 (
xml_≠∂y‚_t
*)
xml_y™g_vÆid©e_Æl
, 
NULL
) < 0)

1136 
d⁄e
;

1137 i‡(
	`xml_y™g_vÆid©e_add
(
xbŸ
, 
NULL
) < 0){

1138 i‡(
	`√tc⁄f_›î©i⁄_Áûed_xml
(&
xîr
, "¥Ÿocﬁ", 
˛ic⁄_îr_ªas⁄
) < 0)

1139 
d⁄e
;

1140 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xîr
, 
¥ëty
, 
u£_xml
) < 0)

1141 
d⁄e
;

1142 
ok
;

1147 i‡((
cbªt
 = 
	`cbuf_√w
()Ë=
NULL
){

1148 
	`˛ic⁄_îr
(
OE_UNIX
, 0, "cbuf_new");

1149 
d⁄e
;

1151 
xe
 = 
NULL
;

1152 (
xe
 = 
	`xml_chûd_óch
(
xt›
, xe, 
CX_ELMNT
)Ë!
NULL
) {

1154 i‡((
ªt
 = 
	`Ωc_ˇŒback_ˇŒ
(
h
, 
xe
, 
cbªt
, 
r
)) < 0)

1155 
d⁄e
;

1156 i‡(
ªt
 == 1){

1157 i‡(
	`xml_∑r£_°rög
(
	`cbuf_gë
(
cbªt
), 
NULL
, &
xªt
) < 0)

1158 
d⁄e
;

1160 i‡((
xî
 = 
	`x∑th_fú°
(
xªt
, "//Ωc-îr‹")Ë!
NULL
){

1161 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xî
, 
¥ëty
, 
u£_xml
) < 0)

1162 
d⁄e
;

1163 
ok
;

1168 i‡(
ªt
 == 0){

1169 i‡(
	`˛ic⁄_Ωc_√tc⁄f_xml
(
h
, 
xt›
, &
xªt
, 
NULL
) < 0)

1170 
d⁄e
;

1171 i‡((
xî
 = 
	`x∑th_fú°
(
xªt
, "//Ωc-îr‹")Ë!
NULL
){

1172 i‡(
	`≠i_ªtu∫_îr
(
h
, 
r
, 
xî
, 
¥ëty
, 
u£_xml
) < 0)

1173 
d⁄e
;

1174 
ok
;

1178 i‡((
youçut
 = 
	`y™g_föd
((
y™g_node
*)
yΩc
, 
Y_OUTPUT
, 
NULL
)) == NULL){

1184 
	`FCGX_SëExôSètus
(204, 
r
->
out
);

1185 
	`FCGX_FPrötF
(
r
->
out
, "\r\n");

1186 
ok
;

1188 i‡((
cbx
 = 
	`cbuf_√w
()Ë=
NULL
)

1189 
d⁄e
;

1190 i‡((
xouçut
=
	`x∑th_fú°
(
xªt
, "/")Ë!
NULL
){

1191 
	`xml_«me_£t
(
xouçut
, "output");

1193 
	`˛ic⁄_debug
(1, "%†xouçut:%s", 
__FUNCTION__
, 
	`cbuf_gë
(
cbx
));

1195 
	`cbuf_ª£t
(
cbx
);

1196 
	`xml_•ec_£t
(
xouçut
, 
youçut
);

1197 i‡(
	`xml_≠∂y
(
xouçut
, 
CX_ELMNT
, 
xml_•ec_p›uœã
, 
youçut
) < 0)

1198 
d⁄e
;

1199 i‡(
	`xml_≠∂y
(
xouçut
, 
CX_ELMNT
,

1200 (
xml_≠∂y‚_t
*)
xml_y™g_vÆid©e_Æl
, 
NULL
) < 0)

1201 
d⁄e
;

1202 i‡(
	`xml_y™g_vÆid©e_add
(
xouçut
, 
NULL
) < 0)

1203 
d⁄e
;

1206 
	`FCGX_SëExôSètus
(200, 
r
->
out
);

1207 
	`FCGX_FPrötF
(
r
->
out
, "C⁄ã¡-Ty≥:áµliˇti⁄/y™g-d©a+%s\r\n", 
u£_xml
?"xml":"json");

1208 
	`FCGX_FPrötF
(
r
->
out
, "\r\n");

1209 i‡(
xouçut
){

1210 i‡(
u£_xml
){

1211 i‡(
	`˛ic⁄_xml2cbuf
(
cbx
, 
xouçut
, 0, 
¥ëty
) < 0)

1212 
d⁄e
;

1215 i‡(
	`xml2js⁄_cbuf
(
cbx
, 
xouçut
, 
¥ëty
) < 0)

1216 
d⁄e
;

1218 
	`˛ic⁄_debug
(1, "%†cbx:%s", 
__FUNCTION__
, 
	`cbuf_gë
(
cbx
));

1220 
	`FCGX_FPrötF
(
r
->
out
, "%s", 
cbx
?
	`cbuf_gë
(cbx):"");

1221 
	`FCGX_FPrötF
(
r
->
out
, "\r\n\r\n");

1223 
ok
:

1224 
ªtvÆ
 = 0;

1225 
d⁄e
:

1226 
	`˛ic⁄_debug
(1, "%†ªtvÆ:%d", 
__FUNCTION__
, 
ªtvÆ
);

1227 i‡(
xd©a
)

1228 
	`xml_‰ì
(
xd©a
);

1229 i‡(
xt›
)

1230 
	`xml_‰ì
(
xt›
);

1231 i‡(
xªt
)

1232 
	`xml_‰ì
(
xªt
);

1233 i‡(
xîr
)

1234 
	`xml_‰ì
(
xîr
);

1235 i‡(
cbx
)

1236 
	`cbuf_‰ì
(
cbx
);

1237 i‡(
cbªt
)

1238 
	`cbuf_‰ì
(
cbªt
);

1239  
ªtvÆ
;

1240 
	}
}

	@clixon-master/apps/restconf/restconf_methods.h

37 #i‚de‡
_RESTCONF_METHODS_H_


38 
	#_RESTCONF_METHODS_H_


	)

47 
≠i_d©a_›ti⁄s
(
˛ic⁄_h™dÀ
 
h
, 
FCGX_Reque°
 *
r
);

48 
≠i_d©a_hód
(
˛ic⁄_h™dÀ
 
h
, 
FCGX_Reque°
 *
r
, 
cvec
 *
pcvec
, 
pi
,

49 
cvec
 *
qvec
, 
¥ëty
, 
u£_xml
);

50 
≠i_d©a_gë
(
˛ic⁄_h™dÀ
 
h
, 
FCGX_Reque°
 *
r
, 
cvec
 *
pcvec
, 
pi
,

51 
cvec
 *
qvec
, 
¥ëty
, 
u£_xml
);

52 
≠i_d©a_po°
(
˛ic⁄_h™dÀ
 
h
, 
FCGX_Reque°
 *
r
, *
≠i_∑th
,

53 
cvec
 *
pcvec
, 
pi
,

54 
cvec
 *
qvec
, *
d©a
,

55 
¥ëty
, 
u£_xml
, 
∑r£_xml
);

56 
≠i_d©a_put
(
˛ic⁄_h™dÀ
 
h
, 
FCGX_Reque°
 *
r
, *
≠i_∑th
,

57 
cvec
 *
pcvec
, 
pi
,

58 
cvec
 *
qvec
, *
d©a
,

59 
¥ëty
, 
u£_xml
, 
∑r£_xml
);

60 
≠i_d©a_∑tch
(
˛ic⁄_h™dÀ
 
h
, 
FCGX_Reque°
 *
r
, *
≠i_∑th
,

61 
cvec
 *
pcvec
, 
pi
,

62 
cvec
 *
qvec
, *
d©a
);

63 
≠i_d©a_dñëe
(
˛ic⁄_h™dÀ
 
h
, 
FCGX_Reque°
 *
r
, *
≠i_∑th
, 
pi
,

64 
¥ëty
, 
u£_xml
);

66 
≠i_›î©i⁄s_gë
(
˛ic⁄_h™dÀ
 
h
, 
FCGX_Reque°
 *
r
,

67 *
∑th
,

68 
cvec
 *
pcvec
, 
pi
, cve¯*
qvec
, *
d©a
,

69 
¥ëty
, 
u£_xml
);

71 
≠i_›î©i⁄s_po°
(
˛ic⁄_h™dÀ
 
h
, 
FCGX_Reque°
 *
r
,

72 *
∑th
,

73 
cvec
 *
pcvec
, 
pi
, cve¯*
qvec
, *
d©a
,

74 
¥ëty
, 
u£_xml
, 
∑r£_xml
);

	@clixon-master/clixon.mk.cpp

1 #
#***** 
BEGIN
 
LICENSE
 
BLOCK
 *****

3 #
#C›yrighà(
C
Ë2009-2018 
Olof
 
Hagßnd
 
™d
 
Bíny
 
Hﬁmgªn


5 #
#Thi†
fûe
 
is
 
∑π
 
of
 
CLIXON


7 #
#Li˚n£d 
undî
 
the
 
A∑che
 
Li˚n£
, 
Vîsi⁄
 2.0 (the "License");

9 #you 
may
 
nŸ
 
u£
 
this
 
fûe
 
ex˚±
 
ö
 
com∂ün˚
 
wôh
 
the
 
Li˚n£
.

10 #You 
may
 
obèö
 
a
 
c›y
 
of
 
the
 
Li˚n£
 
©


13 #
#U∆es†
ªquúed
 
by
 
≠∂iˇbÀ
 
œw
 
‹
 
agªed
 
to
 
ö
 
wrôög
, 
so·w¨e


15 #di°ribuãd 
undî
 
the
 
Li˚n£
 
is
 
di°ribuãd
 
⁄
 
™
 "AS IS" 
BASIS
,

16 #WITHOUT 
WARRANTIES
 
OR
 
CONDITIONS
 
OF
 
ANY
 
KIND
, 
eôhî
 
ex¥ess
 
‹
 
im∂õd
.

17 #Sì 
the
 
Li˚n£
 thê
•ecific
 
œnguage
 
govînög
 
≥rmissi⁄s
 
™d


18 #limô©i⁄†
undî
 
the
 
Li˚n£
.

19 #
#A…î«tivñy, 
the
 
c⁄ã¡s
 
of
 
this
 
fûe
 
may
 
be
 
u£d
 
undî
Åhê
ãrms
 of

21 #thê
GNU
 
GíîÆ
 
Public
 
Li˚n£
 
Vîsi⁄
 3 
‹
 
œãr
 (
the
 "GPL"),

22 #ö 
which
 
the
 
¥ovisi⁄s
 
of
Åhê
GPL
 
¨e
 
≠∂iˇbÀ
 
ö°ód


23 #o‡
tho£
 
above
. 
If
 
you
 
wish
 
to
 
Ælow
 
u£
 
of
 
your
 
vîsi⁄
 o‡
this
 
fûe
 
⁄ly


24 #undî 
the
 
ãrms
 
of
Åhê
GPL
, 
™d
 
nŸ
 
to
 
Ælow
 
Ÿhîs
Åo

25 #u£ 
your
 
vîsi⁄
 
of
 
this
 
fûe
 
undî
 
the
 
ãrms
 o‡
A∑che
 
Li˚n£
 version 2,

26 #ödiˇã 
your
 
decisi⁄
 
by
 
dñëög
 
the
 
¥ovisi⁄s
 
above
 
™d
 
ª∂a˚
 
them
 
wôh


27 #thê
nŸi˚
 
™d
 
Ÿhî
 
¥ovisi⁄s
 
ªquúed
 
by
 
the
 
GPL
. 
If
 
you
 dÿ
nŸ
 
dñëe


28 #thê
¥ovisi⁄s
 
above
, 
a
 
ªcùõ¡
 
may
 
u£
 
your
 
vîsi⁄
 
of
 
this
 
fûe
 
undî


29 #thê
ãrms
 
of
 
™y
 
⁄e
 o‡
the
 
A∑che
 
Li˚n£
 
vîsi⁄
 2 
‹
Åhê
GPL
.

30 #
#***** 
END
 
LICENSE
 
BLOCK
 *****

34 #
#In˛udê
this
 
fûe
 
ö
 
your
 
≠∂iˇti⁄
 
Makefûe
 
usög
 
eg
:

36 #-
ö˛ude
 
$
(
d©¨oŸdú
)/
˛ix⁄
/˛ix⁄.
mk


37 #thí 
you
 
ˇn
 
u£
 
the
 
DIRS
 
bñow
 
ö
 
your
 
ö°Æl
 
ruÀs
.

38 #You 
Æso
 
gë
 
ruÀs
 
the
 
≠∂iˇti⁄
 
c⁄figuª
 
fûe
.

39 #NOTE: 
APPNAME
 
mu°
 
be
 
deföed
 
ö
 
the
 
loˇl
 
Makefûe


41 
	g˛ix⁄_DBSPECDIR
=
¥efix
/
sh¨e
/
	$$
(
APPNAME
)

42 
˛ix⁄_SYSCONFDIR
=
sysc⁄fdú


43 
˛ix⁄_LOCALSTATEDIR
=
loˇl°©edú
/
	$$
(
APPNAME
)

44 
˛ix⁄_LIBDIR
=
libdú
/
	$$
(
APPNAME
)

45 
˛ix⁄_DATADIR
=
d©adú
/
˛ix⁄
 #f‹ 
sy°em
 
y™g
 
fûes


	@clixon-master/datastore/datastore_client.c

44 #ifde‡
HAVE_CONFIG_H


45 
	~"˛ix⁄_c⁄fig.h
"

48 
	~<°dio.h
>

49 
	~<°rög.h
>

50 
	~<°dlib.h
>

51 
	~<uni°d.h
>

52 
	~<°d¨g.h
>

53 
	~<î∫o.h
>

54 
	~<sig«l.h
>

55 
	~<f˙é.h
>

56 
	~<time.h
>

57 
	~<sy¶og.h
>

58 
	~<sys/time.h
>

59 
	~<sys/sockë.h
>

60 
	~<sys/∑øm.h
>

61 
	~<sys/ty≥s.h
>

62 
	~<sys/°©.h
>

63 
	~<√töë/ö.h
>

64 
	~<¨∑/öë.h
>

65 
	~<√töë/ö.h
>

68 
	~<˛igí/˛igí.h
>

71 
	~<˛ix⁄/˛ix⁄.h
>

74 
	#DATASTORE_OPTS
 "hDd:p:b:y:m:"

	)

79 
	$ußge
(*
¨gv0
)

81 
	`Ârötf
(
°dîr
, "usage:%s <options>* [<command>]\n"

103 
¨gv0


105 
	`exô
(0);

106 
	}
}

109 
	$maö
(
¨gc
, **
¨gv
)

111 
c
;

112 
˛ic⁄_h™dÀ
 
h
;

113 *
¨gv0
;

114 *
db
 = "running";

115 *
∂ugö
 = 
NULL
;

116 *
cmd
 = 
NULL
;

117 
y™g_•ec
 *
y•ec
 = 
NULL
;

118 *
y™gdú
 = 
NULL
;

119 *
y™gmoduÀ
 = 
NULL
;

120 *
dbdú
 = 
NULL
;

121 
ªt
;

122 
pid
;

123 
›î©i⁄_ty≥
 
›
;

124 
cxobj
 *
xt
 = 
NULL
;

125 
i
;

126 *
x∑th
;

127 
cbuf
 *
cbªt
 = 
NULL
;

130 
	`˛ic⁄_log_öô
(
__PROGRAM__
, 
LOG_INFO
, 
CLICON_LOG_STDERR
);

132 
¨gv0
 = 
¨gv
[0];

134 i‡((
h
 = 
	`˛ic⁄_h™dÀ_öô
()Ë=
NULL
)

135 
d⁄e
;

137 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, 
DATASTORE_OPTS
)) != -1)

138 
c
) {

141 
	`ußge
(
¨gv0
);

144 
debug
 = 1;

147 i‡(!
›èrg
)

148 
	`ußge
(
¨gv0
);

149 
db
 = 
›èrg
;

152 i‡(!
›èrg
)

153 
	`ußge
(
¨gv0
);

154 
∂ugö
 = 
›èrg
;

157 i‡(!
›èrg
)

158 
	`ußge
(
¨gv0
);

159 
dbdú
 = 
›èrg
;

162 i‡(!
›èrg
)

163 
	`ußge
(
¨gv0
);

164 
y™gdú
 = 
›èrg
;

167 i‡(!
›èrg
)

168 
	`ußge
(
¨gv0
);

169 
y™gmoduÀ
 = 
›èrg
;

175 
	`˛ic⁄_log_öô
(
__PROGRAM__
, 
debug
?
LOG_DEBUG
:
LOG_INFO
, 
CLICON_LOG_STDERR
);

176 
	`˛ic⁄_debug_öô
(
debug
, 
NULL
);

178 
¨gc
 -
›töd
;

179 
¨gv
 +
›töd
;

180 i‡(
¨gc
 < 1)

181 
	`ußge
(
¨gv0
);

182 
cmd
 = 
¨gv
[0];

183 i‡(
∂ugö
 =
NULL
){

184 
	`˛ic⁄_îr
(
OE_DB
, 0, "MissingÖlugin -p option");

185 
d⁄e
;

187 i‡(
dbdú
 =
NULL
){

188 
	`˛ic⁄_îr
(
OE_DB
, 0, "Missing dbdir -b option");

189 
d⁄e
;

191 i‡(
y™gdú
 =
NULL
){

192 
	`˛ic⁄_îr
(
OE_YANG
, 0, "Missing yangdir -y option");

193 
d⁄e
;

195 i‡(
y™gmoduÀ
 =
NULL
){

196 
	`˛ic⁄_îr
(
OE_YANG
, 0, "Missing yang module -m option");

197 
d⁄e
;

200 i‡(
	`xmldb_∂ugö_lﬂd
(
h
, 
∂ugö
) < 0)

201 
d⁄e
;

203 i‡(
	`xmldb_c⁄√˘
(
h
) < 0)

204 
d⁄e
;

206 i‡((
y•ec
 = 
	`y•ec_√w
()Ë=
NULL
)

207 
d⁄e
;

209 i‡(
	`y™g_∑r£
(
h
, 
y™gdú
, 
y™gmoduÀ
, 
NULL
, 
y•ec
) < 0)

210 
d⁄e
;

212 i‡(
	`xmldb_£t›t
(
h
, "dbdú", 
dbdú
) < 0)

213 
d⁄e
;

215 i‡(
	`xmldb_£t›t
(
h
, "y™g•ec", 
y•ec
) < 0)

216 
d⁄e
;

217 i‡(
	`°rcmp
(
cmd
, "get")==0){

218 i‡(
¨gc
 != 1 &&árgc != 2)

219 
	`ußge
(
¨gv0
);

220 i‡(
¨gc
==2)

221 
x∑th
 = 
¨gv
[1];

223 
x∑th
 = "/";

224 i‡(
	`xmldb_gë
(
h
, 
db
, 
x∑th
, 0, &
xt
) < 0)

225 
d⁄e
;

226 
	`˛ic⁄_xml2fûe
(
°dout
, 
xt
, 0, 0);

228 
	`Ârötf
(
°dout
, "\n");

230 i‡(
	`°rcmp
(
cmd
, "mget")==0){

231 
ƒ
;

232 i‡(
¨gc
 != 2 &&árgc != 3)

233 
	`ußge
(
¨gv0
);

234 
ƒ
 = 
	`©oi
(
¨gv
[1]);

235 i‡(
¨gc
==3)

236 
x∑th
 = 
¨gv
[2];

238 
x∑th
 = "/";

239 
i
=0;i<
ƒ
;i++){

240 i‡(
	`xmldb_gë
(
h
, 
db
, 
x∑th
, 0, &
xt
) < 0)

241 
d⁄e
;

242 i‡(
xt
 =
NULL
){

243 
	`˛ic⁄_îr
(
OE_DB
, 0, "xt is NULL");

244 
d⁄e
;

246 
	`˛ic⁄_xml2fûe
(
°dout
, 
xt
, 0, 0);

247 
	`xml_‰ì
(
xt
);

248 
xt
 = 
NULL
;

250 
	`Ârötf
(
°dout
, "\n");

252 i‡(
	`°rcmp
(
cmd
, "put")==0){

253 i‡(
¨gc
 != 3){

254 
	`˛ic⁄_îr
(
OE_DB
, 0, "U√x≥˘edÇ∏o‡¨gs: %d", 
¨gc
);

255 
	`ußge
(
¨gv0
);

257 i‡(
	`xml_›î©i⁄
(
¨gv
[1], &
›
) < 0){

258 
	`˛ic⁄_îr
(
OE_DB
, 0, "Uƒecognized o≥øti⁄: %s", 
¨gv
[1]);

259 
	`ußge
(
¨gv0
);

261 i‡(
	`xml_∑r£_°rög
(
¨gv
[2], 
NULL
, &
xt
) < 0)

262 
d⁄e
;

263 i‡(
	`xml_roŸchûd
(
xt
, 0, &xt) < 0)

264 
d⁄e
;

265 i‡((
cbªt
 = 
	`cbuf_√w
()Ë=
NULL
)

266 
d⁄e
;

267 i‡(
	`xmldb_put
(
h
, 
db
, 
›
, 
xt
, 
cbªt
) < 0)

268 
d⁄e
;

270 i‡(
	`°rcmp
(
cmd
, "copy")==0){

271 i‡(
¨gc
 != 2)

272 
	`ußge
(
¨gv0
);

273 i‡(
	`xmldb_c›y
(
h
, 
db
, 
¨gv
[1]) < 0)

274 
d⁄e
;

276 i‡(
	`°rcmp
(
cmd
, "lock")==0){

277 i‡(
¨gc
 != 2)

278 
	`ußge
(
¨gv0
);

279 
pid
 = 
	`©oi
(
¨gv
[1]);

280 i‡(
	`xmldb_lock
(
h
, 
db
, 
pid
) < 0)

281 
d⁄e
;

283 i‡(
	`°rcmp
(
cmd
, "unlock")==0){

284 i‡(
¨gc
 != 1)

285 
	`ußge
(
¨gv0
);

286 i‡(
	`xmldb_u∆ock
(
h
, 
db
) < 0)

287 
d⁄e
;

289 i‡(
	`°rcmp
(
cmd
, "unlock_all")==0){

290 i‡(
¨gc
 != 2)

291 
	`ußge
(
¨gv0
);

292 
pid
 = 
	`©oi
(
¨gv
[1]);

293 i‡(
	`xmldb_u∆ock_Æl
(
h
, 
pid
) < 0)

294 
d⁄e
;

296 i‡(
	`°rcmp
(
cmd
, "islocked")==0){

297 i‡(
¨gc
 != 1)

298 
	`ußge
(
¨gv0
);

299 i‡((
ªt
 = 
	`xmldb_i¶ocked
(
h
, 
db
)) < 0)

300 
d⁄e
;

301 
	`Ârötf
(
°dout
, "i¶ocked: %d\n", 
ªt
);

303 i‡(
	`°rcmp
(
cmd
, "exists")==0){

304 i‡(
¨gc
 != 1)

305 
	`ußge
(
¨gv0
);

306 i‡((
ªt
 = 
	`xmldb_exi°s
(
h
, 
db
)) < 0)

307 
d⁄e
;

308 
	`Ârötf
(
°dout
, "exi°s: %d\n", 
ªt
);

310 i‡(
	`°rcmp
(
cmd
, "delete")==0){

311 i‡(
¨gc
 != 1)

312 
	`ußge
(
¨gv0
);

313 i‡(
	`xmldb_dñëe
(
h
, 
db
) < 0)

314 
d⁄e
;

316 i‡(
	`°rcmp
(
cmd
, "init")==0){

317 i‡(
¨gc
 != 1)

318 
	`ußge
(
¨gv0
);

319 i‡(
	`xmldb_¸óã
(
h
, 
db
) < 0)

320 
d⁄e
;

323 
	`˛ic⁄_îr
(
OE_DB
, 0, "Uƒecognized comm™d: %s", 
cmd
);

324 
	`ußge
(
¨gv0
);

326 i‡(
	`xmldb_disc⁄√˘
(
h
) < 0)

327 
d⁄e
;

328 i‡(
	`xmldb_∂ugö_u∆ﬂd
(
h
) < 0)

329 
d⁄e
;

330 
d⁄e
:

331 i‡(
cbªt
)

332 
	`cbuf_‰ì
(
cbªt
);

333 i‡(
xt
)

334 
	`xml_‰ì
(
xt
);

335 i‡(
h
)

336 
	`˛ic⁄_h™dÀ_exô
(
h
);

337 i‡(
y•ec
)

338 
	`y•ec_‰ì
(
y•ec
);

340 
	}
}

	@clixon-master/datastore/keyvalue/clixon_chunk.c

37 
	~<°dio.h
>

38 
	~<°döt.h
>

39 
	~<°dlib.h
>

40 
	~<°rög.h
>

41 
	~<uni°d.h
>

42 
	~<î∫o.h
>

43 
	~<°d¨g.h
>

44 
	~<sys/mm™.h
>

45 
	~<sys/∑øm.h
>

46 
	~<sys/ty≥s.h
>

49 
	~<˛igí/˛igí.h
>

52 
	~<˛ix⁄/˛ix⁄.h
>

54 
	~"˛ix⁄_chunk.h
"

59 
chunk_hód_t
 
	gchunk_hóds
[
CHUNK_HEADS
];

64 
	gchunk_öôülized
 = 0;

70 
	gchunk_∑gesz
;

76 
chunk_group_t
 *
	gchunk_gΩ
;

81 
	gd⁄t_unchunk_group
;

88 
	$chunk_öôülize
 ()

90 
pgs
;

91 
idx
;

93 
chunk_∑gesz
 = 
	`gë∑gesize
();

95 
	`bzîo
 (&
chunk_hóds
,  (chunk_heads));

97 
idx
 = 0; idx < 
CHUNK_HEADS
; idx++) {

98 
chunk_hód_t
 *
chód
 = &
chunk_hóds
[
idx
];

104 
pgs
 = (0x01lu << (
CHUNK_BASE
 + 
idx
)Ë/ 
chunk_∑gesz
;

105 i‡(
pgs
 == 0)

106 
pgs
 = 1;

107 
chód
->
ch_blksz
 = 
pgs
 * 
chunk_∑gesz
;

115 
chód
->
ch_nchk≥rblk
 = chód->
ch_blksz
 / (0x01lu << (
CHUNK_BASE
 + 
idx
));

122 
chód
->
ch_size
 =

123 (
chód
->
ch_blksz
 / chód->
ch_nchk≥rblk
)

124 -  (
chunk_t
);

129 
chunk_gΩ
 = 
NULL
;

130 
d⁄t_unchunk_group
 = 0;

132 
chunk_öôülized
 = 1;

133 
	}
}

140 
	$chunk_√w_block
 (
chunk_hód_t
 *
chód
)

142 
idx
;

143 *
c
;

144 
chunk_block_t
 *
blk
;

145 
chunk_t
 *
˙k
;

148 
blk
 = (
chunk_block_t
 *)

149 
	`mm≠
(
NULL
, (
chunk_block_t
),

150 
PROT_READ
 | 
PROT_WRITE
, 
MAP_PRIVATE
 | 
MAP_ANON
, -1, 0);

151 i‡(
blk
 =
MAP_FAILED
)

153 
	`mem£t
 ((*)
blk
, 0, (*blk));

156 
blk
->
cb_blk
 = (*)

157 
	`mm≠
(
NULL
, 
chód
->
ch_blksz
,

158 
PROT_READ
 | 
PROT_WRITE
, 
MAP_PRIVATE
 | 
MAP_ANON
, -1, 0);

159 i‡(
blk
->
cb_blk
 =
MAP_FAILED
) {

160 
	`munm≠
 (
blk
, 
chód
->
ch_blksz
);

163 
	`mem£t
 (
blk
->
cb_blk
, 0, 
chód
->
ch_blksz
);

167 
blk
->
cb_hód
 = 
chód
;

168 
	`INSQ
 (
blk
, 
chód
->
ch_blks
);

169 
chód
->
ch_nblks
++;

172 
c
 = ((*)
blk
->
cb_blk
);

173 
idx
 = 0; idx < 
chód
->
ch_nchk≥rblk
; idx++) {

175 
˙k
 = (
chunk_t
 *)
c
;

176 
˙k
->
c_blk
 = 
blk
;

177 
	`INSQ
 (
˙k
, 
chód
->
ch_‰ì
);

178 
chód
->
ch_n‰ì
++;

180 
c
 +(
chód
->
ch_size
 +  (
chunk_t
));

185 
	}
}

191 
	$chunk_ªÀa£_block
 (
chunk_block_t
 *
cblk
)

193 
idx
;

194 *
c
;

195 
chunk_t
 *
˙k
;

196 
chunk_hód_t
 *
chód
;

199 
chód
 = 
cblk
->
cb_hód
;

204 
	`DELQ
 (
cblk
, 
chód
->
ch_blks
, 
chunk_block_t
 *);

205 
chód
->
ch_nblks
--;

210 
c
 = (*)
cblk
->
cb_blk
;

211 
idx
 = 0; idx < 
chód
->
ch_nchk≥rblk
; idx++) {

213 
˙k
 = (
chunk_t
 *)
c
;

214 
	`DELQ
 (
˙k
, 
chód
->
ch_‰ì
, 
chunk_t
 *);

215 
chód
->
ch_n‰ì
--;

217 
c
 +(
chód
->
ch_size
 +  (
chunk_t
));

223 
	`munm≠
 ((*)
cblk
->
cb_blk
, 
chód
->
ch_blksz
);

224 
	`munm≠
 ((*)
cblk
, (*cblk));

225 
	}
}

233 
	$chunk_Æloc
 (
size_t
 
Àn
)

235 
idx
;

236 
chunk_hód_t
 *
chód
;

237 
chunk_t
 *
˙k
;

240 i‡(!
Àn
)

241  (*)
NULL
;

246 
idx
 = 0; idx < 
CHUNK_HEADS
; idx++)

247 i‡(
chunk_hóds
[
idx
].
ch_size
 >
Àn
)

251 i‡(
idx
 >
CHUNK_HEADS
) {

252 
î∫o
 = 
ENOMEM
;

253  (*)
NULL
;

256 
chód
 = &
chunk_hóds
[
idx
];

260 i‡(!
chód
->
ch_n‰ì
)

261 i‡(
	`chunk_√w_block
 (
chód
))

262  (*)
NULL
;

266 
˙k
 = 
chód
->
ch_‰ì
;

267 
	`DELQ
 (
˙k
, 
chód
->
ch_‰ì
, 
chunk_t
 *);

268 
chód
->
ch_n‰ì
--;

269 
	`INSQ
 (
˙k
, 
chód
->
ch_˙ks
);

271 
˙k
->
c_blk
->
cb_ªf
++;

273 #ifde‡
CHUNK_DIAG


275 
	`bzîo
 ((*)&
˙k
->
c_düg
,  (cnk->c_diag));

279  (*Ë(
˙k
 + 1);

280 
	}
}

287 #ifde‡
CHUNK_DIAG


288 
	$_chunk
 (
size_t
 
Àn
, c⁄° *
«me
, c⁄° *
fûe
, 
löe
)

290 
	$chunk
 (
size_t
 
Àn
, c⁄° *
«me
)

293 
√wgΩ
 = 0;

294 *
±r
 = 
NULL
;

295 
chunk_t
 *
˙k
;

296 
chunk_group_t
 *
tmp
;

297 
chunk_group_t
 *
gΩ
 = 
NULL
;

298 
chunk_gΩít_t
 *
ít
 = 
NULL
;

301 i‡(!
chunk_öôülized
)

302 
	`chunk_öôülize
();

304 i‡(!
Àn
)

305  (*)
NULL
;

309 
±r
 = 
	`chunk_Æloc
 (
Àn
);

310 i‡(!
±r
)

311 
îr‹
;

312 
˙k
 = (
chunk_t
 *Ë(((*)
±r
) -  (chunk_t));

314 #ifde‡
CHUNK_DIAG


317 
˙k
->
c_düg
.
cd_fûe
 = 
fûe
;

318 
˙k
->
c_düg
.
cd_löe
 = 
löe
;

323 i‡(!
«me
)

324  
±r
;

329 i‡(
chunk_gΩ
) {

330 
tmp
 = 
chunk_gΩ
;

332 i‡(!
	`°rcmp
 (
tmp
->
cg_«me
, 
«me
)) {

333 
gΩ
 = 
tmp
;

337 
tmp
 = 
	`NEXTQ
(
chunk_group_t
 *,Åmp);

339 } 
tmp
 !
chunk_gΩ
);

344 i‡–!
gΩ
 ) {

346 
gΩ
 = (
chunk_group_t
 *Ë
	`chunk_Æloc
 ( (chunk_group_t));

347 i‡(!
gΩ
)

348 
îr‹
;

350 
	`bzîo
 (
gΩ
,  (
chunk_group_t
));

352 
gΩ
->
cg_«me
 = (*Ë
	`chunk_Æloc
 (
	`°æí
 (
«me
) + 1);

353 i‡(!
gΩ
->
cg_«me
)

354 
îr‹
;

355 
	`bc›y
 (
«me
, 
gΩ
->
cg_«me
, 
	`°æí
(name)+1);

356 
√wgΩ
 = 1;

362 
ít
 = (
chunk_gΩít_t
 *Ë
	`chunk_Æloc
 ( (chunk_grpent_t));

363 i‡(!
ít
)

364 
îr‹
;

365 
	`bzîo
 (
ít
,  (
chunk_gΩít_t
));

369 
˙k
->
c_gΩít
 = 
ít
;

371 
ít
->
˚_˙k
 = 
˙k
;

372 
ít
->
˚_gΩ
 = 
gΩ
;

374 
	`INSQ
 (
ít
, 
gΩ
->
cg_ít
);

375 i‡(
√wgΩ
)

376 
	`INSQ
 (
gΩ
, 
chunk_gΩ
);

378  (
±r
);

380 
îr‹
:

381 i‡(
gΩ
 && 
√wgΩ
) {

382 i‡(
gΩ
->
cg_«me
)

383 
	`unchunk
 (
gΩ
->
cg_«me
);

384 
	`unchunk
 (
gΩ
);

386 i‡(
ít
)

387 
	`unchunk
 (
ít
);

388 i‡(
±r
)

389 
	`unchunk
 (
±r
);

391  (*Ë
NULL
;

392 
	}
}

399 #ifde‡
CHUNK_DIAG


400 
	$_ªchunk
 (*
±r
, 
size_t
 
Àn
, c⁄° *
«me
, c⁄° *
fûe
, 
löe
)

402 
	$ªchunk
 (*
±r
, 
size_t
 
Àn
, c⁄° *
«me
)

405 
idx
;

406 *
√w
;

407 
chunk_t
 *
˙k
;

408 
chunk_t
 *
√w˙k
;

409 
chunk_hód_t
 *
chód
;

410 
chunk_hód_t
 *
√wchód
;

415 i‡(!
±r
) {

416 #ifde‡
CHUNK_DIAG


417  
	`_chunk
 (
Àn
, 
«me
, 
fûe
, 
löe
);

419  
	`chunk
 (
Àn
, 
«me
);

425 i‡(
Àn
 == 0) {

426 
	`unchunk
 (
±r
);

427  (*Ë
NULL
;

432 
˙k
 = (
chunk_t
 *Ë(((*)
±r
) -  (chunk_t));

433 
chód
 = 
˙k
->
c_blk
->
cb_hód
;

437 
idx
 = 0; idx < 
CHUNK_HEADS
; idx++)

438 i‡(
chunk_hóds
[
idx
].
ch_size
 >
Àn
)

441 i‡(
idx
 >
CHUNK_HEADS
) {

442 
î∫o
 = 
ENOMEM
;

443  (*)
NULL
;

448 i‡(
chunk_hóds
[
idx
].
ch_size
 =
chód
->ch_size)

449  (
±r
);

453 #ifde‡
CHUNK_DIAG


454 
√w
 = 
	`_chunk
 (
Àn
, 
«me
, 
fûe
, 
löe
);

456 
√w
 = 
	`chunk
 (
Àn
, 
«me
);

458 i‡(!
√w
)

459  (*Ë
NULL
;

460 
√w˙k
 = (
chunk_t
 *Ë(((*)
√w
) -  (chunk_t));

461 
√wchód
 = 
√w˙k
->
c_blk
->
cb_hód
;

465 
	`bc›y
 (
±r
, 
√w
, 
	`MIN
(
√wchód
->
ch_size
, 
chód
->ch_size));

469 
	`unchunk
 (
±r
);

472  (
√w
);

473 
	}
}

479 
	$unchunk
 (*
±r
)

481 
chunk_t
 *
˙k
;

482 
chunk_hód_t
 *
chód
;

483 
chunk_block_t
 *
cblk
;

484 
chunk_gΩít_t
 *
ít
;

485 
chunk_group_t
 *
gΩ
;

487 i‡(!
chunk_öôülized
)

492 
˙k
 = (
chunk_t
 *Ë(((*)
±r
) -  (chunk_t));

493 
cblk
 = 
˙k
->
c_blk
;

494 
chód
 = 
cblk
->
cb_hód
;

498 
	`DELQ
 (
˙k
, 
chód
->
ch_˙ks
, 
chunk_t
 *);

499 
	`INSQ
 (
˙k
, 
chód
->
ch_‰ì
);

500 
chód
->
ch_n‰ì
++;

504 
ít
 = 
˙k
->
c_gΩít
;

505 i‡(
ít
) {

506 
gΩ
 = 
ít
->
˚_gΩ
;

507 
	`DELQ
 (
ít
, 
gΩ
->
cg_ít
, 
chunk_gΩít_t
 *);

508 
	`unchunk
 (
ít
);

509 
˙k
->
c_gΩít
 = 
NULL
;

512 i‡(!
d⁄t_unchunk_group
 && !
gΩ
->
cg_ít
) {

513 
	`DELQ
 (
gΩ
, 
chunk_gΩ
, 
chunk_group_t
 *);

514 
	`unchunk
(
gΩ
->
cg_«me
);

515 
	`unchunk
(
gΩ
);

521 
cblk
->
cb_ªf
--;

522 i‡(
cblk
->
cb_ªf
 == 0)

523 
	`chunk_ªÀa£_block
 (
cblk
);

524 
	}
}

531 
	$unchunk_group
 (c⁄° *
«me
)

533 
chunk_group_t
 *
tmp
;

534 
chunk_group_t
 *
gΩ
 = 
NULL
;

535 
chunk_t
 *
˙k
;

537 i‡(!
chunk_öôülized
)

542 i‡(
chunk_gΩ
) {

543 
tmp
 = 
chunk_gΩ
;

545 i‡(!
	`°rcmp
 (
tmp
->
cg_«me
, 
«me
)) {

546 
gΩ
 = 
tmp
;

550 
tmp
 = 
	`NEXTQ
(
chunk_group_t
 *,Åmp);

552 } 
tmp
 !
chunk_gΩ
);

554 i‡(!
gΩ
)

560 
d⁄t_unchunk_group
 = 1;

561 
gΩ
->
cg_ít
) {

562 
˙k
 = 
gΩ
->
cg_ít
->
˚_˙k
;

563 
	`unchunk
 ((
chunk_t
 *)(((*)
˙k
) +  (chunk_t)));

565 
d⁄t_unchunk_group
 = 0;

570 
	`DELQ
 (
gΩ
, 
chunk_gΩ
, 
chunk_group_t
 *);

571 
	`unchunk
 (
gΩ
->
cg_«me
);

572 
	`unchunk
 (
gΩ
);

573 
	}
}

579 #ifde‡
CHUNK_DIAG


580 
	$_chunkdup
 (c⁄° *
±r
, 
size_t
 
Àn
, c⁄° *
«me
, c⁄° *
fûe
, 
löe
)

582 
	$chunkdup
 (c⁄° *
±r
, 
size_t
 
Àn
, c⁄° *
«me
)

585 *
√w
;

589 i‡(!
±r
 || 
Àn
 <= 0)

590  (*)
NULL
;

594 #ifde‡
CHUNK_DIAG


595 
√w
 = 
	`_chunk
 (
Àn
, 
«me
, 
fûe
, 
löe
);

597 
√w
 = 
	`chunk
 (
Àn
, 
«me
);

599 i‡(!
√w
)

600  (*)
NULL
;

604 
	`mem˝y
(
√w
, 
±r
, 
Àn
);

606  (
√w
);

607 
	}
}

612 
size_t


613 
	$chunksize
 (*
±r
)

615 
chunk_t
 *
˙k
;

616 
chunk_hód_t
 *
chód
;

617 
chunk_block_t
 *
cblk
;

619 i‡(!
chunk_öôülized
)

624 
˙k
 = (
chunk_t
 *Ë(((*)
±r
) -  (chunk_t));

625 
cblk
 = 
˙k
->
c_blk
;

626 
chód
 = 
cblk
->
cb_hód
;

628  
chód
->
ch_size
;

629 
	}
}

637 #ifde‡
CHUNK_DIAG


638 
	$_chunk_°∫ˇt
 (c⁄° *
d°
, c⁄° *
§c
, 
size_t
 
n
, c⁄° *
«me
,

639 c⁄° *
fûe
, 
löe
)

641 
	$chunk_°∫ˇt
 (c⁄° *
d°
, c⁄° *
§c
, 
size_t
 
n
, c⁄° *
«me
)

644 
size_t
 
Àn
;

645 *
√w
;

646 *
±r
 = (*)
d°
;

648 i‡(
n
 == 0)

649 
n
 = 
	`°æí
(
§c
);

650 
Àn
 = (
d°
 ? 
	`°æí
(d°Ë: 0Ë+ 
n
 + 1;

651 #ifde‡
CHUNK_DIAG


652 
±r
 = 
	`_ªchunk
’å, 
Àn
, 
«me
, 
fûe
, 
löe
);

654 
±r
 = 
	`ªchunk
 (±r, 
Àn
, 
«me
);

656 i‡(
±r
 =
NULL
)

657  
NULL
;

659 
√w
 = (*)
±r
;

660 
√w
 +
	`°æí
(new);

661 
n
-- > 0 && *
§c
)

662 *
√w
++ = *
§c
++;

663 *
√w
 = '\0';

665  (*)
±r
;

666 
	}
}

672 #ifde‡
CHUNK_DIAG


673 
	$_chunk_•rötf
 (c⁄° *
«me
, c⁄° *
fûe
,

674 
löe
, c⁄° *
fmt
, ...)

676 
	$chunk_•rötf
 (c⁄° *
«me
, *
fmt
, ...)

679 
size_t
 
Àn
;

680 *
°r
;

681 
va_li°
 
¨gs
;

684 
	`va_°¨t
(
¨gs
, 
fmt
);

685 
Àn
 = 
	`v¢¥ötf
(
NULL
, 0, 
fmt
, 
¨gs
) + 1;

686 
	`va_íd
 (
¨gs
);

689 #ifde‡
CHUNK_DIAG


690 
°r
 = 
	`_chunk
 (
Àn
, 
«me
, 
fûe
, 
löe
);

692 
°r
 = 
	`chunk
 (
Àn
, 
«me
);

694 i‡(
°r
 =
NULL
)

695  
NULL
;

698 
	`va_°¨t
(
¨gs
, 
fmt
);

699 
Àn
 = 
	`v¢¥ötf
(
°r
,Üí, 
fmt
, 
¨gs
);

700 
	`va_íd
 (
¨gs
);

702  
°r
;

703 
	}
}

705 #ifde‡
CHUNK_DIAG


710 
	$chunk_check
(
FILE
 *
fout
, c⁄° *
«me
)

712 
idx
;

713 
chunk_t
 *
˙k
;

714 
chunk_group_t
 *
tmp
;

715 
chunk_group_t
 *
gΩ
 = 
NULL
;

716 
chunk_gΩít_t
 *
ít
;

718 i‡(!
chunk_öôülized
)

722 i‡(
«me
 =(c⁄° *)
NULL
) {

723 
idx
 = 0; idx < 
CHUNK_HEADS
; idx++) {

724 
chunk_hód_t
 *
chód
 = &
chunk_hóds
[
idx
];

725 
˙k
 = 
chód
->
ch_˙ks
;

726 i‡(
˙k
 =(
chunk_t
 *)
NULL
)

732 i‡(
˙k
->
c_düg
.
cd_fûe
)

733 
	`˛ic⁄_debug
(0,

735 
˙k
->
c_düg
.
cd_fûe
,

736 
˙k
->
c_düg
.
cd_löe
,

737 
˙k
->
c_blk
->
cb_hód
->
ch_size
,

738 (
˙k
 +1),

739 
˙k
->
c_gΩít
 ?

740 
˙k
->
c_gΩít
->
˚_gΩ
->
cg_«me
 :

743 
˙k
 = 
	`NEXTQ
(
chunk_t
 *, cnk);

745 } 
˙k
 !
chód
->
ch_˙ks
);

756 i‡(
chunk_gΩ
) {

757 
tmp
 = 
chunk_gΩ
;

759 i‡(!
	`°rcmp
 (
tmp
->
cg_«me
, 
«me
)) {

760 
gΩ
 = 
tmp
;

764 
tmp
 = 
	`NEXTQ
(
chunk_group_t
 *,Åmp);

766 } 
tmp
 !
chunk_gΩ
);

768 i‡(!
gΩ
)

771 
ít
 = 
gΩ
->
cg_ít
;

773 
˙k
 = 
ít
->
˚_˙k
;

775 
	`Ârötf
(
fout
 ? fouà: 
°dout
,

777 
˙k
->
c_düg
.
cd_fûe
,

778 
˙k
->
c_düg
.
cd_löe
,

779 
˙k
->
c_blk
->
cb_hód
->
ch_size
,

780 (
˙k
 +1),

781 
˙k
->
c_gΩít
 ?

782 
˙k
->
c_gΩít
->
˚_gΩ
->
cg_«me
 :

785 
ít
 = 
	`NEXTQ
(
chunk_gΩít_t
 *,Ént);

786 } 
ít
 !
gΩ
->
cg_ít
);

788 
	}
}

791 
	$chunk_check
(
FILE
 *
fout
, c⁄° *
«me
)

793 
	}
}

	@clixon-master/datastore/keyvalue/clixon_chunk.h

37 #i‚de‡
_CLIXON_CHUNK_H_


38 
	#_CLIXON_CHUNK_H_


	)

44 #unde‡
CHUNK_DIAG


49 
	#CHUNK_BASE
 6

	)

55 
	#CHUNK_HEADS
 (32 - 
CHUNK_BASE
)

	)

58 #ifde‡
CHUNK_DIAG


62 
	s_chunk_düg_t
 {

63 c⁄° *
	mcd_fûe
;

65 
	mcd_löe
;

67 } 
	tchunk_düg_t
;

73 
	g_chunk_hód_t
;

74 
_chunk_hód_t
 
	tchunk_hód_t
;

76 
	s_chunk_block_t
 {

77 
qñem_t
 
	mcb_qñem
;

79 
chunk_hód_t
 *
	mcb_hód
;

81 *
	mcb_blk
;

83 
uöt16_t
 
	mcb_ªf
;

85 } 
	tchunk_block_t
;

91 
	g_chunk_gΩít_t
;

92 
_chunk_gΩít_t
 
	tchunk_gΩít_t
;

93 
	s_chunk_t
 {

94 
qñem_t
 
	mc_qñem
;

96 
chunk_block_t
 *
	mc_blk
;

98 #ifde‡
CHUNK_DIAG


99 
chunk_düg_t
 
	mc_düg
;

102 
chunk_gΩít_t
 *
	mc_gΩít
;

103 } 
	tchunk_t
;

109 
	s_chunk_hód_t
 {

110 
size_t
 
	mch_size
;

111 
	mch_nchk≥rblk
;

113 
size_t
 
	mch_blksz
;

114 
	mch_nblks
;

116 
chunk_block_t
 *
	mch_blks
;

118 
chunk_t
 *
	mch_˙ks
;

120 
size_t
 
	mch_n‰ì
;

121 
chunk_t
 *
	mch_‰ì
;

129 
	s_chunk_group_t
 {

130 
qñem_t
 
	mcg_qñem
;

132 *
	mcg_«me
;

134 
chunk_gΩít_t
 *
	mcg_ít
;

136 } 
	tchunk_group_t
;

142 
	s_chunk_gΩít_t
 {

143 
qñem_t
 
	m˚_qñem
;

145 
chunk_group_t
 *
	m˚_gΩ
;

147 
chunk_t
 *
	m˚_˙k
;

153 #ifde‡
CHUNK_DIAG


154 *
_chunk
 (
size_t
, const *, const *, );

155 
	#chunk
(
siz
,
œbñ
Ë
	`_chunk
((siz),÷abñ),
__FILE__
,
__LINE__
)

	)

156 *
_ªchunk
 (*, 
size_t
, const *, const *, );

157 
	#ªchunk
(
±r
,
siz
,
œbñ
Ë
	`_ªchunk
(’å),(siz),÷abñ),
__FILE__
,
__LINE__
)

	)

158 *
_chunkdup
 (c⁄° *, 
size_t
, const *, const *, );

159 
	#chunkdup
(
±r
,
siz
,
œbñ
Ë
	`_chunkdup
(’å),(siz),÷abñ),
__FILE__
,
__LINE__
)

	)

160 *
_chunk_°∫ˇt
 (c⁄° *, c⁄° *, 
size_t
, const *, const *, );

161 
	#chunk_°∫ˇt
(
°r
,
√w
,
n
,
œbñ
Ë
	`_chunk_°∫ˇt
((°r),“ew),“),÷abñ),
__FILE__
,
__LINE__
)

	)

162 *
_chunk_•rötf
 (const *, const *, , const *, ...);

163 
	#chunk_•rötf
(
œbñ
,
fmt
,...Ë
	`_chunk_•rötf
(÷abñ),
__FILE__
,
__LINE__
,(fmt),
__VA_ARGS__
)

	)

165 *
chunk
 (
size_t
, const *);

166 *
ªchunk
 (*, 
size_t
, const *);

167 *
chunkdup
 (c⁄° *, 
size_t
, const *);

168 *
chunk_°∫ˇt
 (c⁄° *, c⁄° *, 
size_t
, const *);

169 *
chunk_•rötf
 (const *, *, ...);

171 
unchunk
 (*);

172 
unchunk_group
 (const *);

173 
chunk_check
 (
FILE
 *, const *);

174 
size_t
 
chunksize
 (*);

	@clixon-master/datastore/keyvalue/clixon_keyvalue.c

79 #ifde‡
HAVE_CONFIG_H


80 
	~"˛ix⁄_c⁄fig.h
"

83 
	~<°dio.h
>

84 
	~<°dlib.h
>

85 
	~<uni°d.h
>

86 
	~<î∫o.h
>

87 
	~<°rög.h
>

88 
	~<limôs.h
>

89 
	~<‚m©ch.h
>

90 
	~<°döt.h
>

91 
	~<sys/°©.h
>

92 
	~<uni°d.h
>

93 
	~<dúít.h
>

94 
	~<as£π.h
>

95 
	~<sy¶og.h
>

98 
	~<˛igí/˛igí.h
>

101 
	~<˛ix⁄/˛ix⁄.h
>

103 
	~"˛ix⁄_chunk.h
"

104 
	~"˛ix⁄_qdb.h
"

105 
	~"˛ix⁄_keyvÆue.h
"

107 
	#h™dÀ
(
xh
Ë(
	`as£π
(
	`kv_h™dÀ_check
(xh)==0),(
kv_h™dÀ
 *)(xh))

	)

110 
	#KV_HANDLE_MAGIC
 0xÁ61a402

	)

114 
	skv_h™dÀ
 {

115 
	mkh_magic
;

116 *
	mkh_dbdú
;

117 
y™g_•ec
 *
	mkh_y™g•ec
;

124 
	$kv_h™dÀ_check
(
xmldb_h™dÀ
 
xh
)

127 
kv_h™dÀ
 *
kh
 = (kv_h™dÀ *)(
xh
);

129  
kh
->
kh_magic
 =
KV_HANDLE_MAGIC
 ? 0 : -1;

130 
	}
}

136 
	g_ru¬ög_locked
 = 0;

137 
	g_ˇndid©e_locked
 = 0;

138 
	g_°¨tup_locked
 = 0;

152 
	$kv_db2fûe
(
kv_h™dÀ
 *
kh
,

153 c⁄° *
db
,

154 **
fûíame
)

156 
ªtvÆ
 = -1;

157 
cbuf
 *
cb
;

158 *
dú
;

160 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
){

161 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cbuf_new");

162 
d⁄e
;

164 i‡((
dú
 = 
kh
->
kh_dbdú
Ë=
NULL
){

165 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "dbdirÇot set");

166 
d⁄e
;

168 i‡(
	`°rcmp
(
db
, "running") != 0 &&

169 
	`°rcmp
(
db
, "candidate") != 0 &&

170 
	`°rcmp
(
db
, "startup") != 0 &&

171 
	`°rcmp
(
db
, "tmp") != 0){

172 
	`˛ic⁄_îr
(
OE_XML
, 0, "Nÿsuch d©aba£: %s", 
db
);

173 
d⁄e
;

175 
	`˝rötf
(
cb
, "%s/%s_db", 
dú
, 
db
);

176 i‡((*
fûíame
 = 
	`°rdup4
(
	`cbuf_gë
(
cb
))Ë=
NULL
){

177 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "strdup");

178 
d⁄e
;

180 
ªtvÆ
 = 0;

181 
d⁄e
:

182 i‡(
cb
)

183 
	`cbuf_‰ì
(
cb
);

184  
ªtvÆ
;

185 
	}
}

191 
	$≠≥nd_li°keys
(
cbuf
 *
ckey
,

192 
cxobj
 *
xt
,

193 
y™g_°mt
 *
ys
)

195 
ªtvÆ
 = -1;

196 
y™g_°mt
 *
ykey
;

197 
cxobj
 *
xkey
;

198 
cg_v¨
 *
cvi
;

199 
cvec
 *
cvk
 = 
NULL
;

200 *
key«me
;

201 *
bodyíc
;

202 
i
=0;

204 
cvk
 = 
ys
->
ys_cvec
;

205 
cvi
 = 
NULL
;

207 (
cvi
 = 
	`cvec_óch
(
cvk
, cvi)Ë!
NULL
) {

208 
key«me
 = 
	`cv_°rög_gë
(
cvi
);

209 i‡((
xkey
 = 
	`xml_föd
(
xt
, 
key«me
)Ë=
NULL
){

210 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "XMLÜistÇode \"%s\" doesÇot have key \"%s\" child",

211 
	`xml_«me
(
xt
), 
key«me
);

212 
d⁄e
;

214 i‡(
	`uri_≥r˚¡_ícode
(
	`xml_body
(
xkey
), &
bodyíc
) < 0)

215 
d⁄e
;

216 i‡(
i
++)

217 
	`˝rötf
(
ckey
, ",");

219 
	`˝rötf
(
ckey
, "=");

220 
	`˝rötf
(
ckey
, "%s", 
bodyíc
);

221 
	`‰ì
(
bodyíc
);

222 
bodyíc
 = 
NULL
;

224 
ªtvÆ
 = 0;

225 
d⁄e
:

226  
ªtvÆ
;

227 
	}
}

236 
	$¸óã_keyvÆues
(
cxobj
 *
x
,

237 
y™g_°mt
 *
ykey
,

238 *
¨g
,

239 *
key«me
)

241 
ªtvÆ
 = -1;

242 
cxobj
 *
xn
;

243 
cxobj
 *
xb
;

246 i‡((
xn
 = 
	`xml_√w_•ec
(
key«me
, 
x
, 
ykey
)Ë=
NULL
)

247 
d⁄e
;

248 i‡((
xb
 = 
	`xml_√w
("body", 
xn
)Ë=
NULL
)

249 
d⁄e
;

250 
	`xml_ty≥_£t
(
xb
, 
CX_BODY
);

251 
	`xml_vÆue_£t
(
xb
, 
¨g
);

252 
ªtvÆ
 = 0;

253 
d⁄e
:

254  
ªtvÆ
;

255 
	}
}

264 
	$gë
(*
db«me
,

265 
y™g_•ec
 *
ys
,

266 *
xk
,

267 *
vÆ
,

268 
cxobj
 *
xt
)

270 
ªtvÆ
 = -1;

271 **
vec
 = 
NULL
;

272 
nvec
;

273 **
vÆvec
 = 
NULL
;

274 
nvÆvec
;

275 
i
;

276 
j
;

277 *
«me
;

278 *
ª°vÆ
;

279 
y™g_°mt
 *
y
;

280 
cxobj
 *
x
;

281 
cxobj
 *
xc
;

282 
cxobj
 *
xb
;

283 
y™g_°mt
 *
ykey
;

284 
cg_v¨
 *
cvi
;

285 
cvec
 *
cvk
 = 
NULL
;

286 *
key«me
;

287 *
¨g
;

288 *
¨gdec
;

289 
cbuf
 *
cb
;

292 
x
 = 
xt
;

293 i‡(
xk
 =
NULL
 || *xk!='/'){

294 
	`˛ic⁄_îr
(
OE_DB
, 0, "InvÆid key: %s", 
xk
);

295 
d⁄e
;

297 i‡((
vec
 = 
	`˛ic⁄_°r£p
(
xk
, "/", &
nvec
)Ë=
NULL
)

298 
d⁄e
;

303 i‡(
nvec
 < 2){

304 
	`˛ic⁄_îr
(
OE_XML
, 0, "MÆf‹med key: %s", 
xk
);

305 
d⁄e
;

307 
i
 = 1;

308 
i
<
nvec
){

309 
«me
 = 
vec
[
i
];

310 i‡((
ª°vÆ
 = 
	`ödex
(
«me
, '=')Ë!
NULL
){

311 *
ª°vÆ
 = '\0';

312 
ª°vÆ
++;

314 i‡(
i
 == 1){

315 i‡((
y
 = 
	`y™g_föd_t›node
(
ys
, 
«me
, 
YC_DATANODE
)Ë=
NULL
){

316 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "Nÿy™gÇodêfound: %s", 
«me
);

317 
d⁄e
;

321 i‡((
y
 = 
	`y™g_föd_d©™ode
((
y™g_node
*)y, 
«me
)Ë=
NULL
){

322 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "Nÿy™gÇodêfound: %s", 
«me
);

323 
d⁄e
;

325 
y
->
ys_keyw‹d
){

326 
Y_LEAF_LIST
:

331 i‡(
	`uri_≥r˚¡_decode
(
ª°vÆ
, &
¨gdec
) < 0)

332 
d⁄e
;

333 i‡((
xc
 = 
	`xml_föd
(
x
, 
«me
))==
NULL
 ||

334 (
xb
 = 
	`xml_föd
(
xc
, 
¨gdec
))==
NULL
){

335 i‡((
xc
 = 
	`xml_√w_•ec
(
«me
, 
x
, 
y
)Ë=
NULL
)

336 
d⁄e
;

339 
	`‰ì
(
¨gdec
);

340 
¨gdec
 = 
NULL
;

342 
Y_LIST
:

348 i‡((
ykey
 = 
	`y™g_föd
((
y™g_node
*)
y
, 
Y_KEY
, 
NULL
)) == NULL){

349 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "%s: List statement \"%s\" hasÇo key",

350 
__FUNCTION__
, 
y
->
ys_¨gumít
);

351 
d⁄e
;

354 i‡((
cvk
 = 
	`y™g_¨g2cvec
(
ykey
, " ")Ë=
NULL
)

355 
d⁄e
;

356 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
){

357 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cbuf_new");

358 
d⁄e
;

360 
cvi
 = 
NULL
;

362 
	`˝rötf
(
cb
, "%s", 
«me
);

363 i‡(
vÆvec
)

364 
	`‰ì
(
vÆvec
);

365 i‡((
vÆvec
 = 
	`˛ic⁄_°r£p
(
ª°vÆ
, ",", &
nvÆvec
)Ë=
NULL
)

366 
d⁄e
;

367 i‡(
	`cvec_Àn
(
cvk
)!=
nvÆvec
){

368 
ªtvÆ
 = 0;

369 
d⁄e
;

371 
j
 = 0;

372 (
cvi
 = 
	`cvec_óch
(
cvk
, cvi)Ë!
NULL
){

373 i‡(
j
>=
nvÆvec
)

375 
¨g
 = 
vÆvec
[
j
++];

376 i‡(
	`uri_≥r˚¡_decode
(
¨g
, &
¨gdec
) < 0)

377 
d⁄e
;

378 
	`˝rötf
(
cb
, "[%s=%s]", 
	`cv_°rög_gë
(
cvi
), 
¨gdec
);

379 
	`‰ì
(
¨gdec
);

380 
¨gdec
=
NULL
;

382 i‡((
xc
 = 
	`x∑th_fú°
(
x
, 
	`cbuf_gë
(
cb
))Ë=
NULL
){

383 i‡((
xc
 = 
	`xml_√w_•ec
(
«me
, 
x
, 
y
)Ë=
NULL
)

384 
d⁄e
;

385 
cvi
 = 
NULL
;

388 
j
=0;

389 (
cvi
 = 
	`cvec_óch
(
cvk
, cvi)Ë!
NULL
) {

390 i‡(
j
>=
nvÆvec
)

392 
¨g
 = 
vÆvec
[
j
++];

393 
key«me
 = 
	`cv_°rög_gë
(
cvi
);

394 i‡(
	`uri_≥r˚¡_decode
(
¨g
, &
¨gdec
) < 0)

395 
d⁄e
;

396 i‡(
	`¸óã_keyvÆues
(
xc
,

397 
ykey
,

398 
¨gdec
,

399 
key«me
) < 0)

400 
d⁄e
;

401 
	`‰ì
(
¨gdec
);

402 
¨gdec
 = 
NULL
;

405 i‡(
cb
){

406 
	`cbuf_‰ì
(
cb
);

407 
cb
 = 
NULL
;

409 i‡(
cvk
){

410 
	`cvec_‰ì
(
cvk
);

411 
cvk
 = 
NULL
;

414 
Y_LEAF
:

415 
Y_CONTAINER
:

417 i‡((
xc
 = 
	`xml_föd
(
x
, 
«me
))==
NULL
)

418 i‡((
xc
 = 
	`xml_√w_•ec
(
«me
, 
x
, 
y
)Ë=
NULL
)

419 
d⁄e
;

422 
x
 = 
xc
;

423 
i
++;

425 i‡(
vÆ
 && 
	`xml_body
(
x
)==
NULL
){

426 i‡((
x
 = 
	`xml_√w
("body", x)Ë=
NULL
)

427 
d⁄e
;

428 
	`xml_ty≥_£t
(
x
, 
CX_BODY
);

429 
	`xml_vÆue_£t
(
x
, 
vÆ
);

431 if(
debug
>1){

432 
	`Ârötf
(
°dîr
, "%†%s\n", 
__FUNCTION__
, 
xk
);

433 
	`˛ic⁄_xml2fûe
(
°dîr
, 
xt
, 0, 1);

435 
ªtvÆ
 = 0;

436 
d⁄e
:

437 i‡(
vec
)

438 
	`‰ì
(
vec
);

439 i‡(
vÆvec
)

440 
	`‰ì
(
vÆvec
);

441 i‡(
cvk
)

442 
	`cvec_‰ì
(
cvk
);

443  
ªtvÆ
;

444 
	}
}

452 
xmldb_h™dÀ


453 
	$kv_c⁄√˘
()

455 
kv_h™dÀ
 *
kh
;

456 
xmldb_h™dÀ
 
xh
 = 
NULL
;

457 
size
;

459 
size
 = (
kv_h™dÀ
);

460 i‡((
kh
 = 
	`mÆloc
(
size
)Ë=
NULL
){

461 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "malloc");

462 
d⁄e
;

464 
	`mem£t
(
kh
, 0, 
size
);

465 
kh
->
kh_magic
 = 
KV_HANDLE_MAGIC
;

466 
xh
 = (
xmldb_h™dÀ
)
kh
;

467 
d⁄e
:

468  
xh
;

469 
	}
}

476 
	$kv_disc⁄√˘
(
xmldb_h™dÀ
 
xh
)

478 
ªtvÆ
 = -1;

479 
kv_h™dÀ
 *
kh
 = 
	`h™dÀ
(
xh
);

481 i‡(
kh
){

482 i‡(
kh
->
kh_dbdú
)

483 
	`‰ì
(
kh
->
kh_dbdú
);

484 
	`‰ì
(
kh
);

486 
ªtvÆ
 = 0;

488  
ªtvÆ
;

489 
	}
}

499 
	$kv_gë›t
(
xmldb_h™dÀ
 
xh
,

500 *
›äame
,

501 **
vÆue
)

503 
ªtvÆ
 = -1;

504 
kv_h™dÀ
 *
kh
 = 
	`h™dÀ
(
xh
);

506 i‡(
	`°rcmp
(
›äame
, "yangspec") == 0)

507 *
vÆue
 = 
kh
->
kh_y™g•ec
;

508 i‡(
	`°rcmp
(
›äame
, "dbdir") == 0)

509 *
vÆue
 = 
kh
->
kh_dbdú
;

511 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "O±i⁄ %†nŸ im∂emíãd byÖlugö", 
›äame
);

512 
d⁄e
;

514 
ªtvÆ
 = 0;

515 
d⁄e
:

516  
ªtvÆ
;

517 
	}
}

527 
	$kv_£t›t
(
xmldb_h™dÀ
 
xh
,

528 *
›äame
,

529 *
vÆue
)

531 
ªtvÆ
 = -1;

532 
kv_h™dÀ
 *
kh
 = 
	`h™dÀ
(
xh
);

534 i‡(
	`°rcmp
(
›äame
, "yangspec") == 0)

535 
kh
->
kh_y™g•ec
 = (
y™g_•ec
*)
vÆue
;

536 i‡(
	`°rcmp
(
›äame
, "dbdir") == 0){

537 i‡(
vÆue
 && (
kh
->
kh_dbdú
 = 
	`°rdup
((*)vÆue)Ë=
NULL
){

538 
	`˛ic⁄_îr
(
OE_UNIX
, 0, "strdup");

539 
d⁄e
;

543 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "O±i⁄ %†nŸ im∂emíãd byÖlugö", 
›äame
);

544 
d⁄e
;

546 
ªtvÆ
 = 0;

547 
d⁄e
:

548  
ªtvÆ
;

549 
	}
}

558 
	$kv_gë
(
xmldb_h™dÀ
 
xh
,

559 c⁄° *
db
,

560 *
x∑th
,

561 
c⁄fig
,

562 
cxobj
 **
xt›
)

564 
ªtvÆ
 = -1;

565 
kv_h™dÀ
 *
kh
 = 
	`h™dÀ
(
xh
);

566 
y™g_•ec
 *
y•ec
;

567 *
dbfûe
 = 
NULL
;

568 
cxobj
 **
xvec
 = 
NULL
;

569 
size_t
 
xÀn
;

570 
i
;

571 
≈aús
;

572 
db_∑ú
 *
∑ús
;

573 
cxobj
 *
xt
 = 
NULL
;

575 
	`˛ic⁄_debug
(2, "%s", 
__FUNCTION__
);

576 i‡(
	`kv_db2fûe
(
kh
, 
db
, &
dbfûe
) < 0)

577 
d⁄e
;

578 i‡(
dbfûe
==
NULL
){

579 
	`˛ic⁄_îr
(
OE_XML
, 0, "dbfile NULL");

580 
d⁄e
;

582 i‡((
y•ec
 = 
kh
->
kh_y™g•ec
Ë=
NULL
){

583 
	`˛ic⁄_îr
(
OE_YANG
, 
ENOENT
, "No yang spec");

584 
d⁄e
;

587 i‡((
≈aús
 = 
	`db_ªgexp
(
dbfûe
, "", 
__FUNCTION__
, &
∑ús
, 0)) < 0)

588 
d⁄e
;

589 i‡((
xt
 = 
	`xml_√w_•ec
("c⁄fig", 
NULL
, 
y•ec
)) == NULL)

590 
d⁄e
;

592 
i
 = 0; i < 
≈aús
; i++) {

593 i‡(
	`gë
(
dbfûe
,

594 
y•ec
,

595 
∑ús
[
i
].
dp_key
,

596 
∑ús
[
i
].
dp_vÆ
,

597 
xt
) < 0)

598 
d⁄e
;

600 i‡(
	`x∑th_vec
(
xt
, 
x∑th
?x∑th:"/", &
xvec
, &
xÀn
) < 0)

601 
d⁄e
;

605 i‡(
xvec
 !
NULL
){

606 
i
=0; i<
xÀn
; i++)

607 
	`xml_Êag_£t
(
xvec
[
i
], 
XML_FLAG_MARK
);

610 i‡(!
	`xml_Êag
(
xt
, 
XML_FLAG_MARK
))

611 i‡(
	`xml_åì_¥u√_Êagged_sub
(
xt
, 
XML_FLAG_MARK
, 1, 
NULL
) < 0)

612 
d⁄e
;

613 i‡(
	`xml_≠∂y
(
xt
, 
CX_ELMNT
, (
xml_≠∂y‚_t
*)
xml_Êag_ª£t
, (*)
XML_FLAG_MARK
) < 0)

614 
d⁄e
;

616 i‡(
	`xml_≠∂y
(
xt
, 
CX_ELMNT
, 
xml_deÁu…
, 
NULL
) < 0)

617 
d⁄e
;

619 i‡(
	`xml_≠∂y
(
xt
, 
CX_ELMNT
, 
xml_‹dî
, 
NULL
) < 0)

620 
d⁄e
;

621 i‡(
	`xml_≠∂y
(
xt
, 
CX_ELMNT
, 
xml_ßnôy
, 
NULL
) < 0)

622 
d⁄e
;

623 i‡(
debug
>1)

624 
	`˛ic⁄_xml2fûe
(
°dîr
, 
xt
, 0, 1);

625 *
xt›
 = 
xt
;

626 
ªtvÆ
 = 0;

627 
d⁄e
:

628 i‡(
dbfûe
)

629 
	`‰ì
(
dbfûe
);

630 i‡(
xvec
)

631 
	`‰ì
(
xvec
);

632 
	`unchunk_group
(
__FUNCTION__
);

633  
ªtvÆ
;

635 
	}
}

648 
	$put
(*
dbfûe
,

649 
cxobj
 *
xt
,

650 
y™g_°mt
 *
ys
,

651 
›î©i⁄_ty≥
 
›
,

652 c⁄° *
xk0
)

654 
ªtvÆ
 = -1;

655 
cxobj
 *
x
 = 
NULL
;

656 *
xk
;

657 
cbuf
 *
cbxk
 = 
NULL
;

658 *
body
;

659 
y™g_°mt
 *
y
;

660 
exi°s
;

661 *
bodyíc
=
NULL
;

662 *
›°r
;

664 
	`˛ic⁄_debug
(1, "%†xk0:%†ys:%s", 
__FUNCTION__
, 
xk0
, 
ys
->
ys_¨gumít
);

665 i‡(
debug
){

666 
	`xml_¥öt
(
°dîr
, 
xt
);

669 i‡((
›°r
 = 
	`xml_föd_vÆue
(
xt
, "›î©i⁄")Ë!
NULL
)

670 i‡(
	`xml_›î©i⁄
(
›°r
, &
›
) < 0)

671 
d⁄e
;

672 
body
 = 
	`xml_body
(
xt
);

673 i‡((
cbxk
 = 
	`cbuf_√w
()Ë=
NULL
){

674 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "cbuf_new");

675 
d⁄e
;

677 
	`˝rötf
(
cbxk
, "%s/%s", 
xk0
, 
	`xml_«me
(
xt
));

678 
ys
->
ys_keyw‹d
){

679 
Y_LIST
:

680 i‡(
	`≠≥nd_li°keys
(
cbxk
, 
xt
, 
ys
) < 0)

681 
d⁄e
;

683 
Y_LEAF_LIST
:

684 i‡(
	`uri_≥r˚¡_ícode
(
body
, &
bodyíc
) < 0)

685 
d⁄e
;

686 
	`˝rötf
(
cbxk
, "=%s", 
bodyíc
);

691 
xk
 = 
	`cbuf_gë
(
cbxk
);

694 
›
){

695 
OP_CREATE
:

696 i‡((
exi°s
 = 
	`db_exi°s
(
dbfûe
, 
xk
)) < 0)

697 
d⁄e
;

698 i‡(
exi°s
 == 1){

699 
	`˛ic⁄_îr
(
OE_DB
, 0, "OP_CREATE: %†ÆªadyÉxi°†ö d©aba£", 
xk
);

700 
d⁄e
;

702 
OP_MERGE
:

703 
OP_REPLACE
:

704 i‡(
	`db_£t
(
dbfûe
, 
xk
, 
body
?body:
NULL
, body?
	`°æí
(body)+1:0) < 0)

705 
d⁄e
;

707 
OP_DELETE
:

708 i‡((
exi°s
 = 
	`db_exi°s
(
dbfûe
, 
xk
)) < 0)

709 
d⁄e
;

710 i‡(
exi°s
 == 0){

711 
	`˛ic⁄_îr
(
OE_DB
, 0, "OP_DELETE: %†d€†nŸÉxi°†ö d©aba£", 
xk
);

712 
d⁄e
;

714 
OP_REMOVE
:

715 
ys
->
ys_keyw‹d
){

716 
Y_LIST
:

717 
Y_CONTAINER
:{

718 
db_∑ú
 *
∑ús
;

719 
≈aús
;

720 
cbuf
 *
cbrx
;

721 
i
;

723 i‡((
cbrx
 = 
	`cbuf_√w
()Ë=
NULL
){

724 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "cbuf_new");

725 
d⁄e
;

727 
	`˝rötf
(
cbrx
, "^%s.*$", 
xk
);

728 i‡((
≈aús
 = 
	`db_ªgexp
(
dbfûe
, 
	`cbuf_gë
(
cbrx
), 
__FUNCTION__
,

729 &
∑ús
, 0)) < 0)

730 
d⁄e
;

732 
i
 = 0; i < 
≈aús
; i++)

733 i‡(
	`db_dñ
(
dbfûe
, 
∑ús
[
i
].
dp_key
) < 0)

734 
d⁄e
;

735 i‡(
cbrx
)

736 
	`cbuf_‰ì
(
cbrx
);

738 
ªtvÆ
 = 0;

739 
d⁄e
;

743 i‡(
	`db_dñ
(
dbfûe
, 
xk
) < 0)

744 
d⁄e
;

749 
OP_NONE
:

753 (
x
 = 
	`xml_chûd_óch
(
xt
, x, 
CX_ELMNT
)Ë!
NULL
){

754 i‡((
y
 = 
	`y™g_föd_d©™ode
((
y™g_node
*)
ys
, 
	`xml_«me
(
x
))Ë=
NULL
){

755 
	`˛ic⁄_îr
(
OE_UNIX
, 0, "Nÿy™gÇodêfound: %s", 
	`xml_«me
(
x
));

756 
d⁄e
;

758 i‡(
	`put
(
dbfûe
, 
x
, 
y
, 
›
, 
xk
) < 0)

759 
d⁄e
;

761 
ªtvÆ
 = 0;

762 
d⁄e
:

763 i‡(
cbxk
)

764 
	`cbuf_‰ì
(
cbxk
);

765 i‡(
bodyíc
)

766 
	`‰ì
(
bodyíc
);

767 
	`unchunk_group
(
__FUNCTION__
);

768  
ªtvÆ
;

769 
	}
}

776 
	$kv_put
(
xmldb_h™dÀ
 
xh
,

777 c⁄° *
db
,

778 
›î©i⁄_ty≥
 
›
,

779 
cxobj
 *
xt
)

781 
ªtvÆ
 = -1;

782 
kv_h™dÀ
 *
kh
 = 
	`h™dÀ
(
xh
);

783 
cxobj
 *
x
 = 
NULL
;

784 
y™g_°mt
 *
ys
;

785 
y™g_•ec
 *
y•ec
;

786 *
dbfûíame
 = 
NULL
;

788 i‡((
y•ec
 = 
kh
->
kh_y™g•ec
Ë=
NULL
){

789 
	`˛ic⁄_îr
(
OE_YANG
, 
ENOENT
, "No yang spec");

790 
d⁄e
;

792 i‡(
	`kv_db2fûe
(
kh
, 
db
, &
dbfûíame
) < 0)

793 
d⁄e
;

794 i‡(
›
 =
OP_REPLACE
){

795 i‡(
	`db_dñëe
(
dbfûíame
) < 0)

796 
d⁄e
;

797 i‡(
	`db_öô
(
dbfûíame
) < 0)

798 
d⁄e
;

801 (
x
 = 
	`xml_chûd_óch
(
xt
, x, 
CX_ELMNT
)Ë!
NULL
){

802 i‡((
ys
 = 
	`y™g_föd_t›node
(
y•ec
, 
	`xml_«me
(
x
), 
YC_DATANODE
)Ë=
NULL
){

803 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "Nÿy™gÇodêfound: %s", 
	`xml_«me
(
x
));

804 
d⁄e
;

806 i‡(
	`put
(
dbfûíame
,

807 
x
,

808 
ys
,

809 
›
,

812 
d⁄e
;

814 
ªtvÆ
 = 0;

815 
d⁄e
:

816 i‡(
dbfûíame
)

817 
	`‰ì
(
dbfûíame
);

818  
ªtvÆ
;

819 
	}
}

829 
	$kv_c›y
(
xmldb_h™dÀ
 
xh
,

830 c⁄° *
‰om
,

831 c⁄° *
to
)

833 
ªtvÆ
 = -1;

834 
kv_h™dÀ
 *
kh
 = 
	`h™dÀ
(
xh
);

835 *
‰omfûe
 = 
NULL
;

836 *
tofûe
 = 
NULL
;

839 i‡(
	`kv_db2fûe
(
kh
, 
‰om
, &
‰omfûe
) < 0)

840 
d⁄e
;

841 i‡(
	`kv_db2fûe
(
kh
, 
to
, &
tofûe
) < 0)

842 
d⁄e
;

843 i‡(
	`˛ic⁄_fûe_c›y
(
‰omfûe
, 
tofûe
) < 0)

844 
d⁄e
;

845 
ªtvÆ
 = 0;

846 
d⁄e
:

847 i‡(
‰omfûe
)

848 
	`‰ì
(
‰omfûe
);

849 i‡(
tofûe
)

850 
	`‰ì
(
tofûe
);

851  
ªtvÆ
;

852 
	}
}

862 
	$kv_lock
(
xmldb_h™dÀ
 
xh
,

863 c⁄° *
db
,

864 
pid
)

866 
ªtvÆ
 = -1;

868 i‡(
	`°rcmp
("ru¬ög", 
db
) == 0)

869 
_ru¬ög_locked
 = 
pid
;

870 i‡(
	`°rcmp
("ˇndid©e", 
db
) == 0)

871 
_ˇndid©e_locked
 = 
pid
;

872 i‡(
	`°rcmp
("°¨tup", 
db
) == 0)

873 
_°¨tup_locked
 = 
pid
;

875 
	`˛ic⁄_îr
(
OE_DB
, 0, "Nÿsuch d©aba£: %s", 
db
);

876 
d⁄e
;

878 
	`˛ic⁄_debug
(1, "%s:Üocked by %u", 
db
, 
pid
);

879 
ªtvÆ
 = 0;

880 
d⁄e
:

881  
ªtvÆ
;

882 
	}
}

893 
	$kv_u∆ock
(
xmldb_h™dÀ
 
xh
,

894 c⁄° *
db
)

896 
ªtvÆ
 = -1;

898 i‡(
	`°rcmp
("ru¬ög", 
db
) == 0)

899 
_ru¬ög_locked
 = 0;

900 i‡(
	`°rcmp
("ˇndid©e", 
db
) == 0)

901 
_ˇndid©e_locked
 = 0;

902 i‡(
	`°rcmp
("°¨tup", 
db
) == 0)

903 
_°¨tup_locked
 = 0;

905 
	`˛ic⁄_îr
(
OE_DB
, 0, "Nÿsuch d©aba£: %s", 
db
);

906 
d⁄e
;

908 
ªtvÆ
 = 0;

909 
d⁄e
:

910  
ªtvÆ
;

911 
	}
}

920 
	$kv_u∆ock_Æl
(
xmldb_h™dÀ
 
xh
,

921 
pid
)

925 i‡(
_ru¬ög_locked
 =
pid
)

926 
_ru¬ög_locked
 = 0;

927 i‡(
_ˇndid©e_locked
 =
pid
)

928 
_ˇndid©e_locked
 = 0;

929 i‡(
_°¨tup_locked
 =
pid
)

930 
_°¨tup_locked
 = 0;

932 
	}
}

942 
	$kv_i¶ocked
(
xmldb_h™dÀ
 
xh
,

943 c⁄° *
db
)

945 
ªtvÆ
 = -1;

948 i‡(
	`°rcmp
("ru¬ög", 
db
) == 0)

949 
ªtvÆ
 = 
_ru¬ög_locked
;

950 i‡(
	`°rcmp
("ˇndid©e", 
db
) == 0)

951 
ªtvÆ
 = 
_ˇndid©e_locked
;

952 i‡(
	`°rcmp
("°¨tup", 
db
) == 0)

953 
ªtvÆ
 = 
_°¨tup_locked
;

955 
	`˛ic⁄_îr
(
OE_DB
, 0, "Nÿsuch d©aba£: %s", 
db
);

956  
ªtvÆ
;

957 
	}
}

967 
	$kv_exi°s
(
xmldb_h™dÀ
 
xh
,

968 c⁄° *
db
)

970 
ªtvÆ
 = -1;

971 
kv_h™dÀ
 *
kh
 = 
	`h™dÀ
(
xh
);

972 *
fûíame
 = 
NULL
;

973 
°©
 
sb
;

975 i‡(
	`kv_db2fûe
(
kh
, 
db
, &
fûíame
) < 0)

976 
d⁄e
;

977 i‡(
	`l°©
(
fûíame
, &
sb
) < 0)

978 
ªtvÆ
 = 0;

980 
ªtvÆ
 = 1;

981 
d⁄e
:

982 i‡(
fûíame
)

983 
	`‰ì
(
fûíame
);

984  
ªtvÆ
;

985 
	}
}

994 
	$kv_dñëe
(
xmldb_h™dÀ
 
xh
,

995 c⁄° *
db
)

997 
ªtvÆ
 = -1;

998 
kv_h™dÀ
 *
kh
 = 
	`h™dÀ
(
xh
);

999 *
fûíame
 = 
NULL
;

1001 i‡(
	`kv_db2fûe
(
kh
, 
db
, &
fûíame
) < 0)

1002 
d⁄e
;

1003 i‡(
	`db_dñëe
(
fûíame
) < 0)

1004 
d⁄e
;

1005 
ªtvÆ
 = 0;

1006 
d⁄e
:

1007 i‡(
fûíame
)

1008 
	`‰ì
(
fûíame
);

1009  
ªtvÆ
;

1010 
	}
}

1019 
	$kv_¸óã
(
xmldb_h™dÀ
 
xh
,

1020 c⁄° *
db
)

1022 
ªtvÆ
 = -1;

1023 
kv_h™dÀ
 *
kh
 = 
	`h™dÀ
(
xh
);

1024 *
fûíame
 = 
NULL
;

1026 i‡(
	`kv_db2fûe
(
kh
, 
db
, &
fûíame
) < 0)

1027 
d⁄e
;

1028 i‡(
	`db_öô
(
fûíame
) < 0)

1029 
d⁄e
;

1030 
ªtvÆ
 = 0;

1031 
d⁄e
:

1032 i‡(
fûíame
)

1033 
	`‰ì
(
fûíame
);

1034  
ªtvÆ
;

1035 
	}
}

1039 
	$kv_∂ugö_exô
()

1042 
	}
}

1044 c⁄° 
xmldb_≠i
 
	g≠i
;

1048 
	$˛ix⁄_xmldb_∂ugö_öô
(
vîsi⁄
)

1050 i‡(
vîsi⁄
 !
XMLDB_API_VERSION
){

1051 
	`˛ic⁄_îr
(
OE_DB
, 0, "Invalid version %dÉxpected %d",

1052 
vîsi⁄
, 
XMLDB_API_VERSION
);

1053 
d⁄e
;

1055  (*)&
≠i
;

1056 
d⁄e
:

1057  
NULL
;

1058 
	}
}

1060 c⁄° 
xmldb_≠i
 
	g≠i
 = {

1062 
XMLDB_API_MAGIC
,

1063 
˛ix⁄_xmldb_∂ugö_öô
,

1064 
kv_∂ugö_exô
,

1065 
kv_c⁄√˘
,

1066 
kv_disc⁄√˘
,

1067 
kv_gë›t
,

1068 
kv_£t›t
,

1069 
kv_gë
,

1070 
kv_put
,

1071 
kv_c›y
,

1072 
kv_lock
,

1073 
kv_u∆ock
,

1074 
kv_u∆ock_Æl
,

1075 
kv_i¶ocked
,

1076 
kv_exi°s
,

1077 
kv_dñëe
,

1078 
kv_¸óã
,

1098 
	$maö
(
¨gc
,

1099 **
¨gv
)

1101 
ªtvÆ
 = -1;

1102 
≈aús
;

1103 
db_∑ú
 *
∑ús
;

1104 *
rxkey
 = 
NULL
;

1105 *
dbfûíame
;

1107 i‡(
¨gc
 != 2 &&árgc != 3){

1108 
	`Ârötf
(
°dîr
, "ußge: %†<dbfûe> [rxkey]\n", 
¨gv
[0]);

1109 
d⁄e
;

1111 
dbfûíame
 = 
¨gv
[1];

1112 i‡(
¨gc
 == 3)

1113 
rxkey
 = 
¨gv
[2];

1115 
rxkey
 = "^.*$";

1118 i‡((
≈aús
 = 
	`db_ªgexp
(
dbfûíame
, 
rxkey
, 
__FUNCTION__
, &
∑ús
, 0)) < 0)

1119 
d⁄e
;

1121 
≈aús
--;Çpairs >= 0;Çpairs--)

1122 
	`Ârötf
(
°dout
, "%†%s\n", 
∑ús
[
≈aús
].
dp_key
,

1123 
∑ús
[
≈aús
].
dp_vÆ
?pairs[npairs].dp_val:"");

1124 
ªtvÆ
 = 0;

1125 
d⁄e
:

1126 
	`unchunk_group
(
__FUNCTION__
);

1127  
ªtvÆ
;

1128 
	}
}

	@clixon-master/datastore/keyvalue/clixon_keyvalue.h

36 #i‚de‡
_CLIXON_KEYVALUE_H


37 
	#_CLIXON_KEYVALUE_H


	)

42 
kv_gë
(
xmldb_h™dÀ
 
h
, c⁄° *
db
, *
x∑th
, 
c⁄fig
, 
cxobj
 **
xt›
);

43 
kv_put
(
xmldb_h™dÀ
 
h
, c⁄° *
db
, 
›î©i⁄_ty≥
 
›
, 
cxobj
 *
xt
);

44 
kv_dump
(
FILE
 *
f
, *
dbfûíame
, *
rxkey
);

45 
kv_c›y
(
xmldb_h™dÀ
 
h
, c⁄° *
‰om
, c⁄° *
to
);

46 
kv_lock
(
xmldb_h™dÀ
 
h
, c⁄° *
db
, 
pid
);

47 
kv_u∆ock
(
xmldb_h™dÀ
 
h
, c⁄° *
db
);

48 
kv_u∆ock_Æl
(
xmldb_h™dÀ
 
h
, 
pid
);

49 
kv_i¶ocked
(
xmldb_h™dÀ
 
h
, c⁄° *
db
);

50 
kv_exi°s
(
xmldb_h™dÀ
 
h
, c⁄° *
db
);

51 
kv_dñëe
(
xmldb_h™dÀ
 
h
, c⁄° *
db
);

52 
kv_öô
(
xmldb_h™dÀ
 
h
, c⁄° *
db
);

	@clixon-master/datastore/keyvalue/clixon_qdb.c

55 #ifde‡
HAVE_CONFIG_H


56 
	~"˛ix⁄_c⁄fig.h
"

59 
	~<°dio.h
>

60 
	~<°dlib.h
>

61 
	~<°döt.h
>

62 
	~<°rög.h
>

63 
	~<î∫o.h
>

64 
	~<sy¶og.h
>

65 
	~<sys/ty≥s.h
>

66 
	~<limôs.h
>

67 
	~<ªgex.h
>

68 
	~<uni°d.h
>

69 
	~<sys/°©.h
>

70 
	~<sys/∑øm.h
>

72 #ifde‡
HAVE_DEPOT_H


73 
	~<dïŸ.h
>

75 
	~<qdbm/dïŸ.h
>

78 
	~<˛igí/˛igí.h
>

81 
	~<˛ix⁄/˛ix⁄.h
>

83 
	~"˛ix⁄_chunk.h
"

84 
	~"˛ix⁄_qdb.h
"

91 
	$db_öô_mode
(*
fûe
,

92 
omode
)

94 
DEPOT
 *
dp
;

97 i‡((
dp
 = 
	`dp›í
(
fûe
, 
omode
 | 
DP_OLCKNB
, 0)Ë=
NULL
){

98 
	`˛ic⁄_îr
(
OE_DB
, 
î∫o
, "dpopen(%s): %s",

99 
fûe
,

100 
	`d≥ºmsg
(
d≥code
));

103 
	`˛ic⁄_debug
(1, "db_öô(%s)", 
fûe
);

104 i‡(
	`dp˛o£
(
dp
) == 0){

105 
	`˛ic⁄_îr
(
OE_DB
, 
î∫o
, "db_set: dpclose: %s",

106 
	`d≥ºmsg
(
d≥code
));

110 
	}
}

116 
	$db_öô
(*
fûe
)

118  
	`db_öô_mode
(
fûe
, 
DP_OWRITER
 | 
DP_OCREAT
 );

119 
	}
}

125 
	$db_dñëe
(*
fûe
)

127 
°©
 
sb
;

129 i‡(
	`°©
(
fûe
, &
sb
) < 0){

132 i‡(
	`u∆ök
(
fûe
) < 0){

133 
	`˛ic⁄_îr
(
OE_DB
, 
î∫o
, "u∆ök %s", 
fûe
);

137 
	}
}

148 
	$db_£t
(*
fûe
,

149 *
key
,

150 *
d©a
,

151 
size_t
 
d©Æí
)

153 
DEPOT
 *
dp
;

156 i‡((
dp
 = 
	`dp›í
(
fûe
, 
DP_OWRITER
|
DP_OLCKNB
 , 0)Ë=
NULL
){

157 
	`˛ic⁄_îr
(
OE_DB
, 
î∫o
, "db_set: dpopen(%s): %s",

158 
fûe
,

159 
	`d≥ºmsg
(
d≥code
));

162 
	`˛ic⁄_debug
(2, "%s: db_put(%s,Üen:%d)",

163 
fûe
, 
key
, ()
d©Æí
);

164 i‡(
	`dµut
(
dp
, 
key
, -1, 
d©a
, 
d©Æí
, 
DP_DOVER
) == 0){

165 
	`˛ic⁄_îr
(
OE_DB
, 
î∫o
, "%s: db_set: dpput(%s, %d): %s",

166 
fûe
,

167 
key
,

168 
d©Æí
,

169 
	`d≥ºmsg
(
d≥code
));

170 
	`dp˛o£
(
dp
);

173 i‡(
	`dp˛o£
(
dp
) == 0){

174 
	`˛ic⁄_îr
(
OE_DB
, 0, "db_£t: dp˛o£: %s", 
	`d≥ºmsg
(
d≥code
));

178 
	}
}

190 
	$db_gë
(*
fûe
,

191 *
key
,

192 *
d©a
,

193 
size_t
 *
d©Æí
)

195 
DEPOT
 *
dp
;

196 
Àn
;

199 i‡((
dp
 = 
	`dp›í
(
fûe
, 
DP_OREADER
 | 
DP_OLCKNB
, 0)Ë=
NULL
){

200 
	`˛ic⁄_îr
(
OE_DB
, 
î∫o
, "%s: db_get(%s, %d): dpopen: %s",

201 
fûe
,

202 
key
,

203 
d©Æí
,

204 
	`d≥ºmsg
(
d≥code
));

207 
Àn
 = 
	`dpgëwb
(
dp
, 
key
, -1, 0, *
d©Æí
, 
d©a
);

208 i‡(
Àn
 < 0){

209 i‡(
d≥code
 =
DP_ENOITEM
){

210 
d©a
 = 
NULL
;

211 *
d©Æí
 = 0;

214 
	`˛ic⁄_îr
(
OE_DB
, 
î∫o
, "db_get: dpgetwb: %s (%d)",

215 
	`d≥ºmsg
(
d≥code
), dpecode);

216 
	`dp˛o£
(
dp
);

221 *
d©Æí
 = 
Àn
;

222 
	`˛ic⁄_debug
(2, "db_gë(%s, %s)=%s", 
fûe
, 
key
, (*)
d©a
);

223 i‡(
	`dp˛o£
(
dp
) == 0){

224 
	`˛ic⁄_îr
(
OE_DB
, 
î∫o
, "db_gë: dp˛o£: %s", 
	`d≥ºmsg
(
d≥code
));

228 
	}
}

252 
	$db_gë_Æloc
(*
fûe
,

253 *
key
,

254 **
d©a
,

255 
size_t
 *
d©Æí
)

257 
DEPOT
 *
dp
;

258 
Àn
;

261 i‡((
dp
 = 
	`dp›í
(
fûe
, 
DP_OREADER
 | 
DP_OLCKNB
, 0)Ë=
NULL
){

262 
	`˛ic⁄_îr
(
OE_DB
, 
î∫o
, "%s: dpopen(%s): %s",

263 
__FUNCTION__
,

264 
fûe
,

265 
	`d≥ºmsg
(
d≥code
));

268 i‡((*
d©a
 = 
	`dpgë
(
dp
, 
key
, -1, 0, -1, &
Àn
)Ë=
NULL
){

269 i‡(
d≥code
 =
DP_ENOITEM
){

270 *
d©Æí
 = 0;

271 *
d©a
 = 
NULL
;

272 
Àn
 = 0;

276 
	`˛ic⁄_îr
(
OE_DB
, 
î∫o
, "db_get_alloc: dpgetwb: %s (%d)",

277 
	`d≥ºmsg
(
d≥code
), dpecode);

278 
	`dp˛o£
(
dp
);

282 *
d©Æí
 = 
Àn
;

283 i‡(
	`dp˛o£
(
dp
) == 0){

284 
	`˛ic⁄_îr
(
OE_DB
, 
î∫o
, "db_gë_Æloc: dp˛o£: %s", 
	`d≥ºmsg
(
d≥code
));

288 
	}
}

298 
	$db_dñ
(*
fûe
, *
key
)

300 
ªtvÆ
 = 0;

301 
DEPOT
 *
dp
;

304 i‡((
dp
 = 
	`dp›í
(
fûe
, 
DP_OWRITER
 | 
DP_OLCKNB
, 0)Ë=
NULL
){

305 
	`˛ic⁄_îr
(
OE_DB
, 
î∫o
, "db_del: dpopen(%s): %s",

306 
fûe
,

307 
	`d≥ºmsg
(
d≥code
));

310 i‡(
	`dpout
(
dp
, 
key
, -1)) {

311 
ªtvÆ
 = 1;

313 i‡(
	`dp˛o£
(
dp
) == 0){

314 
	`˛ic⁄_îr
(
OE_DB
, 
î∫o
, "db_dñ: dp˛o£: %s", 
	`d≥ºmsg
(
d≥code
));

317  
ªtvÆ
;

318 
	}
}

328 
	$db_exi°s
(*
fûe
,

329 *
key
)

331 
DEPOT
 *
dp
;

332 
Àn
;

335 i‡((
dp
 = 
	`dp›í
(
fûe
, 
DP_OREADER
 | 
DP_OLCKNB
, 0)Ë=
NULL
){

336 
	`˛ic⁄_îr
(
OE_DB
, 
î∫o
, "%s: dpopen: %s",

337 
__FUNCTION__
, 
	`d≥ºmsg
(
d≥code
));

341 
Àn
 = 
	`dpvsiz
(
dp
, 
key
, -1);

342 i‡(
Àn
 < 0 && 
d≥code
 !
DP_ENOITEM
)

343 
	`˛ic⁄_îr
(
OE_DB
, 
î∫o
, "^s: dpvsiz: %s (%d)",

344 
__FUNCTION__
, 
	`d≥ºmsg
(
d≥code
), dpecode);

346 i‡(
	`dp˛o£
(
dp
) == 0) {

347 
	`˛ic⁄_îr
(
OE_DB
, 
î∫o
, "%s: dp˛o£: %s", 
	`d≥ºmsg
(
d≥code
),
__FUNCTION__
);

351  (
Àn
 < 0) ? 0 : 1;

352 
	}
}

372 
	$db_ªgexp
(*
fûe
,

373 *
ªgexp
,

374 c⁄° *
œbñ
,

375 
db_∑ú
 **
∑ús
,

376 
novÆ
)

378 
≈aús
;

379 
°©us
;

380 
ªtvÆ
 = -1;

381 
vÀn
 = 0;

382 *
key
 = 
NULL
;

383 *
vÆ
 = 
NULL
;

384 
îrbuf
[512];

385 
db_∑ú
 *
∑ú
;

386 
db_∑ú
 *
√w∑ús
;

387 
ªgex_t
 
ôîª
;

388 
DEPOT
 *
ôîdp
 = 
NULL
;

389 
ªgm©ch_t
 
pm©ch
[1];

390 
size_t
 
nm©ch
 = 1;

392 
≈aús
 = 0;

393 *
∑ús
 = 
NULL
;

395 i‡(
ªgexp
) {

396 i‡((
°©us
 = 
	`ªgcomp
(&
ôîª
, 
ªgexp
, 
REG_EXTENDED
)) != 0) {

397 
	`ªgîr‹
(
°©us
, &
ôîª
, 
îrbuf
, (errbuf));

398 
	`˛ic⁄_îr
(
OE_DB
, 
î∫o
, "%s:Ñegcomp: %s", 
__FUNCTION__
, 
îrbuf
);

404 i‡((
ôîdp
 = 
	`dp›í
(
fûe
, 
DP_OREADER
 | 
DP_OLCKNB
, 0)Ë=
NULL
){

405 
	`˛ic⁄_îr
(
OE_DB
, 0, "%s: dpopen(%s): %s",

406 
__FUNCTION__
, 
fûe
, 
	`d≥ºmsg
(
d≥code
));

407 
quô
;

411 if(
	`dpôîöô
(
ôîdp
) == 0) {

412 
	`˛ic⁄_îr
(
OE_DB
, 
î∫o
, "%s: dpôîöô: %s", 
__FUNCTION__
, 
	`d≥ºmsg
(
d≥code
));

413 
quô
;

417 (
key
 = 
	`dpôî√xt
(
ôîdp
, 
NULL
)) != NULL) {

419 i‡(
ªgexp
 && 
	`ªgexec
(&
ôîª
, 
key
, 
nm©ch
, 
pm©ch
, 0) != 0) {

420 
	`‰ì
(
key
);

425 i‡–! 
novÆ
) {

426 if((
vÆ
 = 
	`dpgë
(
ôîdp
, 
key
, -1, 0, -1, &
vÀn
)Ë=
NULL
) {

427 
	`˛ic⁄_log
(
LOG_WARNING
, "%s: dpgë: %s", 
__FUNCTION__
, 
	`d≥ºmsg
(
d≥code
));

428 
quô
;

433 
√w∑ús
 = 
	`ªchunk
(*
∑ús
, (
≈aús
+1Ë* (
db_∑ú
), 
œbñ
);

434 i‡(
√w∑ús
 =
NULL
) {

435 
	`˛ic⁄_îr
(
OE_DB
, 
î∫o
, "%s:Ñechunk", 
__FUNCTION__
);

436 
quô
;

438 
∑ú
 = &
√w∑ús
[
≈aús
];

439 
	`mem£t
 (
∑ú
, 0, (*pair));

441 
∑ú
->
dp_key
 = 
	`chunk_•rötf
(
œbñ
, "%s", 
key
);

442 i‡(
ªgexp
)

443 
∑ú
->
dp_m©ched
 = 
	`chunk_•rötf
(
œbñ
, "%.*s",

444 
pm©ch
[0].
rm_eo
 -Öm©ch[0].
rm_so
,

445 
key
 + 
pm©ch
[0].
rm_so
);

447 
∑ú
->
dp_m©ched
 = 
	`chunk_•rötf
(
œbñ
, "%s", 
key
);

448 i‡(
∑ú
->
dp_key
 =
NULL
 ||Öaú->
dp_m©ched
 == NULL) {

449 
	`˛ic⁄_îr
(
OE_DB
, 
î∫o
, "%s: chunk_sprintf");

450 
quô
;

452 i‡–! 
novÆ
) {

453 i‡(
vÀn
){

454 
∑ú
->
dp_vÆ
 = 
	`chunkdup
 (
vÆ
, 
vÀn
, 
œbñ
);

455 i‡(
∑ú
->
dp_vÆ
 =
NULL
) {

456 
	`˛ic⁄_îr
(
OE_DB
, 
î∫o
, "%s: chunkdup", 
__FUNCTION__
);

457 
quô
;

460 
∑ú
->
dp_vÀn
 = 
vÀn
;

461 
	`‰ì
(
vÆ
);

462 
vÆ
 = 
NULL
;

465 (*
∑ús
Ë
√w∑ús
;

466 
≈aús
++;

467 
	`‰ì
(
key
);

470 
ªtvÆ
 = 
≈aús
;

472 
quô
:

473 i‡(
key
)

474 
	`‰ì
(
key
);

475 i‡(
vÆ
)

476 
	`‰ì
(
vÆ
);

477 i‡(
ªgexp
)

478 
	`ªg‰ì
(&
ôîª
);

479 i‡(
ôîdp
)

480 
	`dp˛o£
(
ôîdp
);

481 i‡(
ªtvÆ
 < 0)

482 
	`unchunk_group
(
œbñ
);

484  
ªtvÆ
;

485 
	}
}

490 
	$db_ßnôize
(*
rx
, c⁄° *
œbñ
)

492 *
√w
;

493 *
k
, *
p
, *
s
;

495 
k
 = 
	`chunk_•rötf
(
__FUNCTION__
, "%s", "");

496 
p
 = 
rx
;

497 (
s
 = 
	`°r°r
(
p
, "\\"))) {

498 i‡((
k
 = 
	`chunk_•rötf
(
__FUNCTION__
, "%s%.*s\\\\", k, 
s
-
p
,Ö)Ë=
NULL
)

499 
quô
;

500 
p
 = 
s
+1;

502 i‡((
k
 = 
	`chunk_°∫ˇt
(k, 
p
, 
	`°æí
’), 
__FUNCTION__
)Ë=
NULL
)

503 
quô
;

505 
√w
 = (*)
	`chunkdup
(
k
, 
	`°æí
(k)+1, 
œbñ
);

506 
	`unchunk_group
(
__FUNCTION__
);

507  
√w
;

509 
quô
:

510 
	`unchunk_group
(
__FUNCTION__
);

511  
NULL
;

512 
	}
}

524 
	$ußge
(*
¨gv0
)

526 
	`Ârötf
(
°dîr
, "usage:\n");

527 
	`Ârötf
(
°dîr
, "\t%†öô <fûíame>\n", 
¨gv0
);

528 
	`Ârötf
(
°dîr
, "\t%†ªad <fûíame> <key>\n", 
¨gv0
);

529 
	`Ârötf
(
°dîr
, "\t%†wrôê<fûíame> <key> <vÆ>\n", 
¨gv0
);

530 
	`Ârötf
(
°dîr
, "\t%†›íªad <fûíame>\n", 
¨gv0
);

531 
	`Ârötf
(
°dîr
, "\t%†›íwrôê<fûíame>\n", 
¨gv0
);

532 
	`exô
(0);

533 
	}
}

536 
	$maö
(
¨gc
, **
¨gv
)

538 *
vîb
;

539 *
fûíame
;

540 *
key
;

541 *
vÆ
;

542 
size_t
 
Àn
;

543 
DEPOT
 *
dp
;

545 i‡(
¨gc
 < 3)

546 
	`ußge
(
¨gv
[0]);

547 
	`˛ic⁄_log_öô
(
__FILE__
, 
LOG_INFO
, 
CLICON_LOG_STDERR
);

548 
vîb
 = 
¨gv
[1];

549 
fûíame
 = 
¨gv
[2];

550 i‡(
	`°rcmp
(
vîb
, "init")==0){

551 
	`db_öô
(
fûíame
);

553 i‡(
	`°rcmp
(
vîb
, "read")==0){

554 i‡(
¨gc
 < 4)

555 
	`ußge
(
¨gv
[0]);

556 
key
 = 
¨gv
[3];

557 
	`db_gë_Æloc
(
fûíame
, 
key
, (**)&
vÆ
, &
Àn
);

558 
	`Ârötf
(
°dout
, "%s\n", 
vÆ
);

560 i‡(
	`°rcmp
(
vîb
, "write")==0){

561 i‡(
¨gc
 < 5)

562 
	`ußge
(
¨gv
[0]);

563 
key
 = 
¨gv
[3];

564 
vÆ
 = 
¨gv
[4];

565 
	`db_£t
(
fûíame
, 
key
, 
vÆ
, 
	`°æí
(val)+1);

567 i‡(
	`°rcmp
(
vîb
, "openread")==0){

568 i‡((
dp
 = 
	`dp›í
(
fûíame
, 
DP_OREADER
 | 
DP_OLCKNB
, 0)Ë=
NULL
){

569 
	`˛ic⁄_îr
(
OE_DB
, 
î∫o
, "dbopen: %s",

570 
	`d≥ºmsg
(
d≥code
));

573 
	`¶ìp
(1000000);

575 i‡(
	`°rcmp
(
vîb
, "openwrite")==0){

576 i‡((
dp
 = 
	`dp›í
(
fûíame
, 
DP_OWRITER
 | 
DP_OLCKNB
, 0)Ë=
NULL
){

577 
	`˛ic⁄_îr
(
OE_DB
, 
î∫o
, "dbopen: %s",

578 
	`d≥ºmsg
(
d≥code
));

581 
	`¶ìp
(1000000);

584 
	}
}

	@clixon-master/datastore/keyvalue/clixon_qdb.h

36 #i‚de‡
_CLIXON_QDB_H_


37 
	#_CLIXON_QDB_H_


	)

44 
	sdb_∑ú
 {

45 *
	mdp_key
;

46 *
	mdp_m©ched
;

47 *
	mdp_vÆ
;

48 
	mdp_vÀn
;

54 
db_öô
(*
fûe
);

56 
db_dñëe
(*
fûe
);

58 
db_£t
(*
fûe
, *
key
, *
d©a
, 
size_t
 
d©Æí
);

60 
db_gë
(*
fûe
, *
key
, *
d©a
, 
size_t
 *
d©Æí
);

62 
db_gë_Æloc
(*
fûe
, *
key
, **
d©a
, 
size_t
 *
d©Æí
);

64 
db_dñ
(*
fûe
, *
key
);

66 
db_exi°s
(*
fûe
, *
key
);

68 
db_ªgexp
(*
fûe
, *
ªgexp
, c⁄° *
œbñ
,

69 
db_∑ú
 **
∑ús
, 
novÆ
);

71 *
db_ßnôize
(*
rx
, c⁄° *
œbñ
);

	@clixon-master/datastore/text/clixon_xmldb_text.c

45 #ifde‡
HAVE_CONFIG_H


46 
	~"˛ix⁄_c⁄fig.h
"

49 
	~<°dio.h
>

50 
	~<°dlib.h
>

51 
	~<uni°d.h
>

52 
	~<î∫o.h
>

53 
	~<°rög.h
>

54 
	~<limôs.h
>

55 
	~<‚m©ch.h
>

56 
	~<°döt.h
>

57 
	~<sys/ty≥s.h
>

58 
	~<sys/°©.h
>

59 
	~<uni°d.h
>

60 
	~<dúít.h
>

61 
	~<as£π.h
>

62 
	~<sy¶og.h
>

63 
	~<f˙é.h
>

66 
	~<˛igí/˛igí.h
>

69 
	~<˛ix⁄/˛ix⁄.h
>

71 
	~"˛ix⁄_xmldb_ãxt.h
"

73 
	#h™dÀ
(
xh
Ë(
	`as£π
(
	`ãxt_h™dÀ_check
(xh)==0),(
ãxt_h™dÀ
 *)(xh))

	)

76 
	#TEXT_HANDLE_MAGIC
 0x7f54da29

	)

80 
	sãxt_h™dÀ
 {

81 
	mth_magic
;

82 *
	mth_dbdú
;

83 
y™g_•ec
 *
	mth_y™g•ec
;

84 
˛ic⁄_hash_t
 *
	mth_dbs
;

85 
	mth_ˇche
;

89 *
	mth_f‹m©
;

90 
	mth_¥ëty
;

94 
	sdb_ñemít
{

95 
	mde_pid
;

96 
cxobj
 *
	mde_xml
;

103 
	$ãxt_h™dÀ_check
(
xmldb_h™dÀ
 
xh
)

106 
ãxt_h™dÀ
 *
th
 = (ãxt_h™dÀ *)(
xh
);

108  
th
->
th_magic
 =
TEXT_HANDLE_MAGIC
 ? 0 : -1;

109 
	}
}

123 
	$ãxt_db2fûe
(
ãxt_h™dÀ
 *
th
,

124 c⁄° *
db
,

125 **
fûíame
)

127 
ªtvÆ
 = -1;

128 
cbuf
 *
cb
;

129 *
dú
;

131 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
){

132 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cbuf_new");

133 
d⁄e
;

135 i‡((
dú
 = 
th
->
th_dbdú
Ë=
NULL
){

136 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "dbdirÇot set");

137 
d⁄e
;

139 
	`˝rötf
(
cb
, "%s/%s_db", 
dú
, 
db
);

140 i‡((*
fûíame
 = 
	`°rdup4
(
	`cbuf_gë
(
cb
))Ë=
NULL
){

141 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "strdup");

142 
d⁄e
;

144 
ªtvÆ
 = 0;

145 
d⁄e
:

146 i‡(
cb
)

147 
	`cbuf_‰ì
(
cb
);

148  
ªtvÆ
;

149 
	}
}

155 
xmldb_h™dÀ


156 
	$ãxt_c⁄√˘
()

158 
ãxt_h™dÀ
 *
th
;

159 
xmldb_h™dÀ
 
xh
 = 
NULL
;

160 
size
;

162 
size
 = (
ãxt_h™dÀ
);

163 i‡((
th
 = 
	`mÆloc
(
size
)Ë=
NULL
){

164 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "malloc");

165 
d⁄e
;

167 
	`mem£t
(
th
, 0, 
size
);

168 
th
->
th_magic
 = 
TEXT_HANDLE_MAGIC
;

169 
th
->
th_f‹m©
 = "xml";

170 
th
->
th_¥ëty
 = 1;

171 
th
->
th_ˇche
 = 1;

172 i‡((
th
->
th_dbs
 = 
	`hash_öô
()Ë=
NULL
)

173 
d⁄e
;

174 
xh
 = (
xmldb_h™dÀ
)
th
;

175 
d⁄e
:

176  
xh
;

178 
	}
}

185 
	$ãxt_disc⁄√˘
(
xmldb_h™dÀ
 
xh
)

187 
ªtvÆ
 = -1;

188 
ãxt_h™dÀ
 *
th
 = 
	`h™dÀ
(
xh
);

189 
db_ñemít
 *
de
;

190 **
keys
 = 
NULL
;

191 
size_t
 
kÀn
;

192 
i
;

194 i‡(
th
){

195 i‡(
th
->
th_dbdú
)

196 
	`‰ì
(
th
->
th_dbdú
);

197 i‡(
th
->
th_dbs
){

198 i‡(
th
->
th_ˇche
){

199 i‡((
keys
 = 
	`hash_keys
(
th
->
th_dbs
, &
kÀn
)Ë=
NULL
)

201 
i
 = 0; i < 
kÀn
; i++)

202 i‡((
de
 = 
	`hash_vÆue
(
th
->
th_dbs
, 
keys
[
i
], 
NULL
)) != NULL){

203 i‡(
de
->
de_xml
)

204 
	`xml_‰ì
(
de
->
de_xml
);

206 i‡(
keys
)

207 
	`‰ì
(
keys
);

209 
	`hash_‰ì
(
th
->
th_dbs
);

211 
	`‰ì
(
th
);

213 
ªtvÆ
 = 0;

215  
ªtvÆ
;

216 
	}
}

226 
	$ãxt_gë›t
(
xmldb_h™dÀ
 
xh
,

227 *
›äame
,

228 **
vÆue
)

230 
ªtvÆ
 = -1;

231 
ãxt_h™dÀ
 *
th
 = 
	`h™dÀ
(
xh
);

233 i‡(
	`°rcmp
(
›äame
, "yangspec") == 0)

234 *
vÆue
 = 
th
->
th_y™g•ec
;

235 i‡(
	`°rcmp
(
›äame
, "dbdir") == 0)

236 *
vÆue
 = 
th
->
th_dbdú
;

237 i‡(
	`°rcmp
(
›äame
, "xml_cache") == 0)

238 *
vÆue
 = &
th
->
th_ˇche
;

239 i‡(
	`°rcmp
(
›äame
, "format") == 0)

240 *
vÆue
 = 
th
->
th_f‹m©
;

241 i‡(
	`°rcmp
(
›äame
, "pretty") == 0)

242 *
vÆue
 = &
th
->
th_¥ëty
;

244 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "O±i⁄ %†nŸ im∂emíãd byÖlugö", 
›äame
);

245 
d⁄e
;

247 
ªtvÆ
 = 0;

248 
d⁄e
:

249  
ªtvÆ
;

250 
	}
}

260 
	$ãxt_£t›t
(
xmldb_h™dÀ
 
xh
,

261 *
›äame
,

262 *
vÆue
)

264 
ªtvÆ
 = -1;

265 
ãxt_h™dÀ
 *
th
 = 
	`h™dÀ
(
xh
);

267 i‡(
	`°rcmp
(
›äame
, "yangspec") == 0)

268 
th
->
th_y™g•ec
 = (
y™g_•ec
*)
vÆue
;

269 i‡(
	`°rcmp
(
›äame
, "dbdir") == 0){

270 i‡(
vÆue
 && (
th
->
th_dbdú
 = 
	`°rdup
((*)vÆue)Ë=
NULL
){

271 
	`˛ic⁄_îr
(
OE_UNIX
, 0, "strdup");

272 
d⁄e
;

275 i‡(
	`°rcmp
(
›äame
, "xml_cache") == 0){

276 
th
->
th_ˇche
 = (
öçå_t
)
vÆue
;

278 i‡(
	`°rcmp
(
›äame
, "format") == 0){

279 i‡(
	`°rcmp
(
vÆue
,"xml")==0)

280 
th
->
th_f‹m©
 = "xml";

281 i‡(
	`°rcmp
(
vÆue
,"json")==0)

282 
th
->
th_f‹m©
 = "json";

284 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "O±i⁄ %†uƒecognized f‹m©: %s", 
›äame
, 
vÆue
);

285 
d⁄e
;

288 i‡(
	`°rcmp
(
›äame
, "pretty") == 0){

289 
th
->
th_¥ëty
 = (
öçå_t
)
vÆue
;

292 
	`˛ic⁄_îr
(
OE_PLUGIN
, 0, "O±i⁄ %†nŸ im∂emíãd byÖlugö", 
›äame
);

293 
d⁄e
;

295 
ªtvÆ
 = 0;

296 
d⁄e
:

297  
ªtvÆ
;

298 
	}
}

303 
	$sögÀc⁄figroŸ
(
cxobj
 *
xt
,

304 
cxobj
 **
xp
)

306 
ªtvÆ
 = -1;

307 
cxobj
 *
x
 = 
NULL
;

308 
i
 = 0;

311 
x
 = 
NULL
;

312 (
x
 = 
	`xml_chûd_óch
(
xt
, x, 
CX_ELMNT
)Ë!
NULL
){

313 
i
++;

314 i‡(
	`°rcmp
(
	`xml_«me
(
x
), "config")){

315 
	`˛ic⁄_îr
(
OE_DB
, 
ENOENT
, "WrongÅop-element %sÉxpected config",

316 
	`xml_«me
(
x
));

317 
d⁄e
;

320 i‡(
i
 != 1){

321 
	`˛ic⁄_îr
(
OE_DB
, 
ENOENT
, "Top-element isÇot unique,Éxpecting single config");

322 
d⁄e
;

324 
x
 = 
NULL
;

325 (
x
 = 
	`xml_chûd_óch
(
xt
, x, 
CX_ELMNT
)Ë!
NULL
){

326 i‡(
	`xml_rm
(
x
) < 0)

327 
d⁄e
;

328 i‡(
	`xml_‰ì
(
xt
) < 0)

329 
d⁄e
;

330 *
xp
 = 
x
;

333 
ªtvÆ
 = 0;

334 
d⁄e
:

335  
ªtvÆ
;

336 
	}
}

348 
	$xml_c›y_m¨ked
(
cxobj
 *
x0
,

349 
cxobj
 *
x1
)

351 
ªtvÆ
 = -1;

352 
m¨k
;

353 
cxobj
 *
x
;

354 
cxobj
 *
xc›y
;

355 
iskey
;

356 
y™g_°mt
 *
yt
;

357 *
«me
;

359 
	`as£π
(
x0
 && 
x1
);

360 
yt
 = 
	`xml_•ec
(
x0
);

365 
m¨k
 = 0;

366 
x
 = 
NULL
;

367 (
x
 = 
	`xml_chûd_óch
(
x0
, x, 
CX_ELMNT
)Ë!
NULL
) {

368 i‡(
	`xml_Êag
(
x
, 
XML_FLAG_MARK
|
XML_FLAG_CHANGE
)){

369 
m¨k
++;

373 
x
 = 
NULL
;

374 (
x
 = 
	`xml_chûd_óch
(
x0
, x, 
CX_ELMNT
)Ë!
NULL
) {

375 
«me
 = 
	`xml_«me
(
x
);

376 i‡(
	`xml_Êag
(
x
, 
XML_FLAG_MARK
)){

378 i‡((
xc›y
 = 
	`xml_√w
(
«me
, 
x1
, 
	`xml_•ec
(
x
))Ë=
NULL
)

379 
d⁄e
;

380 i‡(
	`xml_c›y
(
x
, 
xc›y
) < 0)

381 
d⁄e
;

384 i‡(
	`xml_Êag
(
x
, 
XML_FLAG_CHANGE
)){

386 i‡((
xc›y
 = 
	`xml_√w
(
«me
, 
x1
, 
	`xml_•ec
(
x
))Ë=
NULL
)

387 
d⁄e
;

388 i‡(
	`xml_c›y_m¨ked
(
x
, 
xc›y
) < 0)

389 
d⁄e
;

393 i‡(
m¨k
 && 
yt
 && yt->
ys_keyw‹d
 =
Y_LIST
){

395 i‡((
iskey
 = 
	`y™g_key_m©ch
((
y™g_node
*)
yt
, 
«me
)) < 0)

396 
d⁄e
;

397 i‡(
iskey
){

398 i‡((
xc›y
 = 
	`xml_√w
(
«me
, 
x1
, 
	`xml_•ec
(
x
))Ë=
NULL
)

399 
d⁄e
;

400 i‡(
	`xml_c›y
(
x
, 
xc›y
) < 0)

401 
d⁄e
;

405 
ªtvÆ
 = 0;

406 
d⁄e
:

407  
ªtvÆ
;

408 
	}
}

417 
	$ãxt_gë
(
xmldb_h™dÀ
 
xh
,

418 c⁄° *
db
,

419 *
x∑th
,

420 
c⁄fig
,

421 
cxobj
 **
xt›
)

423 
ªtvÆ
 = -1;

424 *
dbfûe
 = 
NULL
;

425 
y™g_•ec
 *
y•ec
;

426 
cxobj
 *
xt
 = 
NULL
;

427 
fd
 = -1;

428 
cxobj
 **
xvec
 = 
NULL
;

429 
size_t
 
xÀn
;

430 
i
;

431 
ãxt_h™dÀ
 *
th
 = 
	`h™dÀ
(
xh
);

432 
db_ñemít
 *
de
 = 
NULL
;

434 i‡((
y•ec
 = 
th
->
th_y™g•ec
Ë=
NULL
){

435 
	`˛ic⁄_îr
(
OE_YANG
, 
ENOENT
, "No yang spec");

436 
d⁄e
;

438 i‡(
th
->
th_ˇche
){

439 i‡((
de
 = 
	`hash_vÆue
(
th
->
th_dbs
, 
db
, 
NULL
)) != NULL)

440 
xt
 = 
de
->
de_xml
;

442 i‡(
xt
 =
NULL
){

443 i‡(
	`ãxt_db2fûe
(
th
, 
db
, &
dbfûe
) < 0)

444 
d⁄e
;

445 i‡(
dbfûe
==
NULL
){

446 
	`˛ic⁄_îr
(
OE_XML
, 0, "dbfile NULL");

447 
d⁄e
;

449 i‡((
fd
 = 
	`›í
(
dbfûe
, 
O_RDONLY
)) < 0){

450 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "›í(%s)", 
dbfûe
);

451 
d⁄e
;

454 i‡(
	`°rcmp
(
th
->
th_f‹m©
,"json")==0){

455 i‡((
	`js⁄_∑r£_fûe
(
fd
, 
y•ec
, &
xt
)) < 0)

456 
d⁄e
;

458 i‡((
	`xml_∑r£_fûe
(
fd
, "</c⁄fig>", 
y•ec
, &
xt
)) < 0)

459 
d⁄e
;

463 i‡(
	`xml_chûd_ƒ
(
xt
) == 0){

464 i‡(
	`xml_«me_£t
(
xt
, "config") < 0)

465 
d⁄e
;

470 i‡(
	`sögÀc⁄figroŸ
(
xt
, &xt) < 0)

471 
d⁄e
;

476 i‡(
	`x∑th_vec
(
xt
, 
x∑th
?x∑th:"/", &
xvec
, &
xÀn
) < 0)

477 
d⁄e
;

483 i‡(
xvec
 !
NULL
)

484 
i
=0; i<
xÀn
; i++){

485 
	`xml_Êag_£t
(
xvec
[
i
], 
XML_FLAG_MARK
);

486 i‡(
th
->
th_ˇche
)

487 
	`xml_≠∂y_™˚°‹
(
xvec
[
i
], (
xml_≠∂y‚_t
*)
xml_Êag_£t
, (*)
XML_FLAG_CHANGE
);

490 i‡(
th
->
th_ˇche
){

494 
cxobj
 *
x1
;

495 
db_ñemít
 
de0
 = {0,};

497 i‡(
de
 !
NULL
)

498 
de0
 = *
de
;

500 
x1
 = 
	`xml_√w
(
	`xml_«me
(
xt
), 
NULL
, 
	`xml_•ec
(xt));

502 i‡(
	`xml_c›y_m¨ked
(
xt
, 
x1
) < 0)

503 
d⁄e
;

504 i‡(
	`xml_≠∂y
(
xt
, 
CX_ELMNT
, (
xml_≠∂y‚_t
*)
xml_Êag_ª£t
, (*)(
XML_FLAG_MARK
|
XML_FLAG_CHANGE
)) < 0)

505 
d⁄e
;

506 i‡(
	`xml_≠∂y
(
x1
, 
CX_ELMNT
, (
xml_≠∂y‚_t
*)
xml_Êag_ª£t
, (*)(
XML_FLAG_MARK
|
XML_FLAG_CHANGE
)) < 0)

507 
d⁄e
;

508 i‡(
de0
.
de_xml
 =
NULL
){

509 
de0
.
de_xml
 = 
xt
;

510 
	`hash_add
(
th
->
th_dbs
, 
db
, &
de0
, (de0));

512 
xt
 = 
x1
;

516 i‡(!
	`xml_Êag
(
xt
, 
XML_FLAG_MARK
))

517 i‡(
	`xml_åì_¥u√_Êagged_sub
(
xt
, 
XML_FLAG_MARK
, 1, 
NULL
) < 0)

518 
d⁄e
;

521 i‡(
	`xml_≠∂y
(
xt
, 
CX_ELMNT
, (
xml_≠∂y‚_t
*)
xml_Êag_ª£t
, (*)
XML_FLAG_MARK
) < 0)

522 
d⁄e
;

525 i‡(
c⁄fig
 && 
	`xml_≠∂y
(
xt
, 
CX_ELMNT
, 
xml_n⁄_c⁄fig_d©a
, 
NULL
) < 0)

526 
d⁄e
;

528 i‡(
	`xml_åì_¥u√_Êagged
(
xt
, 
XML_FLAG_MARK
, 1) < 0)

529 
d⁄e
;

531 i‡(
	`xml_≠∂y
(
xt
, 
CX_ELMNT
, 
xml_deÁu…
, 
NULL
) < 0)

532 
d⁄e
;

534 i‡(!
xml_chûd_s‹t
 && 
	`xml_≠∂y
(
xt
, 
CX_ELMNT
, 
xml_‹dî
, 
NULL
) < 0)

535 
d⁄e
;

537 i‡(
xml_chûd_s‹t
 && 
	`xml_≠∂y0
(
xt
, -1, 
xml_s‹t_vîify
, 
NULL
) < 0)

538 
	`˛ic⁄_log
(
LOG_NOTICE
, "%s: vîify faûed #2", 
__FUNCTION__
);

540 i‡(
debug
>1)

541 
	`˛ic⁄_xml2fûe
(
°dîr
, 
xt
, 0, 1);

542 *
xt›
 = 
xt
;

543 
xt
 = 
NULL
;

544 
ªtvÆ
 = 0;

545 
d⁄e
:

546 i‡(
xt
)

547 
	`xml_‰ì
(
xt
);

548 i‡(
dbfûe
)

549 
	`‰ì
(
dbfûe
);

550 i‡(
xvec
)

551 
	`‰ì
(
xvec
);

552 i‡(
fd
 != -1)

553 
	`˛o£
(
fd
);

554  
ªtvÆ
;

555 
	}
}

568 
	$ãxt_modify
(
cxobj
 *
x0
,

569 
y™g_node
 *
y0
,

570 
cxobj
 *
x0p
,

571 
cxobj
 *
x1
,

572 
›î©i⁄_ty≥
 
›
,

573 
cbuf
 *
cbªt
)

575 
ªtvÆ
 = -1;

576 *
›°r
;

577 *
x1«me
;

578 *
x1˙ame
;

579 
cxobj
 *
x0c
;

580 
cxobj
 *
x0b
;

581 
cxobj
 *
x1c
;

582 *
x1b°r
;

583 
y™g_°mt
 *
yc
;

584 
cxobj
 **
x0vec
 = 
NULL
;

585 
i
;

587 
	`as£π
(
x1
 && 
	`xml_ty≥
(x1Ë=
CX_ELMNT
);

588 
	`as£π
(
y0
);

590 i‡((
›°r
 = 
	`xml_föd_vÆue
(
x1
, "›î©i⁄")Ë!
NULL
)

591 i‡(
	`xml_›î©i⁄
(
›°r
, &
›
) < 0)

592 
d⁄e
;

593 
x1«me
 = 
	`xml_«me
(
x1
);

594 i‡(
y0
->
yn_keyw‹d
 =
Y_LEAF_LIST
 || y0->yn_keyw‹d =
Y_LEAF
){

595 
x1b°r
 = 
	`xml_body
(
x1
);

596 
›
){

597 
OP_CREATE
:

598 i‡(
x0
){

599 i‡(
	`√tc⁄f_d©a_exi°s
(
cbªt
, "DataálreadyÉxists; cannot createÇewÑesource") < 0)

600 
d⁄e
;

601 
ok
;

603 
OP_NONE
:

604 
OP_MERGE
:

605 
OP_REPLACE
:

606 i‡(
x0
==
NULL
){

608 i‡((
x0
 = 
	`xml_√w
(
x1«me
, 
x0p
, (
y™g_°mt
*)
y0
)Ë=
NULL
)

609 
d⁄e
;

612 i‡((
ümkey
=
	`y™g_key_m©ch
(
y0
->
yn_∑ª¡
, 
x1«me
)) < 0)

613 
d⁄e
;

614 i‡(!
ümkey
 && 
›
==
OP_NONE
)

616 i‡(
›
==
OP_NONE
)

618 
	`xml_Êag_£t
(
x0
, 
XML_FLAG_NONE
);

619 i‡(
x1b°r
){

620 i‡((
x0b
 = 
	`xml_√w
("body", 
x0
, 
NULL
)) == NULL)

621 
d⁄e
;

622 
	`xml_ty≥_£t
(
x0b
, 
CX_BODY
);

625 i‡(
x1b°r
){

626 i‡((
x0b
 = 
	`xml_body_gë
(
x0
)Ë=
NULL
){

627 i‡((
x0b
 = 
	`xml_√w
("body", 
x0
, 
NULL
)) == NULL)

628 
d⁄e
;

629 
	`xml_ty≥_£t
(
x0b
, 
CX_BODY
);

631 i‡(
	`xml_vÆue_£t
(
x0b
, 
x1b°r
) < 0)

632 
d⁄e
;

635 
OP_DELETE
:

636 i‡(
x0
==
NULL
){

637 i‡(
	`√tc⁄f_d©a_missög
(
cbªt
, "Data doesÇotÉxist; cannot deleteÑesource") < 0)

638 
d⁄e
;

639 
ok
;

641 
OP_REMOVE
:

642 i‡(
x0
){

643 
	`xml_purge
(
x0
);

651 
›
){

652 
OP_CREATE
:

653 i‡(
x0
){

654 i‡(
	`√tc⁄f_d©a_exi°s
(
cbªt
, "DataálreadyÉxists; cannot createÇewÑesource") < 0)

655 
d⁄e
;

656 
ok
;

658 
OP_REPLACE
:

659 i‡(
x0
){

660 
	`xml_purge
(
x0
);

661 
x0
 = 
NULL
;

663 
OP_MERGE
:

664 
OP_NONE
:

667 i‡(
y0
->
yn_keyw‹d
 =
Y_ANYXML
){

668 i‡(
›
 =
OP_NONE
)

670 i‡(
x0
){

671 
	`xml_purge
(
x0
);

673 i‡((
x0
 = 
	`xml_√w
(
x1«me
, 
x0p
, (
y™g_°mt
*)
y0
)Ë=
NULL
)

674 
d⁄e
;

675 i‡(
	`xml_c›y
(
x1
, 
x0
) < 0)

676 
d⁄e
;

679 i‡(
x0
==
NULL
){

680 i‡((
x0
 = 
	`xml_√w
(
x1«me
, 
x0p
, (
y™g_°mt
*)
y0
)Ë=
NULL
)

681 
d⁄e
;

682 i‡(
›
==
OP_NONE
)

683 
	`xml_Êag_£t
(
x0
, 
XML_FLAG_NONE
);

687 i‡((
x0vec
 = 
	`ˇŒoc
(
	`xml_chûd_ƒ
(
x1
), (x1))Ë=
NULL
){

688 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "calloc");

689 
d⁄e
;

691 
x1c
 = 
NULL
;

692 
i
 = 0;

693 (
x1c
 = 
	`xml_chûd_óch
(
x1
, x1c, 
CX_ELMNT
)Ë!
NULL
) {

694 
x1˙ame
 = 
	`xml_«me
(
x1c
);

696 i‡((
yc
 = 
	`y™g_föd_d©™ode
(
y0
, 
x1˙ame
)Ë=
NULL
){

697 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "Nÿy™gÇodêfound: %s", 
x1˙ame
);

698 
d⁄e
;

701 
x0c
 = 
NULL
;

702 i‡(
	`m©ch_ba£_chûd
(
x0
, 
x1c
, &
x0c
, 
yc
) < 0)

703 
d⁄e
;

704 
x0vec
[
i
++] = 
x0c
;

707 
x1c
 = 
NULL
;

708 
i
 = 0;

709 (
x1c
 = 
	`xml_chûd_óch
(
x1
, x1c, 
CX_ELMNT
)Ë!
NULL
) {

710 
x1˙ame
 = 
	`xml_«me
(
x1c
);

711 
yc
 = 
	`y™g_föd_d©™ode
(
y0
, 
x1˙ame
);

712 i‡(
	`ãxt_modify
(
x0vec
[
i
++], (
y™g_node
*)
yc
, 
x0
, 
x1c
, 
›
, 
cbªt
) < 0)

713 
d⁄e
;

715 i‡(
	`cbuf_Àn
(
cbªt
))

716 
ok
;

719 
OP_DELETE
:

720 i‡(
x0
==
NULL
){

721 i‡(
	`√tc⁄f_d©a_missög
(
cbªt
, "Data doesÇotÉxist; cannot deleteÑesource") < 0)

722 
d⁄e
;

723 
ok
;

725 
OP_REMOVE
:

726 i‡(
x0
)

727 
	`xml_purge
(
x0
);

733 
	`xml_s‹t
(
x0p
, 
NULL
);

734 
ok
:

735 
ªtvÆ
 = 0;

736 
d⁄e
:

737 i‡(
x0vec
)

738 
	`‰ì
(
x0vec
);

739  
ªtvÆ
;

740 
	}
}

751 
	$ãxt_modify_t›
(
cxobj
 *
x0
,

752 
cxobj
 *
x1
,

753 
y™g_•ec
 *
y•ec
,

754 
›î©i⁄_ty≥
 
›
,

755 
cbuf
 *
cbªt
)

757 
ªtvÆ
 = -1;

758 *
x1˙ame
;

759 
cxobj
 *
x0c
;

760 
cxobj
 *
x1c
;

761 
y™g_°mt
 *
yc
;

762 *
›°r
;

765 
	`as£π
(
x0
 && 
	`°rcmp
(
	`xml_«me
(x0),"config")==0);

766 
	`as£π
(
x1
 && 
	`°rcmp
(
	`xml_«me
(x1),"config")==0);

769 i‡((
›°r
 = 
	`xml_föd_vÆue
(
x1
, "›î©i⁄")Ë!
NULL
)

770 i‡(
	`xml_›î©i⁄
(
›°r
, &
›
) < 0)

771 
d⁄e
;

773 i‡(
	`xml_chûd_ƒ
(
x1
) == 0){

774 i‡(
	`xml_chûd_ƒ
(
x0
))

775 
›
){

776 
OP_DELETE
:

777 
OP_REMOVE
:

778 
OP_REPLACE
:

779 
x0c
 = 
NULL
;

780 (
x0c
 = 
	`xml_chûd_óch
(
x0
, x0c, 
CX_ELMNT
)Ë!
NULL
)

781 
	`xml_purge
(
x0c
);

787 
›
){

788 
OP_DELETE
:

789 i‡(
	`√tc⁄f_d©a_missög
(
cbªt
, "Data doesÇotÉxist; cannot deleteÑesource") < 0)

790 
d⁄e
;

791 
ok
;

798 i‡(
›
 =
OP_REPLACE
 || o∞=
OP_DELETE
){

799 
x0c
 = 
NULL
;

800 (
x0c
 = 
	`xml_chûd_i
(
x0
, 0)) != 0)

801 
	`xml_purge
(
x0c
);

804 
x1c
 = 
NULL
;

805 (
x1c
 = 
	`xml_chûd_óch
(
x1
, x1c, 
CX_ELMNT
)Ë!
NULL
) {

806 
x1˙ame
 = 
	`xml_«me
(
x1c
);

808 i‡((
yc
 = 
	`y™g_föd_t›node
(
y•ec
, 
x1˙ame
, 
YC_DATANODE
)Ë=
NULL
){

809 
	`˛ic⁄_îr
(
OE_YANG
, 
ENOENT
, "XMLÇodê%s/%†ha†nÿc‹ª•⁄dög y™g s≥cifiˇti⁄ (InvÆid XML o∏wr⁄g Y™g s≥c?", 
x1
, 
x1˙ame
);

810 
d⁄e
;

813 i‡(
	`m©ch_ba£_chûd
(
x0
, 
x1c
, &
x0c
, 
yc
) < 0)

814 
d⁄e
;

815 i‡(
	`ãxt_modify
(
x0c
, (
y™g_node
*)
yc
, 
x0
, 
x1c
, 
›
, 
cbªt
) < 0)

816 
d⁄e
;

818 i‡(
	`cbuf_Àn
(
cbªt
))

819 
ok
;

821 
ok
:

822 
ªtvÆ
 = 0;

823 
d⁄e
:

824  
ªtvÆ
;

825 
	}
}

844 
	$xml_c⁄èöî_¥e£n˚
(
cxobj
 *
x
,

845 *
¨g
)

847 
ªtvÆ
 = -1;

848 
y™g_°mt
 *
y
;

850 i‡((
y
 = (
y™g_°mt
*)
	`xml_•ec
(
x
)Ë=
NULL
){

851 
ªtvÆ
 = 0;

852 
d⁄e
;

855 i‡(
y
->
ys_keyw‹d
 =
Y_CONTAINER
 &&

856 
	`xml_chûd_ƒ
(
x
)==0 &&

857 
	`y™g_föd
((
y™g_node
*)
y
, 
Y_PRESENCE
, 
NULL
) == NULL)

858 
	`xml_Êag_£t
(
x
, 
XML_FLAG_MARK
);

859 
ªtvÆ
 = 0;

860 
d⁄e
:

861  
ªtvÆ
;

862 
	}
}

869 
	$ãxt_put
(
xmldb_h™dÀ
 
xh
,

870 c⁄° *
db
,

871 
›î©i⁄_ty≥
 
›
,

872 
cxobj
 *
x1
,

873 
cbuf
 *
cbªt
)

875 
ªtvÆ
 = -1;

876 
ãxt_h™dÀ
 *
th
 = 
	`h™dÀ
(
xh
);

877 *
dbfûe
 = 
NULL
;

878 
fd
 = -1;

879 
FILE
 *
f
 = 
NULL
;

880 
cbuf
 *
cb
 = 
NULL
;

881 
y™g_•ec
 *
y•ec
;

882 
cxobj
 *
x0
 = 
NULL
;

883 
db_ñemít
 *
de
 = 
NULL
;

884 
cbªéoˇl
 = 0;

886 i‡(
cbªt
 =
NULL
){

887 i‡((
cbªt
 = 
	`cbuf_√w
()Ë=
NULL
){

888 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cbuf_new");

889 
d⁄e
;

891 
cbªéoˇl
++;

893 i‡((
y•ec
 = 
th
->
th_y™g•ec
Ë=
NULL
){

894 
	`˛ic⁄_îr
(
OE_YANG
, 
ENOENT
, "No yang spec");

895 
d⁄e
;

897 i‡(
x1
 && 
	`°rcmp
(
	`xml_«me
(x1),"config")!=0){

898 
	`˛ic⁄_îr
(
OE_XML
, 0, "Top-level symbol of modificationÅree is %s,Éxpected \"config\"",

899 
	`xml_«me
(
x1
));

900 
d⁄e
;

902 i‡(
th
->
th_ˇche
){

903 i‡((
de
 = 
	`hash_vÆue
(
th
->
th_dbs
, 
db
, 
NULL
)) != NULL)

904 
x0
 = 
de
->
de_xml
;

906 i‡(
x0
 =
NULL
){

907 i‡(
	`ãxt_db2fûe
(
th
, 
db
, &
dbfûe
) < 0)

908 
d⁄e
;

909 i‡(
dbfûe
==
NULL
){

910 
	`˛ic⁄_îr
(
OE_XML
, 0, "dbfile NULL");

911 
d⁄e
;

913 i‡((
fd
 = 
	`›í
(
dbfûe
, 
O_RDONLY
)) < 0) {

914 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "›í(%s)", 
dbfûe
);

915 
d⁄e
;

918 i‡(
	`°rcmp
(
th
->
th_f‹m©
,"json")==0){

919 i‡((
	`js⁄_∑r£_fûe
(
fd
, 
y•ec
, &
x0
)) < 0)

920 
d⁄e
;

922 i‡((
	`xml_∑r£_fûe
(
fd
, "</c⁄fig>", 
y•ec
, &
x0
)) < 0)

923 
d⁄e
;

927 i‡(
	`xml_chûd_ƒ
(
x0
) == 0){

928 i‡(
	`xml_«me_£t
(
x0
, "config") < 0)

929 
d⁄e
;

934 i‡(
	`sögÀc⁄figroŸ
(
x0
, &x0) < 0)

935 
d⁄e
;

939 i‡(
	`°rcmp
(
	`xml_«me
(
x0
),"config")!=0){

940 
	`˛ic⁄_îr
(
OE_XML
, 0, "Top-level symbol is %s,Éxpected \"config\"",

941 
	`xml_«me
(
x0
));

942 
d⁄e
;

947 i‡(
	`xml_≠∂y
(
x1
, 
CX_ELMNT
, 
xml_•ec_p›uœã
, 
y•ec
) < 0)

948 
d⁄e
;

950 i‡(
xml_chûd_s‹t
 && 
	`xml_≠∂y0
(
x1
, -1, 
xml_s‹t_vîify
, 
NULL
) < 0)

951 
	`˛ic⁄_log
(
LOG_NOTICE
, "%s: vîify faûed #1", 
__FUNCTION__
);

957 i‡(
	`ãxt_modify_t›
(
x0
, 
x1
, 
y•ec
, 
›
, 
cbªt
) < 0)

958 
d⁄e
;

960 i‡(
	`cbuf_Àn
(
cbªt
))

961 
ok
;

964 i‡(
	`xml_åì_¥u√_Êagged_sub
(
x0
, 
XML_FLAG_NONE
, 0, 
NULL
) <0)

965 
d⁄e
;

966 i‡(
	`xml_≠∂y
(
x0
, 
CX_ELMNT
, (
xml_≠∂y‚_t
*)
xml_Êag_ª£t
,

967 (*)
XML_FLAG_NONE
) < 0)

968 
d⁄e
;

970 i‡(
	`xml_≠∂y
(
x0
, 
CX_ELMNT
, (
xml_≠∂y‚_t
*)
xml_c⁄èöî_¥e£n˚
, 
NULL
) < 0)

971 
d⁄e
;

973 i‡(
	`xml_åì_¥u√_Êagged
(
x0
, 
XML_FLAG_MARK
, 1) < 0)

974 
d⁄e
;

976 i‡(
xml_chûd_s‹t
 && 
	`xml_≠∂y0
(
x0
, -1, 
xml_s‹t_vîify
, 
NULL
) < 0)

977 
	`˛ic⁄_log
(
LOG_NOTICE
, "%s: vîify faûed #3", 
__FUNCTION__
);

980 i‡(
th
->
th_ˇche
){

981 
db_ñemít
 
de0
 = {0,};

982 i‡(
de
 !
NULL
)

983 
de0
 = *
de
;

984 i‡(
de0
.
de_xml
 =
NULL
){

985 
de0
.
de_xml
 = 
x0
;

986 
	`hash_add
(
th
->
th_dbs
, 
db
, &
de0
, (de0));

989 i‡(
dbfûe
 =
NULL
){

990 i‡(
	`ãxt_db2fûe
(
th
, 
db
, &
dbfûe
) < 0)

991 
d⁄e
;

992 i‡(
dbfûe
==
NULL
){

993 
	`˛ic⁄_îr
(
OE_XML
, 0, "dbfile NULL");

994 
d⁄e
;

997 i‡(
fd
 != -1){

998 
	`˛o£
(
fd
);

999 
fd
 = -1;

1001 i‡((
f
 = 
	`f›í
(
dbfûe
, "w")Ë=
NULL
){

1002 
	`˛ic⁄_îr
(
OE_CFG
, 
î∫o
, "Cª©ög fûê%s", 
dbfûe
);

1003 
d⁄e
;

1005 i‡(
	`°rcmp
(
th
->
th_f‹m©
,"json")==0){

1006 i‡(
	`xml2js⁄
(
f
, 
x0
, 
th
->
th_¥ëty
) < 0)

1007 
d⁄e
;

1009 i‡(
	`˛ic⁄_xml2fûe
(
f
, 
x0
, 0, 
th
->
th_¥ëty
) < 0)

1010 
d⁄e
;

1011 
ok
:

1012 
ªtvÆ
 = 0;

1013 
d⁄e
:

1014 i‡(
cbªéoˇl
 && 
cbªt
)

1015 
	`cbuf_‰ì
(
cbªt
);

1016 i‡(
f
 !
NULL
)

1017 
	`f˛o£
(
f
);

1018 i‡(
dbfûe
)

1019 
	`‰ì
(
dbfûe
);

1020 i‡(
fd
 != -1)

1021 
	`˛o£
(
fd
);

1022 i‡(
cb
)

1023 
	`cbuf_‰ì
(
cb
);

1024 i‡(!
th
->
th_ˇche
 && 
x0
)

1025 
	`xml_‰ì
(
x0
);

1026  
ªtvÆ
;

1027 
	}
}

1037 
	$ãxt_c›y
(
xmldb_h™dÀ
 
xh
,

1038 c⁄° *
‰om
,

1039 c⁄° *
to
)

1041 
ªtvÆ
 = -1;

1042 
ãxt_h™dÀ
 *
th
 = 
	`h™dÀ
(
xh
);

1043 *
‰omfûe
 = 
NULL
;

1044 *
tofûe
 = 
NULL
;

1045 
db_ñemít
 *
de
 = 
NULL
;

1046 
db_ñemít
 *
de2
 = 
NULL
;

1049 i‡(
th
->
th_ˇche
){

1052 i‡((
de
 = 
	`hash_vÆue
(
th
->
th_dbs
, 
to
, 
NULL
)) != NULL){

1053 i‡(
de
->
de_xml
 !
NULL
){

1054 
	`xml_‰ì
(
de
->
de_xml
);

1055 
de
->
de_xml
 = 
NULL
;

1061 i‡((
de2
 = 
	`hash_vÆue
(
th
->
th_dbs
, 
‰om
, 
NULL
)) != NULL){

1062 i‡(
de2
->
de_xml
 !
NULL
){

1063 
db_ñemít
 
de0
 = {0,};

1064 
cxobj
 *
x
, *
xc›y
;

1065 
x
 = 
de2
->
de_xml
;

1066 i‡(
de
 !
NULL
)

1067 
de0
 = *
de
;

1068 i‡((
xc›y
 = 
	`xml_√w
(
	`xml_«me
(
x
), 
NULL
, 
	`xml_•ec
(x))) == NULL)

1069 
d⁄e
;

1070 i‡(
	`xml_c›y
(
x
, 
xc›y
) < 0)

1071 
d⁄e
;

1072 
de0
.
de_xml
 = 
xc›y
;

1073 
	`hash_add
(
th
->
th_dbs
, 
to
, &
de0
, (de0));

1077 i‡(
	`ãxt_db2fûe
(
th
, 
‰om
, &
‰omfûe
) < 0)

1078 
d⁄e
;

1079 i‡(
	`ãxt_db2fûe
(
th
, 
to
, &
tofûe
) < 0)

1080 
d⁄e
;

1081 i‡(
	`˛ic⁄_fûe_c›y
(
‰omfûe
, 
tofûe
) < 0)

1082 
d⁄e
;

1083 
ªtvÆ
 = 0;

1084 
d⁄e
:

1085 i‡(
‰omfûe
)

1086 
	`‰ì
(
‰omfûe
);

1087 i‡(
tofûe
)

1088 
	`‰ì
(
tofûe
);

1089  
ªtvÆ
;

1090 
	}
}

1100 
	$ãxt_lock
(
xmldb_h™dÀ
 
xh
,

1101 c⁄° *
db
,

1102 
pid
)

1104 
ãxt_h™dÀ
 *
th
 = 
	`h™dÀ
(
xh
);

1105 
db_ñemít
 *
de
 = 
NULL
;

1106 
db_ñemít
 
de0
 = {0,};

1108 i‡((
de
 = 
	`hash_vÆue
(
th
->
th_dbs
, 
db
, 
NULL
)) != NULL)

1109 
de0
 = *
de
;

1110 
de0
.
de_pid
 = 
pid
;

1111 
	`hash_add
(
th
->
th_dbs
, 
db
, &
de0
, (de0));

1112 
	`˛ic⁄_debug
(1, "%s:Üocked by %u", 
db
, 
pid
);

1114 
	}
}

1125 
	$ãxt_u∆ock
(
xmldb_h™dÀ
 
xh
,

1126 c⁄° *
db
)

1128 
ãxt_h™dÀ
 *
th
 = 
	`h™dÀ
(
xh
);

1129 
db_ñemít
 *
de
 = 
NULL
;

1131 i‡((
de
 = 
	`hash_vÆue
(
th
->
th_dbs
, 
db
, 
NULL
)) != NULL){

1132 
de
->
de_pid
 = 0;

1133 
	`hash_add
(
th
->
th_dbs
, 
db
, 
de
, (*de));

1136 
	}
}

1145 
	$ãxt_u∆ock_Æl
(
xmldb_h™dÀ
 
xh
,

1146 
pid
)

1148 
ãxt_h™dÀ
 *
th
 = 
	`h™dÀ
(
xh
);

1149 **
keys
 = 
NULL
;

1150 
size_t
 
kÀn
;

1151 
i
;

1152 
db_ñemít
 *
de
;

1154 i‡((
keys
 = 
	`hash_keys
(
th
->
th_dbs
, &
kÀn
)Ë=
NULL
)

1156 
i
 = 0; i < 
kÀn
; i++)

1157 i‡((
de
 = 
	`hash_vÆue
(
th
->
th_dbs
, 
keys
[
i
], 
NULL
)) != NULL &&

1158 
de
->
de_pid
 =
pid
){

1159 
de
->
de_pid
 = 0;

1160 
	`hash_add
(
th
->
th_dbs
, 
keys
[
i
], 
de
, (*de));

1162 i‡(
keys
)

1163 
	`‰ì
(
keys
);

1165 
	}
}

1175 
	$ãxt_i¶ocked
(
xmldb_h™dÀ
 
xh
,

1176 c⁄° *
db
)

1178 
ãxt_h™dÀ
 *
th
 = 
	`h™dÀ
(
xh
);

1179 
db_ñemít
 *
de
;

1181 i‡((
de
 = 
	`hash_vÆue
(
th
->
th_dbs
, 
db
, 
NULL
)) == NULL)

1183  
de
->
de_pid
;

1184 
	}
}

1194 
	$ãxt_exi°s
(
xmldb_h™dÀ
 
xh
,

1195 c⁄° *
db
)

1198 
ªtvÆ
 = -1;

1199 
ãxt_h™dÀ
 *
th
 = 
	`h™dÀ
(
xh
);

1200 *
fûíame
 = 
NULL
;

1201 
°©
 
sb
;

1203 i‡(
	`ãxt_db2fûe
(
th
, 
db
, &
fûíame
) < 0)

1204 
d⁄e
;

1205 i‡(
	`l°©
(
fûíame
, &
sb
) < 0)

1206 
ªtvÆ
 = 0;

1208 
ªtvÆ
 = 1;

1209 
d⁄e
:

1210 i‡(
fûíame
)

1211 
	`‰ì
(
fûíame
);

1212  
ªtvÆ
;

1213 
	}
}

1222 
	$ãxt_dñëe
(
xmldb_h™dÀ
 
xh
,

1223 c⁄° *
db
)

1225 
ªtvÆ
 = -1;

1226 *
fûíame
 = 
NULL
;

1227 
ãxt_h™dÀ
 *
th
 = 
	`h™dÀ
(
xh
);

1228 
db_ñemít
 *
de
 = 
NULL
;

1229 
cxobj
 *
xt
 = 
NULL
;

1230 
°©
 
sb
;

1232 i‡(
th
->
th_ˇche
){

1233 i‡((
de
 = 
	`hash_vÆue
(
th
->
th_dbs
, 
db
, 
NULL
)) != NULL){

1234 i‡((
xt
 = 
de
->
de_xml
Ë!
NULL
){

1235 
	`xml_‰ì
(
xt
);

1236 
de
->
de_xml
 = 
NULL
;

1240 i‡(
	`ãxt_db2fûe
(
th
, 
db
, &
fûíame
) < 0)

1241 
d⁄e
;

1242 i‡(
	`l°©
(
fûíame
, &
sb
) == 0)

1243 i‡(
	`u∆ök
(
fûíame
) < 0){

1244 
	`˛ic⁄_îr
(
OE_DB
, 
î∫o
, "u∆ök %s", 
fûíame
);

1245 
d⁄e
;

1247 
ªtvÆ
 = 0;

1248 
d⁄e
:

1249 i‡(
fûíame
)

1250 
	`‰ì
(
fûíame
);

1251  
ªtvÆ
;

1252 
	}
}

1262 
	$ãxt_¸óã
(
xmldb_h™dÀ
 
xh
,

1263 c⁄° *
db
)

1265 
ªtvÆ
 = -1;

1266 
ãxt_h™dÀ
 *
th
 = 
	`h™dÀ
(
xh
);

1267 *
fûíame
 = 
NULL
;

1268 
fd
 = -1;

1269 
db_ñemít
 *
de
 = 
NULL
;

1270 
cxobj
 *
xt
 = 
NULL
;

1272 i‡(
th
->
th_ˇche
){

1273 i‡((
de
 = 
	`hash_vÆue
(
th
->
th_dbs
, 
db
, 
NULL
)) != NULL){

1274 i‡((
xt
 = 
de
->
de_xml
Ë!
NULL
){

1275 
	`as£π
(
xt
==
NULL
);

1276 
	`xml_‰ì
(
xt
);

1277 
de
->
de_xml
 = 
NULL
;

1281 i‡(
	`ãxt_db2fûe
(
th
, 
db
, &
fûíame
) < 0)

1282 
d⁄e
;

1283 i‡((
fd
 = 
	`›í
(
fûíame
, 
O_CREAT
|
O_WRONLY
, 
S_IRWXU
)) == -1) {

1284 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "›í(%s)", 
fûíame
);

1285 
d⁄e
;

1287 
ªtvÆ
 = 0;

1288 
d⁄e
:

1289 i‡(
fûíame
)

1290 
	`‰ì
(
fûíame
);

1291 i‡(
fd
 != -1)

1292 
	`˛o£
(
fd
);

1293  
ªtvÆ
;

1294 
	}
}

1298 
	$ãxt_∂ugö_exô
()

1301 
	}
}

1303 c⁄° 
xmldb_≠i
 
	g≠i
;

1304 c⁄° 
xmldb_≠i
 
	g≠i
;

1308 
	$˛ix⁄_xmldb_∂ugö_öô
(
vîsi⁄
)

1310 i‡(
vîsi⁄
 !
XMLDB_API_VERSION
){

1311 
	`˛ic⁄_îr
(
OE_DB
, 0, "Invalid version %dÉxpected %d",

1312 
vîsi⁄
, 
XMLDB_API_VERSION
);

1313 
d⁄e
;

1315  (*)&
≠i
;

1316 
d⁄e
:

1317  
NULL
;

1318 
	}
}

1320 c⁄° 
xmldb_≠i
 
	g≠i
 = {

1322 
XMLDB_API_MAGIC
,

1323 
˛ix⁄_xmldb_∂ugö_öô
,

1324 
ãxt_∂ugö_exô
,

1325 
ãxt_c⁄√˘
,

1326 
ãxt_disc⁄√˘
,

1327 
ãxt_gë›t
,

1328 
ãxt_£t›t
,

1329 
ãxt_gë
,

1330 
ãxt_put
,

1331 
ãxt_c›y
,

1332 
ãxt_lock
,

1333 
ãxt_u∆ock
,

1334 
ãxt_u∆ock_Æl
,

1335 
ãxt_i¶ocked
,

1336 
ãxt_exi°s
,

1337 
ãxt_dñëe
,

1338 
ãxt_¸óã
,

1352 
	$ußge
(*
¨gv0
)

1354 
	`Ârötf
(
°dîr
, "ußge:\n%s\tgë <db> <y™gdú> <y™gmod> [<x∑th>]\t\txm»⁄ stdö\n", 
¨gv0
);

1355 
	`Ârötf
(
°dîr
, "\tput <db> <yangdir> <yangmod> set|merge|delete\txmlÅo stdout\n");

1356 
	`exô
(0);

1357 
	}
}

1360 
	$maö
(
¨gc
,

1361 **
¨gv
)

1363 
cxobj
 *
xt
;

1364 
cxobj
 *
xn
;

1365 *
x∑th
;

1366 
›î©i⁄_ty≥
 
›
;

1367 *
cmd
;

1368 *
db
;

1369 *
y™gdú
;

1370 *
y™gmod
;

1371 
y™g_•ec
 *
y•ec
 = 
NULL
;

1372 
˛ic⁄_h™dÀ
 
h
;

1374 i‡((
h
 = 
	`˛ic⁄_h™dÀ_öô
()Ë=
NULL
)

1375 
d⁄e
;

1376 
	`˛ic⁄_log_öô
("xmldb", 
LOG_DEBUG
, 
CLICON_LOG_STDERR
);

1377 i‡(
¨gc
 < 4){

1378 
	`ußge
(
¨gv
[0]);

1379 
d⁄e
;

1381 
cmd
 = 
¨gv
[1];

1382 
db
 = 
¨gv
[2];

1383 
y™gdú
 = 
¨gv
[3];

1384 
y™gmod
 = 
¨gv
[4];

1385 
	`db_öô
(
db
);

1386 i‡((
y•ec
 = 
	`y•ec_√w
()Ë=
NULL
)

1387 
d⁄e


1388 i‡(
	`y™g_∑r£
(
h
, 
y™gdú
, 
y™gmod
, 
NULL
, 
y•ec
) < 0)

1389 
d⁄e
;

1390 i‡(
	`°rcmp
(
cmd
, "get")==0){

1391 i‡(
¨gc
 < 5)

1392 
	`ußge
(
¨gv
[0]);

1393 
x∑th
 = 
¨gc
>5?
¨gv
[5]:
NULL
;

1394 i‡(
	`xmldb_gë
(
h
, 
db
, 
x∑th
, &
xt
, 
NULL
, 1, NULL) < 0)

1395 
d⁄e
;

1396 i‡(
	`°rcmp
(
th
->
th_f‹m©
,"json")==0){

1397 i‡(
	`xml2js⁄
(
°dout
, 
xt
, 
th
->
th_¥ëty
) < 0)

1398 
d⁄e
;

1401 i‡(
	`˛ic⁄_xml2fûe
(
°dout
, 
xt
, 0, 
th
->
th_¥ëty
) < 0)

1402 
d⁄e
;

1406 i‡(
	`°rcmp
(
cmd
, "put")==0){

1407 i‡(
¨gc
 != 6)

1408 
	`ußge
(
¨gv
[0]);

1409 i‡(
	`xml_∑r£_fûe
(0, "</˛ic⁄>", 
NULL
, &
xt
) < 0)

1410 
d⁄e
;

1411 i‡(
	`xml_roŸchûd
(
xt
, 0, &
xn
) < 0)

1412 
d⁄e
;

1413 i‡(
	`°rcmp
(
¨gv
[5], "set") == 0)

1414 
›
 = 
OP_REPLACE
;

1416 i‡(
	`°rcmp
(
¨gv
[4], "merge") == 0)

1417 
›
 = 
OP_MERGE
;

1418 i‡(
	`°rcmp
(
¨gv
[5], "delete") == 0)

1419 
›
 = 
OP_REMOVE
;

1421 
	`ußge
(
¨gv
[0]);

1422 i‡(
	`xmldb_put
(
h
, 
db
, 
›
, 
NULL
, 
xn
, NULL) < 0)

1423 
d⁄e
;

1426 
	`ußge
(
¨gv
[0]);

1427 
	`¥ötf
("\n");

1428 
d⁄e
:

1430 
	}
}

	@clixon-master/datastore/text/clixon_xmldb_text.h

36 #i‚de‡
_CLIXON_XMLDB_TEXT_H


37 
	#_CLIXON_XMLDB_TEXT_H


	)

42 
ãxt_gë
(
xmldb_h™dÀ
 
h
, c⁄° *
db
, *
x∑th
, 
c⁄fig
, 
cxobj
 **
xt›
);

43 
ãxt_put
(
xmldb_h™dÀ
 
h
, c⁄° *
db
, 
›î©i⁄_ty≥
 
›
, 
cxobj
 *
xt
, 
cbuf
 *
cbªt
);

44 
ãxt_dump
(
FILE
 *
f
, *
dbfûíame
, *
rxkey
);

45 
ãxt_c›y
(
xmldb_h™dÀ
 
h
, c⁄° *
‰om
, c⁄° *
to
);

46 
ãxt_lock
(
xmldb_h™dÀ
 
h
, c⁄° *
db
, 
pid
);

47 
ãxt_u∆ock
(
xmldb_h™dÀ
 
h
, c⁄° *
db
);

48 
ãxt_u∆ock_Æl
(
xmldb_h™dÀ
 
h
, 
pid
);

49 
ãxt_i¶ocked
(
xmldb_h™dÀ
 
h
, c⁄° *
db
);

50 
ãxt_exi°s
(
xmldb_h™dÀ
 
h
, c⁄° *
db
);

51 
ãxt_dñëe
(
xmldb_h™dÀ
 
h
, c⁄° *
db
);

	@clixon-master/example/docker/run.sh

1 #!/
bö
/
bash


2 #Sèπ 
d´m⁄
 
™d
 
a
 
˛i
 
dockî
 
c⁄èöîs
 .

3 #NŸê
th©
 
they
 
have
 
a
 
comm⁄
 
fûe
-
sy°em
 
©
 /
d©a


4 #
 dockîÑu¿-td --√àho° -v $’wd)/d©a:/d©®ﬁofhagßnd/˛ix⁄_backíd

6 
sudo
 
dockî
 
	grun
 -
	gti
 --
	grm
 --
√t
 
	gho°
 -
v
 
$
(
pwd
)/
	gd©a
:/
d©a
 
ﬁofhagßnd
/
˛ix⁄_˛i


	@clixon-master/example/example_backend.c

39 
	~<°dio.h
>

40 
	~<°dlib.h
>

41 
	~<°rög.h
>

42 
	~<î∫o.h
>

43 
	~<sig«l.h
>

44 
	~<uni°d.h
>

45 
	~<sys/time.h
>

48 
	~<˛igí/˛igí.h
>

51 
	~<˛ix⁄/˛ix⁄.h
>

54 
	~<˛ix⁄/˛ix⁄_backíd.h
>

57 
nŸifiˇti⁄_timî_£tup
(
˛ic⁄_h™dÀ
 
h
);

62 
	$å™ß˘i⁄_vÆid©e
(
˛ic⁄_h™dÀ
 
h
,

63 
å™ß˘i⁄_d©a
 
td
)

67 
	}
}

72 
	$å™ß˘i⁄_commô
(
˛ic⁄_h™dÀ
 
h
,

73 
å™ß˘i⁄_d©a
 
td
)

75 
cxobj
 *
èrgë
 = 
	`å™ß˘i⁄_èrgë
(
td
);

76 
cxobj
 **
vec
 = 
NULL
;

77 
i
;

78 
size_t
 
Àn
;

80 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

82 i‡(
	`x∑th_vec_Êag
(
èrgë
, "//öãrÁ˚", 
XML_FLAG_ADD
, &
vec
, &
Àn
) < 0)

84 i‡(
debug
)

85 
i
=0; i<
Àn
; i++)

86 
	`xml_¥öt
(
°dout
, 
vec
[
i
]);

88 i‡(
vec
)

89 
	`‰ì
(
vec
);

91 
	}
}

96 
	$nŸifiˇti⁄_timî
(
fd
,

97 *
¨g
)

99 
ªtvÆ
 = -1;

100 
˛ic⁄_h™dÀ
 
h
 = (˛ic⁄_h™dÀ)
¨g
;

102 i‡(
	`backíd_nŸify
(
h
, "ROUTING", 0, "RoutingÇotification") < 0)

103 
d⁄e
;

104 i‡(
	`nŸifiˇti⁄_timî_£tup
(
h
) < 0)

105 
d⁄e
;

106 
ªtvÆ
 = 0;

107 
d⁄e
:

108  
ªtvÆ
;

109 
	}
}

114 
	$nŸifiˇti⁄_timî_£tup
(
˛ic⁄_h™dÀ
 
h
)

116 
timevÆ
 
t
, 
t1
;

118 
	`gëtimeofday
(&
t
, 
NULL
);

119 
t1
.
tv_£c
 = 10;Å1.
tv_u£c
 = 0;

120 
	`timîadd
(&
t
, &
t1
, &t);

121  
	`evít_ªg_timeout
(
t
, 
nŸifiˇti⁄_timî
, 
h
, "notificationÅimer");

122 
	}
}

128 
	$fib_rouã
(
˛ic⁄_h™dÀ
 
h
,

129 
cxobj
 *
xe
,

130 
cbuf
 *
cbªt
,

131 *
¨g
,

132 *
ªg¨g
)

134 
	`˝rötf
(
cbªt
, "<rpc-reply><route>"

139 
	}
}

145 
	$rouã_cou¡
(
˛ic⁄_h™dÀ
 
h
,

146 
cxobj
 *
xe
,

147 
cbuf
 *
cbªt
,

148 *
¨g
,

149 *
ªg¨g
)

151 
	`˝rötf
(
cbªt
, "<rpc-reply><number-of-routes>42</number-of-routes></rpc-reply>");

153 
	}
}

162 
	$em±y
(
˛ic⁄_h™dÀ
 
h
,

163 
cxobj
 *
xe
,

164 
cbuf
 *
cbªt
,

165 *
¨g
,

166 *
ªg¨g
)

168 
	`˝rötf
(
cbªt
, "<rpc-reply><ok/></rpc-reply>");

170 
	}
}

183 
	$∂ugö_°©ed©a
(
˛ic⁄_h™dÀ
 
h
,

184 *
x∑th
,

185 
cxobj
 *
x°©e
)

187 
ªtvÆ
 = -1;

188 
cxobj
 **
xvec
 = 
NULL
;

191 i‡(
	`xml_∑r£_°rög
("<interfaces-state><interface>"

195 "</öãrÁ˚></öãrÁ˚s-°©e>", 
NULL
, &
x°©e
) < 0)

196 
d⁄e
;

197 
ªtvÆ
 = 0;

198 
d⁄e
:

199 i‡(
xvec
)

200 
	`‰ì
(
xvec
);

201  
ªtvÆ
;

202 
	}
}

217 
	$∂ugö_ª£t
(
˛ic⁄_h™dÀ
 
h
,

218 c⁄° *
db
)

220 
ªtvÆ
 = -1;

221 
cxobj
 *
xt
 = 
NULL
;

223 i‡(
	`xml_∑r£_°rög
("<config><interfaces><interface>"

225 "</öãrÁ˚></öãrÁ˚s></c⁄fig>", 
NULL
, &
xt
) < 0)

226 
d⁄e
;

228 i‡(
	`xml_roŸchûd
(
xt
, 0, &xt) < 0)

229 
d⁄e
;

231 i‡(
	`xmldb_put
(
h
, (*)
db
, 
OP_MERGE
, 
xt
, 
NULL
) < 0)

232 
d⁄e
;

233 
ªtvÆ
 = 0;

234 
d⁄e
:

235 i‡(
xt
 !
NULL
)

236 
	`xml_‰ì
(
xt
);

237  
ªtvÆ
;

238 
	}
}

253 
	$∂ugö_°¨t
(
˛ic⁄_h™dÀ
 
h
,

254 
¨gc
,

255 **
¨gv
)

258 
	}
}

260 
˛ix⁄_∂ugö_≠i
 *
˛ix⁄_∂ugö_öô
(
˛ic⁄_h™dÀ
 
h
);

262 
˛ix⁄_∂ugö_≠i
 
	g≠i
 = {

264 
˛ix⁄_∂ugö_öô
,

265 
∂ugö_°¨t
,

266 
NULL
,

267 .
ˇ_ª£t
=
∂ugö_ª£t
,

268 .
	gˇ_°©ed©a
=
∂ugö_°©ed©a
,

269 .
	gˇ_å™s_begö
=
NULL
,

270 .
	gˇ_å™s_vÆid©e
=
å™ß˘i⁄_vÆid©e
,

271 .
	gˇ_å™s_com∂ëe
=
NULL
,

272 .
	gˇ_å™s_commô
=
å™ß˘i⁄_commô
,

273 .
	gˇ_å™s_íd
=
NULL
,

274 .
	gˇ_å™s_ab‹t
=
NULL


282 
˛ix⁄_∂ugö_≠i
 *

283 
	$˛ix⁄_∂ugö_öô
(
˛ic⁄_h™dÀ
 
h
)

285 
	`˛ic⁄_debug
(1, "%†backíd", 
__FUNCTION__
);

286 i‡(
	`nŸifiˇti⁄_timî_£tup
(
h
) < 0)

287 
d⁄e
;

289 i‡(
	`Ωc_ˇŒback_ªgi°î
(
h
, 
fib_rouã
,

290 
NULL
,

293 
d⁄e
;

294 i‡(
	`Ωc_ˇŒback_ªgi°î
(
h
, 
rouã_cou¡
,

295 
NULL
,

298 
d⁄e
;

299 i‡(
	`Ωc_ˇŒback_ªgi°î
(
h
, 
em±y
,

300 
NULL
,

303 
d⁄e
;

305  &
≠i
;

306 
d⁄e
:

307  
NULL
;

308 
	}
}

	@clixon-master/example/example_backend_nacm.c

40 
	~<°dio.h
>

41 
	~<°dlib.h
>

42 
	~<°rög.h
>

43 
	~<î∫o.h
>

44 
	~<sig«l.h
>

45 
	~<uni°d.h
>

46 
	~<sys/time.h
>

49 
	~<˛igí/˛igí.h
>

52 
	~<˛ix⁄/˛ix⁄.h
>

55 
	~<˛ix⁄/˛ix⁄_backíd.h
>

69 
	$«cm_°©ed©a
(
˛ic⁄_h™dÀ
 
h
,

70 *
x∑th
,

71 
cxobj
 *
x°©e
)

73 
ªtvÆ
 = -1;

74 
cxobj
 **
xvec
 = 
NULL
;

77 i‡(
	`xml_∑r£_°rög
("<nacm>"

81 "</«cm>", 
NULL
, &
x°©e
) < 0)

82 
d⁄e
;

83 
ªtvÆ
 = 0;

84 
d⁄e
:

85 i‡(
xvec
)

86 
	`‰ì
(
xvec
);

87  
ªtvÆ
;

88 
	}
}

91 
	$∂ugö_°¨t
(
˛ic⁄_h™dÀ
 
h
,

92 
¨gc
,

93 **
¨gv
)

96 
	}
}

98 
˛ix⁄_∂ugö_≠i
 *
˛ix⁄_∂ugö_öô
(
˛ic⁄_h™dÀ
 
h
);

100 
˛ix⁄_∂ugö_≠i
 
	g≠i
 = {

102 
˛ix⁄_∂ugö_öô
,

103 
∂ugö_°¨t
,

104 
NULL
,

105 .
ˇ_ª£t
=
NULL
,

106 .
	gˇ_°©ed©a
=
«cm_°©ed©a
,

114 
˛ix⁄_∂ugö_≠i
 *

115 
	$˛ix⁄_∂ugö_öô
(
˛ic⁄_h™dÀ
 
h
)

117 
	`˛ic⁄_debug
(1, "%†backídÇacm", 
__FUNCTION__
);

118  &
≠i
;

119 
	}
}

	@clixon-master/example/example_cli.c

35 
	~<°dio.h
>

36 
	~<°dlib.h
>

37 
	~<°rög.h
>

38 
	~<î∫o.h
>

39 
	~<sy¶og.h
>

40 
	~<uni°d.h
>

41 
	~<as£π.h
>

42 
	~<m©h.h
>

43 
	~<sys/°©.h
>

44 
	~<sys/time.h
>

45 
	~<sys/∑øm.h
>

46 
	~<√töë/ö.h
>

47 
	~<‚m©ch.h
>

48 
	~<sig«l.h
>

51 
	~<˛igí/˛igí.h
>

52 
	~<˛ix⁄/˛ix⁄.h
>

53 
	~<˛ix⁄/˛ix⁄_˛i.h
>

58 
	$myˇŒback
(
˛ic⁄_h™dÀ
 
h
, 
cvec
 *
cvv
, cve¯*
¨gv
)

60 
ªtvÆ
 = -1;

61 
cxobj
 *
xªt
 = 
NULL
;

62 
cg_v¨
 *
myv¨
;

65 
myv¨
 = 
	`cvec_föd
(
cvv
, "var");

66 
	`˛i_ouçut
(
°dîr
, "%s: %d\n", 
__FUNCTION__
, 
	`cv_öt32_gë
(
myv¨
));

67 
	`˛i_ouçut
(
°dîr
, "¨g = %s\n", 
	`cv_°rög_gë
(
	`cvec_i
(
¨gv
,0)));

70 i‡(
	`˛ic⁄_Ωc_gë_c⁄fig
(
h
, "running","/interfaces/interface[name=eth0]",

71 &
xªt
) < 0)

72 
d⁄e
;

74 
	`xml_¥öt
(
°dout
, 
xªt
);

75 
ªtvÆ
 = 0;

76 
d⁄e
:

77 i‡(
xªt
)

78 
	`xml_‰ì
(
xªt
);

79  
ªtvÆ
;

80 
	}
}

84 
	$fib_rouã_Ωc
(
˛ic⁄_h™dÀ
 
h
,

85 
cvec
 *
cvv
,

86 
cvec
 *
¨gv
)

88 
ªtvÆ
 = -1;

89 
cg_v¨
 *
ö°™˚
;

90 
cxobj
 *
xt›
 = 
NULL
;

91 
cxobj
 *
xΩc
;

92 
cxobj
 *
xªt
 = 
NULL
;

95 
ö°™˚
 = 
	`cvec_föd
(
cvv
, "instance");

97 i‡(
	`xml_∑r£_va
(&
xt›
, 
NULL
, "<Ωc><fib-rouã><routög-ö°™˚-«me>%s</routög-ö°™˚-«me></fib-rouã></Ωc>", 
	`cv_°rög_gë
(
ö°™˚
)) < 0)

98 
d⁄e
;

100 
xΩc
 = 
	`xml_chûd_i
(
xt›
, 0);

102 i‡(
	`˛ic⁄_Ωc_√tc⁄f_xml
(
h
, 
xΩc
, &
xªt
, 
NULL
) < 0)

103 
d⁄e
;

105 
	`xml_¥öt
(
°dout
, 
	`xml_chûd_i
(
xªt
, 0));

106 
ªtvÆ
 = 0;

107 
d⁄e
:

108 i‡(
xªt
)

109 
	`xml_‰ì
(
xªt
);

110 i‡(
xt›
)

111 
	`xml_‰ì
(
xt›
);

112  
ªtvÆ
;

113 
	}
}

115 
˛ix⁄_∂ugö_≠i
 
	g≠i
 = {

117 
˛ix⁄_∂ugö_öô
,

118 
NULL
,

119 
NULL
,

120 .
ˇ_¥om±
=
NULL
,

121 .
	gˇ_su•íd
=
NULL
,

122 .
	gˇ_öãºu±
=
NULL
,

130 
˛ix⁄_∂ugö_≠i
 *

131 
	$˛ix⁄_∂ugö_öô
(
˛ic⁄_h™dÀ
 
h
)

133 
timevÆ
 
tv
;

135 
	`gëtimeofday
(&
tv
, 
NULL
);

136 
	`§™dom
(
tv
.
tv_u£c
);

138  &
≠i
;

139 
	}
}

	@clixon-master/example/example_netconf.c

35 
	~<°dio.h
>

36 
	~<°dlib.h
>

37 
	~<°rög.h
>

38 
	~<î∫o.h
>

39 
	~<sy¶og.h
>

40 
	~<uni°d.h
>

41 
	~<as£π.h
>

42 
	~<sys/°©.h
>

43 
	~<sys/∑øm.h
>

45 
	~<˛igí/˛igí.h
>

46 
	~<˛ix⁄/˛ix⁄.h
>

47 
	~<˛ix⁄/˛ix⁄_√tc⁄f.h
>

54 
	$∂ugö_°¨t
(
˛ic⁄_h™dÀ
 
h
, 
¨gc
, **
¨gv
)

57 
	}
}

60 
	$∂ugö_exô
(
˛ic⁄_h™dÀ
 
h
)

63 
	}
}

67 
	$√tc⁄f_˛õ¡_Ωc
(
˛ic⁄_h™dÀ
 
h
,

68 
cxobj
 *
xn
,

69 
cbuf
 *
cbªt
,

70 *
¨g
,

71 *
ªg¨g
)

73 
	`˛ic⁄_debug
(1, "%†ª°c⁄f", 
__FUNCTION__
);

74 
	`˝rötf
(
cbªt
, "<rpc-reply><result>ok</result></rpc-reply>");

76 
	}
}

78 
˛ix⁄_∂ugö_≠i
 * 
˛ix⁄_∂ugö_öô
(
˛ic⁄_h™dÀ
 
h
);

80 
˛ix⁄_∂ugö_≠i
 
	g≠i
 = {

82 
˛ix⁄_∂ugö_öô
,

83 
∂ugö_°¨t
,

84 
∂ugö_exô


92 
˛ix⁄_∂ugö_≠i
 *

93 
	$˛ix⁄_∂ugö_öô
(
˛ic⁄_h™dÀ
 
h
)

95 
	`˛ic⁄_debug
(1, "%†ª°c⁄f", 
__FUNCTION__
);

97 i‡(
	`Ωc_ˇŒback_ªgi°î
(
h
, 
√tc⁄f_˛õ¡_Ωc
, 
NULL
, "client-rpc") < 0)

98  
NULL
;

99  &
≠i
;

100 
	}
}

	@clixon-master/example/example_restconf.c

36 
	~<°dlib.h
>

37 
	~<°rög.h
>

38 
	~<uni°d.h
>

39 
	~<î∫o.h
>

40 
	~<˘y≥.h
>

41 
	~<sig«l.h
>

42 
	~<fcgi_°dio.h
>

43 
	~<cuæ/cuæ.h
>

46 
	~<˛igí/˛igí.h
>

49 
	~<˛ix⁄/˛ix⁄.h
>

50 
	~<˛ix⁄/˛ix⁄_ª°c⁄f.h
>

52 c⁄° 
	gBa£64
[] =

54 c⁄° 
	gPad64
 = '=';

59 
	gbasic_auth
 = 0;

68 
	$b64_decode
(c⁄° *
§c
,

69 *
èrgë
,

70 
size_t
 
èrgsize
)

72 
èrödex
, 
°©e
, 
ch
;

73 *
pos
;

75 
°©e
 = 0;

76 
èrödex
 = 0;

78 (
ch
 = *
§c
++) != '\0') {

79 i‡(
	`is•a˚
(
ch
))

82 i‡(
ch
 =
Pad64
)

85 
pos
 = 
	`°rchr
(
Ba£64
, 
ch
);

86 i‡(
pos
 == 0)

89 
°©e
) {

91 i‡(
èrgë
) {

92 i‡((
size_t
)
èrödex
 >
èrgsize
)

94 
èrgë
[
èrödex
] = (
pos
 - 
Ba£64
) << 2;

96 
°©e
 = 1;

99 i‡(
èrgë
) {

100 i‡((
size_t
)
èrödex
 + 1 >
èrgsize
)

102 
èrgë
[
èrödex
] |(
pos
 - 
Ba£64
) >> 4;

103 
èrgë
[
èrödex
+1] = ((
pos
 - 
Ba£64
) & 0x0f)

106 
èrödex
++;

107 
°©e
 = 2;

110 i‡(
èrgë
) {

111 i‡((
size_t
)
èrödex
 + 1 >
èrgsize
)

113 
èrgë
[
èrödex
] |(
pos
 - 
Ba£64
) >> 2;

114 
èrgë
[
èrödex
+1] = ((
pos
 - 
Ba£64
) & 0x03)

117 
èrödex
++;

118 
°©e
 = 3;

121 i‡(
èrgë
) {

122 i‡((
size_t
)
èrödex
 >
èrgsize
)

124 
èrgë
[
èrödex
] |(
pos
 - 
Ba£64
);

126 
èrödex
++;

127 
°©e
 = 0;

139 i‡(
ch
 =
Pad64
) {

140 
ch
 = *
§c
++;

141 
°©e
) {

148 ()
NULL
; 
ch
 !'\0'; ch = *
§c
++)

149 i‡(!
	`is•a˚
(
ch
))

152 i‡(
ch
 !
Pad64
)

154 
ch
 = *
§c
++;

163 ()
NULL
; 
ch
 !'\0'; ch = *
§c
++)

164 i‡(!
	`is•a˚
(
ch
))

173 i‡(
èrgë
 &&Å¨gë[
èrödex
] != 0)

181 i‡(
°©e
 != 0)

185  (
èrödex
);

186 
	}
}

198 
	$exam∂e_ª°c⁄f_¸edítüls
(
˛ic⁄_h™dÀ
 
h
,

199 *
¨g
)

201 
ªtvÆ
 = -1;

202 
FCGX_Reque°
 *
r
 = (FCGX_Reque° *)
¨g
;

203 
cxobj
 *
xt
 = 
NULL
;

204 *
auth
;

205 *
u£r
 = 
NULL
;

206 *
∑sswd
;

207 *
∑sswd2
 = "";

208 
size_t
 
authÀn
;

209 
cbuf
 *
cb
 = 
NULL
;

210 
ªt
;

213 i‡(
basic_auth
==0)

214 
ok
;

216 i‡((
auth
 = 
	`FCGX_GëP¨am
("HTTP_AUTHORIZATION", 
r
->
ívp
)Ë=
NULL
)

217 
Áû
;

218 i‡(
	`°æí
(
auth
) < strlen("Basic "))

219 
Áû
;

220 i‡(
	`°∫cmp
("Basi¯", 
auth
, 
	`°æí
("Basic ")))

221 
Áû
;

222 
auth
 +
	`°æí
("Basic ");

223 
authÀn
 = 
	`°æí
(
auth
)*2;

224 i‡((
u£r
 = 
	`mÆloc
(
authÀn
)Ë=
NULL
){

225 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "malloc");

226 
d⁄e
;

228 
	`mem£t
(
u£r
, 0, 
authÀn
);

229 i‡((
ªt
 = 
	`b64_decode
(
auth
, 
u£r
, 
authÀn
)) < 0)

230 
d⁄e
;

232 i‡((
∑sswd
 = 
	`ödex
(
u£r
,':')Ë=
NULL
)

233 
Áû
;

234 *
∑sswd
 = '\0';

235 
∑sswd
++;

236 
	`˛ic⁄_debug
(1, "%†hâ∞u£r:%†∑sswd:%s", 
__FUNCTION__
, 
u£r
, 
∑sswd
);

238 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
)

239 
d⁄e
;

241 i‡(
	`°rcmp
(
u£r
, "wilma")==0 || strcmp(user, "adm1")==0 ||

242 
	`°rcmp
(
u£r
, "quest")==0){

243 
∑sswd2
 = "bar";

245 i‡(
	`°rcmp
(
∑sswd
, 
∑sswd2
))

246 
Áû
;

247 
ªtvÆ
 = 1;

248 
	`˛ic⁄_debug
(1, "%†u£r:%s", 
__FUNCTION__
, 
u£r
);

249 i‡(
	`˛ic⁄_u£∫ame_£t
(
h
, 
u£r
) < 0)

250 
d⁄e
;

251 
ok
:

252 
ªtvÆ
 = 1;

253 
d⁄e
:

254 
	`˛ic⁄_debug
(1, "%†ªtvÆ:%d", 
__FUNCTION__
, 
ªtvÆ
);

255 i‡(
u£r
)

256 
	`‰ì
(
u£r
);

257 i‡(
cb
)

258 
	`cbuf_‰ì
(
cb
);

259 i‡(
xt
)

260 
	`xml_‰ì
(
xt
);

261  
ªtvÆ
;

262 
Áû
:

263 
ªtvÆ
 = 0;

264 
d⁄e
;

265 
	}
}

270 
	$ª°c⁄f_˛õ¡_Ωc
(
˛ic⁄_h™dÀ
 
h
,

271 
cxobj
 *
xn
,

272 
cbuf
 *
cbªt
,

273 *
¨g
,

274 *
ªg¨g
)

277 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

278 
	`˝rötf
(
cbªt
, "<rpc-reply><result>ok</result></rpc-reply>");

280 
	}
}

288 
	$exam∂e_ª°c⁄f_°¨t
(
˛ic⁄_h™dÀ
 
h
,

289 
¨gc
,

290 **
¨gv
)

292 
c
;

294 
	`˛ic⁄_debug
(1, "%†¨gc:%d", 
__FUNCTION__
, 
¨gc
);

295 
›töd
 = 1;

296 
›ãº
 = 0;

297 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "a")) != -1){

298 
c
) {

300 
basic_auth
 = 1;

307 
	}
}

309 
˛ix⁄_∂ugö_≠i
 * 
˛ix⁄_∂ugö_öô
(
˛ic⁄_h™dÀ
 
h
);

311 
˛ix⁄_∂ugö_≠i
 
	g≠i
 = {

313 
˛ix⁄_∂ugö_öô
,

314 
exam∂e_ª°c⁄f_°¨t
,

315 
NULL
,

316 .
ˇ_auth
=
exam∂e_ª°c⁄f_¸edítüls


324 
˛ix⁄_∂ugö_≠i
 *

325 
	$˛ix⁄_∂ugö_öô
(
˛ic⁄_h™dÀ
 
h
)

327 
	`˛ic⁄_debug
(1, "%†ª°c⁄f", 
__FUNCTION__
);

329 i‡(
	`Ωc_ˇŒback_ªgi°î
(
h
, 
ª°c⁄f_˛õ¡_Ωc
, 
NULL
, "client-rpc") < 0)

330  
NULL
;

331  &
≠i
;

332 
	}
}

	@clixon-master/include/clixon_config.h

5 
	#CLIXON_DATADIR
 "/u§/loˇl/sh¨e/˛ix⁄"

	)

8 
	#CLIXON_DEFAULT_CONFIG
 "/u§/loˇl/ëc/˛ix⁄.xml"

	)

11 
	#CLIXON_VERSION_MAJOR
 3

	)

14 
	#CLIXON_VERSION_MINOR
 6

	)

17 
	#CLIXON_VERSION_PATCH
 0

	)

20 
	#CLIXON_VERSION_STRING
 "3.6.0"

	)

23 
	#HAVE_ALPHASORT
 1

	)

26 
	#HAVE_CLIGEN_CLIGEN_H
 1

	)

29 
	#HAVE_CRYPT_H
 1

	)

32 
	#HAVE_INET_ATON
 1

	)

35 
	#HAVE_INTTYPES_H
 1

	)

38 
	#HAVE_LIBCLIGEN
 1

	)

41 
	#HAVE_LIBCRYPT
 1

	)

44 
	#HAVE_LIBDL
 1

	)

47 
	#HAVE_LIBFCGI
 1

	)

50 
	#HAVE_LIBM
 1

	)

53 
	#HAVE_LIBNSL
 1

	)

59 
	#HAVE_LINUX_IF_VLAN_H
 1

	)

62 
	#HAVE_MEMORY_H
 1

	)

65 
	#HAVE_SIGACTION
 1

	)

71 
	#HAVE_STDINT_H
 1

	)

74 
	#HAVE_STDLIB_H
 1

	)

77 
	#HAVE_STRINGS_H
 1

	)

80 
	#HAVE_STRING_H
 1

	)

86 
	#HAVE_STRNDUP
 1

	)

89 
	#HAVE_STRSEP
 1

	)

92 
	#HAVE_STRVERSCMP
 1

	)

95 
	#HAVE_SYS_STAT_H
 1

	)

98 
	#HAVE_SYS_TYPES_H
 1

	)

104 
	#HAVE_UNISTD_H
 1

	)

107 
	#HAVE_VERSIONSORT
 1

	)

110 
	#PACKAGE_BUGREPORT
 ""

	)

113 
	#PACKAGE_NAME
 ""

	)

116 
	#PACKAGE_STRING
 ""

	)

119 
	#PACKAGE_TARNAME
 ""

	)

122 
	#PACKAGE_URL
 ""

	)

125 
	#PACKAGE_VERSION
 ""

	)

128 
	#STDC_HEADERS
 1

	)

132 
	#YYTEXT_POINTER
 1

	)

134 
	~<˛ix⁄_cu°om.h
>

	@clixon-master/include/clixon_custom.h

36 #i‚de‡
HAVE_STRNDUP


37 
	#°∫dup
(
s
, 
n
Ë
	`˛ic⁄_°∫dup
(s,Ç)

	)

40 #i‡
deföed
(
__O≥nBSD__
Ë|| deföed(
__FªeBSD__
Ë|| deföed(
__NëBSD__
)

41 
	#BSD


	)

43 
°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
);

	@clixon-master/lib/clixon/clixon.h

44 
	~<°dio.h
>

45 
	~<°döt.h
>

46 
	~<dúít.h
>

47 
	~<sys/sockë.h
>

48 
	~<√t/if.h
>

49 
	~<√töë/ö.h
>

55 
	#CLIXON_VERSION_STRING
 "3.6.0"

	)

56 
	#CLIXON_VERSION_MAJOR
 3

	)

57 
	#CLIXON_VERSION_MINOR
 6

	)

58 
	#CLIXON_VERSION_PATCH
 0

	)

64 
	#LIBCLIXON_API
 1

	)

66 
	~<˛ix⁄/˛ix⁄_sig.h
>

67 
	~<˛ix⁄/˛ix⁄_log.h
>

68 
	~<˛ix⁄/˛ix⁄_îr.h
>

69 
	~<˛ix⁄/˛ix⁄_queue.h
>

70 
	~<˛ix⁄/˛ix⁄_hash.h
>

71 
	~<˛ix⁄/˛ix⁄_h™dÀ.h
>

72 
	~<˛ix⁄/˛ix⁄_y™g.h
>

73 
	~<˛ix⁄/˛ix⁄_y™g_ty≥.h
>

74 
	~<˛ix⁄/˛ix⁄_evít.h
>

75 
	~<˛ix⁄/˛ix⁄_°rög.h
>

76 
	~<˛ix⁄/˛ix⁄_fûe.h
>

77 
	~<˛ix⁄/˛ix⁄_xml.h
>

78 
	~<˛ix⁄/˛ix⁄_xml_s‹t.h
>

79 
	~<˛ix⁄/˛ix⁄_¥Ÿo.h
>

80 
	~<˛ix⁄/˛ix⁄_¥Ÿo_˛õ¡.h
>

81 
	~<˛ix⁄/˛ix⁄_∂ugö.h
>

82 
	~<˛ix⁄/˛ix⁄_›ti⁄s.h
>

83 
	~<˛ix⁄/˛ix⁄_xml_m≠.h
>

84 
	~<˛ix⁄/˛ix⁄_xml_db.h
>

85 
	~<˛ix⁄/˛ix⁄_x¶.h
>

86 
	~<˛ix⁄/˛ix⁄_js⁄.h
>

87 
	~<˛ix⁄/˛ix⁄_√tc⁄f_lib.h
>

92 c⁄° 
CLIXON_BUILDSTR
[];

93 c⁄° 
CLIXON_VERSION
[];

	@clixon-master/lib/clixon/clixon_err.h

41 #i‚de‡
_CLIXON_ERR_H_


42 
	#_CLIXON_ERR_H_


	)

47 
	#ERR_STRLEN
 256

	)

53 
	e˛ic⁄_îr
{

55 
	mOE_DB
 = 1,

56 
	mOE_DEMON
,

57 
	mOE_EVENTS
,

58 
	mOE_CFG
,

59 
	mOE_PROTO
,

60 
	mOE_REGEX
,

61 
	mOE_UNIX
,

62 
	mOE_SYSLOG
,

63 
	mOE_ROUTING
,

64 
	mOE_XML
,

65 
	mOE_PLUGIN
,

66 
	mOE_YANG
 ,

67 
	mOE_FATAL
,

68 
	mOE_UNDEF
,

75 
˛ic⁄_î∫o
;

76 
˛ic⁄_subî∫o
;

77 
˛ic⁄_îr_ªas⁄
[
ERR_STRLEN
];

82 
	#˛ic⁄_îr
(
e
,
s
,
_fmt
, 
¨gs
...Ë
	`˛ic⁄_îr_‚
(
__FUNCTION__
, 
__LINE__
, (e), (s), _fmà, ##¨gs)

	)

87 
˛ic⁄_îr_ª£t
();

88 
˛ic⁄_îr_‚
(c⁄° *
‚
, c⁄° 
löe
, 
Àvñ
, 
îr
, *
f‹m©
, ...);

89 *
˛ic⁄_°ªº‹
(
îr
);

90 *
˛ic⁄_îr_ßve
();

91 
˛ic⁄_îr_ª°‹e
(*
h™dÀ
);

	@clixon-master/lib/clixon/clixon_event.h

38 #i‚de‡
_CLIXON_EVENT_H_


39 
	#_CLIXON_EVENT_H_


	)

44 
˛ic⁄_exô_£t
();

46 
˛ic⁄_exô_gë
();

48 
evít_ªg_fd
(
fd
, (*
‚
)(, *), *
¨g
, *
°r
);

50 
	`evít_uƒeg_fd
(
s
, (*
‚
)(, *));

52 
	`evít_ªg_timeout
(
timevÆ
 
t
, (*
‚
)(, *),

53 *
¨g
, *
°r
);

55 
	`evít_uƒeg_timeout
((*
‚
)(, *), *
¨g
);

57 
	`evít_pﬁl
(
fd
);

59 
	`evít_lo›
();

61 
	`evít_exô
();

	@clixon-master/lib/clixon/clixon_file.h

36 #i‚de‡
_CLIXON_FILE_H_


37 
	#_CLIXON_FILE_H_


	)

40 
˛ic⁄_fûe_dúít
(c⁄° *
dú
, 
dúít
 **
ít
,

41 c⁄° *
ªgexp
, 
mode_t
 
ty≥
);

43 
˛ic⁄_fûe_c›y
(*
§c
, *
èrgë
);

45 
group_«me2gid
(*
«me
, 
gid_t
 *
gid
);

	@clixon-master/lib/clixon/clixon_handle.h

37 #i‚de‡
_CLIXON_HANDLE_H_


38 
	#_CLIXON_HANDLE_H_


	)

48 °ru˘ {
	ma
;} *
	t˛ic⁄_h™dÀ
;

50 *
	t˛ic⁄_h™dÀ
;

54 *
	t∂ghndl_t
;

60 
˛ic⁄_h™dÀ
 
˛ic⁄_h™dÀ_öô
();

63 
˛ic⁄_h™dÀ
 
˛ic⁄_h™dÀ_öô0
(
size
);

66 
˛ic⁄_h™dÀ_exô
(
˛ic⁄_h™dÀ
 
h
);

69 
˛ic⁄_h™dÀ_check
(
˛ic⁄_h™dÀ
 
h
);

72 
˛ic⁄_hash_t
 *
˛ic⁄_›ti⁄s
(
˛ic⁄_h™dÀ
 
h
);

75 
˛ic⁄_hash_t
 *
˛ic⁄_d©a
(
˛ic⁄_h™dÀ
 
h
);

	@clixon-master/lib/clixon/clixon_hash.h

36 #i‚de‡
_CLIXON_HASH_H_


37 
	#_CLIXON_HASH_H_


	)

39 
	s˛ic⁄_hash
 {

40 
qñem_t
 
	mh_qñem
;

41 *
	mh_key
;

42 
size_t
 
	mh_vÀn
;

43 *
	mh_vÆ
;

45 
˛ic⁄_hash
 *
	t˛ic⁄_hash_t
;

47 
˛ic⁄_hash_t
 *
hash_öô
 ();

48 
hash_‰ì
 (
˛ic⁄_hash_t
 *);

49 
˛ic⁄_hash_t
 
hash_lookup
 (˛ic⁄_hash_à*
hód
, c⁄° *
key
);

50 *
hash_vÆue
 (
˛ic⁄_hash_t
 *
hód
, c⁄° *
key
, 
size_t
 *
vÀn
);

51 
˛ic⁄_hash_t
 
hash_add
 (˛ic⁄_hash_à*
hód
, c⁄° *
key
, *
vÆ
, 
size_t
 
vÀn
);

52 
hash_dñ
 (
˛ic⁄_hash_t
 *
hód
, c⁄° *
key
);

53 
hash_dump
(
˛ic⁄_hash_t
 *
hód
, 
FILE
 *
f
);

54 **
hash_keys
(
˛ic⁄_hash_t
 *
hash
, 
size_t
 *
nkeys
);

73 
	#hash_óch
(
__hash__
, 
__key__
) \

75 
__i__
; \

76 
size_t
 
__n__
; \

77 **
__k__
 = 
	`hash_keys
((
__hash__
),&
__n__
); \

78 i‡(
__k__
) { \

79 
__i__
 = 0; __i__ < 
__n__
 && ((
__key__
Ë
__k__
[__i__]); __i__++)

	)

80 
	#hash_óch_íd
(
__hash__
Ëi‡(
__k__
Ë
	`‰ì
(__k__); } }

	)

	@clixon-master/lib/clixon/clixon_json.h

36 #i‚de‡
_CLIXON_JSON_H


37 
	#_CLIXON_JSON_H


	)

42 
xml2js⁄_cbuf
(
cbuf
 *
cb
, 
cxobj
 *
x
, 
¥ëty
);

43 
xml2js⁄_cbuf_vec
(
cbuf
 *
cb
, 
cxobj
 **
vec
, 
size_t
 
ve˛í
, 
¥ëty
);

44 
xml2js⁄
(
FILE
 *
f
, 
cxobj
 *
x
, 
¥ëty
);

45 
xml2js⁄_vec
(
FILE
 *
f
, 
cxobj
 **
vec
, 
size_t
 
ve˛í
, 
¥ëty
);

46 
js⁄_∑r£_°r
(*
°r
, 
cxobj
 **
xt
);

47 
js⁄_∑r£_fûe
(
fd
, 
y™g_•ec
 *
y•ec
, 
cxobj
 **
xt
);

	@clixon-master/lib/clixon/clixon_log.h

38 #i‚de‡
_CLIXON_LOG_H_


39 
	#_CLIXON_LOG_H_


	)

44 
	#CLICON_LOG_SYSLOG
 1

	)

45 
	#CLICON_LOG_STDERR
 2

	)

46 
	#CLICON_LOG_STDOUT
 4

	)

51 (
	t˛ic⁄_log_nŸify_t
)(
	tÀvñ
, *
	tmsg
, *
	t¨g
);

56 
debug
;

62 
	`˛ic⁄_log_öô
(*
idít
, 
u±o
, 
Êags
);

63 
	`˛ic⁄_gë_logÊags
();

64 
	`˛ic⁄_log_°r
(
Àvñ
, *
msg
);

65 
	`˛ic⁄_log
(
Àvñ
, *
f‹m©
, ...);

66 
˛ic⁄_log_nŸify_t
 *
	`˛ic⁄_log_ªgi°î_ˇŒback
(˛ic⁄_log_nŸify_à*
cb
, *
¨g
);

67 
	`˛ic⁄_debug_öô
(
dbgÀvñ
, 
FILE
 *
f
);

68 
	`˛ic⁄_debug
(
dbgÀvñ
, *
f‹m©
, ...);

69 *
	`m⁄2«me
(
md
);

	@clixon-master/lib/clixon/clixon_netconf_lib.h

37 #i‚de‡
_CLIXON_NETCONF_LIB_H


38 
	#_CLIXON_NETCONF_LIB_H


	)

43 
√tc⁄f_ö_u£
(
cbuf
 *
cb
, *
ty≥
, *
mesßge
);

44 
√tc⁄f_övÆid_vÆue
(
cbuf
 *
cb
, *
ty≥
, *
mesßge
);

45 
√tc⁄f_too_big
(
cbuf
 *
cb
, *
ty≥
, *
mesßge
);

46 
√tc⁄f_missög_©åibuã
(
cbuf
 *
cb
, *
ty≥
, *
öfo
, *
mesßge
);

47 
√tc⁄f_bad_©åibuã
(
cbuf
 *
cb
, *
ty≥
, *
öfo
, *
mesßge
);

48 
√tc⁄f_unknown_©åibuã
(
cbuf
 *
cb
, *
ty≥
, *
öfo
, *
mesßge
);

49 
√tc⁄f_missög_ñemít
(
cbuf
 *
cb
, *
ty≥
, *
öfo
, *
mesßge
);

50 
√tc⁄f_bad_ñemít
(
cbuf
 *
cb
, *
ty≥
, *
öfo
, *
mesßge
);

51 
√tc⁄f_unknown_ñemít
(
cbuf
 *
cb
, *
ty≥
, *
öfo
, *
mesßge
);

52 
√tc⁄f_unknown_«me•a˚
(
cbuf
 *
cb
, *
ty≥
, *
öfo
, *
mesßge
);

53 
√tc⁄f_ac˚ss_díõd
(
cbuf
 *
cb
, *
ty≥
, *
mesßge
);

54 
√tc⁄f_ac˚ss_díõd_xml
(
cxobj
 **
xªt
, *
ty≥
, *
mesßge
);

55 
√tc⁄f_lock_díõd
(
cbuf
 *
cb
, *
öfo
, *
mesßge
);

56 
√tc⁄f_ªsour˚_díõd
(
cbuf
 *
cb
, *
ty≥
, *
mesßge
);

57 
√tc⁄f_rﬁlback_Áûed
(
cbuf
 *
cb
, *
ty≥
, *
mesßge
);

58 
√tc⁄f_d©a_exi°s
(
cbuf
 *
cb
, *
mesßge
);

59 
√tc⁄f_d©a_missög
(
cbuf
 *
cb
, *
mesßge
);

60 
√tc⁄f_›î©i⁄_nŸ_suµ‹ãd
(
cbuf
 *
cb
, *
ty≥
, *
mesßge
);

61 
√tc⁄f_›î©i⁄_Áûed
(
cbuf
 *
cb
, *
ty≥
, *
mesßge
);

62 
√tc⁄f_›î©i⁄_Áûed_xml
(
cxobj
 **
xªt
, *
ty≥
, *
mesßge
);

63 
√tc⁄f_mÆf‹med_mesßge
(
cbuf
 *
cb
, *
mesßge
);

64 
√tc⁄f_mÆf‹med_mesßge_xml
(
cxobj
 **
xªt
, *
mesßge
);

	@clixon-master/lib/clixon/clixon_options.h

38 #i‚de‡
_CLIXON_OPTIONS_H_


39 
	#_CLIXON_OPTIONS_H_


	)

45 
	#CLICON_SOCK_GROUP
 "˛ic⁄"

	)

62 
	egímodñ_ty≥
{

63 
	mGT_ERR
 =-1,

64 
	mGT_NONE
=0,

65 
	mGT_VARS
,

66 
	mGT_ALL
,

70 
	e°¨tup_mode_t
{

71 
	mSM_NONE
=0,

72 
	mSM_STARTUP
,

73 
	mSM_RUNNING
,

74 
	mSM_INIT


82 
˛ic⁄_›ti⁄_dump
(
˛ic⁄_h™dÀ
 
h
, 
dbÀvñ
);

84 
˛ic⁄_›ti⁄s_maö
(
˛ic⁄_h™dÀ
 
h
);

86 
˛ic⁄_›ti⁄_exi°s
(
˛ic⁄_h™dÀ
 
h
, c⁄° *
«me
);

89 *
˛ic⁄_›ti⁄_°r
(
˛ic⁄_h™dÀ
 
h
, c⁄° *
«me
);

90 
˛ic⁄_›ti⁄_°r_£t
(
˛ic⁄_h™dÀ
 
h
, c⁄° *
«me
, *
vÆ
);

93 
˛ic⁄_›ti⁄_öt
(
˛ic⁄_h™dÀ
 
h
, c⁄° *
«me
);

94 
˛ic⁄_›ti⁄_öt_£t
(
˛ic⁄_h™dÀ
 
h
, c⁄° *
«me
, 
vÆ
);

97 
˛ic⁄_›ti⁄_boﬁ
(
˛ic⁄_h™dÀ
 
h
, c⁄° *
«me
);

98 
˛ic⁄_›ti⁄_boﬁ_£t
(
˛ic⁄_h™dÀ
 
h
, c⁄° *
«me
, 
vÆ
);

101 
˛ic⁄_›ti⁄_dñ
(
˛ic⁄_h™dÀ
 
h
, c⁄° *
«me
);

104 
ölöe
 *
	$˛ic⁄_c⁄figfûe
(
˛ic⁄_h™dÀ
 
h
){

105  
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_CONFIGFILE");

106 
	}
}

107 
ölöe
 *
	$˛ic⁄_y™g_dú
(
˛ic⁄_h™dÀ
 
h
){

108  
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_YANG_DIR");

109 
	}
}

110 
ölöe
 *
	$˛ic⁄_y™g_moduÀ_maö
(
˛ic⁄_h™dÀ
 
h
){

111  
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_YANG_MODULE_MAIN");

112 
	}
}

113 
ölöe
 *
	$˛ic⁄_y™g_moduÀ_ªvisi⁄
(
˛ic⁄_h™dÀ
 
h
){

114  
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_YANG_MODULE_REVISION");

115 
	}
}

116 
ölöe
 *
	$˛ic⁄_backíd_dú
(
˛ic⁄_h™dÀ
 
h
){

117  
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_BACKEND_DIR");

118 
	}
}

119 
ölöe
 *
	$˛ic⁄_√tc⁄f_dú
(
˛ic⁄_h™dÀ
 
h
){

120  
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_NETCONF_DIR");

121 
	}
}

122 
ölöe
 *
	$˛ic⁄_ª°c⁄f_dú
(
˛ic⁄_h™dÀ
 
h
){

123  
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_RESTCONF_DIR");

124 
	}
}

125 
ölöe
 *
	$˛ic⁄_˛i_dú
(
˛ic⁄_h™dÀ
 
h
){

126  
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_CLI_DIR");

127 
	}
}

128 
ölöe
 *
	$˛ic⁄_˛i•ec_dú
(
˛ic⁄_h™dÀ
 
h
){

129  
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_CLISPEC_DIR");

130 
	}
}

131 
ölöe
 *
	$˛ic⁄_˛i_mode
(
˛ic⁄_h™dÀ
 
h
){

132  
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_CLI_MODE");

133 
	}
}

134 
ölöe
 *
	$˛ic⁄_sock
(
˛ic⁄_h™dÀ
 
h
){

135  
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_SOCK");

136 
	}
}

137 
ölöe
 *
	$˛ic⁄_sock_group
(
˛ic⁄_h™dÀ
 
h
){

138  
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_SOCK_GROUP");

139 
	}
}

140 
ölöe
 *
	$˛ic⁄_backíd_pidfûe
(
˛ic⁄_h™dÀ
 
h
){

141  
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_BACKEND_PIDFILE");

142 
	}
}

143 
ölöe
 *
	$˛ic⁄_xmldb_dú
(
˛ic⁄_h™dÀ
 
h
){

144  
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_XMLDB_DIR");

145 
	}
}

146 
ölöe
 *
	$˛ic⁄_xmldb_∂ugö
(
˛ic⁄_h™dÀ
 
h
){

147  
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_XMLDB_PLUGIN");

148 
	}
}

151 
˛ic⁄_˛i_gímodñ
(
˛ic⁄_h™dÀ
 
h
);

152 
˛ic⁄_˛i_gímodñ_com∂ëi⁄
(
˛ic⁄_h™dÀ
 
h
);

153 
gímodñ_ty≥
 
˛ic⁄_˛i_gímodñ_ty≥
(
˛ic⁄_h™dÀ
 
h
);

154 
˛ic⁄_˛i_v¨⁄ly
(
˛ic⁄_h™dÀ
 
h
);

155 
˛ic⁄_sock_Ámûy
(
˛ic⁄_h™dÀ
 
h
);

156 
˛ic⁄_sock_p‹t
(
˛ic⁄_h™dÀ
 
h
);

157 
˛ic⁄_autocommô
(
˛ic⁄_h™dÀ
 
h
);

158 
˛ic⁄_°¨tup_mode
(
˛ic⁄_h™dÀ
 
h
);

161 
˛ic⁄_quõt_mode
(
˛ic⁄_h™dÀ
 
h
);

162 
˛ic⁄_quõt_mode_£t
(
˛ic⁄_h™dÀ
 
h
, 
vÆ
);

164 
y™g_•ec
 * 
˛ic⁄_db•ec_y™g
(
˛ic⁄_h™dÀ
 
h
);

165 
˛ic⁄_db•ec_y™g_£t
(
˛ic⁄_h™dÀ
 
h
, 
y™g_•ec
 *
ys
);

167 *
˛ic⁄_db•ec_«me
(
˛ic⁄_h™dÀ
 
h
);

168 
˛ic⁄_db•ec_«me_£t
(
˛ic⁄_h™dÀ
 
h
, *
«me
);

170 
y™g_•ec
 *
˛ic⁄_√tc⁄f_y™g
(
˛ic⁄_h™dÀ
 
h
);

171 
˛ic⁄_√tc⁄f_y™g_£t
(
˛ic⁄_h™dÀ
 
h
, 
y™g_•ec
 *
ys
);

173 
∂ghndl_t
 
˛ic⁄_xmldb_∂ugö_gë
(
˛ic⁄_h™dÀ
 
h
);

174 
˛ic⁄_xmldb_∂ugö_£t
(
˛ic⁄_h™dÀ
 
h
, 
∂ghndl_t
 
h™dÀ
);

176 *
˛ic⁄_xmldb_≠i_gë
(
˛ic⁄_h™dÀ
 
h
);

177 
˛ic⁄_xmldb_≠i_£t
(
˛ic⁄_h™dÀ
 
h
, *
xa_≠i
);

179 *
˛ic⁄_xmldb_h™dÀ_gë
(
˛ic⁄_h™dÀ
 
h
);

180 
˛ic⁄_xmldb_h™dÀ_£t
(
˛ic⁄_h™dÀ
 
h
, *
xh
);

184 *
˛ic⁄_u£∫ame_gë
(
˛ic⁄_h™dÀ
 
h
);

185 
˛ic⁄_u£∫ame_£t
(
˛ic⁄_h™dÀ
 
h
, *
u£∫ame
);

	@clixon-master/lib/clixon/clixon_plugin.h

38 #i‚de‡
_CLIXON_PLUGIN_H_


39 
	#_CLIXON_PLUGIN_H_


	)

45 
	#CLIXON_PLUGIN_INIT
 "˛ix⁄_∂ugö_öô"

	)

51 *
	t∂ghndl_t
;

60 (*
	t˛ic⁄_Ωc_cb
)(

61 
	t˛ic⁄_h™dÀ
 
	th
,

62 
	tcxobj
 *
	txn
,

63 
	tcbuf
 *
	tcbªt
,

64 *
	t¨g
,

65 *
	tªg¨g


82 (
	t∂g°¨t_t
)(
	t˛ic⁄_h™dÀ
, , **);

86 (
	t∂gexô_t
)(
	t˛ic⁄_h™dÀ
);

97 (
	t∂gauth_t
)(
	t˛ic⁄_h™dÀ
, *);

99 (
	t∂gª£t_t
)(
	t˛ic⁄_h™dÀ
 
	th
, c⁄° *
	tdb
);

100 (
	t∂g°©ed©a_t
)(
	t˛ic⁄_h™dÀ
 
	th
, *
	tx∑th
, 
	tcxobj
 *
	txt›
);

102 *
	tå™ß˘i⁄_d©a
;

105 (
	tå™s_cb_t
)(
	t˛ic⁄_h™dÀ
 
	th
, 
	tå™ß˘i⁄_d©a
 
	ttd
);

113 *(
	t˛i_¥om±hook_t
)(
	t˛ic⁄_h™dÀ
, *
	tmode
);

118 
˛ix⁄_∂ugö_≠i
;

119 
˛ix⁄_∂ugö_≠i
* (
	t∂göô2_t
)(
	t˛ic⁄_h™dÀ
);

121 
	s˛ix⁄_∂ugö_≠i
{

123 
ˇ_«me
[
PATH_MAX
];

124 
∂göô2_t
 *
ˇ_öô
;

125 
∂g°¨t_t
 *
ˇ_°¨t
;

126 
∂gexô_t
 *
ˇ_exô
;

129 
˛i_¥om±hook_t
 *
ci_¥om±
;

130 
˛igí_su•_cb_t
 *
ci_su•íd
;

131 
˛igí_öãºu±_cb_t
 *
ci_öãºu±
;

132 } 
ˇu_˛i
;

134 
∂gauth_t
 *
¸_auth
;

135 } 
ˇu_ª°c⁄f
;

137 } 
ˇu_√tc⁄f
;

139 
∂gª£t_t
 *
cb_ª£t
;

140 
∂g°©ed©a_t
 *
cb_°©ed©a
;

141 
å™s_cb_t
 *
cb_å™s_begö
;

142 
å™s_cb_t
 *
cb_å™s_vÆid©e
;

143 
å™s_cb_t
 *
cb_å™s_com∂ëe
;

144 
å™s_cb_t
 *
cb_å™s_commô
;

145 
å™s_cb_t
 *
cb_å™s_íd
;

146 
å™s_cb_t
 *
cb_å™s_ab‹t
;

147 } 
ˇu_backíd
;

149 } 
u
;

152 
	#ˇ_¥om±
 
u
.
ˇu_˛i
.
ci_¥om±


	)

153 
	#ˇ_su•íd
 
u
.
ˇu_˛i
.
ci_su•íd


	)

154 
	#ˇ_öãºu±
 
u
.
ˇu_˛i
.
ci_öãºu±


	)

155 
	#ˇ_auth
 
u
.
ˇu_ª°c⁄f
.
¸_auth


	)

156 
	#ˇ_ª£t
 
u
.
ˇu_backíd
.
cb_ª£t


	)

157 
	#ˇ_°©ed©a
 
u
.
ˇu_backíd
.
cb_°©ed©a


	)

158 
	#ˇ_å™s_begö
 
u
.
ˇu_backíd
.
cb_å™s_begö


	)

159 
	#ˇ_å™s_vÆid©e
 
u
.
ˇu_backíd
.
cb_å™s_vÆid©e


	)

160 
	#ˇ_å™s_com∂ëe
 
u
.
ˇu_backíd
.
cb_å™s_com∂ëe


	)

161 
	#ˇ_å™s_commô
 
u
.
ˇu_backíd
.
cb_å™s_commô


	)

162 
	#ˇ_å™s_íd
 
u
.
ˇu_backíd
.
cb_å™s_íd


	)

163 
	#ˇ_å™s_ab‹t
 
u
.
ˇu_backíd
.
cb_å™s_ab‹t


	)

165 
˛ix⁄_∂ugö_≠i
 
	t˛ix⁄_∂ugö_≠i
;

169 
	s˛ix⁄_∂ugö
{

170 
˝_«me
[
PATH_MAX
];

171 
∂ghndl_t
 
˝_h™dÀ
;

172 
˛ix⁄_∂ugö_≠i
 
˝_≠i
;

174 
˛ix⁄_∂ugö
 
	t˛ix⁄_∂ugö
;

185 
˛ix⁄_∂ugö_≠i
 *
	`˛ix⁄_∂ugö_öô
(
˛ic⁄_h™dÀ
 
h
);

187 
˛ix⁄_∂ugö
 *
	`˛ix⁄_∂ugö_óch
(
˛ic⁄_h™dÀ
 
h
, clix⁄_∂ugö *
˝¥ev
);

189 
˛ix⁄_∂ugö
 *
	`˛ix⁄_∂ugö_óch_ªvît
(
˛ic⁄_h™dÀ
 
h
, clix⁄_∂ugö *
˝¥ev
, 
ƒ
);

191 
˛ix⁄_∂ugö
 *
	`˛ix⁄_∂ugö_föd
(
˛ic⁄_h™dÀ
 
h
, *
«me
);

193 
	`˛ix⁄_∂ugös_lﬂd
(
˛ic⁄_h™dÀ
 
h
, *
fun˘i⁄
, *
dú
, *
ªgexp
);

195 
	`˛ix⁄_∂ugö_°¨t
(
˛ic⁄_h™dÀ
 
h
, 
¨gc
, **
¨gv
);

197 
	`˛ix⁄_∂ugö_exô
(
˛ic⁄_h™dÀ
 
h
);

199 
	`˛ix⁄_∂ugö_auth
(
˛ic⁄_h™dÀ
 
h
, *
¨g
);

202 
	`Ωc_ˇŒback_ªgi°î
(
˛ic⁄_h™dÀ
 
h
, 
˛ic⁄_Ωc_cb
 
cb
, *
¨g
, *
èg
);

204 
	`Ωc_ˇŒback_dñëe_Æl
();

206 
	`Ωc_ˇŒback_ˇŒ
(
˛ic⁄_h™dÀ
 
h
, 
cxobj
 *
xe
, 
cbuf
 *
cbªt
, *
¨g
);

	@clixon-master/lib/clixon/clixon_proto.h

38 #i‚de‡
_CLIXON_PROTO_H_


39 
	#_CLIXON_PROTO_H_


	)

44 
	ef‹m©_íum
{

45 
	mFORMAT_XML
,

46 
	mFORMAT_JSON
,

47 
	mFORMAT_TEXT
,

48 
	mFORMAT_CLI
,

49 
	mFORMAT_NETCONF


53 
	s˛ic⁄_msg
 {

54 
uöt32_t
 
	m›_Àn
;

55 
	m›_body
[0];

61 *
f‹m©_öt2°r
(
f‹m©_íum
 
showas
);

62 
f‹m©_íum
 
f‹m©_°r2öt
(*
°r
);

64 
˛ic⁄_msg
 *
˛ic⁄_msg_ícode
(*
f‹m©
, ...);

65 
˛ic⁄_msg_decode
(
˛ic⁄_msg
 *
msg
, 
cxobj
 **
xml
);

67 
˛ic⁄_c⁄√˘_unix
(*
sock∑th
);

69 
˛ic⁄_Ωc_c⁄√˘_unix
(
˛ic⁄_msg
 *
msg
,

70 *
sock∑th
,

71 **
ªt
,

72 *
sock0
);

74 
˛ic⁄_Ωc_c⁄√˘_öë
(
˛ic⁄_msg
 *
msg
,

75 *
d°
,

76 
uöt16_t
 
p‹t
,

77 **
ªt
,

78 *
sock0
);

80 
˛ic⁄_Ωc
(
s
, 
˛ic⁄_msg
 *
msg
, **
xªt
);

82 
˛ic⁄_msg_£nd
(
s
, 
˛ic⁄_msg
 *
msg
);

84 
˛ic⁄_msg_rcv
(
s
, 
˛ic⁄_msg
 **
msg
, *
eof
);

86 
£nd_msg_nŸify
(
s
, 
Àvñ
, *
evít
);

88 
£nd_msg_ª∂y
(
s
, *
d©a
, 
uöt32_t
 
d©Æí
);

90 
dëe˘_ídèg
(*
èg
, 
ch
, *
°©e
);

	@clixon-master/lib/clixon/clixon_proto_client.h

40 #i‚de‡
_CLIXON_PROTO_CLIENT_H_


41 
	#_CLIXON_PROTO_CLIENT_H_


	)

43 
˛ic⁄_Ωc_msg
(
˛ic⁄_h™dÀ
 
h
, 
˛ic⁄_msg
 *
msg
, 
cxobj
 **
xªt0
,

44 *
sock0
);

45 
˛ic⁄_Ωc_√tc⁄f
(
˛ic⁄_h™dÀ
 
h
, *
xml°
, 
cxobj
 **
xªt
, *
•
);

46 
˛ic⁄_Ωc_√tc⁄f_xml
(
˛ic⁄_h™dÀ
 
h
, 
cxobj
 *
xml
, cxobj **
xªt
, *
•
);

47 
˛ic⁄_Ωc_gíî©e_îr‹
(*
f‹m©
, 
cxobj
 *
xîr
);

48 
˛ic⁄_Ωc_gë_c⁄fig
(
˛ic⁄_h™dÀ
 
h
, *
db
, *
x∑th
, 
cxobj
 **
xªt
);

49 
˛ic⁄_Ωc_edô_c⁄fig
(
˛ic⁄_h™dÀ
 
h
, *
db
, 
›î©i⁄_ty≥
 
›
,

50 *
xml
);

51 
˛ic⁄_Ωc_c›y_c⁄fig
(
˛ic⁄_h™dÀ
 
h
, *
db1
, *
db2
);

52 
˛ic⁄_Ωc_dñëe_c⁄fig
(
˛ic⁄_h™dÀ
 
h
, *
db
);

53 
˛ic⁄_Ωc_lock
(
˛ic⁄_h™dÀ
 
h
, *
db
);

54 
˛ic⁄_Ωc_u∆ock
(
˛ic⁄_h™dÀ
 
h
, *
db
);

55 
˛ic⁄_Ωc_gë
(
˛ic⁄_h™dÀ
 
h
, *
x∑th
, 
cxobj
 **
xªt
);

56 
˛ic⁄_Ωc_˛o£_£ssi⁄
(
˛ic⁄_h™dÀ
 
h
);

57 
˛ic⁄_Ωc_kûl_£ssi⁄
(
˛ic⁄_h™dÀ
 
h
, 
£ssi⁄_id
);

58 
˛ic⁄_Ωc_vÆid©e
(
˛ic⁄_h™dÀ
 
h
, *
db
);

59 
˛ic⁄_Ωc_commô
(
˛ic⁄_h™dÀ
 
h
);

60 
˛ic⁄_Ωc_disˇrd_ch™ges
(
˛ic⁄_h™dÀ
 
h
);

61 
˛ic⁄_Ωc_¸óã_subs¸ùti⁄
(
˛ic⁄_h™dÀ
 
h
, *
°ªam
, *
fûãr
,

62 *
s
);

63 
˛ic⁄_Ωc_debug
(
˛ic⁄_h™dÀ
 
h
, 
Àvñ
);

	@clixon-master/lib/clixon/clixon_queue.h

37 #i‚de‡
_CLIXON_QUEUE_H_


38 
	#_CLIXON_QUEUE_H_


	)

43 
	s_qñem_t
 {

44 
_qñem_t
 *
	mq_√xt
;

45 
_qñem_t
 *
	mq_¥ev
;

46 } 
	tqñem_t
;

51 
	#ADDQ
(
ñem
, 
¥ed
) { \

52 
qñem_t
 *
Xe
 = (qñem_à*Ë(
ñem
); \

53 
qñem_t
 *
Xp
 = (qñem_à*Ë(
¥ed
); \

54 i‡(
¥ed
) { \

55 
Xe
->
q_√xt
 = 
Xp
; \

56 
Xe
->
q_¥ev
 = 
Xp
->q_prev; \

57 
Xp
->
q_¥ev
->
q_√xt
 = 
Xe
; \

58 
Xp
->
q_¥ev
 = 
Xe
; \

60 
Xe
->
q_√xt
 = Xe->
q_¥ev
 = Xe; \

61 
¥ed
 = 
ñem
; \

63 }

	)

68 
	#INSQ
(
ñem
, 
¥ed
) { \

69 
qñem_t
 *
Xe
 = (qñem_à*Ë(
ñem
); \

70 
qñem_t
 *
Xp
 = (qñem_à*Ë(
¥ed
); \

71 i‡(
¥ed
) { \

72 
Xe
->
q_√xt
 = 
Xp
; \

73 
Xe
->
q_¥ev
 = 
Xp
->q_prev; \

74 
Xp
->
q_¥ev
->
q_√xt
 = 
Xe
; \

75 
Xp
->
q_¥ev
 = 
Xe
; \

77 
Xe
->
q_√xt
 = Xe->
q_¥ev
 = Xe; \

79 
¥ed
 = 
ñem
; \

80 }

	)

86 
	#DELQ
(
ñem
, 
hód
, 
ty≥
) { \

87 
qñem_t
 *
Xe
 = (qñem_à*Ë
ñem
; \

88 i‡(
Xe
->
q_√xt
 == Xe) \

89 
hód
 = 
NULL
; \

90 (
Xe
->
q_¥ev
->
q_√xt
 = Xe->q_next)->q_prev = Xe->q_prev; \

91 i‡(
ñem
 =
hód
) \

92 
hód
 = (
ty≥
)
Xe
->
q_√xt
; \

93 }

	)

98 
	#NEXTQ
(
ty≥
, 
ñem
Ë(—y≥)(”Àm)?((
qñem_t
 *)”Àm))->
q_√xt
:
NULL
))

	)

	@clixon-master/lib/clixon/clixon_sha1.h

35 #i‚de‡
_CLIXON_SHA1_H_


36 
	#_CLIXON_SHA1_H_


	)

41 *
˛ic⁄_sha1hex
(c⁄° *
°r
);

	@clixon-master/lib/clixon/clixon_sig.h

36 #i‚de‡
_CLIXON_SIG_H_


37 
	#_CLIXON_SIG_H_


	)

42 (*
	tsig‚_t
)();

47 
	`£t_sig«l
(
signo
, (*
h™dÀr
)(), (**
ﬁdh™dÀr
)());

48 
	`˛ic⁄_sig«l_block
();

49 
	`˛ic⁄_sig«l_unblock
();

51 
	`pidfûe_gë
(*
pidfûe
, 
pid_t
 *
pid0
);

52 
	`pidfûe_wrôe
(*
pidfûe
);

53 
	`pidfûe_z≠ﬁd
(
pid_t
 
pid
);

	@clixon-master/lib/clixon/clixon_string.h

36 #i‚de‡
_CLIXON_STRING_H_


37 
	#_CLIXON_STRING_H_


	)

50 
	sm≠_°r2öt
{

51 *
	mms_°r
;

52 
	mms_öt
;

54 
m≠_°r2öt
 
	tm≠_°r2öt
;

57 
	#Æign4
(
s
Ë(((s)/4)*4 + 4)

	)

60 
ölöe
 * 
	$°rdup4
(*
°r
)

62 *
dup
;

63 
Àn
;

64 
Àn
 = 
	`Æign4
(
	`°æí
(
°r
)+1);

65 i‡((
dup
 = 
	`mÆloc
(
Àn
)Ë=
NULL
)

66  
NULL
;

67 
	`°∫˝y
(
dup
, 
°r
, 
Àn
);

68  
dup
;

69 
	}
}

74 **
˛ic⁄_°r£p
(*
°rög
, *
dñim
, *
nvec0
);

75 *
˛ic⁄_°rjoö
 (
¨gc
, **
¨gv
, *
dñim
);

76 
°r2cvec
(*
°rög
, 
dñim1
, 
dñim2
, 
cvec
 **
cvp
);

77 
uri_≥r˚¡_ícode
(*
°r
, **
es˝
);

78 
uri_≥r˚¡_decode
(*
esc
, **
°r
);

79 
xml_ch¨d©a_ícode
(*
°r
, **
es˝
);

80 c⁄° *
˛ic⁄_öt2°r
(c⁄° 
m≠_°r2öt
 *
m°ab
, 
i
);

81 
˛ic⁄_°r2öt
(c⁄° 
m≠_°r2öt
 *
m°ab
, *
°r
);

83 #i‚de‡
HAVE_STRNDUP


84 *
˛ic⁄_°∫dup
 (c⁄° *, 
size_t
);

	@clixon-master/lib/clixon/clixon_xml.h

38 #i‚de‡
_CLIXON_XML_H


39 
	#_CLIXON_XML_H


	)

49 
	e›î©i⁄_ty≥
{

50 
	mOP_MERGE
,

51 
	mOP_REPLACE
,

52 
	mOP_CREATE
,

53 
	mOP_DELETE
,

54 
	mOP_REMOVE
,

55 
	mOP_NONE


58 
	ecxobj_ty≥
 {
	mCX_ERROR
=-1,

59 
	mCX_ELMNT
,

60 
	mCX_ATTR
,

61 
	mCX_BODY
};

62 
	#CX_ANY
 
CX_ERROR


	)

64 
xml
 
	tcxobj
;

72 (
	txml_≠∂y‚_t
)(
	tcxobj
 *
	tyn
, *
	t¨g
);

77 
	#XML_FLAG_MARK
 0x01

	)

78 
	#XML_FLAG_ADD
 0x02

	)

79 
	#XML_FLAG_DEL
 0x04

	)

80 
	#XML_FLAG_CHANGE
 0x08

	)

81 
	#XML_FLAG_NONE
 0x10

	)

86 
xml_chûd_s‹t
;

91 *
	`xml_ty≥2°r
(
cxobj_ty≥
 
ty≥
);

92 *
	`xml_«me
(
cxobj
 *
xn
);

93 
	`xml_«me_£t
(
cxobj
 *
xn
, *
«me
);

94 *
	`xml_«me•a˚
(
cxobj
 *
xn
);

95 
	`xml_«me•a˚_£t
(
cxobj
 *
xn
, *
«me
);

96 
cxobj
 *
	`xml_∑ª¡
(cxobj *
xn
);

97 
	`xml_∑ª¡_£t
(
cxobj
 *
xn
, cxobj *
∑ª¡
);

99 
uöt16_t
 
	`xml_Êag
(
cxobj
 *
xn
, uöt16_à
Êag
);

100 
	`xml_Êag_£t
(
cxobj
 *
xn
, 
uöt16_t
 
Êag
);

101 
	`xml_Êag_ª£t
(
cxobj
 *
xn
, 
uöt16_t
 
Êag
);

103 *
	`xml_vÆue
(
cxobj
 *
xn
);

104 
	`xml_vÆue_£t
(
cxobj
 *
xn
, *
vÆ
);

105 *
	`xml_vÆue_≠≥nd
(
cxobj
 *
xn
, *
vÆ
);

106 
cxobj_ty≥
 
	`xml_ty≥
(
cxobj
 *
xn
);

107 
	`xml_ty≥_£t
(
cxobj
 *
xn
, 
cxobj_ty≥
 
ty≥
);

109 
cg_v¨
 *
	`xml_cv_gë
(
cxobj
 *
xn
);

110 
	`xml_cv_£t
(
cxobj
 *
xn
, 
cg_v¨
 *
cv
);

112 
	`xml_chûd_ƒ
(
cxobj
 *
xn
);

113 
	`xml_chûd_ƒ_ty≥
(
cxobj
 *
xn
, 
cxobj_ty≥
 
ty≥
);

114 
cxobj
 *
	`xml_chûd_i
(cxobj *
xn
, 
i
);

115 
cxobj
 *
	`xml_chûd_i_£t
(cxobj *
xt
, 
i
, cxobj *
xc
);

116 
cxobj
 *
	`xml_chûd_óch
(cxobj *
x∑ª¡
, cxobj *
x¥ev
, 
cxobj_ty≥
 
ty≥
);

118 
cxobj
 **
	`xml_chûdvec_gë
(cxobj *
x
);

119 
	`xml_chûdvec_£t
(
cxobj
 *
x
, 
Àn
);

120 
cxobj
 *
	`xml_√w
(*
«me
, cxobj *
xn_∑ª¡
, 
y™g_°mt
 *
•ec
);

121 
y™g_°mt
 *
	`xml_•ec
(
cxobj
 *
x
);

122 
	`xml_•ec_£t
(
cxobj
 *
x
, 
y™g_°mt
 *
•ec
);

123 
cxobj
 *
	`xml_föd
(cxobj *
xn_∑ª¡
, *
«me
);

125 
	`xml_addsub
(
cxobj
 *
xp
, cxobj *
xc
);

126 
cxobj
 *
	`xml_ö£π
(cxobj *
xt
, *
èg
);

127 
	`xml_purge
(
cxobj
 *
xc
);

128 
	`xml_chûd_rm
(
cxobj
 *
xp
, 
i
);

129 
	`xml_rm
(
cxobj
 *
xc
);

130 
	`xml_roŸchûd
(
cxobj
 *
xp
, 
i
, cxobj **
x˝
);

132 *
	`xml_body
(
cxobj
 *
xn
);

133 
cxobj
 *
	`xml_body_gë
(cxobj *
xn
);

134 *
	`xml_föd_vÆue
(
cxobj
 *
xn_∑ª¡
, *
«me
);

135 *
	`xml_föd_body
(
cxobj
 *
xn
, *
«me
);

136 
cxobj
 *
	`xml_föd_body_obj
(cxobj *
xt
, *
«me
, *
vÆ
);

138 
	`xml_‰ì
(
cxobj
 *
xn
);

140 
	`xml_¥öt
(
FILE
 *
f
, 
cxobj
 *
xn
);

141 
	`˛ic⁄_xml2fûe
(
FILE
 *
f
, 
cxobj
 *
xn
, 
Àvñ
, 
¥ëty¥öt
);

142 
	`˛ic⁄_xml2cbuf
(
cbuf
 *
xf
, 
cxobj
 *
xn
, 
Àvñ
, 
¥ëty¥öt
);

143 
	`xml_∑r£_fûe
(
fd
, *
ídèg
, 
y™g_•ec
 *
y•ec
, 
cxobj
 **
xt
);

144 
	`xml_∑r£_°rög
(c⁄° *
°r
, 
y™g_•ec
 *
y•ec
, 
cxobj
 **
xml_t›
);

145 #i‡
	`deföed
(
__GNUC__
) && __GNUC__ >= 3

146 
	$xml_∑r£_va
(
cxobj
 **
xt
, 
y™g_•ec
 *
y•ec
, c⁄° *
f‹m©
, ...Ë
	`__©åibuã__
 ((
	`f‹m©
 (
¥ötf
, 3, 4)));

148 
	`xml_∑r£_va
(
cxobj
 **
xt
, 
y™g_•ec
 *
y•ec
, c⁄° *
f‹m©
, ...);

150 
	`xm…ªe2cbuf
(
cbuf
 *
cb
, 
cxobj
 *
x
, 
Àvñ
);

151 
	`xml_c›y_⁄e
(
cxobj
 *
xn0
, cxobj *
xn1
);

152 
	`xml_c›y
(
cxobj
 *
x0
, cxobj *
x1
);

153 
cxobj
 *
	`xml_dup
(cxobj *
x0
);

155 
	`cxvec_dup
(
cxobj
 **
vec0
, 
size_t
 
Àn0
, cxobj ***
vec1
, size_à*
Àn1
);

156 
	`cxvec_≠≥nd
(
cxobj
 *
x
, cxobj ***
vec
, 
size_t
 *
Àn
);

157 
	`xml_≠∂y
(
cxobj
 *
xn
, 
cxobj_ty≥
 
ty≥
, 
xml_≠∂y‚_t
 
‚
, *
¨g
);

158 
	`xml_≠∂y0
(
cxobj
 *
xn
, 
cxobj_ty≥
 
ty≥
, 
xml_≠∂y‚_t
 
‚
, *
¨g
);

159 
	`xml_≠∂y_™˚°‹
(
cxobj
 *
xn
, 
xml_≠∂y‚_t
 
‚
, *
¨g
);

161 
	`xml_body_∑r£
(
cxobj
 *
xb
, 
cv_ty≥
 
ty≥
, 
cg_v¨
 **
cvp
);

162 
	`xml_body_öt32
(
cxobj
 *
xb
, 
öt32_t
 *
vÆ
);

163 
	`xml_body_uöt32
(
cxobj
 *
xb
, 
uöt32_t
 *
vÆ
);

164 
	`xml_›î©i⁄
(*
›°r
, 
›î©i⁄_ty≥
 *
›
);

165 *
	`xml_›î©i⁄2°r
(
›î©i⁄_ty≥
 
›
);

	@clixon-master/lib/clixon/clixon_xml_db.h

34 #i‚de‡
_CLIXON_XML_DB_H


35 
	#_CLIXON_XML_DB_H


	)

45 °ru˘ {
öt16_t
 
	ma
;} *
	txmldb_h™dÀ
;

47 *
	txmldb_h™dÀ
;

51 
	#XMLDB_API_VERSION
 1

	)

54 
	#XMLDB_API_MAGIC
 0xf386f730

	)

57 
	#XMLDB_PLUGIN_INIT_FN
 "˛ix⁄_xmldb_∂ugö_öô"

	)

60 * (
	t∂ugö_öô_t
)(
	tvîsi⁄
);

63 (
	t∂ugö_exô_t
)();

66 
	$xmldb_h™dÀ
 (
	txmldb_c⁄√˘_t
)();

69 (
	txmldb_disc⁄√˘_t
)(
	txmldb_h™dÀ
 
	txh
);

72 (
	txmldb_gë›t_t
)(
	txmldb_h™dÀ
 
	txh
, *
	t›äame
, **
	tvÆue
);

75 (
	txmldb_£t›t_t
)(
	txmldb_h™dÀ
 
	txh
, *
	t›äame
, *
	tvÆue
);

78 (
	txmldb_gë_t
)(
	txmldb_h™dÀ
 
	txh
, c⁄° *
	tdb
, *
	tx∑th
, 
	tc⁄fig
, 
	tcxobj
 **
	txt›
);

81 (
	txmldb_put_t
)(
	txmldb_h™dÀ
 
	txh
, c⁄° *
	tdb
, 
	t›î©i⁄_ty≥
 
	t›
, 
	tcxobj
 *
	txt
, 
	tcbuf
 *
	tcbªt
);

84 (
	txmldb_c›y_t
)(
	txmldb_h™dÀ
 
	txh
, c⁄° *
	t‰om
, c⁄° *
	tto
);

87 (
	txmldb_lock_t
)(
	txmldb_h™dÀ
 
	txh
, c⁄° *
	tdb
, 
	tpid
);

90 (
	txmldb_u∆ock_t
)(
	txmldb_h™dÀ
 
	txh
, c⁄° *
	tdb
);

93 (
	txmldb_u∆ock_Æl_t
)(
	txmldb_h™dÀ
 
	txh
, 
	tpid
);

96 (
	txmldb_i¶ocked_t
)(
	txmldb_h™dÀ
 
	txh
, c⁄° *
	tdb
);

99 (
	txmldb_exi°s_t
)(
	txmldb_h™dÀ
 
	txh
, c⁄° *
	tdb
);

102 (
	txmldb_dñëe_t
)(
	txmldb_h™dÀ
 
	txh
, c⁄° *
	tdb
);

105 (
	txmldb_¸óã_t
)(
	txmldb_h™dÀ
 
	txh
, c⁄° *
	tdb
);

108 
	sxmldb_≠i
{

109 
xa_vîsi⁄
;

110 
xa_magic
;

111 
∂ugö_öô_t
 *
xa_∂ugö_öô_‚
;

112 
∂ugö_exô_t
 *
xa_∂ugö_exô_‚
;

113 
xmldb_c⁄√˘_t
 *
xa_c⁄√˘_‚
;

114 
xmldb_disc⁄√˘_t
 *
xa_disc⁄√˘_‚
;

115 
xmldb_gë›t_t
 *
xa_gë›t_‚
;

116 
xmldb_£t›t_t
 *
xa_£t›t_‚
;

117 
xmldb_gë_t
 *
xa_gë_‚
;

118 
xmldb_put_t
 *
xa_put_‚
;

119 
xmldb_c›y_t
 *
xa_c›y_‚
;

120 
xmldb_lock_t
 *
xa_lock_‚
;

121 
xmldb_u∆ock_t
 *
xa_u∆ock_‚
;

122 
xmldb_u∆ock_Æl_t
 *
xa_u∆ock_Æl_‚
;

123 
xmldb_i¶ocked_t
 *
xa_i¶ocked_‚
;

124 
xmldb_exi°s_t
 *
xa_exi°s_‚
;

125 
xmldb_dñëe_t
 *
xa_dñëe_‚
;

126 
xmldb_¸óã_t
 *
xa_¸óã_‚
;

133 
	`xmldb_∂ugö_lﬂd
(
˛ic⁄_h™dÀ
 
h
, *
fûíame
);

134 
	`xmldb_∂ugö_u∆ﬂd
(
˛ic⁄_h™dÀ
 
h
);

136 
	`xmldb_vÆid©e_db
(c⁄° *
db
);

137 
	`xmldb_c⁄√˘
(
˛ic⁄_h™dÀ
 
h
);

138 
	`xmldb_disc⁄√˘
(
˛ic⁄_h™dÀ
 
h
);

139 
	`xmldb_gë›t
(
˛ic⁄_h™dÀ
 
h
, *
›äame
, **
vÆue
);

140 
	`xmldb_£t›t
(
˛ic⁄_h™dÀ
 
h
, *
›äame
, *
vÆue
);

141 
	`xmldb_gë
(
˛ic⁄_h™dÀ
 
h
, c⁄° *
db
, *
x∑th
, 
c⁄fig
, 
cxobj
 **
xt›
);

142 
	`xmldb_put
(
˛ic⁄_h™dÀ
 
h
, c⁄° *
db
, 
›î©i⁄_ty≥
 
›
, 
cxobj
 *
xt
, 
cbuf
 *
cbªt
);

143 
	`xmldb_c›y
(
˛ic⁄_h™dÀ
 
h
, c⁄° *
‰om
, c⁄° *
to
);

144 
	`xmldb_lock
(
˛ic⁄_h™dÀ
 
h
, c⁄° *
db
, 
pid
);

145 
	`xmldb_u∆ock
(
˛ic⁄_h™dÀ
 
h
, c⁄° *
db
);

146 
	`xmldb_u∆ock_Æl
(
˛ic⁄_h™dÀ
 
h
, 
pid
);

147 
	`xmldb_i¶ocked
(
˛ic⁄_h™dÀ
 
h
, c⁄° *
db
);

148 
	`xmldb_exi°s
(
˛ic⁄_h™dÀ
 
h
, c⁄° *
db
);

149 
	`xmldb_dñëe
(
˛ic⁄_h™dÀ
 
h
, c⁄° *
db
);

150 
	`xmldb_¸óã
(
˛ic⁄_h™dÀ
 
h
, c⁄° *
db
);

	@clixon-master/lib/clixon/clixon_xml_map.h

38 #i‚de‡
_CLIXON_XML_MAP_H_


39 
	#_CLIXON_XML_MAP_H_


	)

44 
xml2txt
(
FILE
 *
f
, 
cxobj
 *
x
, 
Àvñ
);

45 
xml2˛i
(
FILE
 *
f
, 
cxobj
 *
x
, *
¥ïíd
, 
gímodñ_ty≥
 
gt
);

46 
xml_y™g_vÆid©e_add
(
cxobj
 *
xt
, *
¨g
);

47 
xml_y™g_vÆid©e_Æl
(
cxobj
 *
xt
, *
¨g
);

48 
xml2cvec
(
cxobj
 *
xt
, 
y™g_°mt
 *
ys
, 
cvec
 **
cvv0
);

49 
cvec2xml_1
(
cvec
 *
cvv
, *
t›èg
, 
cxobj
 *
xp
, cxobj **
xt0
);

50 
xml_diff
(
y™g_•ec
 *
y•ec
, 
cxobj
 *
xt1
, cxobj *
xt2
,

51 
cxobj
 ***
fú°
, 
size_t
 *
fú°Àn
,

52 
cxobj
 ***
£c⁄d
, 
size_t
 *
£c⁄dÀn
,

53 
cxobj
 ***
ch™ged1
, cxobj ***
ch™ged2
, 
size_t
 *
ch™gedÀn
);

54 
y™g2≠i_∑th_fmt
(
y™g_°mt
 *
ys
, 
ö˛key
, **
≠i_∑th_fmt
);

55 
≠i_∑th_fmt2≠i_∑th
(*
≠i_∑th_fmt
, 
cvec
 *
cvv
, **
≠i_∑th
);

56 
≠i_∑th_fmt2x∑th
(*
≠i_∑th_fmt
, 
cvec
 *
cvv
, **
x∑th
);

57 
xml_åì_¥u√_Êagged_sub
(
cxobj
 *
xt
, 
Êag
, 
ã°
, *
upm¨k
);

58 
xml_åì_¥u√_Êagged
(
cxobj
 *
xt
, 
Êag
, 
ã°
);

59 
xml_deÁu…
(
cxobj
 *
x
, *
¨g
);

60 
xml_‹dî
(
cxobj
 *
x
, *
¨g
);

61 
xml_ßnôy
(
cxobj
 *
x
, *
¨g
);

62 
xml_n⁄_c⁄fig_d©a
(
cxobj
 *
xt
, *
¨g
);

63 
xml_•ec_p›uœã
(
cxobj
 *
x
, *
¨g
);

64 
≠i_∑th2x∑th_cvv
(
y™g_•ec
 *
y•ec
, 
cvec
 *
cvv
, 
off£t
, 
cbuf
 *
x∑th
);

65 
≠i_∑th2x∑th
(
y™g_•ec
 *
y•ec
, *
≠i_∑th
, 
cbuf
 *
x∑th
);

66 
≠i_∑th2xml
(*
≠i_∑th
, 
y™g_•ec
 *
y•ec
, 
cxobj
 *
xt›
,

67 
y™g_˛ass
 
node˛ass
, 
cxobj
 **
x∑thp
, 
y™g_node
 **
y∑thp
);

68 
xml_mîge
(
cxobj
 *
x0
, cxobj *
x1
, 
y™g_•ec
 *
y•ec
, **
ªas⁄
);

69 
y™g_íum_öt_vÆue
(
cxobj
 *
node
, 
öt32_t
 *
vÆ
);

	@clixon-master/lib/clixon/clixon_xml_sort.h

36 #i‚de‡
_CLIXON_XML_SORT_H


37 
	#_CLIXON_XML_SORT_H


	)

42 
xml_chûd_s‹t
;

47 
xml_chûd_•ec
(*
«me
, 
cxobj
 *
xp
, 
y™g_•ec
 *
y•ec
, 
y™g_°mt
 **
yp
);

48 
xml_cmp
(c⁄° * 
¨g1
, c⁄° * 
¨g2
);

49 
xml_s‹t
(
cxobj
 *
x0
, *
¨g
);

50 
cxobj
 *
xml_£¨ch
(cxobj *
x
, *
«me
, 
y™gi
, 
rfc_6020
 
keyw‹d
, 
keyƒ
, **
keyvec
, **
keyvÆ
);

51 
xml_ö£π_pos
(
cxobj
 *
x0
, *
«me
, 
y™gi
, 
rfc_6020
 
keyw‹d
,

52 
keyƒ
, **
keyvec
, **
keyvÆ
, 
low
,

53 
uµî
);

54 
cxobj
 *
xml_m©ch
(cxobj *
x0
, *
«me
, 
rfc_6020
 
keyw‹d
, 
keyƒ
, **
keyvec
, **
keyvÆ
);

55 
xml_s‹t_vîify
(
cxobj
 *
x
, *
¨g
);

56 
m©ch_ba£_chûd
(
cxobj
 *
x0
, cxobj *
x1c
, cxobj **
x0˝
, 
y™g_°mt
 *
yc
);

	@clixon-master/lib/clixon/clixon_xsl.h

36 #i‚de‡
_CLIXON_XSL_H


37 
	#_CLIXON_XSL_H


	)

42 
cxobj
 *
x∑th_fú°
(cxobj *
cxt›
, *
f‹m©
, ...);

43 
cxobj
 *
x∑th_óch
(cxobj *
xn_t›
, *
x∑th
, cxobj *
¥ev
);

44 
x∑th_vec
(
cxobj
 *
cxt›
, *
f‹m©
, cxobj ***
vec
, 
size_t
 *
ve˛í
, ...);

45 
x∑th_vec_Êag
(
cxobj
 *
cxt›
, *
x∑th
, 
uöt16_t
 
Êags
,

46 
cxobj
 ***
vec
, 
size_t
 *
ve˛í
, ...);

	@clixon-master/lib/clixon/clixon_yang.h

39 #i‚de‡
_CLIXON_YANG_H_


40 
	#_CLIXON_YANG_H_


	)

46 
	#V_UNIQUE
 0x01

	)

47 
	#V_UNSET
 0x08

	)

59 
	erfc_6020
{

60 
	mY_ANYXML
 = 0,

61 
	mY_ARGUMENT
,

62 
	mY_AUGMENT
,

63 
	mY_BASE
,

64 
	mY_BELONGS_TO
,

65 
	mY_BIT
,

66 
	mY_CASE
,

67 
	mY_CHOICE
,

68 
	mY_CONFIG
,

69 
	mY_CONTACT
,

70 
	mY_CONTAINER
,

71 
	mY_DEFAULT
,

72 
	mY_DESCRIPTION
,

73 
	mY_DEVIATE
,

74 
	mY_DEVIATION
,

75 
	mY_ENUM
,

76 
	mY_ERROR_APP_TAG
,

77 
	mY_ERROR_MESSAGE
,

78 
	mY_EXTENSION
,

79 
	mY_FEATURE
,

80 
	mY_FRACTION_DIGITS
,

81 
	mY_GROUPING
,

82 
	mY_IDENTITY
,

83 
	mY_IF_FEATURE
,

84 
	mY_IMPORT
,

85 
	mY_INCLUDE
,

86 
	mY_INPUT
,

87 
	mY_KEY
,

88 
	mY_LEAF
,

89 
	mY_LEAF_LIST
,

90 
	mY_LENGTH
,

91 
	mY_LIST
,

92 
	mY_MANDATORY
,

93 
	mY_MAX_ELEMENTS
,

94 
	mY_MIN_ELEMENTS
,

95 
	mY_MODULE
,

96 
	mY_MUST
,

97 
	mY_NAMESPACE
,

98 
	mY_NOTIFICATION
,

99 
	mY_ORDERED_BY
,

100 
	mY_ORGANIZATION
,

101 
	mY_OUTPUT
,

102 
	mY_PATH
,

103 
	mY_PATTERN
,

104 
	mY_POSITION
,

105 
	mY_PREFIX
,

106 
	mY_PRESENCE
,

107 
	mY_RANGE
,

108 
	mY_REFERENCE
,

109 
	mY_REFINE
,

110 
	mY_REQUIRE_INSTANCE
,

111 
	mY_REVISION
,

112 
	mY_REVISION_DATE
,

113 
	mY_RPC
,

114 
	mY_STATUS
,

115 
	mY_SUBMODULE
,

116 
	mY_TYPE
,

117 
	mY_TYPEDEF
,

118 
	mY_UNIQUE
,

119 
	mY_UNITS
,

120 
	mY_UNKNOWN
,

121 
	mY_USES
,

122 
	mY_VALUE
,

123 
	mY_WHEN
,

124 
	mY_YANG_VERSION
,

125 
	mY_YIN_ELEMENT
,

126 
	mY_SPEC


132 
	ey™g_˛ass
{

133 
	mYC_NONE
,

134 
	mYC_DATANODE
,

135 
	mYC_DATADEFINITION
,

136 
	mYC_SCHEMANODE


138 
y™g_˛ass
 
	ty™g_˛ass
;

140 
	#YANG_FLAG_MARK
 0x01

	)

148 
	#y™g_d©™ode
(
y
Ë((y)->
ys_keyw‹d
 =
Y_CONTAINER
 || (y)->ys_keyw‹d =
Y_LEAF
 || (y)->ys_keyw‹d =
Y_LIST
 || (y)->ys_keyw‹d =
Y_LEAF_LIST
 || (y)->ys_keyw‹d =
Y_ANYXML
)

	)

156 
	#y™g_d©adeföôi⁄
(
y
Ë(
	`y™g_d©™ode
(yË|| (y)->
ys_keyw‹d
 =
Y_CHOICE
 || (y)->ys_keyw‹d =
Y_CASE
 || (y)->ys_keyw‹d =
Y_AUGMENT
 || (y)->ys_keyw‹d =
Y_USES
)

	)

165 
	#y™g_schem™ode
(
y
Ë(
	`y™g_d©™ode
(yË|| (y)->
ys_keyw‹d
 =
Y_RPC
 || (y)->ys_keyw‹d =
Y_CHOICE
 || (y)->ys_keyw‹d =
Y_CASE
 || (y)->ys_keyw‹d =
Y_INPUT
 || (y)->ys_keyw‹d =
Y_OUTPUT
 || (y)->ys_keyw‹d =
Y_NOTIFICATION
)

	)

168 
y™g_°mt
 
	ty™g_°mt
;

173 
	sy™g_ty≥_ˇche
{

174 
	myc_›ti⁄s
;

175 
cg_v¨
 *
	myc_möcv
;

176 
cg_v¨
 *
	myc_maxcv
;

177 *
	myc_∑âîn
;

178 
uöt8_t
 
	myc_‰a˘i⁄
;

179 
y™g_°mt
 *
	myc_ªsﬁved
;

181 
y™g_ty≥_ˇche
 
	ty™g_ty≥_ˇche
;

185 
	sy™g_°mt
{

186 
	mys_Àn
;

187 
y™g_°mt
 **
	mys_°mt
;

188 
y™g_node
 *
	mys_∑ª¡
;

189 
rfc_6020
 
	mys_keyw‹d
;

191 *
	mys_¨gumít
;

192 
	mys_Êags
;

193 
cg_v¨
 *
	mys_cv
;

202 
cvec
 *
	mys_cvec
;

206 
y™g_ty≥_ˇche
 *
	mys_ty≥ˇche
;

211 
	sy™g_•ec
{

212 
	myp_Àn
;

213 
y™g_°mt
 **
	myp_°mt
;

214 
y™g_node
 *
	myp_∑ª¡
;

215 
rfc_6020
 
	myp_keyw‹d
;

216 *
	myp_¨gumít
;

217 
	myp_Êags
;

219 
y™g_•ec
 
	ty™g_•ec
;

222 
	sy™g_node
{

223 
	myn_Àn
;

224 
y™g_°mt
 **
	myn_°mt
;

225 
y™g_node
 *
	myn_∑ª¡
;

226 
rfc_6020
 
	myn_keyw‹d
;

227 *
	myn_¨gumít
;

228 
	myn_Êags
;

230 
y™g_node
 
	ty™g_node
;

232 (
	ty™g_≠∂y‚_t
)(
	ty™g_°mt
 *
	tys
, *
	t¨g
);

237 
y™g_•ec
 *
	`y•ec_√w
();

238 
y™g_°mt
 *
	`ys_√w
(
rfc_6020
 
keyw
);

239 
	`ys_‰ì
(
y™g_°mt
 *
ys
);

240 
	`y•ec_‰ì
(
y™g_•ec
 *
y•ec
);

241 
	`ys_˝
(
y™g_°mt
 *
√w
, y™g_°mà*
ﬁd
);

242 
y™g_°mt
 *
	`ys_dup
(y™g_°mà*
ﬁd
);

243 
	`yn_ö£π
(
y™g_node
 *
yn_∑ª¡
, 
y™g_°mt
 *
ys_chûd
);

244 
y™g_°mt
 *
	`yn_óch
(
y™g_node
 *
yn
, y™g_°mà*
ys
);

245 *
	`y™g_key2°r
(
keyw‹d
);

246 *
	`y¨g_¥efix
(
y™g_°mt
 *
ys
);

247 *
	`y¨g_id
(
y™g_°mt
 *
ys
);

248 
y™g_°mt
 *
	`ys_moduÀ
(y™g_°mà*
ys
);

249 
y™g_•ec
 *
	`ys_•ec
(
y™g_°mt
 *
ys
);

250 
y™g_°mt
 *
	`y™g_föd_moduÀ_by_¥efix
(y™g_°mà*
ys
, *
¥efix
);

251 
y™g_°mt
 *
	`y™g_föd
(
y™g_node
 *
yn
, 
keyw‹d
, *
¨gumít
);

252 
y™g_°mt
 *
	`y™g_föd_d©™ode
(
y™g_node
 *
yn
, *
¨gumít
);

253 
y™g_°mt
 *
	`y™g_föd_schem™ode
(
y™g_node
 *
yn
, *
¨gumít
);

254 
y™g_°mt
 *
	`y™g_föd_t›node
(
y™g_•ec
 *
y•
, *
«me
, 
y™g_˛ass
 
˛ass
);

255 
	`y™g_‹dî
(
y™g_°mt
 *
y
);

256 
	`y™g_¥öt
(
FILE
 *
f
, 
y™g_node
 *
yn
);

257 
	`y™g_¥öt_cbuf
(
cbuf
 *
cb
, 
y™g_node
 *
yn
, 
m¨göÆ
);

258 
	`y™g_∑r£
(
˛ic⁄_h™dÀ
 
h
, c⁄° *
y™g_dú
,

259 c⁄° *
moduÀ
, c⁄° *
ªvisi⁄
, 
y™g_•ec
 *
y•
);

260 
	`y™g_≠∂y
(
y™g_node
 *
yn
, 
rfc_6020
 
key
, 
y™g_≠∂y‚_t
 
‚
,

261 *
¨g
);

262 
	`y™g_abs_schema_nodeid
(
y™g_•ec
 *
y•ec
, *
schema_nodeid
,

263 
rfc_6020
 
keyw‹d
, 
y™g_°mt
 **
yªs
);

264 
	`y™g_desc_schema_nodeid
(
y™g_node
 *
yn
, *
schema_nodeid
,

265 
rfc_6020
 
keyw‹d
, 
y™g_°mt
 **
yªs
);

266 
cg_v¨
 *
	`ys_∑r£
(
y™g_°mt
 *
ys
, 
cv_ty≥
 
cvty≥
);

267 
	`ys_∑r£_sub
(
y™g_°mt
 *
ys
, *
exåa
);

268 
	`y™g_m™d©‹y
(
y™g_°mt
 *
ys
);

269 
	`y™g_c⁄fig
(
y™g_°mt
 *
ys
);

270 
y™g_•ec
 *
	`y™g_•ec_√tc⁄f
(
˛ic⁄_h™dÀ
 
h
);

271 
y™g_•ec
 *
	`y™g_•ec_maö
(
˛ic⁄_h™dÀ
 
h
);

272 
cvec
 *
	`y™g_¨g2cvec
(
y™g_°mt
 *
ys
, *
dñimi
);

273 
	`y™g_key_m©ch
(
y™g_node
 *
yn
, *
«me
);

	@clixon-master/lib/clixon/clixon_yang_type.h

36 #i‚de‡
_CLIXON_YANG_TYPE_H_


37 
	#_CLIXON_YANG_TYPE_H_


	)

44 
	#YANG_OPTIONS_LENGTH
 0x01

	)

45 
	#YANG_OPTIONS_RANGE
 0x02

	)

46 
	#YANG_OPTIONS_PATTERN
 0x04

	)

47 
	#YANG_OPTIONS_FRACTION_DIGITS
 0x08

	)

57 
y™g_ty≥_ˇche_£t
(
y™g_ty≥_ˇche
 **
yˇche
,

58 
y™g_°mt
 *
ªsﬁved
, 
›ti⁄s
, 
cg_v¨
 *
möcv
,

59 
cg_v¨
 *
maxcv
, *
∑âîn
, 
uöt8_t
 
‰a˘i⁄
);

60 
y™g_ty≥_ˇche_gë
(
y™g_ty≥_ˇche
 *
yˇche
,

61 
y™g_°mt
 **
ªsﬁved
, *
›ti⁄s
, 
cg_v¨
 **
möcv
,

62 
cg_v¨
 **
maxcv
, **
∑âîn
, 
uöt8_t
 *
‰a˘i⁄
);

63 
y™g_ty≥_ˇche_˝
(
y™g_ty≥_ˇche
 **
y˙ew
, y™g_ty≥_ˇchê*
ycﬁd
);

64 
y™g_ty≥_ˇche_‰ì
(
y™g_ty≥_ˇche
 *
yˇche
);

65 
ys_ªsﬁve_ty≥
(
y™g_°mt
 *
ys
, *
¨g
);

66 
y™g2cv_ty≥
(*
yty≥
, 
cv_ty≥
 *cv_type);

67 *
cv2y™g_ty≥
(
cv_ty≥
 cv_type);

68 
y™g_°mt
 *
y™g_föd_idítôy
(y™g_°mà*
ys
, *
idítôy
);

69 
ys_cv_vÆid©e
(
cg_v¨
 *
cv
, 
y™g_°mt
 *
ys
, **
ªas⁄
);

70 
˛ic⁄_ty≥2cv
(*
ty≥
, *
πy≥
, 
cv_ty≥
 *
cvty≥
);

71 
y™g_ty≥_gë
(
y™g_°mt
 *
ys
, **
Ÿy≥
, y™g_°mà**
ª°y≥
,

72 *
›ti⁄s
, 
cg_v¨
 **
möcv
, cg_v¨ **
maxcv
, **
∑âîn
,

73 
uöt8_t
 *
‰a˘i⁄_digôs
);

74 
y™g_ty≥_ªsﬁve
(
y™g_°mt
 *
ys
, y™g_°mà*
yty≥
,

75 
y™g_°mt
 **
ª°y≥
, *
›ti⁄s
,

76 
cg_v¨
 **
möcv
, cg_v¨ **
maxcv
,

77 **
∑âîn
, 
uöt8_t
 *
‰a˘i⁄
);

	@clixon-master/lib/src/build.c

1 c⁄° 
	gCLIXON_BUILDSTR
[64]="2018.05.27 20:39 byÑoot on ubuntu";

2 c⁄° 
	gCLIXON_VERSION
[64]="3.6.0";

	@clixon-master/lib/src/clixon_err.c

41 #ifde‡
HAVE_CONFIG_H


42 
	~"˛ix⁄_c⁄fig.h
"

45 
	~<°dio.h
>

46 
	~<°d¨g.h
>

47 
	~<°döt.h
>

48 
	~<°dlib.h
>

49 
	~<f˙é.h
>

50 
	~<î∫o.h
>

51 
	~<uni°d.h
>

52 
	~<sy¶og.h
>

53 
	~<°rög.h
>

54 
	~<time.h
>

55 
	~<sys/time.h
>

56 
	~<sys/ty≥s.h
>

58 
	~"˛ix⁄_log.h
"

59 
	~"˛ix⁄_queue.h
"

60 
	~"˛ix⁄_îr.h
"

65 
	sîrvec
{

66 *
	mev_°r
;

67 
	mev_îr
;

70 
	sîr_°©e
{

71 
	mes_î∫o
;

72 
	mes_subî∫o
;

73 
	mes_ªas⁄
[
ERR_STRLEN
];

79 
	g˛ic⁄_î∫o
 = 0;

80 
	g˛ic⁄_subî∫o
 = 0;

81 
	g˛ic⁄_îr_ªas⁄
[
ERR_STRLEN
] = {0, };

86 
îrvec
 
	gEV
[] = {

87 {"D©aba£Éº‹", 
OE_DB
},

88 {"Dem⁄Éº‹", 
OE_DEMON
},

89 {"Evíàîr‹", 
OE_EVENTS
},

90 {"C⁄figÉº‹", 
OE_CFG
},

91 {"PrŸocﬁÉº‹", 
OE_PROTO
},

92 {"Regex∞îr‹", 
OE_REGEX
},

93 {"UNIXÉº‹", 
OE_UNIX
},

94 {"Sy¶ogÉº‹", 
OE_SYSLOG
},

95 {"Routög dem⁄Éº‹", 
OE_ROUTING
},

96 {"XMLÉº‹", 
OE_XML
},

97 {"Plugös", 
OE_PLUGIN
},

98 {"Y™gÉº‹", 
OE_YANG
},

99 {"FATAL", 
OE_FATAL
},

100 {"Undeföed", 
OE_UNDEF
},

101 {
NULL
, -1}

105 
	$˛ic⁄_°ªº‹1
(
îr
, 
îrvec
 
vec
[])

107 
îrvec
 *
ev
;

109 
ev
=
vec
;Év->
ev_îr
 != -1;Év++)

110 i‡(
ev
->
ev_îr
 =
îr
)

112  
ev
?”v->
ev_°r
?ev->ev_str:"unknown"):"CLICON unknownÉrror";

113 
	}
}

120 
	$˛ic⁄_îr_ª£t
()

122 
˛ic⁄_î∫o
 = 0;

123 
˛ic⁄_subî∫o
 = 0;

124 
	`mem£t
(
˛ic⁄_îr_ªas⁄
, 0, 
ERR_STRLEN
);

126 
	}
}

144 
	$˛ic⁄_îr_‚
(c⁄° *
‚
,

145 c⁄° 
löe
,

146 
ˇãg‹y
,

147 
subîr
,

148 *
ªas⁄
, ...)

150 
va_li°
 
¨gs
;

151 
Àn
;

152 *
msg
 = 
NULL
;

153 
ªtvÆ
 = -1;

156 
˛ic⁄_î∫o
 = 
ˇãg‹y
;

157 
˛ic⁄_subî∫o
 = 
subîr
;

160 
	`va_°¨t
(
¨gs
, 
ªas⁄
);

161 
Àn
 = 
	`v¢¥ötf
(
NULL
, 0, 
ªas⁄
, 
¨gs
);

162 
	`va_íd
(
¨gs
);

165 i‡((
msg
 = 
	`mÆloc
(
Àn
+1)Ë=
NULL
){

166 
	`Ârötf
(
°dîr
, "mÆloc: %s\n", 
	`°ªº‹
(
î∫o
));

167 
d⁄e
;

171 
	`va_°¨t
(
¨gs
, 
ªas⁄
);

172 i‡(
	`v¢¥ötf
(
msg
, 
Àn
+1, 
ªas⁄
, 
¨gs
) < 0){

173 
	`va_íd
(
¨gs
);

174 
	`Ârötf
(
°dîr
, "v¢¥ötf: %s\n", 
	`°ªº‹
(
î∫o
));

175 
d⁄e
;

177 
	`va_íd
(
¨gs
);

178 
	`°∫˝y
(
˛ic⁄_îr_ªas⁄
, 
msg
, 
ERR_STRLEN
-1);

181 i‡(
subîr
){

183 
	`˛ic⁄_log
(
LOG_ERR
, "%s: %d: %s: %s: %s",

184 
‚
,

185 
löe
,

186 
	`˛ic⁄_°ªº‹
(
ˇãg‹y
),

187 
msg
,

188 
	`°ªº‹
(
subîr
));

191 
	`˛ic⁄_log
(
LOG_ERR
, "%s: %d: %s: %s",

192 
‚
,

193 
löe
,

194 
	`˛ic⁄_°ªº‹
(
ˇãg‹y
),

195 
msg
);

197 
ªtvÆ
 = 0;

198 
d⁄e
:

199 i‡(
msg
)

200 
	`‰ì
(
msg
);

201  
ªtvÆ
;

202 
	}
}

207 
	$˛ic⁄_°ªº‹
(
îr
)

209  
	`˛ic⁄_°ªº‹1
(
îr
, 
EV
);

210 
	}
}

215 
	$˛ic⁄_îr_ßve
()

217 
îr_°©e
 *
es
;

219 i‡((
es
 = 
	`mÆloc
((*es))Ë=
NULL
)

220  
NULL
;

221 
es
->
es_î∫o
 = 
˛ic⁄_î∫o
;

222 
es
->
es_subî∫o
 = 
˛ic⁄_subî∫o
;

223 
	`°∫˝y
(
es
->
es_ªas⁄
, 
˛ic⁄_îr_ªas⁄
, 
ERR_STRLEN
-1);

224  (*)
es
;

225 
	}
}

230 
	$˛ic⁄_îr_ª°‹e
(* 
h™dÀ
)

232 
îr_°©e
 *
es
;

234 i‡((
es
 = (
îr_°©e
 *)
h™dÀ
Ë!
NULL
){

235 
˛ic⁄_î∫o
 = 
es
->
es_î∫o
;

236 
˛ic⁄_subî∫o
 = 
es
->
es_subî∫o
;

237 
	`°∫˝y
(
˛ic⁄_îr_ªas⁄
, 
es
->
es_ªas⁄
, 
ERR_STRLEN
-1);

238 
	`‰ì
(
es
);

241 
	}
}

	@clixon-master/lib/src/clixon_event.c

38 #ifde‡
HAVE_CONFIG_H


39 
	~"˛ix⁄_c⁄fig.h
"

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

44 
	~<°döt.h
>

45 
	~<f˙é.h
>

46 
	~<uni°d.h
>

47 
	~<î∫o.h
>

48 
	~<°rög.h
>

49 
	~<sy¶og.h
>

50 
	~<sys/ty≥s.h
>

51 
	~<sys/time.h
>

53 
	~"˛ix⁄_queue.h
"

54 
	~"˛ix⁄_log.h
"

55 
	~"˛ix⁄_îr.h
"

56 
	~"˛ix⁄_evít.h
"

61 
	#EVENT_STRLEN
 32

	)

66 
	sevít_d©a
{

67 
evít_d©a
 *
	me_√xt
;

68 (*
	me_‚
)(, *);

69 íum {
	mEVENT_FD
, 
	mEVENT_TIME
} 
	me_ty≥
;

70 
	me_fd
;

71 
timevÆ
 
	me_time
;

72 *
	me_¨g
;

73 
	me_°rög
[
EVENT_STRLEN
];

79 
evít_d©a
 *
	gì
 = 
NULL
;

80 
evít_d©a
 *
	gì_timîs
 = 
NULL
;

83 
	g_ì_uƒeg
 = 0;

85 
	g_˛ic⁄_exô
 = 0;

93 
	$˛ic⁄_exô_£t
()

95 
_˛ic⁄_exô
++;

97 
	}
}

102 
	$˛ic⁄_exô_gë
()

104  
_˛ic⁄_exô
;

105 
	}
}

120 
	$evít_ªg_fd
(
fd
,

121 (*
‚
)(, *),

122 *
¨g
,

123 *
°r
)

125 
evít_d©a
 *
e
;

127 i‡((
e
 = (
evít_d©a
 *)
	`mÆloc
((evít_d©a))Ë=
NULL
){

128 
	`˛ic⁄_îr
(
OE_EVENTS
, 
î∫o
, "malloc");

131 
	`mem£t
(
e
, 0, (
evít_d©a
));

132 
	`°∫˝y
(
e
->
e_°rög
, 
°r
, 
EVENT_STRLEN
);

133 
e
->
e_fd
 = 
fd
;

134 
e
->
e_‚
 = 
‚
;

135 
e
->
e_¨g
 = 
¨g
;

136 
e
->
e_ty≥
 = 
EVENT_FD
;

137 
e
->
e_√xt
 = 
ì
;

138 
ì
 = 
e
;

139 
	`˛ic⁄_debug
(2, "%s,Ñegi°îög %s", 
__FUNCTION__
, 
e
->
e_°rög
);

141 
	}
}

151 
	$evít_uƒeg_fd
(
s
,

152 (*
‚
)(, *))

154 
evít_d©a
 *
e
, **
e_¥ev
;

155 
found
 = 0;

157 
e_¥ev
 = &
ì
;

158 
e
 = 
ì
;É;É =É->
e_√xt
){

159 i‡(
‚
 =
e
->
e_‚
 && 
s
 =e->
e_fd
) {

160 
found
++;

161 *
e_¥ev
 = 
e
->
e_√xt
;

162 
_ì_uƒeg
++;

163 
	`‰ì
(
e
);

166 
e_¥ev
 = &
e
->
e_√xt
;

168  
found
?0:-1;

169 
	}
}

195 
	$evít_ªg_timeout
(
timevÆ
 
t
,

196 (*
‚
)(, *),

197 *
¨g
,

198 *
°r
)

200 
evít_d©a
 *
e
, *
e1
, **
e_¥ev
;

202 i‡((
e
 = (
evít_d©a
 *)
	`mÆloc
((evít_d©a))Ë=
NULL
){

203 
	`˛ic⁄_îr
(
OE_EVENTS
, 
î∫o
, "malloc");

206 
	`mem£t
(
e
, 0, (
evít_d©a
));

207 
	`°∫˝y
(
e
->
e_°rög
, 
°r
, 
EVENT_STRLEN
);

208 
e
->
e_‚
 = 
‚
;

209 
e
->
e_¨g
 = 
¨g
;

210 
e
->
e_ty≥
 = 
EVENT_TIME
;

211 
e
->
e_time
 = 
t
;

213 
e_¥ev
 = &
ì_timîs
;

214 
e1
=
ì_timîs
;É1;É1Û1->
e_√xt
){

215 i‡(
	`timîcmp
(&
e
->
e_time
, &
e1
->e_time, <))

217 
e_¥ev
 = &
e1
->
e_√xt
;

219 
e
->
e_√xt
 = 
e1
;

220 *
e_¥ev
 = 
e
;

221 
	`˛ic⁄_debug
(2, "evít_ªg_timeout: %s", 
°r
);

223 
	}
}

235 
	$evít_uƒeg_timeout
((*
‚
)(, *),

236 *
¨g
)

238 
evít_d©a
 *
e
, **
e_¥ev
;

239 
found
 = 0;

241 
e_¥ev
 = &
ì_timîs
;

242 
e
 = 
ì_timîs
;É;É =É->
e_√xt
){

243 i‡(
‚
 =
e
->
e_‚
 && 
¨g
 =e->
e_¨g
) {

244 
found
++;

245 *
e_¥ev
 = 
e
->
e_√xt
;

246 
	`‰ì
(
e
);

249 
e_¥ev
 = &
e
->
e_√xt
;

251  
found
?0:-1;

252 
	}
}

261 
	$evít_pﬁl
(
fd
)

263 
ªtvÆ
 = -1;

264 
fd_£t
 
fd£t
;

265 
timevÆ
 
äuŒ
 = {0,};

267 
	`FD_ZERO
(&
fd£t
);

268 
	`FD_SET
(
fd
, &
fd£t
);

269 i‡((
ªtvÆ
 = 
	`£À˘
(
FD_SETSIZE
, &
fd£t
, 
NULL
, NULL, &
äuŒ
)) < 0)

270 
	`˛ic⁄_îr
(
OE_EVENTS
, 
î∫o
, "%†£À˘1: %s", 
__FUNCTION__
, 
	`°ªº‹
(errno));

271  
ªtvÆ
;

272 
	}
}

279 
	$evít_lo›
()

281 
evít_d©a
 *
e
;

282 
evít_d©a
 *
e_√xt
;

283 
n
;

284 
timevÆ
 
t
;

285 
timevÆ
 
t0
;

286 
timevÆ
 
äuŒ
 = {0,};

287 
fd_£t
 
fd£t
;

288 
ªtvÆ
 = -1;

290 !
	`˛ic⁄_exô_gë
()){

291 
	`FD_ZERO
(&
fd£t
);

292 
e
=
ì
;É;ÉÛ->
e_√xt
)

293 i‡(
e
->
e_ty≥
 =
EVENT_FD
)

294 
	`FD_SET
(
e
->
e_fd
, &
fd£t
);

295 i‡(
ì_timîs
 !
NULL
){

296 
	`gëtimeofday
(&
t0
, 
NULL
);

297 
	`timîsub
(&
ì_timîs
->
e_time
, &
t0
, &
t
);

298 i‡(
t
.
tv_£c
 < 0)

299 
n
 = 
	`£À˘
(
FD_SETSIZE
, &
fd£t
, 
NULL
, NULL, &
äuŒ
);

301 
n
 = 
	`£À˘
(
FD_SETSIZE
, &
fd£t
, 
NULL
, NULL, &
t
);

304 
n
 = 
	`£À˘
(
FD_SETSIZE
, &
fd£t
, 
NULL
, NULL, NULL);

305 i‡(
	`˛ic⁄_exô_gë
())

307 i‡(
n
 == -1) {

308 i‡(
î∫o
 =
EINTR
){

309 
	`˛ic⁄_debug
(1, "%†£À˘: %s", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

310 
	`˛ic⁄_îr
(
OE_EVENTS
, 
î∫o
, "%†£À˘1: %s", 
__FUNCTION__
, 
	`°ªº‹
(errno));

311 
ªtvÆ
 = 0;

314 
	`˛ic⁄_îr
(
OE_EVENTS
, 
î∫o
, "%†£À˘2", 
__FUNCTION__
);

315 
îr
;

317 i‡(
n
==0){

318 
e
 = 
ì_timîs
;

319 
ì_timîs
 =Ée_timîs->
e_√xt
;

320 
	`˛ic⁄_debug
(2, "%sÅimeout: %s[%x]",

321 
__FUNCTION__
, 
e
->
e_°rög
,É->
e_¨g
);

322 i‡((*
e
->
e_‚
)(0,É->
e_¨g
) < 0){

323 
	`‰ì
(
e
);

324 
îr
;

326 
	`‰ì
(
e
);

328 
_ì_uƒeg
 = 0;

329 
e
=
ì
;É;É=
e_√xt
){

330 i‡(
	`˛ic⁄_exô_gë
())

332 
e_√xt
 = 
e
->e_next;

333 if(
e
->
e_ty≥
 =
EVENT_FD
 && 
	`FD_ISSET
”->
e_fd
, &
fd£t
)){

334 
	`˛ic⁄_debug
(2, "%s: FD_ISSET: %s[%x]",

335 
__FUNCTION__
, 
e
->
e_°rög
,É->
e_¨g
);

336 i‡((*
e
->
e_‚
)”->
e_fd
,É->
e_¨g
) < 0){

337 
	`˛ic⁄_debug
(1, "%†Eº‹ in: %s", 
__FUNCTION__
, 
e
->
e_°rög
);

338 
îr
;

341 i‡(
_ì_uƒeg
){

342 
_ì_uƒeg
 = 0;

348 
îr
:

351 
	`˛ic⁄_debug
(1, "%†d⁄e:%d", 
__FUNCTION__
, 
ªtvÆ
);

352  
ªtvÆ
;

353 
	}
}

356 
	$evít_exô
()

358 
evít_d©a
 *
e
, *
e_√xt
;

360 
e_√xt
 = 
ì
;

361 (
e
 = 
e_√xt
Ë!
NULL
){

362 
e_√xt
 = 
e
->e_next;

363 
	`‰ì
(
e
);

365 
ì
 = 
NULL
;

366 
e_√xt
 = 
ì_timîs
;

367 (
e
 = 
e_√xt
Ë!
NULL
){

368 
e_√xt
 = 
e
->e_next;

369 
	`‰ì
(
e
);

371 
ì_timîs
 = 
NULL
;

373 
	}
}

	@clixon-master/lib/src/clixon_file.c

36 #ifde‡
HAVE_CONFIG_H


37 
	~"˛ix⁄_c⁄fig.h
"

40 
	~<°dio.h
>

41 
	~<°dlib.h
>

42 
	#__USE_GNU


	)

43 
	~<°rög.h
>

44 
	~<î∫o.h
>

45 
	~<dúít.h
>

46 
	~<ªgex.h
>

47 
	~<pwd.h
>

48 
	~<f˙é.h
>

49 
	~<sys/ty≥s.h
>

50 
	~<sys/°©.h
>

51 
	~<sys/∑øm.h
>

52 
	~<uni°d.h
>

53 
	~<√töë/ö.h
>

54 
	~<gΩ.h
>

57 
	~<˛igí/˛igí.h
>

60 
	~"˛ix⁄_îr.h
"

61 
	~"˛ix⁄_queue.h
"

62 
	~"˛ix⁄_°rög.h
"

63 
	~"˛ix⁄_fûe.h
"

68 
	$˛ic⁄_fûe_dúít_s‹t
(c⁄° * 
¨g1
,

69 c⁄° * 
¨g2
)

71 
dúít
 *
d1
 = (dúíà*)
¨g1
;

72 
dúít
 *
d2
 = (dúíà*)
¨g2
;

74 #ifde‡ 
HAVE_STRVERSCMP


75  
	`°rvîscmp
(
d1
->
d_«me
, 
d2
->d_name);

77  
	`°rcﬁl
(
d1
->
d_«me
, 
d2
->d_name);

79 
	}
}

102 
	$˛ic⁄_fûe_dúít
(c⁄° *
dú
,

103 
dúít
 **
ít
,

104 c⁄° *
ªgexp
,

105 
mode_t
 
ty≥
)

107 
ªtvÆ
 = -1;

108 
DIR
 *
dúp
;

109 
ªs
;

110 
√¡
;

111 
ªgex_t
 
ª
;

112 
îrbuf
[128];

113 
fûíame
[
MAXPATHLEN
];

114 
°©
 
°
;

115 
dúít
 
dít
;

116 
dúít
 *
dª•
;

117 
dúít
 *
tmp
;

118 
dúít
 *
√w
 = 
NULL
;

119 
dúít
 *
dve˝
 = 
NULL
;

121 *
ít
 = 
NULL
;

122 
√¡
 = 0;

123 i‡(
ªgexp
 && (
ªs
 = 
	`ªgcomp
(&
ª
,Ñegexp, 
REG_EXTENDED
)) != 0) {

124 
	`ªgîr‹
(
ªs
, &
ª
, 
îrbuf
, (errbuf));

125 
	`˛ic⁄_îr
(
OE_DB
, 0, "ªgcomp: %s", 
îrbuf
);

128 i‡((
dúp
 = 
	`›ídú
(
dú
)Ë=
NULL
) {

129 i‡(
î∫o
 =
ENOENT
)

130 
ªtvÆ
 = 0;

132 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "›ídú(%s)", 
dú
);

133 
quô
;

135 
ªs
 = 
	`ªaddú_r
(
dúp
, &
dít
, &
dª•
);

136 
dª•
;

137 
ªs
 = 
	`ªaddú_r
(
dúp
, &
dít
, &
dª•
)) {

138 i‡(
ªs
 != 0) {

139 
	`˛ic⁄_îr
(
OE_UNIX
, 0, "ªaddú: %s", 
	`°ªº‹
(
î∫o
));

140 
quô
;

144 i‡(
ªgexp
) {

145 i‡(
	`ªgexec
(&
ª
, 
dít
.
d_«me
, (
size_t
Ë0, 
NULL
, 0) != 0)

149 i‡(
ty≥
) {

150 
	`¢¥ötf
(
fûíame
, 
MAXPATHLEN
-1, "%s/%s", 
dú
, 
dít
.
d_«me
);

151 
ªs
 = 
	`l°©
(
fûíame
, &
°
);

152 i‡(
ªs
 != 0) {

153 
	`˛ic⁄_îr
(
OE_UNIX
, 0, "l°©: %s", 
	`°ªº‹
(
î∫o
));

154 
quô
;

156 i‡((
ty≥
 & 
°
.
°_mode
) == 0)

159 i‡((
tmp
 = 
	`ªÆloc
(
√w
, (
√¡
+1)*(*
dve˝
))Ë=
NULL
) {

160 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "realloc");

161 
quô
;

163 
√w
 = 
tmp
;

164 
	`mem˝y
(&
√w
[
√¡
], &
dít
, (dent));

165 
√¡
++;

169 
	`qs‹t
((*)
√w
, 
√¡
, (*√w), 
˛ic⁄_fûe_dúít_s‹t
);

170 *
ít
 = 
√w
;

171 
ªtvÆ
 = 
√¡
;

173 
quô
:

174 i‡(
dúp
)

175 
	`˛o£dú
(
dúp
);

176 i‡(
ªgexp
)

177 
	`ªg‰ì
(&
ª
);

178  
ªtvÆ
;

179 
	}
}

186 
	$˛ic⁄_fûe_c›y
(*
§c
,

187 *
èrgë
)

189 
öF
 = 0, 
ouF
 = 0;

190 
îr
 = 0;

191 
löe
[512];

192 
byãs
;

193 
°©
 
°
;

194 
ªtvÆ
 = -1;

196 i‡(
	`°©
(
§c
, &
°
) != 0){

197 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "stat");

200 if((
öF
 = 
	`›í
(
§c
, 
O_RDONLY
)) == -1) {

201 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "›í(%sËf‹Ñód", 
§c
);

204 if((
ouF
 = 
	`›í
(
èrgë
, 
O_WRONLY
 | 
O_CREAT
 | 
O_TRUNC
, 
°
.
°_mode
)) == -1) {

205 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "›í(%sËf‹ wrôe", 
èrgë
);

206 
îr
 = 
î∫o
;

207 
îr‹
;

209 (
byãs
 = 
	`ªad
(
öF
, 
löe
, (line))) > 0)

210 i‡(
	`wrôe
(
ouF
, 
löe
, 
byãs
) < 0){

211 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "wrôe(%s)", 
§c
);

212 
îr
 = 
î∫o
;

213 
îr‹
;

215 
ªtvÆ
 = 0;

216 
îr‹
:

217 
	`˛o£
(
öF
);

218 i‡(
ouF
)

219 
	`˛o£
(
ouF
);

220 i‡(
ªtvÆ
 < 0)

221 
î∫o
 = 
îr
;

222  
ªtvÆ
;

223 
	}
}

233 
	$group_«me2gid
(*
«me
,

234 
gid_t
 *
gid
)

236 
buf
[1024];

237 
group
 
g0
;

238 
group
 *
gr
 = &
g0
;

239 
group
 *
gtmp
;

241 
gr
 = &
g0
;

243 i‡(
	`gëg∫am_r
(
«me
, 
gr
, 
buf
, (buf), &
gtmp
) < 0){

244 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "%s: getgrnam_r(%s): %s",

245 
__FUNCTION__
, 
«me
, 
	`°ªº‹
(
î∫o
));

248 i‡(
gtmp
 =
NULL
){

249 
	`˛ic⁄_îr
(
OE_UNIX
, 0, "%s: Nÿsuch group: %s", 
__FUNCTION__
, 
«me
);

250 
	`Ârötf
(
°dîr
, "Nÿsuch grou∞%s\n", 
«me
);

253 i‡(
gid
)

254 *
gid
 = 
gr
->
gr_gid
;

256 
	}
}

	@clixon-master/lib/src/clixon_handle.c

36 #ifde‡
HAVE_CONFIG_H


37 
	~"˛ix⁄_c⁄fig.h
"

40 
	~<°dio.h
>

41 
	~<°dlib.h
>

42 
	~<°döt.h
>

43 
	~<î∫o.h
>

44 
	~<°rög.h
>

45 
	~<as£π.h
>

47 
	~<˛igí/˛igí.h
>

50 
	~"˛ix⁄_queue.h
"

51 
	~"˛ix⁄_hash.h
"

52 
	~"˛ix⁄_h™dÀ.h
"

53 
	~"˛ix⁄_log.h
"

54 
	~"˛ix⁄_îr.h
"

55 
	~"˛ix⁄_y™g.h
"

56 
	~"˛ix⁄_›ti⁄s.h
"

58 
	#CLICON_MAGIC
 0x99ØÁbe

	)

60 
	#h™dÀ
(
h
Ë(
	`as£π
(
	`˛ic⁄_h™dÀ_check
(h)==0),(
˛ic⁄_h™dÀ
 *)(h))

	)

67 
	s˛ic⁄_h™dÀ
 {

68 
	mch_magic
;

69 
˛ic⁄_hash_t
 *
	mch_c›t
;

70 
˛ic⁄_hash_t
 *
	mch_d©a
;

82 
˛ic⁄_h™dÀ


83 
	$˛ic⁄_h™dÀ_öô0
(
size
)

85 
˛ic⁄_h™dÀ
 *
ch
;

86 
˛ic⁄_h™dÀ
 
h
 = 
NULL
;

88 i‡((
ch
 = 
	`mÆloc
(
size
)Ë=
NULL
){

89 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "malloc");

90 
d⁄e
;

92 
	`mem£t
(
ch
, 0, 
size
);

93 
ch
->
ch_magic
 = 
CLICON_MAGIC
;

94 i‡((
ch
->
ch_c›t
 = 
	`hash_öô
()Ë=
NULL
){

95 
	`˛ic⁄_h™dÀ_exô
((
˛ic⁄_h™dÀ
)
ch
);

96 
d⁄e
;

98 i‡((
ch
->
ch_d©a
 = 
	`hash_öô
()Ë=
NULL
){

99 
	`˛ic⁄_h™dÀ_exô
((
˛ic⁄_h™dÀ
)
ch
);

100 
d⁄e
;

102 
h
 = (
˛ic⁄_h™dÀ
)
ch
;

103 
d⁄e
:

104  
h
;

105 
	}
}

115 
˛ic⁄_h™dÀ


116 
	$˛ic⁄_h™dÀ_öô
()

118  
	`˛ic⁄_h™dÀ_öô0
((
˛ic⁄_h™dÀ
));

119 
	}
}

126 
	$˛ic⁄_h™dÀ_exô
(
˛ic⁄_h™dÀ
 
h
)

128 
˛ic⁄_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

129 
˛ic⁄_hash_t
 *
c›t
;

130 
˛ic⁄_hash_t
 *
d©a
;

132 i‡((
c›t
 = 
	`˛ic⁄_›ti⁄s
(
h
)Ë!
NULL
)

133 
	`hash_‰ì
(
c›t
);

134 i‡((
d©a
 = 
	`˛ic⁄_d©a
(
h
)Ë!
NULL
)

135 
	`hash_‰ì
(
d©a
);

136 
	`‰ì
(
ch
);

138 
	}
}

146 
	$˛ic⁄_h™dÀ_check
(
˛ic⁄_h™dÀ
 
h
)

149 
˛ic⁄_h™dÀ
 *
ch
 = (˛ic⁄_h™dÀ *)(
h
);

151  
ch
->
ch_magic
 =
CLICON_MAGIC
 ? 0 : -1;

152 
	}
}

157 
˛ic⁄_hash_t
 *

158 
	$˛ic⁄_›ti⁄s
(
˛ic⁄_h™dÀ
 
h
)

160 
˛ic⁄_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

162  
ch
->
ch_c›t
;

163 
	}
}

168 
˛ic⁄_hash_t
 *

169 
	$˛ic⁄_d©a
(
˛ic⁄_h™dÀ
 
h
)

171 
˛ic⁄_h™dÀ
 *
ch
 = 
	`h™dÀ
(
h
);

173  
ch
->
ch_d©a
;

174 
	}
}

	@clixon-master/lib/src/clixon_hash.c

81 #ifde‡
HAVE_CONFIG_H


82 
	~"˛ix⁄_c⁄fig.h
"

85 
	~<°dio.h
>

86 
	~<°dlib.h
>

87 
	~<°rög.h
>

88 
	~<î∫o.h
>

89 
	~<öây≥s.h
>

92 
	~"˛ix⁄_queue.h
"

93 
	~"˛ix⁄_îr.h
"

94 
	~"˛ix⁄_hash.h
"

96 
	#HASH_SIZE
 1031

	)

97 
	#Æign4
(
s
Ë(((s)/4)*4 + 4)

	)

101 
uöt32_t


102 
	$hash_buckë
(c⁄° *
°r
)

104 
uöt32_t
 
n
 = 0;

106 *
°r
)

107 
n
 +(
uöt32_t
)*
°r
++;

109  
n
 % 
HASH_SIZE
;

110 
	}
}

116 
˛ic⁄_hash_t
 *

117 
	$hash_öô
 ()

119 
˛ic⁄_hash_t
 *
hash
;

121 i‡((
hash
 = (
˛ic⁄_hash_t
 *)
	`mÆloc
 ( (˛ic⁄_hash_tË* 
HASH_SIZE
)Ë=
NULL
){

122 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "mÆloc: %s", 
	`°ªº‹
(errno));

123  
NULL
;

125 
	`mem£t
 (
hash
, 0, (
˛ic⁄_hash_t
)*
HASH_SIZE
);

126  
hash
;

127 
	}
}

135 
	$hash_‰ì
(
˛ic⁄_hash_t
 *
hash
)

137 
i
;

138 
˛ic⁄_hash_t
 
tmp
;

139 
i
 = 0; i < 
HASH_SIZE
; i++) {

140 
hash
[
i
]) {

141 
tmp
 = 
hash
[
i
];

142 
	`DELQ
(
tmp
, 
hash
[
i
], 
˛ic⁄_hash_t
);

143 
	`‰ì
(
tmp
->
h_key
);

144 
	`‰ì
(
tmp
->
h_vÆ
);

145 
	`‰ì
(
tmp
);

148 
	`‰ì
(
hash
);

149 
	}
}

159 
˛ic⁄_hash_t


160 
	$hash_lookup
(
˛ic⁄_hash_t
 *
hash
,

161 c⁄° *
key
)

163 
uöt32_t
 
bkt
;

164 
˛ic⁄_hash_t
 
h
;

166 
bkt
 = 
	`hash_buckë
(
key
);

167 
h
 = 
hash
[
bkt
];

168 i‡(
h
) {

170 i‡(!
	`°rcmp
 (
h
->
h_key
, 
key
))

171  
h
;

172 
h
 = 
	`NEXTQ
(
˛ic⁄_hash_t
, h);

173 } 
h
 !
hash
[
bkt
]);

175  
NULL
;

176 
	}
}

186 
	$hash_vÆue
(
˛ic⁄_hash_t
 *
hash
,

187 c⁄° *
key
,

188 
size_t
 *
vÀn
)

190 
˛ic⁄_hash_t
 
h
;

192 
h
 = 
	`hash_lookup
(
hash
, 
key
);

193 i‡(
h
 =
NULL
)

194  
NULL
;

196 i‡(
vÀn
)

197 *
vÀn
 = 
h
->
h_vÀn
;

198  
h
->
h_vÆ
;

199 
	}
}

210 
˛ic⁄_hash_t


211 
	$hash_add
(
˛ic⁄_hash_t
 *
hash
,

212 c⁄° *
key
,

213 *
vÆ
,

214 
size_t
 
vÀn
)

216 *
√wvÆ
;

217 
˛ic⁄_hash_t
 
h
;

218 
˛ic⁄_hash_t
 
√w
 = 
NULL
;

221 
h
 = 
	`hash_lookup
 (
hash
, 
key
);

222 i‡(
h
 =
NULL
) {

223 i‡((
√w
 = (
˛ic⁄_hash_t
)
	`mÆloc
 ( (*√w))Ë=
NULL
){

224 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "mÆloc: %s", 
	`°ªº‹
(errno));

225 
ˇtch
;

227 
	`mem£t
 (
√w
, 0,  (*new));

229 
√w
->
h_key
 = 
	`°rdup
 (
key
);

230 i‡(
√w
->
h_key
 =
NULL
){

231 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "°rdup: %s", 
	`°ªº‹
(errno));

232 
ˇtch
;

235 
h
 = 
√w
;

239 
√wvÆ
 = 
	`mÆloc
(
	`Æign4
(
vÀn
+3));

240 i‡(
√wvÆ
 =
NULL
){

241 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "mÆloc: %s", 
	`°ªº‹
(errno));

242 
ˇtch
;

244 
	`mem˝y
 (
√wvÆ
, 
vÆ
, 
vÀn
);

247 i‡(
h
->
h_vÆ
)

248 
	`‰ì
 (
h
->
h_vÆ
);

249 
h
->
h_vÆ
 = 
√wvÆ
;

250 
h
->
h_vÀn
 = 
vÀn
;

253 i‡(
√w
)

254 
	`INSQ
(
h
, 
hash
[
	`hash_buckë
(
key
)]);

256  
h
;

258 
ˇtch
:

259 i‡(
√w
) {

260 i‡(
√w
->
h_key
)

261 
	`‰ì
 (
√w
->
h_key
);

262 
	`‰ì
 (
√w
);

265  
NULL
;

266 
	}
}

277 
	$hash_dñ
(
˛ic⁄_hash_t
 *
hash
,

278 c⁄° *
key
)

280 
˛ic⁄_hash_t
 
h
;

282 
h
 = 
	`hash_lookup
 (
hash
, 
key
);

283 i‡(
h
 =
NULL
)

286 
	`DELQ
(
h
, 
hash
[
	`hash_buckë
(
key
)], 
˛ic⁄_hash_t
);

288 
	`‰ì
 (
h
->
h_key
);

289 
	`‰ì
 (
h
->
h_vÆ
);

290 
	`‰ì
 (
h
);

293 
	}
}

303 
	$hash_keys
(
˛ic⁄_hash_t
 *
hash
,

304 
size_t
 *
nkeys
)

306 
bkt
;

307 
˛ic⁄_hash_t
 
h
;

308 **
tmp
;

309 **
keys
 = 
NULL
;

311 *
nkeys
 = 0;

312 
bkt
 = 0; bkà< 
HASH_SIZE
; bkt++) {

313 
h
 = 
hash
[
bkt
];

315 i‡(
h
 =
NULL
)

317 
tmp
 = 
	`ªÆloc
(
keys
, ((*
nkeys
)+1) * (*));

318 i‡(
tmp
 =
NULL
){

319 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "ªÆloc: %s", 
	`°ªº‹
(errno));

320 
ˇtch
;

322 
keys
 = 
tmp
;

323 
keys
[*
nkeys
] = 
h
->
h_key
;

324 (*
nkeys
)++;

325 
h
 = 
	`NEXTQ
(
˛ic⁄_hash_t
, h);

326 } 
h
 !
hash
[
bkt
]);

329  
keys
;

331 
ˇtch
:

332 i‡(
keys
)

333 
	`‰ì
(
keys
);

334  
NULL
;

335 
	}
}

344 
	$hash_dump
(
˛ic⁄_hash_t
 *
hash
,

345 
FILE
 *
f
)

347 
i
;

348 **
keys
;

349 *
vÆ
;

350 
size_t
 
kÀn
;

351 
size_t
 
vÀn
;

353 i‡(
hash
 =
NULL
)

355 
keys
 = 
	`hash_keys
(
hash
, &
kÀn
);

356 i‡(
keys
 =
NULL
)

359 
i
 = 0; i < 
kÀn
; i++) {

360 
vÆ
 = 
	`hash_vÆue
(
hash
, 
keys
[
i
], &
vÀn
);

361 
	`¥ötf
("%†=\à0x%∞,Üígth %zu\n", 
keys
[
i
], 
vÆ
, 
vÀn
);

363 
	`‰ì
(
keys
);

364 
	}
}

	@clixon-master/lib/src/clixon_json.c

39 
	~<°dio.h
>

40 
	~<°dlib.h
>

41 
	~<uni°d.h
>

42 
	~<î∫o.h
>

43 
	~<°rög.h
>

44 
	~<˘y≥.h
>

45 
	~<limôs.h
>

46 
	~<‚m©ch.h
>

47 
	~<°döt.h
>

48 
	~<sy¶og.h
>

49 
	~<as£π.h
>

52 
	~<˛igí/˛igí.h
>

55 
	~"˛ix⁄_îr.h
"

56 
	~"˛ix⁄_log.h
"

57 
	~"˛ix⁄_queue.h
"

58 
	~"˛ix⁄_hash.h
"

59 
	~"˛ix⁄_h™dÀ.h
"

60 
	~"˛ix⁄_y™g.h
"

61 
	~"˛ix⁄_xml.h
"

62 
	~"˛ix⁄_js⁄.h
"

63 
	~"˛ix⁄_js⁄_∑r£.h
"

65 
	#JSON_INDENT
 2

	)

70 
	#VEC_ARRAY
 1

	)

73 
	#BUFLEN
 1024

	)

76 
	#JSON_TOP_SYMBOL
 "t›"

	)

78 
	e¨øy_ñemít_ty≥
{

79 
	mNO_ARRAY
=0,

80 
	mFIRST_ARRAY
,

81 
	mMIDDLE_ARRAY
,

82 
	mLAST_ARRAY
,

83 
	mSINGLE_ARRAY
,

84 
	mBODY_ARRAY


87 
	echûdty≥
{

88 
	mNULL_CHILD
=0,

89 
	mBODY_CHILD
,

90 
	mANY_CHILD
,

96 
chûdty≥


97 
	$chûdty≥
(
cxobj
 *
x
)

99 
cxobj
 *
xc1
;

101 i‡(
	`xml_ty≥
(
x
Ë!
CX_ELMNT
)

103 i‡(
	`xml_chûd_ƒ
(
x
) == 0)

104  
NULL_CHILD
;

105 i‡(
	`xml_chûd_ƒ
(
x
) > 1)

106  
ANY_CHILD
;

107 
xc1
 = 
	`xml_chûd_i
(
x
, 0);

108 i‡(
	`xml_chûd_ƒ
(
xc1
Ë=0 && 
	`xml_ty≥
(xc1)==
CX_BODY
)

109  
BODY_CHILD
;

111  
ANY_CHILD
;

112 
	}
}

115 
	$chûdty≥2°r
(
chûdty≥
 
…
)

117 
…
){

118 
NULL_CHILD
:

121 
BODY_CHILD
:

124 
ANY_CHILD
:

129 
	}
}

132 
	$¨øyty≥2°r
(
¨øy_ñemít_ty≥
 
…
)

134 
…
){

135 
NO_ARRAY
:

138 
FIRST_ARRAY
:

141 
MIDDLE_ARRAY
:

144 
LAST_ARRAY
:

147 
SINGLE_ARRAY
:

150 
BODY_ARRAY
:

155 
	}
}

157 
¨øy_ñemít_ty≥


158 
	$¨øy_evÆ
(
cxobj
 *
x¥ev
,

159 
cxobj
 *
x
,

160 
cxobj
 *
x√xt
)

162 
¨øy_ñemít_ty≥
 
¨øy
 = 
NO_ARRAY
;

163 
eq¥ev
=0;

164 
eq√xt
=0;

165 
y™g_°mt
 *
ys
;

167 i‡(
	`xml_ty≥
(
x
)!=
CX_ELMNT
){

168 
¨øy
=
BODY_ARRAY
;

169 
d⁄e
;

171 
ys
 = 
	`xml_•ec
(
x
);

172 i‡(
x√xt
 &&

173 
	`xml_ty≥
(
x√xt
)==
CX_ELMNT
 &&

174 
	`°rcmp
(
	`xml_«me
(
x
),xml_«me(
x√xt
))==0)

175 
eq√xt
++;

176 i‡(
x¥ev
 &&

177 
	`xml_ty≥
(
x¥ev
)==
CX_ELMNT
 &&

178 
	`°rcmp
(
	`xml_«me
(
x
),xml_«me(
x¥ev
))==0)

179 
eq¥ev
++;

180 i‡(
eq¥ev
 && 
eq√xt
)

181 
¨øy
 = 
MIDDLE_ARRAY
;

182 i‡(
eq¥ev
)

183 
¨øy
 = 
LAST_ARRAY
;

184 i‡(
eq√xt
)

185 
¨øy
 = 
FIRST_ARRAY
;

186 i‡(
ys
 && ys->
ys_keyw‹d
 =
Y_LIST
)

187 
¨øy
 = 
SINGLE_ARRAY
;

189 
¨øy
 = 
NO_ARRAY
;

190 
d⁄e
:

191  
¨øy
;

192 
	}
}

197 
	$js⁄_°r_esˇ≥
(*
°r
)

199 
i
, 
j
;

200 *
¢ew
;

202 
j
 = 0;

203 
i
=0;i<
	`°æí
(
°r
);i++)

204 
°r
[
i
]){

208 
j
++;

211 i‡((
¢ew
 = 
	`mÆloc
(
	`°æí
(
°r
)+1+
j
))==
NULL
){

212 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "malloc");

213  
NULL
;

215 
j
 = 0;

216 
i
=0;i<
	`°æí
(
°r
);i++)

217 
°r
[
i
]){

219 
¢ew
[
j
++]='\\';

220 
¢ew
[
j
++]='n';

224 
¢ew
[
j
++]='\\';

226 
¢ew
[
j
++]=
°r
[
i
];

228 
¢ew
[
j
++]='\0';

229  
¢ew
;

230 
	}
}

270 
	$xml2js⁄1_cbuf
(
cbuf
 *
cb
,

271 
cxobj
 *
x
,

272 
¨øy_ñemít_ty≥
 
¨øyty≥
,

273 
Àvñ
,

274 
¥ëty
,

275 
Ê©
,

276 
body°r
)

278 
ªtvÆ
 = -1;

279 
i
;

280 
cxobj
 *
xc
;

281 
chûdty≥
 
chûdt
;

282 
¨øy_ñemít_ty≥
 
xc_¨øyty≥
;

283 
y™g_°mt
 *
ys
;

284 
body°r0
=1;

286 
chûdt
 = 
	`chûdty≥
(
x
);

287 
ys
 = 
	`xml_•ec
(
x
);

288 i‡(
¥ëty
==2)

289 
	`˝rötf
(
cb
, "#%s_array, %s_child ",

290 
	`¨øyty≥2°r
(
¨øyty≥
),

291 
	`chûdty≥2°r
(
chûdt
));

292 
¨øyty≥
){

293 
BODY_ARRAY
:{

294 i‡(
body°r
){

295 *
°r
;

296 i‡((
°r
 = 
	`js⁄_°r_esˇ≥
(
	`xml_vÆue
(
x
))Ë=
NULL
)

297 
d⁄e
;

298 
	`˝rötf
(
cb
, "\"%s\"", 
°r
);

299 
	`‰ì
(
°r
);

302 
	`˝rötf
(
cb
, "%s", 
	`xml_vÆue
(
x
));

306 
NO_ARRAY
:

307 i‡(!
Ê©
){

308 
	`˝rötf
(
cb
, "%*s\"", 
¥ëty
?(
Àvñ
*
JSON_INDENT
):0, "");

309 i‡(
	`xml_«me•a˚
(
x
))

310 
	`˝rötf
(
cb
, "%s:", 
	`xml_«me•a˚
(
x
));

311 
	`˝rötf
(
cb
, "%s\": ", 
	`xml_«me
(
x
));

313 
chûdt
){

314 
NULL_CHILD
:

315 
	`˝rötf
(
cb
, "null");

317 
BODY_CHILD
:

319 
ANY_CHILD
:

320 
	`˝rötf
(
cb
, "{%s", 
¥ëty
?"\n":"");

326 
FIRST_ARRAY
:

327 
SINGLE_ARRAY
:

328 
	`˝rötf
(
cb
, "%*s\"", 
¥ëty
?(
Àvñ
*
JSON_INDENT
):0, "");

329 i‡(
	`xml_«me•a˚
(
x
))

330 
	`˝rötf
(
cb
, "%s:", 
	`xml_«me•a˚
(
x
));

331 
	`˝rötf
(
cb
, "%s\": ", 
	`xml_«me
(
x
));

332 
Àvñ
++;

333 
	`˝rötf
(
cb
, "[%s%*s",

334 
¥ëty
?"\n":"",

335 
¥ëty
?(
Àvñ
*
JSON_INDENT
):0, "");

336 
chûdt
){

337 
NULL_CHILD
:

338 
	`˝rötf
(
cb
, "null");

340 
BODY_CHILD
:

342 
ANY_CHILD
:

343 
	`˝rötf
(
cb
, "{%s", 
¥ëty
?"\n":"");

349 
MIDDLE_ARRAY
:

350 
LAST_ARRAY
:

351 
Àvñ
++;

352 
	`˝rötf
(
cb
, "%*s",

353 
¥ëty
?(
Àvñ
*
JSON_INDENT
):0, "");

354 
chûdt
){

355 
NULL_CHILD
:

356 
	`˝rötf
(
cb
, "null");

358 
BODY_CHILD
:

360 
ANY_CHILD
:

361 
	`˝rötf
(
cb
, "{ %s", 
¥ëty
?"\n":"");

374 i‡(
chûdt
 =
BODY_CHILD
 && 
ys
!=
NULL
 &&

375 (
ys
->
ys_keyw‹d
 =
Y_LEAF
 || ys->ys_keyw‹d =
Y_LEAF_LIST
))

376 
	`cv_ty≥_gë
(
ys
->
ys_cv
)){

377 
CGV_INT8
:

378 
CGV_INT16
:

379 
CGV_INT32
:

380 
CGV_INT64
:

381 
CGV_UINT8
:

382 
CGV_UINT16
:

383 
CGV_UINT32
:

384 
CGV_UINT64
:

385 
CGV_DEC64
:

386 
CGV_BOOL
:

387 
body°r0
 = 0;

390 
body°r0
 = 1;

394 
i
=0; i<
	`xml_chûd_ƒ
(
x
); i++){

395 
xc
 = 
	`xml_chûd_i
(
x
, 
i
);

396 
xc_¨øyty≥
 = 
	`¨øy_evÆ
(
i
?
	`xml_chûd_i
(
x
,i-1):
NULL
,

397 
xc
,

398 
	`xml_chûd_i
(
x
, 
i
+1));

399 i‡(
	`xml2js⁄1_cbuf
(
cb
,

400 
xc
,

401 
xc_¨øyty≥
,

402 
Àvñ
+1, 
¥ëty
, 0, 
body°r0
) < 0)

403 
d⁄e
;

404 i‡(
i
<
	`xml_chûd_ƒ
(
x
)-1)

405 
	`˝rötf
(
cb
, ",%s", 
¥ëty
?"\n":"");

407 
¨øyty≥
){

408 
BODY_ARRAY
:

410 
NO_ARRAY
:

411 
chûdt
){

412 
NULL_CHILD
:

413 
BODY_CHILD
:

415 
ANY_CHILD
:

416 
	`˝rötf
(
cb
, "%s%*s}",

417 
¥ëty
?"\n":"",

418 
¥ëty
?(
Àvñ
*
JSON_INDENT
):0, "");

423 
Àvñ
--;

425 
FIRST_ARRAY
:

426 
MIDDLE_ARRAY
:

427 
chûdt
){

428 
NULL_CHILD
:

429 
BODY_CHILD
:

431 
ANY_CHILD
:

432 
	`˝rötf
(
cb
, "%s%*s}",

433 
¥ëty
?"\n":"",

434 
¥ëty
?(
Àvñ
*
JSON_INDENT
):0, "");

435 
Àvñ
--;

441 
SINGLE_ARRAY
:

442 
LAST_ARRAY
:

443 
chûdt
){

444 
NULL_CHILD
:

445 
BODY_CHILD
:

446 
	`˝rötf
(
cb
, "%s",
¥ëty
?"\n":"");

448 
ANY_CHILD
:

449 
	`˝rötf
(
cb
, "%s%*s}",

450 
¥ëty
?"\n":"",

451 
¥ëty
?(
Àvñ
*
JSON_INDENT
):0, "");

452 
	`˝rötf
(
cb
, "%s",
¥ëty
?"\n":"");

453 
Àvñ
--;

458 
	`˝rötf
(
cb
, "%*s]",

459 
¥ëty
?(
Àvñ
*
JSON_INDENT
):0,"");

464 
ªtvÆ
 = 0;

465 
d⁄e
:

466  
ªtvÆ
;

467 
	}
}

488 
	$xml2js⁄_cbuf
(
cbuf
 *
cb
,

489 
cxobj
 *
x
,

490 
¥ëty
)

492 
ªtvÆ
 = 1;

493 
Àvñ
 = 0;

495 
	`˝rötf
(
cb
, "%*s{%s",

496 
¥ëty
?
Àvñ
*
JSON_INDENT
:0,"",

497 
¥ëty
?"\n":"");

498 i‡(
	`xml2js⁄1_cbuf
(
cb
,

499 
x
,

500 
NO_ARRAY
,

501 
Àvñ
+1, 
¥ëty
,0,1) < 0)

502 
d⁄e
;

503 
	`˝rötf
(
cb
, "%s%*s}%s",

504 
¥ëty
?"\n":"",

505 
¥ëty
?
Àvñ
*
JSON_INDENT
:0,"",

506 
¥ëty
?"\n":"");

508 
ªtvÆ
 = 0;

509 
d⁄e
:

510  
ªtvÆ
;

511 
	}
}

527 
	$xml2js⁄_cbuf_vec
(
cbuf
 *
cb
,

528 
cxobj
 **
vec
,

529 
size_t
 
ve˛í
,

530 
¥ëty
)

532 
ªtvÆ
 = -1;

533 
Àvñ
 = 0;

534 
i
;

535 
cxobj
 *
xp
 = 
NULL
;

536 
cxobj
 *
xc
;

538 i‡((
xp
 = 
	`xml_√w
("", 
NULL
, NULL)) == NULL)

539 
d⁄e
;

540 
i
=0; i<
ve˛í
; i++){

541 
xc
 = 
	`xml_dup
(
vec
[
i
]);

542 
	`xml_addsub
(
xp
, 
xc
);

545 
	`˝rötf
(
cb
, "[%s", 
¥ëty
?"\n":" ");

546 
Àvñ
++;

548 i‡(
	`xml2js⁄1_cbuf
(
cb
,

549 
xp
,

550 
NO_ARRAY
,

551 
Àvñ
+1, 
¥ëty
,1, 1) < 0)

552 
d⁄e
;

555 
Àvñ
--;

556 
	`˝rötf
(
cb
, "%s]%s",

557 
¥ëty
?"\n":"",

558 
¥ëty
?"\n":"");

560 
ªtvÆ
 = 0;

561 
d⁄e
:

562 i‡(
xp
)

563 
	`xml_‰ì
(
xp
);

564  
ªtvÆ
;

565 
	}
}

582 
	$xml2js⁄
(
FILE
 *
f
,

583 
cxobj
 *
x
,

584 
¥ëty
)

586 
ªtvÆ
 = 1;

587 
cbuf
 *
cb
 = 
NULL
;

589 i‡((
cb
 = 
	`cbuf_√w
()Ë==
NULL
){

590 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cbuf_new");

591 
d⁄e
;

593 i‡(
	`xml2js⁄_cbuf
(
cb
, 
x
, 
¥ëty
) < 0)

594 
d⁄e
;

595 
	`Ârötf
(
f
, "%s", 
	`cbuf_gë
(
cb
));

596 
ªtvÆ
 = 0;

597 
d⁄e
:

598 i‡(
cb
)

599 
	`cbuf_‰ì
(
cb
);

600  
ªtvÆ
;

601 
	}
}

617 
	$xml2js⁄_vec
(
FILE
 *
f
,

618 
cxobj
 **
vec
,

619 
size_t
 
ve˛í
,

620 
¥ëty
)

622 
ªtvÆ
 = 1;

623 
cbuf
 *
cb
 = 
NULL
;

625 i‡((
cb
 = 
	`cbuf_√w
()Ë==
NULL
){

626 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cbuf_new");

627 
d⁄e
;

629 i‡(
	`xml2js⁄_cbuf_vec
(
cb
, 
vec
, 
ve˛í
, 
¥ëty
) < 0)

630 
d⁄e
;

631 
	`Ârötf
(
f
, "%s", 
	`cbuf_gë
(
cb
));

632 
ªtvÆ
 = 0;

633 
d⁄e
:

634 i‡(
cb
)

635 
	`cbuf_‰ì
(
cb
);

636  
ªtvÆ
;

637 
	}
}

645 
	$js⁄_∑r£
(*
°r
,

646 c⁄° *
«me
,

647 
cxobj
 *
xt
)

649 
ªtvÆ
 = -1;

650 
˛ic⁄_js⁄_yacc_¨g
 
jy
 = {0,};

653 
jy
.
jy_∑r£_°rög
 = 
°r
;

654 
jy
.
jy_«me
 = 
«me
;

655 
jy
.
jy_löíum
 = 1;

656 
jy
.
jy_cuºít
 = 
xt
;

657 i‡(
	`js⁄_sˇn_öô
(&
jy
) < 0)

658 
d⁄e
;

659 i‡(
	`js⁄_∑r£_öô
(&
jy
) < 0)

660 
d⁄e
;

661 i‡(
	`˛ix⁄_js⁄_∑r£∑r£
(&
jy
) != 0) {

662 
	`˛ic⁄_log
(
LOG_NOTICE
, "JSONÉº‹: %†⁄Üöê%d", 
«me
, 
jy
.
jy_löíum
);

663 i‡(
˛ic⁄_î∫o
 == 0)

664 
	`˛ic⁄_îr
(
OE_XML
, 0, "JSONÖarserÉrror withÇoÉrror code (shouldÇot happen)");

665 
d⁄e
;

667 
ªtvÆ
 = 0;

668 
d⁄e
:

670 
	`js⁄_∑r£_exô
(&
jy
);

671 
	`js⁄_sˇn_exô
(&
jy
);

672  
ªtvÆ
;

673 
	}
}

691 
	$js⁄_∑r£_°r
(*
°r
,

692 
cxobj
 **
xt
)

694 i‡((*
xt
 = 
	`xml_√w
("t›", 
NULL
, NULL)) == NULL)

696  
	`js⁄_∑r£
(
°r
, "", *
xt
);

697 
	}
}

718 
	$js⁄_∑r£_fûe
(
fd
,

719 
y™g_•ec
 *
y•ec
,

720 
cxobj
 **
xt
)

722 
ªtvÆ
 = -1;

723 
ªt
;

724 *
js⁄buf
 = 
NULL
;

725 
js⁄buÊí
 = 
BUFLEN
;

726 
ﬁdjs⁄buÊí
;

727 *
±r
;

728 
ch
;

729 
Àn
 = 0;

731 i‡((
js⁄buf
 = 
	`mÆloc
(
js⁄buÊí
)Ë=
NULL
){

732 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "%s: mÆloc", 
__FUNCTION__
);

733 
d⁄e
;

735 
	`mem£t
(
js⁄buf
, 0, 
js⁄buÊí
);

736 
±r
 = 
js⁄buf
;

738 i‡((
ªt
 = 
	`ªad
(
fd
, &
ch
, 1)) < 0){

739 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "%s:Ñead: [pid:%d]\n",

740 
__FUNCTION__
,

741 ()
	`gëpid
());

744 i‡(
ªt
 != 0)

745 
js⁄buf
[
Àn
++] = 
ch
;

746 i‡(
ªt
 == 0){

747 i‡(*
xt
 =
NULL
)

748 i‡((*
xt
 = 
	`xml_√w
(
JSON_TOP_SYMBOL
, 
NULL
, NULL)) == NULL)

749 
d⁄e
;

750 i‡(
Àn
 && 
	`js⁄_∑r£
(
±r
, "", *
xt
) < 0)

751 
d⁄e
;

754 i‡(
Àn
>=
js⁄buÊí
-1){

755 
ﬁdjs⁄buÊí
 = 
js⁄buÊí
;

756 
js⁄buÊí
 *= 2;

757 i‡((
js⁄buf
 = 
	`ªÆloc
(js⁄buf, 
js⁄buÊí
)Ë=
NULL
){

758 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "%s:ÑóŒoc", 
__FUNCTION__
);

759 
d⁄e
;

761 
	`mem£t
(
js⁄buf
+
ﬁdjs⁄buÊí
, 0, 
js⁄buÊí
-oldjsonbuflen);

762 
±r
 = 
js⁄buf
;

765 
ªtvÆ
 = 0;

766 
d⁄e
:

767 i‡(
ªtvÆ
 < 0 && *
xt
){

768 
	`‰ì
(*
xt
);

769 *
xt
 = 
NULL
;

771 i‡(
js⁄buf
)

772 
	`‰ì
(
js⁄buf
);

773  
ªtvÆ
;

774 
	}
}

788 
	$ußge
(*
¨gv0
)

790 
	`Ârötf
(
°dîr
, "ußge:%s.\n\tI≈uà⁄ stdö\n", 
¨gv0
);

791 
	`exô
(0);

792 
	}
}

795 
	$maö
(
¨gc
, **
¨gv
)

797 
cxobj
 *
xt
;

798 
cxobj
 *
xc
;

799 
cbuf
 *
cb
 = 
	`cbuf_√w
();

800 *
buf
 = 
NULL
;

801 
i
;

802 
c
;

803 
Àn
;

804 
FILE
 *
f
 = 
°dö
;

806 i‡(
¨gc
 != 1){

807 
	`ußge
(
¨gv
[0]);

810 
	`˛ic⁄_log_öô
(
__FILE__
, 
LOG_INFO
, 
CLICON_LOG_STDERR
);

811 
Àn
 = 1024;

812 i‡((
buf
 = 
	`mÆloc
(
Àn
)Ë=
NULL
){

813 
	`≥º‹
("malloc");

816 
	`mem£t
(
buf
, 0, 
Àn
);

818 
i
 = 0;

820 i‡((
c
 = 
	`fgëc
(
f
)Ë=
EOF
)

822 i‡(
Àn
==
i
){

823 i‡((
buf
 = 
	`ªÆloc
(buf, 2*
Àn
)Ë=
NULL
){

824 
	`Ârötf
(
°dîr
, "%s:ÑóŒoc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

825 
d⁄e
;

827 
	`mem£t
(
buf
+
Àn
, 0,Üen);

828 
Àn
 *= 2;

830 
buf
[
i
++] = ()(
c
&0xff);

833 i‡(
	`js⁄_∑r£_°r
(
buf
, &
xt
) < 0)

835 
xc
 = 
NULL
;

836 (
xc
 = 
	`xml_chûd_óch
(
xt
, xc, -1)Ë!
NULL
) {

837 
	`xm…ªe2cbuf
(
cb
, 
xc
, 0);

840 
	`Ârötf
(
°dout
, "%s", 
	`cbuf_gë
(
cb
));

841 i‡(
xt
)

842 
	`xml_‰ì
(
xt
);

843 i‡(
cb
)

844 
	`cbuf_‰ì
(
cb
);

845 
d⁄e
:

847 
	}
}

	@clixon-master/lib/src/clixon_json_parse.h

35 #i‚de‡
_CLIXON_JSON_PARSE_H_


36 
	#_CLIXON_JSON_PARSE_H_


	)

42 
	s˛ic⁄_js⁄_yacc_¨g
{

43 c⁄° *
	mjy_«me
;

44 
	mjy_löíum
;

45 *
	mjy_∑r£_°rög
;

46 *
	mjy_Àxbuf
;

47 
cxobj
 *
	mjy_cuºít
;

53 *
˛ix⁄_js⁄_∑r£ãxt
;

58 
js⁄_sˇn_öô
(
˛ic⁄_js⁄_yacc_¨g
 *
jy
);

59 
js⁄_sˇn_exô
(
˛ic⁄_js⁄_yacc_¨g
 *
jy
);

61 
js⁄_∑r£_öô
(
˛ic⁄_js⁄_yacc_¨g
 *
jy
);

62 
js⁄_∑r£_exô
(
˛ic⁄_js⁄_yacc_¨g
 *
jy
);

64 
˛ix⁄_js⁄_∑r£Àx
(*);

65 
˛ix⁄_js⁄_∑r£∑r£
(*);

66 
˛ix⁄_js⁄_∑r£îr‹
(*, *);

	@clixon-master/lib/src/clixon_json_parse.tab.c

44 
	#YYBISON
 1

	)

47 
	#YYBISON_VERSION
 "3.0.4"

	)

50 
	#YYSKELETON_NAME
 "yacc.c"

	)

53 
	#YYPURE
 0

	)

56 
	#YYPUSH
 0

	)

59 
	#YYPULL
 1

	)

63 
	#yy∑r£
 
˛ix⁄_js⁄_∑r£∑r£


	)

64 
	#yyÀx
 
˛ix⁄_js⁄_∑r£Àx


	)

65 
	#yyîr‹
 
˛ix⁄_js⁄_∑r£îr‹


	)

66 
	#yydebug
 
˛ix⁄_js⁄_∑r£debug


	)

67 
	#yy√ºs
 
˛ix⁄_js⁄_∑r£√ºs


	)

69 
	#yylvÆ
 
˛ix⁄_js⁄_∑r£lvÆ


	)

70 
	#yych¨
 
˛ix⁄_js⁄_∑r£ch¨


	)

76 #i‚de‡
YY_NULLPTR


77 #i‡
deföed
 
__˝lu•lus
 && 201103L <= __cplusplus

78 
	#YY_NULLPTR
 
nuŒ±r


	)

80 
	#YY_NULLPTR
 0

	)

85 #ifde‡
YYERROR_VERBOSE


86 #unde‡
YYERROR_VERBOSE


87 
	#YYERROR_VERBOSE
 1

	)

89 
	#YYERROR_VERBOSE
 0

	)

94 #i‚de‡
YY_CLIXON_JSON_PARSE_Y_TAB_H_INCLUDED


95 
	#YY_CLIXON_JSON_PARSE_Y_TAB_H_INCLUDED


	)

97 #i‚de‡
YYDEBUG


98 
	#YYDEBUG
 0

	)

100 #i‡
YYDEBUG


101 
˛ix⁄_js⁄_∑r£debug
;

105 #i‚de‡
YYTOKENTYPE


106 
	#YYTOKENTYPE


	)

107 
	eyytokíty≥


109 
	mJ_FALSE
 = 258,

110 
	mJ_TRUE
 = 259,

111 
	mJ_NULL
 = 260,

112 
	mJ_EOF
 = 261,

113 
	mJ_DQ
 = 262,

114 
	mJ_CHAR
 = 263,

115 
	mJ_NUMBER
 = 264

119 
	#J_FALSE
 258

	)

120 
	#J_TRUE
 259

	)

121 
	#J_NULL
 260

	)

122 
	#J_EOF
 261

	)

123 
	#J_DQ
 262

	)

124 
	#J_CHAR
 263

	)

125 
	#J_NUMBER
 264

	)

128 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


130 
	uYYSTYPE


134 
	mötvÆ
;

135 *
	m°rög
;

140 
YYSTYPE
 
	tYYSTYPE
;

141 
	#YYSTYPE_IS_TRIVIAL
 1

	)

142 
	#YYSTYPE_IS_DECLARED
 1

	)

146 
YYSTYPE
 
˛ix⁄_js⁄_∑r£lvÆ
;

148 
˛ix⁄_js⁄_∑r£∑r£
 (*
_jy
);

158 
	#_JY
 ((
˛ic⁄_js⁄_yacc_¨g
 *)
_jy
)

	)

160 
	#_YYERROR
(
msg
Ë{
	`˛ic⁄_debug
(2, "YYERROR %†'%s' %d", (msg), 
˛ix⁄_js⁄_∑r£ãxt
, 
_JY
->
jy_löíum
); 
YYERROR
;}

	)

163 
	#YY_
(
msgid
Ë
	)
msgid

165 
	~"˛ix⁄_c⁄fig.h
"

167 
	~<°dio.h
>

168 
	~<°rög.h
>

169 
	~<°döt.h
>

170 
	~<°dlib.h
>

171 
	~<î∫o.h
>

172 
	~<as£π.h
>

173 
	~<˘y≥.h
>

174 
	~<sys/ty≥s.h
>

175 
	~<sys/sockë.h
>

176 
	~<√töë/ö.h
>

177 
	~<√t/if.h
>

179 
	~<˛igí/˛igí.h
>

181 
	~"˛ix⁄_îr.h
"

182 
	~"˛ix⁄_log.h
"

183 
	~"˛ix⁄_queue.h
"

184 
	~"˛ix⁄_hash.h
"

185 
	~"˛ix⁄_h™dÀ.h
"

186 
	~"˛ix⁄_y™g.h
"

187 
	~"˛ix⁄_xml.h
"

189 
	~"˛ix⁄_js⁄_∑r£.h
"

191 
˛ix⁄_js⁄_∑r£gë_löío
 ();

198 
	$˛ix⁄_js⁄_∑r£îr‹
(*
_jy
, *
s
)

200 
	`˛ic⁄_îr
(
OE_XML
, 0, "%s onÜine %d: %sát or before: '%s'",

201 
_JY
->
jy_«me
,

202 
_JY
->
jy_löíum
 ,

203 
s
,

204 
˛ix⁄_js⁄_∑r£ãxt
);

206 
	}
}

209 
	$js⁄_∑r£_öô
(
˛ic⁄_js⁄_yacc_¨g
 *
jy
)

213 
	}
}

217 
	$js⁄_∑r£_exô
(
˛ic⁄_js⁄_yacc_¨g
 *
jy
)

220 
	}
}

223 
	$js⁄_cuºít_√w
(
˛ic⁄_js⁄_yacc_¨g
 *
jy
,

224 *
«me
)

226 
ªtvÆ
 = -1;

227 
cxobj
 *
xn
;

229 
	`˛ic⁄_debug
(2, "%s", 
__FUNCTION__
);

230 i‡((
xn
 = 
	`xml_√w
(
«me
, 
jy
->
jy_cuºít
, 
NULL
)) == NULL)

231 
d⁄e
;

232 
jy
->
jy_cuºít
 = 
xn
;

233 
ªtvÆ
 = 0;

234 
d⁄e
:

235  
ªtvÆ
;

236 
	}
}

239 
	$js⁄_cuºít_p›
(
˛ic⁄_js⁄_yacc_¨g
 *
jy
)

241 i‡(
jy
->
jy_cuºít
)

242 
jy
->
jy_cuºít
 = 
	`xml_∑ª¡
(jy->jy_current);

244 
	}
}

247 
	$js⁄_cuºít_˛⁄e
(
˛ic⁄_js⁄_yacc_¨g
 *
jy
)

249 
cxobj
 *
xn
;

251 
	`as£π
(
xn
 = 
jy
->
jy_cuºít
);

252 
	`js⁄_cuºít_p›
(
jy
);

253 i‡(
jy
->
jy_cuºít
)

254 
	`js⁄_cuºít_√w
(
jy
, 
	`xml_«me
(
xn
));

256 
	}
}

259 
	$js⁄_cuºít_body
(
˛ic⁄_js⁄_yacc_¨g
 *
jy
,

260 *
vÆue
)

262 
ªtvÆ
 = -1;

263 
cxobj
 *
xn
;

265 
	`˛ic⁄_debug
(2, "%s", 
__FUNCTION__
);

266 i‡((
xn
 = 
	`xml_√w
("body", 
jy
->
jy_cuºít
, 
NULL
)) == NULL)

267 
d⁄e
;

268 
	`xml_ty≥_£t
(
xn
, 
CX_BODY
);

269 i‡(
vÆue
 && 
	`xml_vÆue_≠≥nd
(
xn
, vÆue)==
NULL
)

270 
d⁄e
;

271 
ªtvÆ
 = 0;

272 
d⁄e
:

273  
ªtvÆ
;

274 
	}
}

284 #ifde‡
YYTYPE_UINT8


285 
YYTYPE_UINT8
 
	tyyty≥_uöt8
;

287 
	tyyty≥_uöt8
;

290 #ifde‡
YYTYPE_INT8


291 
YYTYPE_INT8
 
	tyyty≥_öt8
;

293 sig√d 
	tyyty≥_öt8
;

296 #ifde‡
YYTYPE_UINT16


297 
YYTYPE_UINT16
 
	tyyty≥_uöt16
;

299 
	tyyty≥_uöt16
;

302 #ifde‡
YYTYPE_INT16


303 
YYTYPE_INT16
 
	tyyty≥_öt16
;

305 
	tyyty≥_öt16
;

308 #i‚de‡
YYSIZE_T


309 #ifde‡
__SIZE_TYPE__


310 
	#YYSIZE_T
 
__SIZE_TYPE__


	)

311 #ñi‡
deföed
 
size_t


312 
	#YYSIZE_T
 
size_t


	)

313 #ñi‡! 
deföed
 
YYSIZE_T


314 
	~<°ddef.h
>

315 
	#YYSIZE_T
 
size_t


	)

317 
	#YYSIZE_T
 

	)

321 
	#YYSIZE_MAXIMUM
 ((
YYSIZE_T
Ë-1)

	)

323 #i‚de‡
YY_


324 #i‡
deföed
 
YYENABLE_NLS
 && YYENABLE_NLS

325 #i‡
ENABLE_NLS


326 
	~<liböé.h
>

327 
	#YY_
(
Msgid
Ë
	`dgëãxt
 ("bis⁄-ru¡ime", Msgid)

	)

330 #i‚de‡
YY_


331 
	#YY_
(
Msgid
Ë
	)
Msgid

335 #i‚de‡
YY_ATTRIBUTE


336 #i‡(
deföed
 
__GNUC__
 \

337 && (2 < 
	g__GNUC__
 || (__GNUC__ =2 && 96 <
__GNUC_MINOR__
))) \

338 || 
deföed
 
__SUNPRO_C
 && 0x5110 <= __SUNPRO_C

339 
	#YY_ATTRIBUTE
(
S≥c
Ë
	`__©åibuã__
(S≥c)

	)

341 
	#YY_ATTRIBUTE
(
S≥c
Ë

	)

345 #i‚de‡
YY_ATTRIBUTE_PURE


346 
	#YY_ATTRIBUTE_PURE
 
	`YY_ATTRIBUTE
 ((
__puª__
))

	)

349 #i‚de‡
YY_ATTRIBUTE_UNUSED


350 
	#YY_ATTRIBUTE_UNUSED
 
	`YY_ATTRIBUTE
 ((
__unu£d__
))

	)

353 #i‡!
deföed
 
_N‹ëu∫
 \

354 && (!
deföed
 
__STDC_VERSION__
 || __STDC_VERSION__ < 201112)

355 #i‡
deföed
 
_MSC_VER
 && 1200 <= _MSC_VER

356 
	#_N‹ëu∫
 
	`__de˛•ec
 (
n‹ëu∫
)

	)

358 
	#_N‹ëu∫
 
	`YY_ATTRIBUTE
 ((
__n‹ëu∫__
))

	)

363 #i‡! 
deföed
 
löt
 || deföed 
__GNUC__


364 
	#YYUSE
(
E
Ë((Ë(E))

	)

366 
	#YYUSE
(
E
Ë

	)

369 #i‡
deföed
 
__GNUC__
 && 407 <__GNUC__ * 100 + 
__GNUC_MINOR__


371 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
 \

372 
	`_Pøgma
 ("GCC diagnosticÖush") \

373 
	`_Pøgma
 ("GCC diagnostic ignored \"-Wuninitialized\"")\

374 
	`_Pøgma
 ("GCC dügno°i¯ign‹ed \"-Wmaybe-unöôülized\"")

	)

375 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END
 \

376 
	`_Pøgma
 ("GCC dügno°i¯p›")

	)

378 
	#YY_INITIAL_VALUE
(
VÆue
Ë
	)
Value

380 #i‚de‡
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


381 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


	)

382 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END


	)

384 #i‚de‡
YY_INITIAL_VALUE


385 
	#YY_INITIAL_VALUE
(
VÆue
Ë

	)

389 #i‡! 
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


393 #ifde‡
YYSTACK_USE_ALLOCA


394 #i‡
YYSTACK_USE_ALLOCA


395 #ifde‡
__GNUC__


396 
	#YYSTACK_ALLOC
 
__buûtö_Æloˇ


	)

397 #ñi‡
deföed
 
__BUILTIN_VA_ARG_INCR


398 
	~<Æloˇ.h
>

399 #ñi‡
deföed
 
_AIX


400 
	#YYSTACK_ALLOC
 
__Æloˇ


	)

401 #ñi‡
deföed
 
_MSC_VER


402 
	~<mÆloc.h
>

403 
	#Æloˇ
 
_Æloˇ


	)

405 
	#YYSTACK_ALLOC
 
Æloˇ


	)

406 #i‡! 
deföed
 
_ALLOCA_H
 && ! deföed 
EXIT_SUCCESS


407 
	~<°dlib.h
>

409 #i‚de‡
EXIT_SUCCESS


410 
	#EXIT_SUCCESS
 0

	)

417 #ifde‡
YYSTACK_ALLOC


419 
	#YYSTACK_FREE
(
På
Ëdÿ{ ; } 0)

	)

420 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


425 
	#YYSTACK_ALLOC_MAXIMUM
 4032

	)

428 
	#YYSTACK_ALLOC
 
YYMALLOC


	)

429 
	#YYSTACK_FREE
 
YYFREE


	)

430 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


431 
	#YYSTACK_ALLOC_MAXIMUM
 
YYSIZE_MAXIMUM


	)

433 #i‡(
deföed
 
__˝lu•lus
 && ! deföed 
EXIT_SUCCESS
 \

434 && ! ((
deföed
 
	gYYMALLOC
 || deföed 
	gmÆloc
) \

435 && (
deföed
 
	gYYFREE
 || deföed 
	g‰ì
)))

436 
	~<°dlib.h
>

437 #i‚de‡
EXIT_SUCCESS


438 
	#EXIT_SUCCESS
 0

	)

441 #i‚de‡
YYMALLOC


442 
	#YYMALLOC
 
mÆloc


	)

443 #i‡! 
deföed
 
mÆloc
 && ! deföed 
EXIT_SUCCESS


444 *
mÆloc
 (
YYSIZE_T
);

447 #i‚de‡
YYFREE


448 
	#YYFREE
 
‰ì


	)

449 #i‡! 
deföed
 
‰ì
 && ! deföed 
EXIT_SUCCESS


450 
‰ì
 (*);

457 #i‡(! 
deföed
 
yyovîÊow
 \

458 && (! 
deföed
 
	g__˝lu•lus
 \

459 || (
deföed
 
	gYYSTYPE_IS_TRIVIAL
 && YYSTYPE_IS_TRIVIAL)))

462 
	uyyÆloc


464 
yyty≥_öt16
 
	myyss_Æloc
;

465 
YYSTYPE
 
	myyvs_Æloc
;

469 
	#YYSTACK_GAP_MAXIMUM
 ( (
yyÆloc
Ë- 1)

	)

473 
	#YYSTACK_BYTES
(
N
) \

474 ((
N
Ë* ( (
yyty≥_öt16
Ë+  (
YYSTYPE
)) \

475 + 
YYSTACK_GAP_MAXIMUM
)

	)

477 
	#YYCOPY_NEEDED
 1

	)

484 
	#YYSTACK_RELOCATE
(
Sèck_Æloc
, 
Sèck
) \

487 
YYSIZE_T
 
yy√wbyãs
; \

488 
	`YYCOPY
 (&
yy±r
->
Sèck_Æloc
, 
Sèck
, 
yysize
); \

489 
Sèck
 = &
yy±r
->
Sèck_Æloc
; \

490 
yy√wbyãs
 = 
yy°acksize
 *  (*
Sèck
Ë+ 
YYSTACK_GAP_MAXIMUM
; \

491 
yy±r
 +
yy√wbyãs
 /  (*yyptr); \

493 0)

	)

497 #i‡
deföed
 
YYCOPY_NEEDED
 && YYCOPY_NEEDED

500 #i‚de‡
YYCOPY


501 #i‡
deföed
 
__GNUC__
 && 1 < __GNUC__

502 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

503 
	`__buûtö_mem˝y
 (
D°
, 
Src
, (
Cou¡
Ë*  (*(Src)))

	)

505 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

508 
YYSIZE_T
 
yyi
; \

509 
yyi
 = 0; yyò< (
Cou¡
); yyi++) \

510 (
D°
)[
yyi
] = (
Src
)[yyi]; \

512 0)

	)

518 
	#YYFINAL
 24

	)

520 
	#YYLAST
 35

	)

523 
	#YYNTOKENS
 16

	)

525 
	#YYNNTS
 14

	)

527 
	#YYNRULES
 26

	)

529 
	#YYNSTATES
 39

	)

533 
	#YYUNDEFTOK
 2

	)

534 
	#YYMAXUTOK
 264

	)

536 
	#YYTRANSLATE
(
YYX
) \

537 ((Ë(
YYX
Ë<
YYMAXUTOK
 ? 
yyå™¶©e
[YYX] : 
YYUNDEFTOK
)

	)

541 c⁄° 
yyty≥_uöt8
 
	gyyå™¶©e
[] =

572 #i‡
YYDEBUG


574 c⁄° 
yyty≥_uöt16
 
	gyyæöe
[] =

582 #i‡
YYDEBUG
 || 
YYERROR_VERBOSE
 || 0

585 c⁄° *c⁄° 
	gyyäame
[] =

590 "¨øy", "vÆuñi°", "$@3", "°rög", "u°rög", "numbî", 
YY_NULLPTR


594 #ifde‡
YYPRINT


597 c⁄° 
yyty≥_uöt16
 
	gyytoknum
[] =

604 
	#YYPACT_NINF
 -8

	)

606 
	#yy∑˘_vÆue_is_deÁu…
(
Yy°©e
) \

607 (!!((
Yy°©e
Ë=(-8)))

	)

609 
	#YYTABLE_NINF
 -1

	)

611 
	#yyèbÀ_vÆue_is_îr‹
(
YyèbÀ_vÆue
) \

612 0

	)

616 c⁄° 
yyty≥_öt8
 
	gyy∑˘
[] =

627 c⁄° 
yyty≥_uöt8
 
	gyydeÁ˘
[] =

636 c⁄° 
yyty≥_öt8
 
	gyypgŸo
[] =

643 c⁄° 
yyty≥_öt8
 
	gyydefgŸo
[] =

652 c⁄° 
yyty≥_uöt8
 
	gyyèbÀ
[] =

660 c⁄° 
yyty≥_öt8
 
	gyycheck
[] =

670 c⁄° 
yyty≥_uöt8
 
	gyy°os
[] =

679 c⁄° 
yyty≥_uöt8
 
	gyyr1
[] =

687 c⁄° 
yyty≥_uöt8
 
	gyyr2
[] =

695 
	#yyîrok
 (
yyîr°©us
 = 0)

	)

696 
	#yy˛órö
 (
yych¨
 = 
YYEMPTY
)

	)

697 
	#YYEMPTY
 (-2)

	)

698 
	#YYEOF
 0

	)

700 
	#YYACCEPT
 
yyac˚±œb


	)

701 
	#YYABORT
 
yyab‹éab


	)

702 
	#YYERROR
 
yyîr‹œb


	)

705 
	#YYRECOVERING
(Ë(!!
yyîr°©us
)

	)

707 
	#YYBACKUP
(
Tokí
, 
VÆue
) \

709 i‡(
yych¨
 =
YYEMPTY
) \

711 
yych¨
 = (
Tokí
); \

712 
yylvÆ
 = (
VÆue
); \

713 
	`YYPOPSTACK
 (
yyÀn
); \

714 
yy°©e
 = *
yys•
; \

715 
yybackup
; \

719 
	`yyîr‹
 (
_jy
, 
	`YY_
("syntaxÉrror: cannot back up")); \

720 
YYERROR
; \

722 0)

	)

725 
	#YYTERROR
 1

	)

726 
	#YYERRCODE
 256

	)

731 #i‡
YYDEBUG


733 #i‚de‡
YYFPRINTF


734 
	~<°dio.h
>

735 
	#YYFPRINTF
 
Ârötf


	)

738 
	#YYDPRINTF
(
Args
) \

740 i‡(
yydebug
) \

741 
YYFPRINTF
 
Args
; \

742 } 0)

	)

745 #i‚de‡
YY_LOCATION_PRINT


746 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
Ë((Ë0)

	)

750 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
) \

752 i‡(
yydebug
) \

754 
	`YYFPRINTF
 (
°dîr
, "%†", 
TôÀ
); \

755 
	`yy_symbﬁ_¥öt
 (
°dîr
, \

756 
Ty≥
, 
VÆue
, 
_jy
); \

757 
	`YYFPRINTF
 (
°dîr
, "\n"); \

759 } 0)

	)

767 
	$yy_symbﬁ_vÆue_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
, *
_jy
)

769 
FILE
 *
yyo
 = 
yyouçut
;

770 
	`YYUSE
 (
yyo
);

771 
	`YYUSE
 (
_jy
);

772 i‡(!
yyvÆuï
)

774 #ifde‡
YYPRINT


775 i‡(
yyty≥
 < 
YYNTOKENS
)

776 
	`YYPRINT
 (
yyouçut
, 
yytoknum
[
yyty≥
], *
yyvÆuï
);

778 
	`YYUSE
 (
yyty≥
);

779 
	}
}

787 
	$yy_symbﬁ_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
, *
_jy
)

789 
	`YYFPRINTF
 (
yyouçut
, "%s %s (",

790 
yyty≥
 < 
YYNTOKENS
 ? "tokí" : "¡îm", 
yyäame
[yytype]);

792 
	`yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
, 
_jy
);

793 
	`YYFPRINTF
 (
yyouçut
, ")");

794 
	}
}

802 
	$yy_°ack_¥öt
 (
yyty≥_öt16
 *
yybŸtom
, yyty≥_öt16 *
yyt›
)

804 
	`YYFPRINTF
 (
°dîr
, "StackÇow");

805 ; 
yybŸtom
 <
yyt›
; yybottom++)

807 
yybŸ
 = *
yybŸtom
;

808 
	`YYFPRINTF
 (
°dîr
, " %d", 
yybŸ
);

810 
	`YYFPRINTF
 (
°dîr
, "\n");

811 
	}
}

813 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
) \

815 i‡(
yydebug
) \

816 
	`yy_°ack_¥öt
 ((
BŸtom
), (
T›
)); \

817 } 0)

	)

825 
	$yy_ªdu˚_¥öt
 (
yyty≥_öt16
 *
yys•
, 
YYSTYPE
 *
yyv•
, 
yyruÀ
, *
_jy
)

827 
yy o
 = 
yyæöe
[
yyruÀ
];

828 
yyƒhs
 = 
yyr2
[
yyruÀ
];

829 
yyi
;

830 
	`YYFPRINTF
 (
°dîr
, "Reducing stack byÑule %d (line %lu):\n",

831 
yyruÀ
 - 1, 
yy o
);

833 
yyi
 = 0; yyò< 
yyƒhs
; yyi++)

835 
	`YYFPRINTF
 (
°dîr
, " $%d = ", 
yyi
 + 1);

836 
	`yy_symbﬁ_¥öt
 (
°dîr
,

837 
yy°os
[
yys•
[
yyi
 + 1 - 
yyƒhs
]],

838 &(
yyv•
[(
yyi
 + 1Ë- (
yyƒhs
)])

839 , 
_jy
);

840 
	`YYFPRINTF
 (
°dîr
, "\n");

842 
	}
}

844 
	#YY_REDUCE_PRINT
(
RuÀ
) \

846 i‡(
yydebug
) \

847 
	`yy_ªdu˚_¥öt
 (
yys•
, 
yyv•
, 
RuÀ
, 
_jy
); \

848 } 0)

	)

852 
	gyydebug
;

854 
	#YYDPRINTF
(
Args
)

	)

855 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
)

	)

856 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
)

	)

857 
	#YY_REDUCE_PRINT
(
RuÀ
)

	)

862 #i‚de‡
YYINITDEPTH


863 
	#YYINITDEPTH
 200

	)

873 #i‚de‡
YYMAXDEPTH


874 
	#YYMAXDEPTH
 10000

	)

878 #i‡
YYERROR_VERBOSE


880 #i‚de‡
yy°æí


881 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H


882 
	#yy°æí
 
°æí


	)

885 
YYSIZE_T


886 
	$yy°æí
 (c⁄° *
yy°r
)

888 
YYSIZE_T
 
yyÀn
;

889 
yyÀn
 = 0; 
yy°r
[yylen]; yylen++)

891  
yyÀn
;

892 
	}
}

896 #i‚de‡
yy°p˝y


897 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H
 && deföed 
_GNU_SOURCE


898 
	#yy°p˝y
 
°p˝y


	)

903 
	$yy°p˝y
 (*
yyde°
, c⁄° *
yy§c
)

905 *
yyd
 = 
yyde°
;

906 c⁄° *
yys
 = 
yy§c
;

908 (*
yyd
++ = *
yys
++) != '\0')

911  
yyd
 - 1;

912 
	}
}

916 #i‚de‡
yyäamîr


924 
YYSIZE_T


925 
	$yyäamîr
 (*
yyªs
, c⁄° *
yy°r
)

927 i‡(*
yy°r
 == '"')

929 
YYSIZE_T
 
yyn
 = 0;

930 c⁄° *
yyp
 = 
yy°r
;

933 *++
yyp
)

937 
do_nŸ_°rù_quŸes
;

940 i‡(*++
yyp
 != '\\')

941 
do_nŸ_°rù_quŸes
;

944 i‡(
yyªs
)

945 
yyªs
[
yyn
] = *
yyp
;

946 
yyn
++;

950 i‡(
yyªs
)

951 
yyªs
[
yyn
] = '\0';

952  
yyn
;

954 
do_nŸ_°rù_quŸes
: ;

957 i‡(! 
yyªs
)

958  
	`yy°æí
 (
yy°r
);

960  
	`yy°p˝y
 (
yyªs
, 
yy°r
) - yyres;

961 
	}
}

973 
	$yysy¡ax_îr‹
 (
YYSIZE_T
 *
yymsg_Æloc
, **
yymsg
,

974 
yyty≥_öt16
 *
yys•
, 
yytokí
)

976 
YYSIZE_T
 
yysize0
 = 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yytokí
]);

977 
YYSIZE_T
 
yysize
 = 
yysize0
;

978 íum { 
YYERROR_VERBOSE_ARGS_MAXIMUM
 = 5 };

980 c⁄° *
yyf‹m©
 = 
YY_NULLPTR
;

982 c⁄° *
yy¨g
[
YYERROR_VERBOSE_ARGS_MAXIMUM
];

985 
yycou¡
 = 0;

1010 i‡(
yytokí
 !
YYEMPTY
)

1012 
yyn
 = 
yy∑˘
[*
yys•
];

1013 
yy¨g
[
yycou¡
++] = 
yyäame
[
yytokí
];

1014 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1019 
yyxbegö
 = 
yyn
 < 0 ? -yyn : 0;

1021 
yychecklim
 = 
YYLAST
 - 
yyn
 + 1;

1022 
yyxíd
 = 
yychecklim
 < 
YYNTOKENS
 ? yychecklim : YYNTOKENS;

1023 
yyx
;

1025 
yyx
 = 
yyxbegö
; yyx < 
yyxíd
; ++yyx)

1026 i‡(
yycheck
[
yyx
 + 
yyn
] =yyx && yyx !
YYTERROR


1027 && !
	`yyèbÀ_vÆue_is_îr‹
 (
yyèbÀ
[
yyx
 + 
yyn
]))

1029 i‡(
yycou¡
 =
YYERROR_VERBOSE_ARGS_MAXIMUM
)

1031 
yycou¡
 = 1;

1032 
yysize
 = 
yysize0
;

1035 
yy¨g
[
yycou¡
++] = 
yyäame
[
yyx
];

1037 
YYSIZE_T
 
yysize1
 = 
yysize
 + 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yyx
]);

1038 i‡(! (
yysize
 <
yysize1


1039 && 
yysize1
 <
YYSTACK_ALLOC_MAXIMUM
))

1041 
yysize
 = 
yysize1
;

1047 
yycou¡
)

1049 
	#YYCASE_
(
N
, 
S
) \

1050 
N
: \

1051 
yyf‹m©
 = 
S
; \

1052 

	)

1053 
	`YYCASE_
(0, 
	`YY_
("syntaxÉrror"));

1054 
	`YYCASE_
(1, 
	`YY_
("syntaxÉrror, unexpected %s"));

1055 
	`YYCASE_
(2, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s"));

1056 
	`YYCASE_
(3, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s"));

1057 
	`YYCASE_
(4, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s"));

1058 
	`YYCASE_
(5, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s or %s"));

1059 #unde‡
YYCASE_


1063 
YYSIZE_T
 
yysize1
 = 
yysize
 + 
	`yy°æí
 (
yyf‹m©
);

1064 i‡(! (
yysize
 <
yysize1
 && yysize1 <
YYSTACK_ALLOC_MAXIMUM
))

1066 
yysize
 = 
yysize1
;

1069 i‡(*
yymsg_Æloc
 < 
yysize
)

1071 *
yymsg_Æloc
 = 2 * 
yysize
;

1072 i‡(! (
yysize
 <*
yymsg_Æloc


1073 && *
yymsg_Æloc
 <
YYSTACK_ALLOC_MAXIMUM
))

1074 *
yymsg_Æloc
 = 
YYSTACK_ALLOC_MAXIMUM
;

1082 *
yyp
 = *
yymsg
;

1083 
yyi
 = 0;

1084 (*
yyp
 = *
yyf‹m©
) != '\0')

1085 i‡(*
yyp
 ='%' && 
yyf‹m©
[1] ='s' && 
yyi
 < 
yycou¡
)

1087 
yyp
 +
	`yyäamîr
 (yyp, 
yy¨g
[
yyi
++]);

1088 
yyf‹m©
 += 2;

1092 
yyp
++;

1093 
yyf‹m©
++;

1097 
	}
}

1105 
	$yyde°ru˘
 (c⁄° *
yymsg
, 
yyty≥
, 
YYSTYPE
 *
yyvÆuï
, *
_jy
)

1107 
	`YYUSE
 (
yyvÆuï
);

1108 
	`YYUSE
 (
_jy
);

1109 i‡(!
yymsg
)

1110 
yymsg
 = "Deleting";

1111 
	`YY_SYMBOL_PRINT
 (
yymsg
, 
yyty≥
, 
yyvÆuï
, 
yyloˇti⁄p
);

1113 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1114 
	`YYUSE
 (
yyty≥
);

1115 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1116 
	}
}

1122 
	gyych¨
;

1125 
YYSTYPE
 
	gyylvÆ
;

1127 
	gyy√ºs
;

1135 
	$yy∑r£
 (*
_jy
)

1137 
yy°©e
;

1139 
yyîr°©us
;

1149 
yyty≥_öt16
 
yysß
[
YYINITDEPTH
];

1150 
yyty≥_öt16
 *
yyss
;

1151 
yyty≥_öt16
 *
yys•
;

1154 
YYSTYPE
 
yyvß
[
YYINITDEPTH
];

1155 
YYSTYPE
 *
yyvs
;

1156 
YYSTYPE
 *
yyv•
;

1158 
YYSIZE_T
 
yy°acksize
;

1160 
yyn
;

1161 
yyªsu…
;

1163 
yytokí
 = 0;

1166 
YYSTYPE
 
yyvÆ
;

1168 #i‡
YYERROR_VERBOSE


1170 
yymsgbuf
[128];

1171 *
yymsg
 = 
yymsgbuf
;

1172 
YYSIZE_T
 
yymsg_Æloc
 =  
yymsgbuf
;

1175 
	#YYPOPSTACK
(
N
Ë(
yyv•
 -(N), 
yys•
 -(N))

	)

1179 
yyÀn
 = 0;

1181 
yys•
 = 
yyss
 = 
yysß
;

1182 
yyv•
 = 
yyvs
 = 
yyvß
;

1183 
yy°acksize
 = 
YYINITDEPTH
;

1185 
	`YYDPRINTF
 ((
°dîr
, "StartingÖarse\n"));

1187 
yy°©e
 = 0;

1188 
yyîr°©us
 = 0;

1189 
yy√ºs
 = 0;

1190 
yych¨
 = 
YYEMPTY
;

1191 
yy£t°©e
;

1196 
yy√w°©e
:

1199 
yys•
++;

1201 
yy£t°©e
:

1202 *
yys•
 = 
yy°©e
;

1204 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1207 
YYSIZE_T
 
yysize
 = 
yys•
 - 
yyss
 + 1;

1209 #ifde‡
yyovîÊow


1214 
YYSTYPE
 *
yyvs1
 = 
yyvs
;

1215 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1221 
	`yyovîÊow
 (
	`YY_
("memoryÉxhausted"),

1222 &
yyss1
, 
yysize
 *  (*
yys•
),

1223 &
yyvs1
, 
yysize
 *  (*
yyv•
),

1224 &
yy°acksize
);

1226 
yyss
 = 
yyss1
;

1227 
yyvs
 = 
yyvs1
;

1230 #i‚de‡
YYSTACK_RELOCATE


1231 
yyexhau°edœb
;

1234 i‡(
YYMAXDEPTH
 <
yy°acksize
)

1235 
yyexhau°edœb
;

1236 
yy°acksize
 *= 2;

1237 i‡(
YYMAXDEPTH
 < 
yy°acksize
)

1238 
yy°acksize
 = 
YYMAXDEPTH
;

1241 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1242 
yyÆloc
 *
yy±r
 =

1243 (
yyÆloc
 *Ë
	`YYSTACK_ALLOC
 (
	`YYSTACK_BYTES
 (
yy°acksize
));

1244 i‡(! 
yy±r
)

1245 
yyexhau°edœb
;

1246 
	`YYSTACK_RELOCATE
 (
yyss_Æloc
, 
yyss
);

1247 
	`YYSTACK_RELOCATE
 (
yyvs_Æloc
, 
yyvs
);

1248 #unde‡
YYSTACK_RELOCATE


1249 i‡(
yyss1
 !
yysß
)

1250 
	`YYSTACK_FREE
 (
yyss1
);

1255 
yys•
 = 
yyss
 + 
yysize
 - 1;

1256 
yyv•
 = 
yyvs
 + 
yysize
 - 1;

1258 
	`YYDPRINTF
 ((
°dîr
, "Stack size increasedÅo %lu\n",

1259 (Ë
yy°acksize
));

1261 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1262 
YYABORT
;

1265 
	`YYDPRINTF
 ((
°dîr
, "E¡îög sèã %d\n", 
yy°©e
));

1267 i‡(
yy°©e
 =
YYFINAL
)

1268 
YYACCEPT
;

1270 
yybackup
;

1275 
yybackup
:

1281 
yyn
 = 
yy∑˘
[
yy°©e
];

1282 i‡(
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1283 
yydeÁu…
;

1288 i‡(
yych¨
 =
YYEMPTY
)

1290 
	`YYDPRINTF
 ((
°dîr
, "ReadingáÅoken: "));

1291 
yych¨
 = 
	`yyÀx
 (
_jy
);

1294 i‡(
yych¨
 <
YYEOF
)

1296 
yych¨
 = 
yytokí
 = 
YYEOF
;

1297 
	`YYDPRINTF
 ((
°dîr
, "NowátÉnd of input.\n"));

1301 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

1302 
	`YY_SYMBOL_PRINT
 ("Nexàtokí is", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1307 
yyn
 +
yytokí
;

1308 i‡(
yyn
 < 0 || 
YYLAST
 < yy¿|| 
yycheck
[yyn] !
yytokí
)

1309 
yydeÁu…
;

1310 
yyn
 = 
yyèbÀ
[yyn];

1311 i‡(
yyn
 <= 0)

1313 i‡(
	`yyèbÀ_vÆue_is_îr‹
 (
yyn
))

1314 
yyîæab
;

1315 
yyn
 = -yyn;

1316 
yyªdu˚
;

1321 i‡(
yyîr°©us
)

1322 
yyîr°©us
--;

1325 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1328 
yych¨
 = 
YYEMPTY
;

1330 
yy°©e
 = 
yyn
;

1331 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1332 *++
yyv•
 = 
yylvÆ
;

1333 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1335 
yy√w°©e
;

1341 
yydeÁu…
:

1342 
yyn
 = 
yydeÁ˘
[
yy°©e
];

1343 i‡(
yyn
 == 0)

1344 
yyîæab
;

1345 
yyªdu˚
;

1351 
yyªdu˚
:

1353 
yyÀn
 = 
yyr2
[
yyn
];

1363 
yyvÆ
 = 
yyv•
[1-
yyÀn
];

1366 
	`YY_REDUCE_PRINT
 (
yyn
);

1367 
yyn
)

1371 { 
	`˛ic⁄_debug
(2,"js⁄->obje˘"); 
YYACCEPT
; }

1377 { 
	`js⁄_cuºít_body
(
_JY
, "true");}

1383 { 
	`js⁄_cuºít_body
(
_JY
, "false");}

1389 { 
	`js⁄_cuºít_body
(
_JY
, 
NULL
);}

1395 { 
	`js⁄_cuºít_body
(
_JY
, (
yyv•
[0].
°rög
)); 
	`‰ì
((yyvsp[0].string));}

1401 { 
	`js⁄_cuºít_body
(
_JY
, (
yyv•
[0].
°rög
)); 
	`‰ì
((yyvsp[0].string));}

1407 { 
	`˛ic⁄_debug
(2,"object->{}");}

1413 { 
	`˛ic⁄_debug
(2,"object->{ objlist }");}

1419 { 
	`˛ic⁄_debug
(2,"objlist->pair");}

1425 { 
	`˛ic⁄_debug
(2,"objlist->objlist ,Öair");}

1431 { 
	`js⁄_cuºít_√w
(
_JY
, (
yyv•
[0].
°rög
));
	`‰ì
((yyvsp[0].string));}

1437 { 
	`js⁄_cuºít_p›
(
_JY
);}

1443 { 
	`˛ic⁄_debug
(2,"pair->string : value");}

1449 { 
	`js⁄_cuºít_˛⁄e
(
_JY
);}

1455 { 
	`˛ic⁄_debug
(2,"°rög->\" u°rög \"");(
yyvÆ
.
°rög
)=(
yyv•
[-1].string); }

1461 { 
	`˛ic⁄_debug
(2,"°rög->\" u°rög \"");(
yyvÆ
.
°rög
)=
	`°rdup
(""); }

1468 
Àn
 = 
	`°æí
((
yyv•
[-1].
°rög
));

1469 (
yyvÆ
.
°rög
Ë
	`ªÆloc
((
yyv•
[-1].°rög), 
Àn
+
	`°æí
((yyvsp[0].string)) + 1);

1470 
	`•rötf
((
yyvÆ
.
°rög
)+
Àn
, "%s", (
yyv•
[0].string));

1471 
	`‰ì
((
yyv•
[0].
°rög
));

1478 {(
yyvÆ
.
°rög
)=(
yyv•
[0].string);}

1484 { (
yyvÆ
.
°rög
Ë(
yyv•
[0].string); }

1503 
	`YY_SYMBOL_PRINT
 ("-> $$ =", 
yyr1
[
yyn
], &
yyvÆ
, &
yyloc
);

1505 
	`YYPOPSTACK
 (
yyÀn
);

1506 
yyÀn
 = 0;

1507 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1509 *++
yyv•
 = 
yyvÆ
;

1515 
yyn
 = 
yyr1
[yyn];

1517 
yy°©e
 = 
yypgŸo
[
yyn
 - 
YYNTOKENS
] + *
yys•
;

1518 i‡(0 <
yy°©e
 && yy°©ê<
YYLAST
 && 
yycheck
[yy°©e] =*
yys•
)

1519 
yy°©e
 = 
yyèbÀ
[yystate];

1521 
yy°©e
 = 
yydefgŸo
[
yyn
 - 
YYNTOKENS
];

1523 
yy√w°©e
;

1529 
yyîæab
:

1532 
yytokí
 = 
yych¨
 =
YYEMPTY
 ? YYEMPTY : 
	`YYTRANSLATE
 (yychar);

1535 i‡(!
yyîr°©us
)

1537 ++
yy√ºs
;

1538 #i‡! 
YYERROR_VERBOSE


1539 
	`yyîr‹
 (
_jy
, 
	`YY_
("syntaxÉrror"));

1541 
	#YYSYNTAX_ERROR
 
	`yysy¡ax_îr‹
 (&
yymsg_Æloc
, &
yymsg
, \

1542 
yys•
, 
yytokí
)

	)

1544 c⁄° *
yymsgp
 = 
	`YY_
("syntaxÉrror");

1545 
yysy¡ax_îr‹_°©us
;

1546 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

1547 i‡(
yysy¡ax_îr‹_°©us
 == 0)

1548 
yymsgp
 = 
yymsg
;

1549 i‡(
yysy¡ax_îr‹_°©us
 == 1)

1551 i‡(
yymsg
 !
yymsgbuf
)

1552 
	`YYSTACK_FREE
 (
yymsg
);

1553 
yymsg
 = (*Ë
	`YYSTACK_ALLOC
 (
yymsg_Æloc
);

1554 i‡(!
yymsg
)

1556 
yymsg
 = 
yymsgbuf
;

1557 
yymsg_Æloc
 =  
yymsgbuf
;

1558 
yysy¡ax_îr‹_°©us
 = 2;

1562 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

1563 
yymsgp
 = 
yymsg
;

1566 
	`yyîr‹
 (
_jy
, 
yymsgp
);

1567 i‡(
yysy¡ax_îr‹_°©us
 == 2)

1568 
yyexhau°edœb
;

1570 #unde‡
YYSYNTAX_ERROR


1576 i‡(
yyîr°©us
 == 3)

1581 i‡(
yych¨
 <
YYEOF
)

1584 i‡(
yych¨
 =
YYEOF
)

1585 
YYABORT
;

1589 
	`yyde°ru˘
 ("Error: discarding",

1590 
yytokí
, &
yylvÆ
, 
_jy
);

1591 
yych¨
 = 
YYEMPTY
;

1597 
yyîæab1
;

1603 
yyîr‹œb
:

1609 
yyîr‹œb
;

1613 
	`YYPOPSTACK
 (
yyÀn
);

1614 
yyÀn
 = 0;

1615 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1616 
yy°©e
 = *
yys•
;

1617 
yyîæab1
;

1623 
yyîæab1
:

1624 
yyîr°©us
 = 3;

1628 
yyn
 = 
yy∑˘
[
yy°©e
];

1629 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1631 
yyn
 +
YYTERROR
;

1632 i‡(0 <
yyn
 && yy¿<
YYLAST
 && 
yycheck
[yyn] =
YYTERROR
)

1634 
yyn
 = 
yyèbÀ
[yyn];

1635 i‡(0 < 
yyn
)

1641 i‡(
yys•
 =
yyss
)

1642 
YYABORT
;

1645 
	`yyde°ru˘
 ("Error:Öopping",

1646 
yy°os
[
yy°©e
], 
yyv•
, 
_jy
);

1647 
	`YYPOPSTACK
 (1);

1648 
yy°©e
 = *
yys•
;

1649 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1652 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1653 *++
yyv•
 = 
yylvÆ
;

1654 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1658 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yy°os
[
yyn
], 
yyv•
, 
yyl•
);

1660 
yy°©e
 = 
yyn
;

1661 
yy√w°©e
;

1667 
yyac˚±œb
:

1668 
yyªsu…
 = 0;

1669 
yyªtu∫
;

1674 
yyab‹éab
:

1675 
yyªsu…
 = 1;

1676 
yyªtu∫
;

1678 #i‡!
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


1682 
yyexhau°edœb
:

1683 
	`yyîr‹
 (
_jy
, 
	`YY_
("memoryÉxhausted"));

1684 
yyªsu…
 = 2;

1688 
yyªtu∫
:

1689 i‡(
yych¨
 !
YYEMPTY
)

1693 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

1694 
	`yyde°ru˘
 ("Cleanup: discardingÜookahead",

1695 
yytokí
, &
yylvÆ
, 
_jy
);

1699 
	`YYPOPSTACK
 (
yyÀn
);

1700 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1701 
yys•
 !
yyss
)

1703 
	`yyde°ru˘
 ("Cleanup:Öopping",

1704 
yy°os
[*
yys•
], 
yyv•
, 
_jy
);

1705 
	`YYPOPSTACK
 (1);

1707 #i‚de‡
yyovîÊow


1708 i‡(
yyss
 !
yysß
)

1709 
	`YYSTACK_FREE
 (
yyss
);

1711 #i‡
YYERROR_VERBOSE


1712 i‡(
yymsg
 !
yymsgbuf
)

1713 
	`YYSTACK_FREE
 (
yymsg
);

1715  
yyªsu…
;

1716 
	}
}

	@clixon-master/lib/src/clixon_json_parse.tab.h

33 #i‚de‡
YY_CLIXON_JSON_PARSE_Y_TAB_H_INCLUDED


34 
	#YY_CLIXON_JSON_PARSE_Y_TAB_H_INCLUDED


	)

36 #i‚de‡
YYDEBUG


37 
	#YYDEBUG
 0

	)

39 #i‡
YYDEBUG


40 
˛ix⁄_js⁄_∑r£debug
;

44 #i‚de‡
YYTOKENTYPE


45 
	#YYTOKENTYPE


	)

46 
	eyytokíty≥


48 
	mJ_FALSE
 = 258,

49 
	mJ_TRUE
 = 259,

50 
	mJ_NULL
 = 260,

51 
	mJ_EOF
 = 261,

52 
	mJ_DQ
 = 262,

53 
	mJ_CHAR
 = 263,

54 
	mJ_NUMBER
 = 264

58 
	#J_FALSE
 258

	)

59 
	#J_TRUE
 259

	)

60 
	#J_NULL
 260

	)

61 
	#J_EOF
 261

	)

62 
	#J_DQ
 262

	)

63 
	#J_CHAR
 263

	)

64 
	#J_NUMBER
 264

	)

67 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


69 
	uYYSTYPE


73 
	mötvÆ
;

74 *
	m°rög
;

79 
YYSTYPE
 
	tYYSTYPE
;

80 
	#YYSTYPE_IS_TRIVIAL
 1

	)

81 
	#YYSTYPE_IS_DECLARED
 1

	)

85 
YYSTYPE
 
˛ix⁄_js⁄_∑r£lvÆ
;

87 
˛ix⁄_js⁄_∑r£∑r£
 (*
_jy
);

	@clixon-master/lib/src/clixon_log.c

38 #ifde‡
HAVE_CONFIG_H


39 
	~"˛ix⁄_c⁄fig.h
"

42 
	~<°dio.h
>

43 
	~<°d¨g.h
>

44 
	~<°dlib.h
>

45 
	~<f˙é.h
>

46 
	~<uni°d.h
>

47 
	~<sy¶og.h
>

48 
	~<°rög.h
>

49 
	~<time.h
>

50 
	~<î∫o.h
>

51 
	~<as£π.h
>

52 
	~<sys/time.h
>

53 
	~<sys/ty≥s.h
>

56 
	~"˛ix⁄_îr.h
"

57 
	~"˛ix⁄_log.h
"

60 
	gdebug
 = 0;

63 
	g_logÊags
 = 0x0;

66 
˛ic⁄_log_nŸify_t
 *
	g_log_nŸify_cb
 = 
NULL
;

67 *
	g_log_nŸify_¨g
 = 
NULL
;

70 
FILE
 *
	g_debugfûe
 = 
NULL
;

88 
	$˛ic⁄_log_öô
(*
idít
,

89 
u±o
,

90 
Êags
)

92 i‡(
	`£éogmask
(
	`LOG_UPTO
(
u±o
)) < 0)

94 
	`Ârötf
(
°dîr
, "%s: sëlogmask: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

95 
_logÊags
 = 
Êags
;

96 
	`›ílog
(
idít
, 
LOG_PID
, 
LOG_USER
);

98 
	}
}

101 
	$˛ic⁄_gë_logÊags
()

103  
_logÊags
;

104 
	}
}

108 
˛ic⁄_log_nŸify_t
 *

109 
	$˛ic⁄_log_ªgi°î_ˇŒback
(
˛ic⁄_log_nŸify_t
 *
cb
,

110 *
¨g
)

112 
˛ic⁄_log_nŸify_t
 *
ﬁd
 = 
_log_nŸify_cb
;

113 
_log_nŸify_cb
 = 
cb
;

114 
_log_nŸify_¨g
 = 
¨g
;

115  
ﬁd
;

116 
	}
}

121 
	$Êogtime
(
FILE
 *
f
)

123 
timevÆ
 
tv
;

124 
tm
 *tm;

126 
	`gëtimeofday
(&
tv
, 
NULL
);

127 
tm
 = 
	`loˇ…ime
((
time_t
*)&
tv
.
tv_£c
);

128 
	`Ârötf
(
f
, "%s %2d %02d:%02d:%02d: ",

129 
	`m⁄2«me
(
tm
->
tm_m⁄
),Åm->
tm_mday
,

130 
tm
->
tm_hour
,Åm->
tm_mö
,Åm->
tm_£c
);

132 
	}
}

139 
	$¶ogtime
()

141 
timevÆ
 
tv
;

142 
tm
 *tm;

143 *
°r
;

146 i‡((
°r
 = 
	`mÆloc
(18)Ë=
NULL
){

147 
	`Ârötf
(
°dîr
, "%s: mÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

148  
NULL
;

150 
	`gëtimeofday
(&
tv
, 
NULL
);

151 
tm
 = 
	`loˇ…ime
((
time_t
*)&
tv
.
tv_£c
);

152 
	`¢¥ötf
(
°r
, 18, "%s %2d %02d:%02d:%02d: ",

153 
	`m⁄2«me
(
tm
->
tm_m⁄
),Åm->
tm_mday
,

154 
tm
->
tm_hour
,Åm->
tm_mö
,Åm->
tm_£c
);

155  
°r
;

156 
	}
}

169 
	$˛ic⁄_log_°r
(
Àvñ
,

170 *
msg
)

172 i‡(
_logÊags
 & 
CLICON_LOG_SYSLOG
)

173 
	`sy¶og
(
	`LOG_MAKEPRI
(
LOG_USER
, 
Àvñ
), "%s", 
msg
);

177 i‡(
debug
 =0 && 
Àvñ
 >
LOG_DEBUG
)

178 
d⁄e
;

179 i‡(
_logÊags
 & 
CLICON_LOG_STDERR
){

180 
	`Êogtime
(
°dîr
);

181 
	`Ârötf
(
°dîr
, "%s\n", 
msg
);

183 i‡(
_logÊags
 & 
CLICON_LOG_STDOUT
){

184 
	`Êogtime
(
°dout
);

185 
	`Ârötf
(
°dout
, "%s\n", 
msg
);

187 i‡(
_log_nŸify_cb
){

188 
cb
 = 0;

189 *
d
, *
msg2
;

190 
Àn
;

192 i‡(
cb
++ == 0){

196 i‡((
d
 = 
	`¶ogtime
()Ë=
NULL
)

198 
Àn
 = 
	`°æí
(
d
Ë+ såÀn(
msg
) + 1;

199 i‡((
msg2
 = 
	`mÆloc
(
Àn
)Ë=
NULL
){

200 
	`Ârötf
(
°dîr
, "%s: mÆloc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

203 
	`¢¥ötf
(
msg2
, 
Àn
, "%s%s", 
d
, 
msg
);

204 
	`as£π
(
_log_nŸify_¨g
);

205 
	`_log_nŸify_cb
(
Àvñ
, 
msg2
, 
_log_nŸify_¨g
);

206 
	`‰ì
(
d
);

207 
	`‰ì
(
msg2
);

209 
cb
--;

211 
d⁄e
:

213 
	}
}

226 
	$˛ic⁄_log
(
Àvñ
,

227 *
f‹m©
, ...)

229 
va_li°
 
¨gs
;

230 
Àn
;

231 *
msg
 = 
NULL
;

232 
ªtvÆ
 = -1;

235 
	`va_°¨t
(
¨gs
, 
f‹m©
);

236 
Àn
 = 
	`v¢¥ötf
(
NULL
, 0, 
f‹m©
, 
¨gs
);

237 
	`va_íd
(
¨gs
);

240 i‡((
msg
 = 
	`mÆloc
(
Àn
+1)Ë=
NULL
){

241 
	`Ârötf
(
°dîr
, "mÆloc: %s\n", 
	`°ªº‹
(
î∫o
));

242 
d⁄e
;

246 
	`va_°¨t
(
¨gs
, 
f‹m©
);

247 i‡(
	`v¢¥ötf
(
msg
, 
Àn
+1, 
f‹m©
, 
¨gs
) < 0){

248 
	`va_íd
(
¨gs
);

249 
	`Ârötf
(
°dîr
, "v¢¥ötf: %s\n", 
	`°ªº‹
(
î∫o
));

250 
d⁄e
;

252 
	`va_íd
(
¨gs
);

254 
	`˛ic⁄_log_°r
(
Àvñ
, 
msg
);

256 
ªtvÆ
 = 0;

257 
d⁄e
:

258 i‡(
msg
)

259 
	`‰ì
(
msg
);

260  
ªtvÆ
;

261 
	}
}

281 
	$˛ic⁄_debug_öô
(
dbgÀvñ
,

282 
FILE
 *
f
)

284 
debug
 = 
dbgÀvñ
;

286 
	}
}

302 
	$˛ic⁄_debug
(
dbgÀvñ
,

303 *
f‹m©
, ...)

305 
va_li°
 
¨gs
;

306 
Àn
;

307 *
msg
 = 
NULL
;

308 
ªtvÆ
 = -1;

310 i‡(
dbgÀvñ
 > 
debug
)

313 
	`va_°¨t
(
¨gs
, 
f‹m©
);

314 
Àn
 = 
	`v¢¥ötf
(
NULL
, 0, 
f‹m©
, 
¨gs
);

315 
	`va_íd
(
¨gs
);

318 i‡((
msg
 = 
	`mÆloc
(
Àn
+1)Ë=
NULL
){

319 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "malloc");

320 
d⁄e
;

323 
	`va_°¨t
(
¨gs
, 
f‹m©
);

324 i‡(
	`v¢¥ötf
(
msg
, 
Àn
+1, 
f‹m©
, 
¨gs
) < 0){

325 
	`va_íd
(
¨gs
);

326 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "vsnprintf");

327 
d⁄e
;

329 
	`va_íd
(
¨gs
);

330 i‡(
_debugfûe
 !
NULL
){

332 
	`Êogtime
(
_debugfûe
);

333 
	`Ârötf
(
_debugfûe
, "%s\n", 
msg
);

336 
	`˛ic⁄_log_°r
(
LOG_DEBUG
, 
msg
);

337 
ªtvÆ
 = 0;

338 
d⁄e
:

339 i‡(
msg
)

340 
	`‰ì
(
msg
);

341  
ªtvÆ
;

342 
	}
}

348 
	$m⁄2«me
(
md
)

350 
md
){

366  
NULL
;

367 
	}
}

	@clixon-master/lib/src/clixon_netconf_lib.c

37 #ifde‡
HAVE_CONFIG_H


38 
	~"˛ix⁄_c⁄fig.h
"

41 
	~<°dio.h
>

42 
	~<°dlib.h
>

43 
	~<uni°d.h
>

44 
	~<î∫o.h
>

45 
	~<°rög.h
>

46 
	~<limôs.h
>

47 
	~<‚m©ch.h
>

48 
	~<°döt.h
>

49 
	~<as£π.h
>

52 
	~<˛igí/˛igí.h
>

55 
	~"˛ix⁄_queue.h
"

56 
	~"˛ix⁄_hash.h
"

57 
	~"˛ix⁄_°rög.h
"

58 
	~"˛ix⁄_îr.h
"

59 
	~"˛ix⁄_h™dÀ.h
"

60 
	~"˛ix⁄_y™g.h
"

61 
	~"˛ix⁄_log.h
"

62 
	~"˛ix⁄_xml.h
"

63 
	~"˛ix⁄_√tc⁄f_lib.h
"

73 
	$√tc⁄f_ö_u£
(
cbuf
 *
cb
,

74 *
ty≥
,

75 *
mesßge
)

77 
ªtvÆ
 = -1;

78 *
íc°r
 = 
NULL
;

80 i‡(
	`˝rötf
(
cb
, "<rpc-reply><rpc-error>"

84 
ty≥
) <0)

85 
îr
;

86 i‡(
mesßge
){

87 i‡(
	`xml_ch¨d©a_ícode
(
mesßge
, &
íc°r
) < 0)

88 
d⁄e
;

89 i‡(
	`˝rötf
(
cb
, "<îr‹-mesßge>%s</îr‹-mesßge>", 
íc°r
) < 0)

90 
îr
;

92 i‡(
	`˝rötf
(
cb
, "</rpc-error></rpc-reply>") <0)

93 
îr
;

94 
ªtvÆ
 = 0;

95 
d⁄e
:

96 i‡(
íc°r
)

97 
	`‰ì
(
íc°r
);

98  
ªtvÆ
;

99 
îr
:

100 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cprintf");

101 
d⁄e
;

102 
	}
}

112 
	$√tc⁄f_övÆid_vÆue
(
cbuf
 *
cb
,

113 *
ty≥
,

114 *
mesßge
)

116 
ªtvÆ
 = -1;

117 *
íc°r
 = 
NULL
;

119 i‡(
	`˝rötf
(
cb
, "<rpc-reply><rpc-error>"

123 
ty≥
) <0)

124 
îr
;

125 i‡(
mesßge
){

126 i‡(
	`xml_ch¨d©a_ícode
(
mesßge
, &
íc°r
) < 0)

127 
d⁄e
;

128 i‡(
	`˝rötf
(
cb
, "<îr‹-mesßge>%s</îr‹-mesßge>", 
íc°r
) < 0)

129 
îr
;

131 i‡(
	`˝rötf
(
cb
, "</rpc-error></rpc-reply>") <0)

132 
îr
;

133 
ªtvÆ
 = 0;

134 
d⁄e
:

135 i‡(
íc°r
)

136 
	`‰ì
(
íc°r
);

137  
ªtvÆ
;

138 
îr
:

139 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cprintf");

140 
d⁄e
;

141 
	}
}

152 
	$√tc⁄f_too_big
(
cbuf
 *
cb
,

153 *
ty≥
,

154 *
mesßge
)

156 
ªtvÆ
 = -1;

157 *
íc°r
 = 
NULL
;

159 i‡(
	`˝rötf
(
cb
, "<rpc-reply><rpc-error>"

163 
ty≥
) <0)

164 
îr
;

165 i‡(
mesßge
){

166 i‡(
	`xml_ch¨d©a_ícode
(
mesßge
, &
íc°r
) < 0)

167 
d⁄e
;

168 i‡(
	`˝rötf
(
cb
, "<îr‹-mesßge>%s</îr‹-mesßge>", 
íc°r
) < 0)

169 
îr
;

171 i‡(
	`˝rötf
(
cb
, "</rpc-error></rpc-reply>") <0)

172 
îr
;

173 
ªtvÆ
 = 0;

174 
d⁄e
:

175 i‡(
íc°r
)

176 
	`‰ì
(
íc°r
);

177  
ªtvÆ
;

178 
îr
:

179 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cprintf");

180 
d⁄e
;

181 
	}
}

192 
	$√tc⁄f_missög_©åibuã
(
cbuf
 *
cb
,

193 *
ty≥
,

194 *
öfo
,

195 *
mesßge
)

197 
ªtvÆ
 = -1;

198 *
íc°r
 = 
NULL
;

200 i‡(
	`˝rötf
(
cb
, "<rpc-reply><rpc-error>"

205 
ty≥
, 
öfo
) <0)

206 
îr
;

207 i‡(
mesßge
){

208 i‡(
	`xml_ch¨d©a_ícode
(
mesßge
, &
íc°r
) < 0)

209 
d⁄e
;

210 i‡(
	`˝rötf
(
cb
, "<îr‹-mesßge>%s</îr‹-mesßge>", 
íc°r
) < 0)

211 
îr
;

213 i‡(
	`˝rötf
(
cb
, "</rpc-error></rpc-reply>") <0)

214 
îr
;

215 
ªtvÆ
 = 0;

216 
d⁄e
:

217  
ªtvÆ
;

218 
îr
:

219 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cprintf");

220 
d⁄e
;

221 
	}
}

233 
	$√tc⁄f_bad_©åibuã
(
cbuf
 *
cb
,

234 *
ty≥
,

235 *
öfo
,

236 *
mesßge
)

238 
ªtvÆ
 = -1;

239 *
íc°r
 = 
NULL
;

241 i‡(
	`˝rötf
(
cb
, "<rpc-reply><rpc-error>"

246 
ty≥
, 
öfo
) <0)

247 
îr
;

248 i‡(
mesßge
){

249 i‡(
	`xml_ch¨d©a_ícode
(
mesßge
, &
íc°r
) < 0)

250 
d⁄e
;

251 i‡(
	`˝rötf
(
cb
, "<îr‹-mesßge>%s</îr‹-mesßge>", 
íc°r
) < 0)

252 
îr
;

254 i‡(
	`˝rötf
(
cb
, "</rpc-error></rpc-reply>") <0)

255 
îr
;

256 
ªtvÆ
 = 0;

257 
d⁄e
:

258 i‡(
íc°r
)

259 
	`‰ì
(
íc°r
);

260  
ªtvÆ
;

261 
îr
:

262 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cprintf");

263 
d⁄e
;

264 
	}
}

275 
	$√tc⁄f_unknown_©åibuã
(
cbuf
 *
cb
,

276 *
ty≥
,

277 *
öfo
,

278 *
mesßge
)

280 
ªtvÆ
 = -1;

281 *
íc°r
 = 
NULL
;

283 i‡(
	`˝rötf
(
cb
, "<rpc-reply><rpc-error>"

288 
ty≥
, 
öfo
) <0)

289 
îr
;

290 i‡(
mesßge
){

291 i‡(
	`xml_ch¨d©a_ícode
(
mesßge
, &
íc°r
) < 0)

292 
d⁄e
;

293 i‡(
	`˝rötf
(
cb
, "<îr‹-mesßge>%s</îr‹-mesßge>", 
íc°r
) < 0)

294 
îr
;

296 i‡(
	`˝rötf
(
cb
, "</rpc-error></rpc-reply>") <0)

297 
îr
;

298 
ªtvÆ
 = 0;

299 
d⁄e
:

300 i‡(
íc°r
)

301 
	`‰ì
(
íc°r
);

302  
ªtvÆ
;

303 
îr
:

304 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cprintf");

305 
d⁄e
;

306 
	}
}

317 
	$√tc⁄f_missög_ñemít
(
cbuf
 *
cb
,

318 *
ty≥
,

319 *
öfo
,

320 *
mesßge
)

322 
ªtvÆ
 = -1;

323 *
íc°r
 = 
NULL
;

325 i‡(
	`˝rötf
(
cb
, "<rpc-reply><rpc-error>"

330 
ty≥
, 
öfo
) <0)

331 
îr
;

332 i‡(
mesßge
){

333 i‡(
	`xml_ch¨d©a_ícode
(
mesßge
, &
íc°r
) < 0)

334 
d⁄e
;

335 i‡(
	`˝rötf
(
cb
, "<îr‹-mesßge>%s</îr‹-mesßge>", 
íc°r
) < 0)

336 
îr
;

338 i‡(
	`˝rötf
(
cb
, "</rpc-error></rpc-reply>") <0)

339 
îr
;

340 
ªtvÆ
 = 0;

341 
d⁄e
:

342 i‡(
íc°r
)

343 
	`‰ì
(
íc°r
);

344  
ªtvÆ
;

345 
îr
:

346 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cprintf");

347 
d⁄e
;

348 
	}
}

360 
	$√tc⁄f_bad_ñemít
(
cbuf
 *
cb
,

361 *
ty≥
,

362 *
öfo
,

363 *
mesßge
)

365 
ªtvÆ
 = -1;

366 *
íc°r
 = 
NULL
;

368 i‡(
	`˝rötf
(
cb
, "<rpc-reply><rpc-error>"

373 
ty≥
, 
öfo
) <0)

374 
îr
;

375 i‡(
mesßge
){

376 i‡(
	`xml_ch¨d©a_ícode
(
mesßge
, &
íc°r
) < 0)

377 
d⁄e
;

378 i‡(
	`˝rötf
(
cb
, "<îr‹-mesßge>%s</îr‹-mesßge>", 
íc°r
) < 0)

379 
îr
;

381 i‡(
	`˝rötf
(
cb
, "</rpc-error></rpc-reply>") <0)

382 
îr
;

383 
ªtvÆ
 = 0;

384 
d⁄e
:

385 i‡(
íc°r
)

386 
	`‰ì
(
íc°r
);

387  
ªtvÆ
;

388 
îr
:

389 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cprintf");

390 
d⁄e
;

391 
	}
}

402 
	$√tc⁄f_unknown_ñemít
(
cbuf
 *
cb
,

403 *
ty≥
,

404 *
öfo
,

405 *
mesßge
)

407 
ªtvÆ
 = -1;

408 *
íc°r
 = 
NULL
;

410 i‡(
	`˝rötf
(
cb
, "<rpc-reply><rpc-error>"

415 
ty≥
, 
öfo
) <0)

416 
îr
;

417 i‡(
mesßge
){

418 i‡(
	`xml_ch¨d©a_ícode
(
mesßge
, &
íc°r
) < 0)

419 
d⁄e
;

420 i‡(
	`˝rötf
(
cb
, "<îr‹-mesßge>%s</îr‹-mesßge>", 
íc°r
) < 0)

421 
îr
;

423 i‡(
	`˝rötf
(
cb
, "</rpc-error></rpc-reply>") <0)

424 
îr
;

425 
ªtvÆ
 = 0;

426 
d⁄e
:

427 i‡(
íc°r
)

428 
	`‰ì
(
íc°r
);

429  
ªtvÆ
;

430 
îr
:

431 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cprintf");

432 
d⁄e
;

433 
	}
}

444 
	$√tc⁄f_unknown_«me•a˚
(
cbuf
 *
cb
,

445 *
ty≥
,

446 *
öfo
,

447 *
mesßge
)

449 
ªtvÆ
 = -1;

450 *
íc°r
 = 
NULL
;

452 i‡(
	`˝rötf
(
cb
, "<rpc-reply><rpc-error>"

457 
ty≥
, 
öfo
) <0)

458 
îr
;

459 i‡(
mesßge
){

460 i‡(
	`xml_ch¨d©a_ícode
(
mesßge
, &
íc°r
) < 0)

461 
d⁄e
;

462 i‡(
	`˝rötf
(
cb
, "<îr‹-mesßge>%s</îr‹-mesßge>", 
íc°r
) < 0)

463 
îr
;

465 i‡(
	`˝rötf
(
cb
, "</rpc-error></rpc-reply>") <0)

466 
îr
;

467 
ªtvÆ
 = 0;

468 
d⁄e
:

469 i‡(
íc°r
)

470 
	`‰ì
(
íc°r
);

471  
ªtvÆ
;

472 
îr
:

473 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cprintf");

474 
d⁄e
;

475 
	}
}

485 
	$√tc⁄f_ac˚ss_díõd
(
cbuf
 *
cb
,

486 *
ty≥
,

487 *
mesßge
)

489 
ªtvÆ
 = -1;

490 *
íc°r
 = 
NULL
;

492 i‡(
	`˝rötf
(
cb
, "<rpc-reply><rpc-error>"

496 
ty≥
) <0)

497 
îr
;

498 i‡(
mesßge
){

499 i‡(
	`xml_ch¨d©a_ícode
(
mesßge
, &
íc°r
) < 0)

500 
d⁄e
;

501 i‡(
	`˝rötf
(
cb
, "<îr‹-mesßge>%s</îr‹-mesßge>", 
íc°r
) < 0)

502 
îr
;

504 i‡(
	`˝rötf
(
cb
, "</rpc-error></rpc-reply>") <0)

505 
îr
;

506 
ªtvÆ
 = 0;

507 
d⁄e
:

508 i‡(
íc°r
)

509 
	`‰ì
(
íc°r
);

510  
ªtvÆ
;

511 
îr
:

512 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cprintf");

513 
d⁄e
;

514 
	}
}

524 
	$√tc⁄f_ac˚ss_díõd_xml
(
cxobj
 **
xªt
,

525 *
ty≥
,

526 *
mesßge
)

528 
ªtvÆ
 =-1;

529 
cxobj
 *
xîr
;

531 i‡(*
xªt
 =
NULL
){

532 i‡((*
xªt
 = 
	`xml_√w
("Ωc-ª∂y", 
NULL
, NULL)) == NULL)

533 
d⁄e
;

535 i‡(
	`xml_«me_£t
(*
xªt
, "rpc-reply") < 0)

536 
d⁄e
;

537 i‡((
xîr
 = 
	`xml_√w
("Ωc-îr‹", *
xªt
, 
NULL
)) == NULL)

538 
d⁄e
;

539 i‡(
	`xml_∑r£_va
(&
xîr
, 
NULL
, "<error-tag>access-denied</error-tag>"

541 "<îr‹-£vîôy>îr‹</îr‹-£vîôy>", 
ty≥
) < 0)

542 
d⁄e
;

543 i‡(
mesßge
 && 
	`xml_∑r£_va
(&
xîr
, 
NULL
, "<error-message>%s</error-message>",

544 
mesßge
) < 0)

545 
d⁄e
;

546 
ªtvÆ
 = 0;

547 
d⁄e
:

548  
ªtvÆ
;

549 
	}
}

560 
	$√tc⁄f_lock_díõd
(
cbuf
 *
cb
,

561 *
öfo
,

562 *
mesßge
)

564 
ªtvÆ
 = -1;

565 *
íc°r
 = 
NULL
;

567 i‡(
	`˝rötf
(
cb
, "<rpc-reply><rpc-error>"

572 
öfo
) <0)

573 
îr
;

574 i‡(
mesßge
){

575 i‡(
	`xml_ch¨d©a_ícode
(
mesßge
, &
íc°r
) < 0)

576 
d⁄e
;

577 i‡(
	`˝rötf
(
cb
, "<îr‹-mesßge>%s</îr‹-mesßge>", 
íc°r
) < 0)

578 
îr
;

580 i‡(
	`˝rötf
(
cb
, "</rpc-error></rpc-reply>") <0)

581 
îr
;

582 
ªtvÆ
 = 0;

583 
d⁄e
:

584 i‡(
íc°r
)

585 
	`‰ì
(
íc°r
);

586  
ªtvÆ
;

587 
îr
:

588 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cprintf");

589 
d⁄e
;

590 
	}
}

600 
	$√tc⁄f_ªsour˚_díõd
(
cbuf
 *
cb
,

601 *
ty≥
,

602 *
mesßge
)

604 
ªtvÆ
 = -1;

605 *
íc°r
 = 
NULL
;

607 i‡(
	`˝rötf
(
cb
, "<rpc-reply><rpc-error>"

611 
ty≥
) <0)

612 
îr
;

613 i‡(
mesßge
){

614 i‡(
	`xml_ch¨d©a_ícode
(
mesßge
, &
íc°r
) < 0)

615 
d⁄e
;

616 i‡(
	`˝rötf
(
cb
, "<îr‹-mesßge>%s</îr‹-mesßge>", 
íc°r
) < 0)

617 
îr
;

619 i‡(
	`˝rötf
(
cb
, "</rpc-error></rpc-reply>") <0)

620 
îr
;

621 
ªtvÆ
 = 0;

622 
d⁄e
:

623 i‡(
íc°r
)

624 
	`‰ì
(
íc°r
);

625  
ªtvÆ
;

626 
îr
:

627 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cprintf");

628 
d⁄e
;

629 
	}
}

640 
	$√tc⁄f_rﬁlback_Áûed
(
cbuf
 *
cb
,

641 *
ty≥
,

642 *
mesßge
)

644 
ªtvÆ
 = -1;

645 *
íc°r
 = 
NULL
;

647 i‡(
	`˝rötf
(
cb
, "<rpc-reply><rpc-error>"

651 
ty≥
) <0)

652 
îr
;

653 i‡(
mesßge
){

654 i‡(
	`xml_ch¨d©a_ícode
(
mesßge
, &
íc°r
) < 0)

655 
d⁄e
;

656 i‡(
	`˝rötf
(
cb
, "<îr‹-mesßge>%s</îr‹-mesßge>", 
íc°r
) < 0)

657 
îr
;

659 i‡(
	`˝rötf
(
cb
, "</rpc-error></rpc-reply>") <0)

660 
îr
;

661 
ªtvÆ
 = 0;

662 
d⁄e
:

663 i‡(
íc°r
)

664 
	`‰ì
(
íc°r
);

665  
ªtvÆ
;

666 
îr
:

667 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cprintf");

668 
d⁄e
;

669 
	}
}

680 
	$√tc⁄f_d©a_exi°s
(
cbuf
 *
cb
,

681 *
mesßge
)

683 
ªtvÆ
 = -1;

684 *
íc°r
 = 
NULL
;

686 i‡(
	`˝rötf
(
cb
, "<rpc-reply><rpc-error>"

690 
îr
;

691 i‡(
mesßge
){

692 i‡(
	`xml_ch¨d©a_ícode
(
mesßge
, &
íc°r
) < 0)

693 
d⁄e
;

694 i‡(
	`˝rötf
(
cb
, "<îr‹-mesßge>%s</îr‹-mesßge>", 
íc°r
) < 0)

695 
îr
;

697 i‡(
	`˝rötf
(
cb
, "</rpc-error></rpc-reply>") <0)

698 
îr
;

699 
ªtvÆ
 = 0;

700 
d⁄e
:

701 i‡(
íc°r
)

702 
	`‰ì
(
íc°r
);

703  
ªtvÆ
;

704 
îr
:

705 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cprintf");

706 
d⁄e
;

707 
	}
}

718 
	$√tc⁄f_d©a_missög
(
cbuf
 *
cb
,

719 *
mesßge
)

721 
ªtvÆ
 = -1;

722 *
íc°r
 = 
NULL
;

724 i‡(
	`˝rötf
(
cb
, "<rpc-reply><rpc-error>"

728 
îr
;

729 i‡(
mesßge
){

730 i‡(
	`xml_ch¨d©a_ícode
(
mesßge
, &
íc°r
) < 0)

731 
d⁄e
;

732 i‡(
	`˝rötf
(
cb
, "<îr‹-mesßge>%s</îr‹-mesßge>", 
íc°r
) < 0)

733 
îr
;

735 i‡(
	`˝rötf
(
cb
, "</rpc-error></rpc-reply>") <0)

736 
îr
;

737 
ªtvÆ
 = 0;

738 
d⁄e
:

739 i‡(
íc°r
)

740 
	`‰ì
(
íc°r
);

741  
ªtvÆ
;

742 
îr
:

743 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cprintf");

744 
d⁄e
;

745 
	}
}

756 
	$√tc⁄f_›î©i⁄_nŸ_suµ‹ãd
(
cbuf
 *
cb
,

757 *
ty≥
,

758 *
mesßge
)

760 
ªtvÆ
 = -1;

761 *
íc°r
 = 
NULL
;

763 i‡(
	`˝rötf
(
cb
, "<rpc-reply><rpc-error>"

767 
ty≥
) <0)

768 
îr
;

769 i‡(
mesßge
){

770 i‡(
	`xml_ch¨d©a_ícode
(
mesßge
, &
íc°r
) < 0)

771 
d⁄e
;

772 i‡(
	`˝rötf
(
cb
, "<îr‹-mesßge>%s</îr‹-mesßge>", 
íc°r
) < 0)

773 
îr
;

775 i‡(
	`˝rötf
(
cb
, "</rpc-error></rpc-reply>") <0)

776 
îr
;

777 
ªtvÆ
 = 0;

778 
d⁄e
:

779 i‡(
íc°r
)

780 
	`‰ì
(
íc°r
);

781  
ªtvÆ
;

782 
îr
:

783 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cprintf");

784 
d⁄e
;

785 
	}
}

796 
	$√tc⁄f_›î©i⁄_Áûed
(
cbuf
 *
cb
,

797 *
ty≥
,

798 *
mesßge
)

800 
ªtvÆ
 = -1;

801 *
íc°r
 = 
NULL
;

803 i‡(
	`˝rötf
(
cb
, "<rpc-reply><rpc-error>"

807 
ty≥
) <0)

808 
îr
;

809 i‡(
mesßge
){

810 i‡(
	`xml_ch¨d©a_ícode
(
mesßge
, &
íc°r
) < 0)

811 
d⁄e
;

812 i‡(
	`˝rötf
(
cb
, "<îr‹-mesßge>%s</îr‹-mesßge>", 
íc°r
) < 0)

813 
îr
;

815 i‡(
	`˝rötf
(
cb
, "</rpc-error></rpc-reply>") < 0)

816 
îr
;

817 
ªtvÆ
 = 0;

818 
d⁄e
:

819 i‡(
íc°r
)

820 
	`‰ì
(
íc°r
);

821  
ªtvÆ
;

822 
îr
:

823 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cprintf");

824 
d⁄e
;

825 
	}
}

836 
	$√tc⁄f_›î©i⁄_Áûed_xml
(
cxobj
 **
xªt
,

837 *
ty≥
,

838 *
mesßge
)

840 
ªtvÆ
 =-1;

841 
cxobj
 *
xîr
;

843 i‡(*
xªt
 =
NULL
){

844 i‡((*
xªt
 = 
	`xml_√w
("Ωc-ª∂y", 
NULL
, NULL)) == NULL)

845 
d⁄e
;

847 i‡(
	`xml_«me_£t
(*
xªt
, "rpc-reply") < 0)

848 
d⁄e
;

849 i‡((
xîr
 = 
	`xml_√w
("Ωc-îr‹", *
xªt
, 
NULL
)) == NULL)

850 
d⁄e
;

851 i‡(
	`xml_∑r£_va
(&
xîr
, 
NULL
, "<error-tag>operation-failed</error-tag>"

853 "<îr‹-£vîôy>îr‹</îr‹-£vîôy>", 
ty≥
) < 0)

854 
d⁄e
;

855 i‡(
mesßge
 && 
	`xml_∑r£_va
(&
xîr
, 
NULL
, "<error-message>%s</error-message>",

856 
mesßge
) < 0)

857 
d⁄e
;

858 
ªtvÆ
 = 0;

859 
d⁄e
:

860  
ªtvÆ
;

861 
	}
}

873 
	$√tc⁄f_mÆf‹med_mesßge
(
cbuf
 *
cb
,

874 *
mesßge
)

876 
ªtvÆ
 = -1;

877 *
íc°r
 = 
NULL
;

879 i‡(
	`˝rötf
(
cb
, "<rpc-reply><rpc-error>"

883 
îr
;

884 i‡(
mesßge
){

885 i‡(
	`xml_ch¨d©a_ícode
(
mesßge
, &
íc°r
) < 0)

886 
d⁄e
;

887 i‡(
	`˝rötf
(
cb
, "<îr‹-mesßge>%s</îr‹-mesßge>", 
íc°r
) < 0)

888 
îr
;

890 i‡(
	`˝rötf
(
cb
, "</rpc-error></rpc-reply>") <0)

891 
îr
;

892 
ªtvÆ
 = 0;

893 
d⁄e
:

894 i‡(
íc°r
)

895 
	`‰ì
(
íc°r
);

896  
ªtvÆ
;

897 
îr
:

898 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cprintf");

899 
d⁄e
;

900 
	}
}

912 
	$√tc⁄f_mÆf‹med_mesßge_xml
(
cxobj
 **
xªt
,

913 *
mesßge
)

915 
ªtvÆ
 =-1;

916 
cxobj
 *
xîr
;

918 i‡(*
xªt
 =
NULL
){

919 i‡((*
xªt
 = 
	`xml_√w
("Ωc-ª∂y", 
NULL
, NULL)) == NULL)

920 
d⁄e
;

922 i‡(
	`xml_«me_£t
(*
xªt
, "rpc-reply") < 0)

923 
d⁄e
;

924 i‡((
xîr
 = 
	`xml_√w
("Ωc-îr‹", *
xªt
, 
NULL
)) == NULL)

925 
d⁄e
;

926 i‡(
	`xml_∑r£_va
(&
xîr
, 
NULL
, "<error-tag>malformed-message</error-tag>"

929 
d⁄e
;

930 i‡(
mesßge
 && 
	`xml_∑r£_va
(&
xîr
, 
NULL
, "<error-message>%s</error-message>",

931 
mesßge
) < 0)

932 
d⁄e
;

933 
ªtvÆ
 = 0;

934 
d⁄e
:

935  
ªtvÆ
;

936 
	}
}

	@clixon-master/lib/src/clixon_options.c

39 #ifde‡
HAVE_CONFIG_H


40 
	~"˛ix⁄_c⁄fig.h
"

43 
	~<°dio.h
>

44 
	~<°rög.h
>

45 
	~<f˙é.h
>

46 
	~<uni°d.h
>

47 
	~<î∫o.h
>

48 
	~<°dlib.h
>

49 
	~<°döt.h
>

50 
	~<sy¶og.h
>

51 
	~<sys/ty≥s.h
>

52 
	~<sys/°©.h
>

53 
	~<sys/∑øm.h
>

54 
	~<sys/sockë.h
>

57 
	~<˛igí/˛igí.h
>

60 
	~"˛ix⁄_îr.h
"

61 
	~"˛ix⁄_°rög.h
"

62 
	~"˛ix⁄_queue.h
"

63 
	~"˛ix⁄_hash.h
"

64 
	~"˛ix⁄_h™dÀ.h
"

65 
	~"˛ix⁄_log.h
"

66 
	~"˛ix⁄_y™g.h
"

67 
	~"˛ix⁄_›ti⁄s.h
"

68 
	~"˛ix⁄_xml.h
"

69 
	~"˛ix⁄_∂ugö.h
"

70 
	~"˛ix⁄_x¶.h
"

71 
	~"˛ix⁄_xml_m≠.h
"

75 c⁄° 
m≠_°r2öt
 
	g°¨tup_mode_m≠
[] = {

76 {"n⁄e", 
SM_NONE
},

77 {"ru¬ög", 
SM_RUNNING
},

78 {"°¨tup", 
SM_STARTUP
},

79 {"öô", 
SM_INIT
},

80 {
NULL
, -1}

86 
	$˛ic⁄_›ti⁄_dump
(
˛ic⁄_h™dÀ
 
h
,

87 
dbgÀvñ
)

89 
˛ic⁄_hash_t
 *
hash
 = 
	`˛ic⁄_›ti⁄s
(
h
);

90 
i
;

91 **
keys
;

92 *
vÆ
;

93 
size_t
 
kÀn
;

94 
size_t
 
vÀn
;

96 i‡(
hash
 =
NULL
)

98 
keys
 = 
	`hash_keys
(
hash
, &
kÀn
);

99 i‡(
keys
 =
NULL
)

102 
i
 = 0; i < 
kÀn
; i++) {

103 
vÆ
 = 
	`hash_vÆue
(
hash
, 
keys
[
i
], &
vÀn
);

104 i‡(
vÀn
){

105 i‡(((*)
vÆ
)[
vÀn
-1]=='\0')

106 
	`˛ic⁄_debug
(
dbgÀvñ
, "%†=\à\"%s\"", 
keys
[
i
], (*)
vÆ
);

108 
	`˛ic⁄_debug
(
dbgÀvñ
, "%†=\à0x%∞,Üígth %zu", 
keys
[
i
], 
vÆ
, 
vÀn
);

111 
	`˛ic⁄_debug
(
dbgÀvñ
, "%†NULL", 
keys
[
i
]);

113 
	`‰ì
(
keys
);

115 
	}
}

121 
	$˛ic⁄_›ti⁄_ªadfûe_xml
(
˛ic⁄_hash_t
 *
c›t
,

122 c⁄° *
fûíame
,

123 
y™g_•ec
 *
y•ec
)

125 
°©
 
°
;

126 
FILE
 *
f
 = 
NULL
;

127 
ªtvÆ
 = -1;

128 
fd
;

129 
cxobj
 *
xt
 = 
NULL
;

130 
cxobj
 *
xc
 = 
NULL
;

131 
cxobj
 *
x
 = 
NULL
;

132 *
«me
;

133 *
body
;

135 i‡(
fûíame
 =
NULL
 || !
	`°æí
(filename)){

136 
	`˛ic⁄_îr
(
OE_UNIX
, 0, "Not specified");

137 
d⁄e
;

139 i‡(
	`°©
(
fûíame
, &
°
) < 0){

140 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "%s", 
fûíame
);

141 
d⁄e
;

143 i‡(!
	`S_ISREG
(
°
.
°_mode
)){

144 
	`˛ic⁄_îr
(
OE_UNIX
, 0, "%†i†nŸáÑeguœ∏fûe", 
fûíame
);

145 
d⁄e
;

147 i‡((
f
 = 
	`f›í
(
fûíame
, "r")Ë=
NULL
) {

148 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "c⁄figuª fûe: %s", 
fûíame
);

151 
	`˛ic⁄_debug
(2, "Ródög c⁄fig fûê%s", 
__FUNCTION__
, 
fûíame
);

152 
fd
 = 
	`fûío
(
f
);

153 i‡(
	`xml_∑r£_fûe
(
fd
, "</˛ic⁄>", 
y•ec
, &
xt
) < 0)

154 
d⁄e
;

155 i‡(
	`xml_chûd_ƒ
(
xt
)==1 && 
	`xml_chûd_ƒ_ty≥
(xt, 
CX_BODY
)==1){

156 
	`˛ic⁄_îr
(
OE_CFG
, 0, "C⁄fig fûê%s: Ex≥˘ed XML buài†¥obably old sh styÀ", 
fûíame
);

157 
d⁄e
;

159 i‡((
xc
 = 
	`x∑th_fú°
(
xt
, "c⁄fig")Ë=
NULL
) {

160 
	`˛ic⁄_îr
(
OE_CFG
, 0, "C⁄fig fûê%s: Lack†t›-Àvñ \"c⁄fig\"ÉÀmít", 
fûíame
);

161 
d⁄e
;

163 i‡(
	`xml_≠∂y0
(
xc
, 
CX_ELMNT
, 
xml_deÁu…
, 
y•ec
) < 0)

164 
d⁄e
;

165 i‡(
	`xml_≠∂y0
(
xc
, 
CX_ELMNT
, 
xml_y™g_vÆid©e_add
, 
NULL
) < 0)

166 
d⁄e
;

167 (
x
 = 
	`xml_chûd_óch
(
xc
, x, 
CX_ELMNT
)Ë!
NULL
) {

168 
«me
 = 
	`xml_«me
(
x
);

169 
body
 = 
	`xml_body
(
x
);

170 i‡(
«me
 && 
body
 &&

171 (
	`hash_add
(
c›t
,

172 
«me
,

173 
body
,

174 
	`°æí
(
body
)+1)Ë=
NULL
)

175 
d⁄e
;

177 
ªtvÆ
 = 0;

178 
d⁄e
:

179 i‡(
xt
)

180 
	`xml_‰ì
(
xt
);

181 i‡(
f
)

182 
	`f˛o£
(
f
);

183  
ªtvÆ
;

184 
	}
}

192 
	$˛ic⁄_›ti⁄s_maö
(
˛ic⁄_h™dÀ
 
h
)

194 
ªtvÆ
 = -1;

195 *
c⁄figfûe
;

196 
˛ic⁄_hash_t
 *
c›t
 = 
	`˛ic⁄_›ti⁄s
(
h
);

197 *
suffix
;

198 
xml
 = 0;

199 
y™g_•ec
 *
y•ec
 = 
NULL
;

204 i‡(!
	`hash_lookup
(
c›t
, "CLICON_CONFIGFILE")){

205 
	`˛ic⁄_›ti⁄_°r_£t
(
h
, "CLICON_CONFIGFILE", 
CLIXON_DEFAULT_CONFIG
);

207 
c⁄figfûe
 = 
	`hash_vÆue
(
c›t
, "CLICON_CONFIGFILE", 
NULL
);

208 
	`˛ic⁄_debug
(1, "CLICON_CONFIGFILE=%s", 
c⁄figfûe
);

210 i‡((
suffix
 = 
	`rödex
(
c⁄figfûe
, '.')Ë!
NULL
){

211 
suffix
++;

212 
xml
 = 
	`°rcmp
(
suffix
, "xml") == 0;

214 i‡(
xml
){

215 i‡((
y•ec
 = 
	`y•ec_√w
()Ë=
NULL
)

216 
d⁄e
;

217 i‡(
	`y™g_∑r£
(
h
, 
CLIXON_DATADIR
, "˛ix⁄-c⁄fig", 
NULL
, 
y•ec
) < 0)

218 
d⁄e
;

220 i‡(
	`˛ic⁄_›ti⁄_ªadfûe_xml
(
c›t
, 
c⁄figfûe
, 
y•ec
) < 0)

221 
d⁄e
;

223 i‡(
	`˛ic⁄_›ti⁄_boﬁ
(
h
, "CLICON_XML_SORT") == 1)

224 
xml_chûd_s‹t
 = 1;

226 
xml_chûd_s‹t
 = 0;

229 
	`˛ic⁄_îr
(
OE_CFG
, 0, "%s: suffix %†nŸÑecognized (Ru¿./c⁄figuª --wôh-c⁄fig-com∑t?)", 
c⁄figfûe
, 
suffix
);

230 
d⁄e
;

232 
ªtvÆ
 = 0;

233 
d⁄e
:

234 i‡(
y•ec
)

235 
	`y•ec_‰ì
(
y•ec
);

237  
ªtvÆ
;

238 
	}
}

246 
	$˛ic⁄_›ti⁄_exi°s
(
˛ic⁄_h™dÀ
 
h
,

247 c⁄° *
«me
)

249 
˛ic⁄_hash_t
 *
c›t
 = 
	`˛ic⁄_›ti⁄s
(
h
);

251  (
	`hash_lookup
(
c›t
, (*)
«me
Ë!
NULL
);

252 
	}
}

265 
	$˛ic⁄_›ti⁄_°r
(
˛ic⁄_h™dÀ
 
h
,

266 c⁄° *
«me
)

268 
˛ic⁄_hash_t
 *
c›t
 = 
	`˛ic⁄_›ti⁄s
(
h
);

270 i‡(
	`hash_lookup
(
c›t
, (*)
«me
Ë=
NULL
)

271  
NULL
;

272  
	`hash_vÆue
(
c›t
, (*)
«me
, 
NULL
);

273 
	}
}

281 
	$˛ic⁄_›ti⁄_°r_£t
(
˛ic⁄_h™dÀ
 
h
,

282 c⁄° *
«me
,

283 *
vÆ
)

285 
˛ic⁄_hash_t
 *
c›t
 = 
	`˛ic⁄_›ti⁄s
(
h
);

287  
	`hash_add
(
c›t
, (*)
«me
, 
vÆ
, 
	`°æí
(vÆ)+1)==
NULL
?-1:0;

288 
	}
}

307 
	$˛ic⁄_›ti⁄_öt
(
˛ic⁄_h™dÀ
 
h
,

308 c⁄° *
«me
)

310 *
s
;

312 i‡((
s
 = 
	`˛ic⁄_›ti⁄_°r
(
h
, 
«me
)Ë=
NULL
)

314  
	`©oi
(
s
);

315 
	}
}

320 
	$˛ic⁄_›ti⁄_öt_£t
(
˛ic⁄_h™dÀ
 
h
,

321 c⁄° *
«me
,

322 
vÆ
)

324 
s
[64];

326 i‡(
	`¢¥ötf
(
s
, (s)-1, "%u", 
vÆ
) < 0)

328  
	`˛ic⁄_›ti⁄_°r_£t
(
h
, 
«me
, 
s
);

329 
	}
}

348 
	$˛ic⁄_›ti⁄_boﬁ
(
˛ic⁄_h™dÀ
 
h
,

349 c⁄° *
«me
)

351 *
s
;

353 i‡((
s
 = 
	`˛ic⁄_›ti⁄_°r
(
h
, 
«me
)Ë=
NULL
)

355 i‡(
	`°rcmp
(
s
,"true")==0)

358 
	}
}

363 
	$˛ic⁄_›ti⁄_boﬁ_£t
(
˛ic⁄_h™dÀ
 
h
,

364 c⁄° *
«me
,

365 
vÆ
)

367 
s
[64];

369 i‡(
	`¢¥ötf
(
s
, (s)-1, "%u", 
vÆ
) < 0)

371  
	`˛ic⁄_›ti⁄_°r_£t
(
h
, 
«me
, 
s
);

372 
	}
}

377 
	$˛ic⁄_›ti⁄_dñ
(
˛ic⁄_h™dÀ
 
h
,

378 c⁄° *
«me
)

380 
˛ic⁄_hash_t
 *
c›t
 = 
	`˛ic⁄_›ti⁄s
(
h
);

382  
	`hash_dñ
(
c›t
, (*)
«me
);

383 
	}
}

400 
	$˛ic⁄_˛i_gímodñ
(
˛ic⁄_h™dÀ
 
h
)

402 c⁄° *
›t
 = "CLICON_CLI_GENMODEL";

404 i‡(
	`˛ic⁄_›ti⁄_exi°s
(
h
, 
›t
))

405  
	`˛ic⁄_›ti⁄_öt
(
h
, 
›t
);

408 
	}
}

414 
	$˛ic⁄_˛i_gímodñ_com∂ëi⁄
(
˛ic⁄_h™dÀ
 
h
)

416 c⁄° *
›t
 = "CLICON_CLI_GENMODEL_COMPLETION";

418 i‡(
	`˛ic⁄_›ti⁄_exi°s
(
h
, 
›t
))

419  
	`˛ic⁄_›ti⁄_öt
(
h
, 
›t
);

422 
	}
}

427 
gímodñ_ty≥


428 
	$˛ic⁄_˛i_gímodñ_ty≥
(
˛ic⁄_h™dÀ
 
h
)

430 *
s
;

431 
gímodñ_ty≥
 
gt
 = 
GT_ERR
;

433 i‡(!
	`˛ic⁄_›ti⁄_exi°s
(
h
, "CLICON_CLI_GENMODEL_TYPE")){

434 
gt
 = 
GT_VARS
;

435 
d⁄e
;

437 
s
 = 
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_CLI_GENMODEL_TYPE");

438 i‡(
	`°rcmp
(
s
, "NONE")==0)

439 
gt
 = 
GT_NONE
;

441 i‡(
	`°rcmp
(
s
, "VARS")==0)

442 
gt
 = 
GT_VARS
;

444 i‡(
	`°rcmp
(
s
, "ALL")==0)

445 
gt
 = 
GT_ALL
;

446 
d⁄e
:

447  
gt
;

448 
	}
}

454 
	$˛ic⁄_˛i_v¨⁄ly
(
˛ic⁄_h™dÀ
 
h
)

456 c⁄° *
›t
 = "CLICON_CLI_VARONLY";

458 i‡(
	`˛ic⁄_›ti⁄_exi°s
(
h
, 
›t
))

459  
	`˛ic⁄_›ti⁄_öt
(
h
, 
›t
);

462 
	}
}

468 
	$˛ic⁄_sock_Ámûy
(
˛ic⁄_h™dÀ
 
h
)

470 *
s
;

472 i‡((
s
 = 
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_SOCK_FAMILY")Ë=
NULL
)

473  
AF_UNIX
;

474 i‡(
	`°rcmp
(
s
, "IPv4")==0)

475  
AF_INET
;

476 i‡(
	`°rcmp
(
s
, "IPv6")==0)

477  
AF_INET6
;

479  
AF_UNIX
;

480 
	}
}

486 
	$˛ic⁄_sock_p‹t
(
˛ic⁄_h™dÀ
 
h
)

488 *
s
;

490 i‡((
s
 = 
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_SOCK_PORT")Ë=
NULL
)

492  
	`©oi
(
s
);

493 
	}
}

498 
	$˛ic⁄_autocommô
(
˛ic⁄_h™dÀ
 
h
)

500 c⁄° *
›t
 = "CLICON_AUTOCOMMIT";

502 i‡(
	`˛ic⁄_›ti⁄_exi°s
(
h
, 
›t
))

503  
	`˛ic⁄_›ti⁄_öt
(
h
, 
›t
);

506 
	}
}

511 
	$˛ic⁄_°¨tup_mode
(
˛ic⁄_h™dÀ
 
h
)

513 *
mode
;

514 i‡((
mode
 = 
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_STARTUP_MODE")Ë=
NULL
)

516  
	`˛ic⁄_°r2öt
(
°¨tup_mode_m≠
, 
mode
);

517 
	}
}

527 
	$˛ic⁄_quõt_mode
(
˛ic⁄_h™dÀ
 
h
)

529 *
s
;

530 i‡((
s
 = 
	`˛ic⁄_›ti⁄_°r
(
h
, "CLICON_QUIET")Ë=
NULL
)

532  
	`©oi
(
s
);

533 
	}
}

535 
	$˛ic⁄_quõt_mode_£t
(
˛ic⁄_h™dÀ
 
h
, 
vÆ
)

537  
	`˛ic⁄_›ti⁄_öt_£t
(
h
, "CLICON_QUIET", 
vÆ
);

538 
	}
}

543 
y™g_•ec
 *

544 
	$˛ic⁄_db•ec_y™g
(
˛ic⁄_h™dÀ
 
h
)

546 
˛ic⁄_hash_t
 *
cd©
 = 
	`˛ic⁄_d©a
(
h
);

547 
size_t
 
Àn
;

548 *
p
;

550 i‡((
p
 = 
	`hash_vÆue
(
cd©
, "db•ec_y™g", &
Àn
)Ë!
NULL
)

551  *(
y™g_•ec
 **)
p
;

552  
NULL
;

553 
	}
}

559 
	$˛ic⁄_db•ec_y™g_£t
(
˛ic⁄_h™dÀ
 
h
,

560 
y™g_•ec
 *
ys
)

562 
˛ic⁄_hash_t
 *
cd©
 = 
	`˛ic⁄_d©a
(
h
);

567 i‡(
	`hash_add
(
cd©
, "db•ec_y™g", &
ys
, (ys)Ë=
NULL
)

570 
	}
}

575 
y™g_•ec
 *

576 
	$˛ic⁄_√tc⁄f_y™g
(
˛ic⁄_h™dÀ
 
h
)

578 
˛ic⁄_hash_t
 *
cd©
 = 
	`˛ic⁄_d©a
(
h
);

579 
size_t
 
Àn
;

580 *
p
;

582 i‡((
p
 = 
	`hash_vÆue
(
cd©
, "√tc⁄f_y™g", &
Àn
)Ë!
NULL
)

583  *(
y™g_•ec
 **)
p
;

584  
NULL
;

585 
	}
}

591 
	$˛ic⁄_√tc⁄f_y™g_£t
(
˛ic⁄_h™dÀ
 
h
,

592 
y™g_•ec
 *
ys
)

594 
˛ic⁄_hash_t
 *
cd©
 = 
	`˛ic⁄_d©a
(
h
);

599 i‡(
	`hash_add
(
cd©
, "√tc⁄f_y™g", &
ys
, (ys)Ë=
NULL
)

602 
	}
}

609 
	$˛ic⁄_db•ec_«me
(
˛ic⁄_h™dÀ
 
h
)

611 i‡(!
	`˛ic⁄_›ti⁄_exi°s
(
h
, "dbspec_name"))

612  
NULL
;

613  
	`˛ic⁄_›ti⁄_°r
(
h
, "dbspec_name");

614 
	}
}

619 
	$˛ic⁄_db•ec_«me_£t
(
˛ic⁄_h™dÀ
 
h
, *
«me
)

621  
	`˛ic⁄_›ti⁄_°r_£t
(
h
, "db•ec_«me", 
«me
);

622 
	}
}

625 
∂ghndl_t


626 
	$˛ic⁄_xmldb_∂ugö_gë
(
˛ic⁄_h™dÀ
 
h
)

628 
˛ic⁄_hash_t
 *
cd©
 = 
	`˛ic⁄_d©a
(
h
);

629 
size_t
 
Àn
;

630 *
p
;

632 i‡((
p
 = 
	`hash_vÆue
(
cd©
, "xmldb_∂ugö", &
Àn
)Ë!
NULL
)

633  *(
∂ghndl_t
*)
p
;

634  
NULL
;

635 
	}
}

639 
	$˛ic⁄_xmldb_∂ugö_£t
(
˛ic⁄_h™dÀ
 
h
,

640 
∂ghndl_t
 
h™dÀ
)

642 
˛ic⁄_hash_t
 *
cd©
 = 
	`˛ic⁄_d©a
(
h
);

644 i‡(
	`hash_add
(
cd©
, "xmldb_∂ugö", &
h™dÀ
, (*)Ë=
NULL
)

647 
	}
}

655 
	$˛ic⁄_xmldb_≠i_gë
(
˛ic⁄_h™dÀ
 
h
)

657 
˛ic⁄_hash_t
 *
cd©
 = 
	`˛ic⁄_d©a
(
h
);

658 
size_t
 
Àn
;

659 *
xa
;

661 i‡((
xa
 = 
	`hash_vÆue
(
cd©
, "xmldb_≠i", &
Àn
)Ë!
NULL
)

662  *(**)
xa
;

663  
NULL
;

664 
	}
}

672 
	$˛ic⁄_xmldb_≠i_£t
(
˛ic⁄_h™dÀ
 
h
,

673 *
xa
)

675 
˛ic⁄_hash_t
 *
cd©
 = 
	`˛ic⁄_d©a
(
h
);

680 i‡(
	`hash_add
(
cd©
, "xmldb_≠i", &
xa
, (*)Ë=
NULL
)

683 
	}
}

690 
	$˛ic⁄_xmldb_h™dÀ_gë
(
˛ic⁄_h™dÀ
 
h
)

692 
˛ic⁄_hash_t
 *
cd©
 = 
	`˛ic⁄_d©a
(
h
);

693 
size_t
 
Àn
;

694 *
xh
;

696 i‡((
xh
 = 
	`hash_vÆue
(
cd©
, "xmldb_h™dÀ", &
Àn
)Ë!
NULL
)

697  *(**)
xh
;

698  
NULL
;

699 
	}
}

707 
	$˛ic⁄_xmldb_h™dÀ_£t
(
˛ic⁄_h™dÀ
 
h
,

708 *
xh
)

710 
˛ic⁄_hash_t
 *
cd©
 = 
	`˛ic⁄_d©a
(
h
);

712 i‡(
	`hash_add
(
cd©
, "xmldb_h™dÀ", &
xh
, (*)Ë=
NULL
)

715 
	}
}

723 
	$˛ic⁄_u£∫ame_gë
(
˛ic⁄_h™dÀ
 
h
)

725 
˛ic⁄_hash_t
 *
cd©
 = 
	`˛ic⁄_d©a
(
h
);

727  (*)
	`hash_vÆue
(
cd©
, "u£∫ame", 
NULL
);

728 
	}
}

736 
	$˛ic⁄_u£∫ame_£t
(
˛ic⁄_h™dÀ
 
h
,

737 *
u£∫ame
)

739 
˛ic⁄_hash_t
 *
cd©
 = 
	`˛ic⁄_d©a
(
h
);

741 i‡(
u£∫ame
 =
NULL
)

742  
	`hash_dñ
(
cd©
, "username");

743  
	`hash_add
(
cd©
, "u£∫ame", 
u£∫ame
, 
	`°æí
(u£∫ame)+1)==
NULL
?-1:0;

744 
	}
}

	@clixon-master/lib/src/clixon_plugin.c

35 #ifde‡
HAVE_CONFIG_H


36 
	~"˛ix⁄_c⁄fig.h
"

39 
	~<°dio.h
>

40 
	~<°dlib.h
>

41 
	~<°döt.h
>

42 
	~<°rög.h
>

43 
	~<î∫o.h
>

44 
	~<dlf˙.h
>

45 
	~<dúít.h
>

47 
	~<sys/°©.h
>

48 
	~<sys/∑øm.h
>

51 
	~<˛igí/˛igí.h
>

53 
	~"˛ix⁄_îr.h
"

54 
	~"˛ix⁄_queue.h
"

55 
	~"˛ix⁄_hash.h
"

56 
	~"˛ix⁄_log.h
"

57 
	~"˛ix⁄_fûe.h
"

58 
	~"˛ix⁄_h™dÀ.h
"

59 
	~"˛ix⁄_y™g.h
"

60 
	~"˛ix⁄_xml.h
"

61 
	~"˛ix⁄_∂ugö.h
"

67 
˛ix⁄_∂ugö
 *
	g_˛ix⁄_∂ugös
 = 
NULL
;

68 
	g_˛ix⁄_≈lugös
 = 0;

85 
˛ix⁄_∂ugö
 *

86 
	$˛ix⁄_∂ugö_óch
(
˛ic⁄_h™dÀ
 
h
,

87 
˛ix⁄_∂ugö
 *
˝¥ev
)

89 
i
;

90 
˛ix⁄_∂ugö
 *
˝
;

91 
˛ix⁄_∂ugö
 *
˝√xt
 = 
NULL
;

93 i‡(
˝¥ev
 =
NULL
)

94 
˝√xt
 = 
_˛ix⁄_∂ugös
;

96 
i
 = 0; i < 
_˛ix⁄_≈lugös
; i++) {

97 
˝
 = &
_˛ix⁄_∂ugös
[
i
];

98 i‡(
˝
 =
˝¥ev
)

100 
˝
 = 
NULL
;

102 i‡(
˝
 && 
i
 < 
_˛ix⁄_≈lugös
-1)

103 
˝√xt
 = &
_˛ix⁄_∂ugös
[
i
+1];

105  
˝√xt
;

106 
	}
}

123 
˛ix⁄_∂ugö
 *

124 
	$˛ix⁄_∂ugö_óch_ªvît
(
˛ic⁄_h™dÀ
 
h
,

125 
˛ix⁄_∂ugö
 *
˝¥ev
,

126 
ƒ
)

128 
i
;

129 
˛ix⁄_∂ugö
 *
˝
;

130 
˛ix⁄_∂ugö
 *
˝√xt
 = 
NULL
;

132 i‡(
˝¥ev
 =
NULL
)

133 
˝√xt
 = &
_˛ix⁄_∂ugös
[
ƒ
-1];

135 
i
 = 
ƒ
-1; i >= 0; i--) {

136 
˝
 = &
_˛ix⁄_∂ugös
[
i
];

137 i‡(
˝
 =
˝¥ev
)

139 
˝
 = 
NULL
;

141 i‡(
˝
 && 
i
 > 0)

142 
˝√xt
 = &
_˛ix⁄_∂ugös
[
i
-1];

144  
˝√xt
;

145 
	}
}

153 
˛ix⁄_∂ugö
 *

154 
	$˛ix⁄_∂ugö_föd
(
˛ic⁄_h™dÀ
 
h
,

155 *
«me
)

157 
i
;

158 
˛ix⁄_∂ugö
 *
˝
 = 
NULL
;

160 
i
 = 0; i < 
_˛ix⁄_≈lugös
; i++) {

161 
˝
 = &
_˛ix⁄_∂ugös
[
i
];

162 i‡(
	`°rcmp
(
˝
->
˝_«me
, 
«me
) == 0)

163  
˝
;

165  
NULL
;

166 
	}
}

177 
˛ix⁄_∂ugö
 *

178 
	$∂ugö_lﬂd_⁄e
(
˛ic⁄_h™dÀ
 
h
,

179 *
fûe
,

180 *
fun˘i⁄
,

181 
dlÊags
)

183 *
îr‹
;

184 *
h™dÀ
 = 
NULL
;

185 
∂göô2_t
 *
öô‚
;

186 
˛ix⁄_∂ugö_≠i
 *
≠i
 = 
NULL
;

187 
˛ix⁄_∂ugö
 *
˝
 = 
NULL
;

188 *
«me
;

189 *
p
;

191 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

192 
	`dÀº‹
();

193 i‡((
h™dÀ
 = 
	`dl›í
(
fûe
, 
dlÊags
)Ë=
NULL
) {

194 
îr‹
 = (*)
	`dÀº‹
();

195 
	`˛ic⁄_îr
(
OE_PLUGIN
, 
î∫o
, "dl›í: %s\n", 
îr‹
 ?Érror : "UnknownÉrror");

196 
d⁄e
;

199 i‡((
öô‚
 = 
	`dlsym
(
h™dÀ
, 
fun˘i⁄
)Ë=
NULL
){

200 
	`˛ic⁄_îr
(
OE_PLUGIN
, 
î∫o
, "FaûedÅÿföd %†whíÜﬂdög clix⁄Ölugö %s", 
CLIXON_PLUGIN_INIT
, 
fûe
);

201 
îr
;

203 i‡((
îr‹
 = (*)
	`dÀº‹
()Ë!
NULL
) {

204 
	`˛ic⁄_îr
(
OE_UNIX
, 0, "dlsym: %s: %s", 
fûe
, 
îr‹
);

205 
d⁄e
;

207 i‡((
≠i
 = 
	`öô‚
(
h
)Ë=
NULL
) {

208 
	`˛ic⁄_îr
(
OE_PLUGIN
, 
î∫o
, "FaûedÅÿöôüã %s", 
	`°ºchr
(
fûe
,'/')?
	`°rchr
(file, '/'):file);

209 i‡(!
˛ic⁄_î∫o
)

210 
	`˛ic⁄_îr
(
OE_DB
, 0, "UnknownÉrror: %s:Ölugin_init doesÇot make clicon_err call onÉrror",

211 
fûe
);

212 
îr
;

215 i‡((
˝
 = (
˛ix⁄_∂ugö
 *)
	`mÆloc
((˛ix⁄_∂ugö))Ë=
NULL
){

216 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "malloc");

217 
d⁄e
;

219 
	`mem£t
(
˝
, 0, (
˛ix⁄_∂ugö
));

220 
˝
->
˝_h™dÀ
 = 
h™dÀ
;

222 
«me
 = 
	`°ºchr
(
fûe
, '/') ? strrchr(file, '/')+1 : file;

224 i‡((
p
=
	`°ºchr
(
«me
, '.')Ë!
NULL
)

225 *
p
 = '\0';

227 
	`mem˝y
(
˝
->
˝_«me
, 
«me
, 
	`°æí
(name)+1);

229 
	`¢¥ötf
(
˝
->
˝_«me
, (cp->cp_name), "%*s",

230 ()
	`°æí
(
«me
),Çame);

231 
˝
->
˝_≠i
 = *
≠i
;

232 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

233 
d⁄e
:

234  
˝
;

235 
îr
:

236 i‡(
h™dÀ
)

237 
	`dl˛o£
(
h™dÀ
);

238  
NULL
;

239 
	}
}

250 
	$˛ix⁄_∂ugös_lﬂd
(
˛ic⁄_h™dÀ
 
h
,

251 *
fun˘i⁄
,

252 *
dú
,

253 *
ªgexp
)

255 
ªtvÆ
 = -1;

256 
ndp
;

257 
dúít
 *
dp
 = 
NULL
;

258 
i
;

259 
fûíame
[
MAXPATHLEN
];

260 
˛ix⁄_∂ugö
 *
˝
;

262 
	`˛ic⁄_debug
(1, "%s", 
__FUNCTION__
);

264 if((
ndp
 = 
	`˛ic⁄_fûe_dúít
(
dú
, &
dp
,

265 
ªgexp
?ªgexp:"(.so)$", 
S_IFREG
))<0)

266 
d⁄e
;

268 
i
 = 0; i < 
ndp
; i++) {

269 
	`¢¥ötf
(
fûíame
, 
MAXPATHLEN
-1, "%s/%s", 
dú
, 
dp
[
i
].
d_«me
);

270 
	`˛ic⁄_debug
(1, "DEBUG: LoadingÖlugin '%.*s' ...",

271 ()
	`°æí
(
fûíame
), filename);

272 i‡((
˝
 = 
	`∂ugö_lﬂd_⁄e
(
h
, 
fûíame
, 
fun˘i⁄
, 
RTLD_NOW
)Ë=
NULL
)

273 
d⁄e
;

274 
_˛ix⁄_≈lugös
++;

275 i‡((
_˛ix⁄_∂ugös
 = 
	`ªÆloc
(_˛ix⁄_∂ugös, 
_˛ix⁄_≈lugös
*(
˛ix⁄_∂ugö
))Ë=
NULL
) {

276 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "realloc");

277 
d⁄e
;

279 
_˛ix⁄_∂ugös
[
_˛ix⁄_≈lugös
-1] = *
˝
;

280 
	`‰ì
(
˝
);

282 
ªtvÆ
 = 0;

283 
d⁄e
:

284 i‡(
dp
)

285 
	`‰ì
(
dp
);

286  
ªtvÆ
;

287 
	}
}

303 
	$˛ix⁄_∂ugö_°¨t
(
˛ic⁄_h™dÀ
 
h
,

304 
¨gc
,

305 **
¨gv
)

307 
˛ix⁄_∂ugö
 *
˝
;

308 
i
;

309 
∂g°¨t_t
 *
°¨t‚
;

311 
i
 = 0; i < 
_˛ix⁄_≈lugös
; i++) {

312 
˝
 = &
_˛ix⁄_∂ugös
[
i
];

313 i‡((
°¨t‚
 = 
˝
->
˝_≠i
.
ˇ_°¨t
Ë=
NULL
)

316 i‡(
	`°¨t‚
(
h
, 
¨gc
, 
¨gv
) < 0) {

317 
	`˛ic⁄_debug
(1, "plugin_start() failed\n");

322 
	}
}

328 
	$˛ix⁄_∂ugö_exô
(
˛ic⁄_h™dÀ
 
h
)

330 
˛ix⁄_∂ugö
 *
˝
;

331 
∂gexô_t
 *
exô‚
;

332 
i
;

333 *
îr‹
;

335 
i
 = 0; i < 
_˛ix⁄_≈lugös
; i++) {

336 
˝
 = &
_˛ix⁄_∂ugös
[
i
];

337 i‡((
exô‚
 = 
˝
->
˝_≠i
.
ˇ_exô
Ë=
NULL
)

339 i‡(
	`exô‚
(
h
) < 0) {

340 
	`˛ic⁄_debug
(1, "plugin_exit() failed\n");

343 i‡(
	`dl˛o£
(
˝
->
˝_h™dÀ
) != 0) {

344 
îr‹
 = (*)
	`dÀº‹
();

345 
	`˛ic⁄_îr
(
OE_PLUGIN
, 
î∫o
, "dl˛o£: %s\n", 
îr‹
 ?Érror : "UnknownÉrror");

348 i‡(
_˛ix⁄_∂ugös
){

349 
	`‰ì
(
_˛ix⁄_∂ugös
);

350 
_˛ix⁄_∂ugös
 = 
NULL
;

352 
_˛ix⁄_≈lugös
 = 0;

354 
	}
}

369 
	$˛ix⁄_∂ugö_auth
(
˛ic⁄_h™dÀ
 
h
,

370 *
¨g
)

372 
˛ix⁄_∂ugö
 *
˝
;

373 
i
;

374 
∂gauth_t
 *
auth‚
;

375 
ªtvÆ
 = 1;

377 
i
 = 0; i < 
_˛ix⁄_≈lugös
; i++) {

378 
˝
 = &
_˛ix⁄_∂ugös
[
i
];

379 i‡((
auth‚
 = 
˝
->
˝_≠i
.
ˇ_auth
Ë=
NULL
)

381 i‡((
ªtvÆ
 = 
	`auth‚
(
h
, 
¨g
)) < 0) {

382 
	`˛ic⁄_debug
(1, "plugin_auth() failed\n");

387  
ªtvÆ
;

388 
	}
}

403 
qñem_t
 
	mrc_qñem
;

404 
˛ic⁄_Ωc_cb
 
	mrc_ˇŒback
;

405 *
	mrc_¨g
;

406 *
	mrc_èg
;

407 } 
	tΩc_ˇŒback_t
;

410 
Ωc_ˇŒback_t
 *
	gΩc_cb_li°
 = 
NULL
;

422 
	$Ωc_ˇŒback_ªgi°î
(
˛ic⁄_h™dÀ
 
h
,

423 
˛ic⁄_Ωc_cb
 
cb
,

424 *
¨g
,

425 *
èg
)

427 
Ωc_ˇŒback_t
 *
rc
;

429 i‡((
rc
 = 
	`mÆloc
((
Ωc_ˇŒback_t
))Ë=
NULL
) {

430 
	`˛ic⁄_îr
(
OE_DB
, 
î∫o
, "mÆloc: %s", 
	`°ªº‹
(errno));

431 
d⁄e
;

433 
	`mem£t
 (
rc
, 0,  (*rc));

434 
rc
->
rc_ˇŒback
 = 
cb
;

435 
rc
->
rc_¨g
 = 
¨g
;

436 
rc
->
rc_èg
 = 
	`°rdup
(
èg
);

437 
	`INSQ
(
rc
, 
Ωc_cb_li°
);

439 
d⁄e
:

440 i‡(
rc
){

441 i‡(
rc
->
rc_èg
)

442 
	`‰ì
(
rc
->
rc_èg
);

443 
	`‰ì
(
rc
);

446 
	}
}

451 
	$Ωc_ˇŒback_dñëe_Æl
()

453 
Ωc_ˇŒback_t
 *
rc
;

455 (
rc
 = 
Ωc_cb_li°
Ë!
NULL
) {

456 
	`DELQ
(
rc
, 
Ωc_cb_li°
, 
Ωc_ˇŒback_t
 *);

457 i‡(
rc
->
rc_èg
)

458 
	`‰ì
(
rc
->
rc_èg
);

459 
	`‰ì
(
rc
);

462 
	}
}

476 
	$Ωc_ˇŒback_ˇŒ
(
˛ic⁄_h™dÀ
 
h
,

477 
cxobj
 *
xe
,

478 
cbuf
 *
cbªt
,

479 *
¨g
)

481 
ªtvÆ
 = -1;

482 
Ωc_ˇŒback_t
 *
rc
;

484 i‡(
Ωc_cb_li°
 =
NULL
)

486 
rc
 = 
Ωc_cb_li°
;

488 i‡(
	`°rcmp
(
rc
->
rc_èg
, 
	`xml_«me
(
xe
)) == 0){

489 i‡((
ªtvÆ
 = 
rc
->
	`rc_ˇŒback
(
h
, 
xe
, 
cbªt
, 
¨g
,Ñc->
rc_¨g
)) < 0){

490 
	`˛ic⁄_debug
(1, "%†Eº‹ in: %s", 
__FUNCTION__
, 
rc
->
rc_èg
);

491 
d⁄e
;

494 
ªtvÆ
 = 1;

495 
d⁄e
;

498 
rc
 = 
	`NEXTQ
(
Ωc_ˇŒback_t
 *,Ñc);

499 } 
rc
 !
Ωc_cb_li°
);

500 
ªtvÆ
 = 0;

501 
d⁄e
:

502 
	`˛ic⁄_debug
(1, "%†ªtvÆ:%d", 
__FUNCTION__
, 
ªtvÆ
);

503  
ªtvÆ
;

504 
	}
}

	@clixon-master/lib/src/clixon_proto.c

39 #ifde‡
HAVE_CONFIG_H


40 
	~"˛ix⁄_c⁄fig.h
"

43 
	~<°dio.h
>

44 
	~<°dlib.h
>

45 
	~<°d¨g.h
>

46 
	~<f˙é.h
>

47 
	~<uni°d.h
>

48 
	~<î∫o.h
>

49 
	~<°rög.h
>

50 
	~<as£π.h
>

51 
	~<sy¶og.h
>

52 
	~<sig«l.h
>

53 
	~<˘y≥.h
>

54 
	~<sys/ty≥s.h
>

55 
	~<sys/time.h
>

56 
	~<sys/sockë.h
>

57 
	~<sys/°©.h
>

58 
	~<√töë/ö.h
>

59 
	~<sys/un.h
>

60 
	~<¨∑/öë.h
>

63 
	~<˛igí/˛igí.h
>

66 
	~"˛ix⁄_îr.h
"

67 
	~"˛ix⁄_log.h
"

68 
	~"˛ix⁄_queue.h
"

69 
	~"˛ix⁄_hash.h
"

70 
	~"˛ix⁄_h™dÀ.h
"

71 
	~"˛ix⁄_y™g.h
"

72 
	~"˛ix⁄_sig.h
"

73 
	~"˛ix⁄_xml.h
"

74 
	~"˛ix⁄_x¶.h
"

75 
	~"˛ix⁄_¥Ÿo.h
"

77 
	g_©omicio_sig
 = 0;

81 
	sf‹m©vec
{

82 *
	mfv_°r
;

83 
	mfv_öt
;

86 
f‹m©vec
 
	g_FORMATS
[] = {

87 {"xml", 
FORMAT_XML
},

88 {"ãxt", 
FORMAT_TEXT
},

89 {"js⁄", 
FORMAT_JSON
},

90 {"˛i", 
FORMAT_CLI
},

91 {"√tc⁄f", 
FORMAT_NETCONF
},

92 {
NULL
, -1}

100 
	$f‹m©_öt2°r
(
f‹m©_íum
 
showas
)

102 
f‹m©vec
 *
fv
;

104 
fv
=
_FORMATS
; fv->
fv_öt
 != -1; fv++)

105 i‡(
fv
->
fv_öt
 =
showas
)

107  
fv
?(fv->
fv_°r
?fv->fv_str:"unknown"):"unknown";

108 
	}
}

114 
f‹m©_íum


115 
	$f‹m©_°r2öt
(*
°r
)

117 
f‹m©vec
 *
fv
;

119 
fv
=
_FORMATS
; fv->
fv_öt
 != -1; fv++)

120 i‡(
	`°rcmp
(
fv
->
fv_°r
, 
°r
) == 0)

122  
fv
?fv->
fv_öt
:-1;

123 
	}
}

132 
˛ic⁄_msg
 *

133 
	$˛ic⁄_msg_ícode
(*
f‹m©
, ...)

135 
va_li°
 
¨gs
;

136 
uöt32_t
 
xmŒí
;

137 
uöt32_t
 
Àn
;

138 
˛ic⁄_msg
 *
msg
 = 
NULL
;

139 
hdæí
 = (*
msg
);

141 
	`va_°¨t
(
¨gs
, 
f‹m©
);

142 
xmŒí
 = 
	`v¢¥ötf
(
NULL
, 0, 
f‹m©
, 
¨gs
) + 1;

143 
	`va_íd
(
¨gs
);

145 
Àn
 = 
hdæí
 + 
xmŒí
;

146 i‡((
msg
 = (
˛ic⁄_msg
 *)
	`mÆloc
(
Àn
)Ë=
NULL
){

147 
	`˛ic⁄_îr
(
OE_PROTO
, 
î∫o
, "malloc");

148  
NULL
;

150 
	`mem£t
(
msg
, 0, 
Àn
);

152 
msg
->
›_Àn
 = 
	`ht⁄l
(
Àn
);

155 
	`va_°¨t
(
¨gs
, 
f‹m©
);

156 
	`v¢¥ötf
(
msg
->
›_body
, 
xmŒí
, 
f‹m©
, 
¨gs
);

157 
	`va_íd
(
¨gs
);

159  
msg
;

160 
	}
}

167 
	$˛ic⁄_msg_decode
(
˛ic⁄_msg
 *
msg
,

168 
cxobj
 **
xml
)

170 
ªtvÆ
 = -1;

171 *
xml°r
;

174 
xml°r
 = 
msg
->
›_body
;

175 
	`˛ic⁄_debug
(1, "%†%s", 
__FUNCTION__
, 
xml°r
);

176 i‡(
	`xml_∑r£_°rög
(
xml°r
, 
NULL
, 
xml
) < 0)

177 
d⁄e
;

178 
ªtvÆ
 = 0;

179 
d⁄e
:

180  
ªtvÆ
;

181 
	}
}

189 
	$˛ic⁄_c⁄√˘_unix
(*
sock∑th
)

191 
sockaddr_un
 
addr
;

192 
ªtvÆ
 = -1;

193 
s
;

195 i‡((
s
 = 
	`sockë
(
AF_UNIX
, 
SOCK_STREAM
, 0)) < 0) {

196 
	`˛ic⁄_îr
(
OE_CFG
, 
î∫o
, "socket");

199 
	`mem£t
(&
addr
, 0, (addr));

200 
addr
.
sun_Ámûy
 = 
AF_UNIX
;

201 
	`°∫˝y
(
addr
.
sun_∑th
, 
sock∑th
, (addr.sun_path)-1);

203 
	`˛ic⁄_debug
(2, "%s: c⁄√˘ögÅÿ%s", 
__FUNCTION__
, 
addr
.
sun_∑th
);

204 i‡(
	`c⁄√˘
(
s
, (
sockaddr
 *)&
addr
, 
	`SUN_LEN
(&addr)) < 0){

205 i‡(
î∫o
 =
EACCES
)

206 
	`˛ic⁄_îr
(
OE_CFG
, 
î∫o
, "connecting unix socket: %s.\n"

208 
sock∑th
);

210 
	`˛ic⁄_îr
(
OE_CFG
, 
î∫o
, "c⁄√˘ög unix sockë: %s", 
sock∑th
);

211 
	`˛o£
(
s
);

212 
d⁄e
;

214 
ªtvÆ
 = 
s
;

215 
d⁄e
:

216  
ªtvÆ
;

217 
	}
}

220 
	$©omicio_sig_h™dÀr
(
¨g
)

222 
_©omicio_sig
++;

223 
	}
}

231 
ssize_t


232 
	$©omicio
(
	$ssize_t
 (*
‚
Ë(, *, 
size_t
),

233 
fd
,

234 *
s0
,

235 
size_t
 
n
)

237 *
s
 = 
s0
;

238 
ssize_t
 
ªs
, 
pos
 = 0;

240 
n
 > 
pos
) {

241 
_©omicio_sig
 = 0;

242 
ªs
 = (
‚
)(
fd
, 
s
 + 
pos
, 
n
 -Öos);

243 
ªs
) {

245 i‡(
î∫o
 =
EINTR
){

246 i‡(!
_©omicio_sig
)

250 i‡(
î∫o
 =
EAGAIN
)

253  (
ªs
);

255 
pos
 +
ªs
;

258  (
pos
);

259 
	}
}

265 
	$msg_dump
(
˛ic⁄_msg
 *
msg
)

267 
i
;

268 
buf
[9*8];

269 
buf2
[9*8];

271 
	`mem£t
(
buf2
, 0, (buf2));

272 
	`¢¥ötf
(
buf2
, (buf2), "%s:", 
__FUNCTION__
);

273 
i
=0; i<
	`¡ohl
(
msg
->
›_Àn
); i++){

274 
	`¢¥ötf
(
buf
, (buf), "%s%02x", 
buf2
, ((*)
msg
)[
i
]&0xff);

275 i‡((
i
+1)%32==0){

276 
	`˛ic⁄_debug
(2, 
buf
);

277 
	`¢¥ötf
(
buf
, (buf), "%s:", 
__FUNCTION__
);

280 i‡((
i
+1)%4==0)

281 
	`¢¥ötf
(
buf
, (buf), "%†", 
buf2
);

282 
	`°∫˝y
(
buf2
, 
buf
, (buf2));

284 i‡(
i
%32)

285 
	`˛ic⁄_debug
(2, 
buf
);

287 
	}
}

294 
	$˛ic⁄_msg_£nd
(
s
,

295 
˛ic⁄_msg
 *
msg
)

297 
ªtvÆ
 = -1;

299 
	`˛ic⁄_debug
(2, "%s: send msgÜen=%d",

300 
__FUNCTION__
, 
	`¡ohl
(
msg
->
›_Àn
));

301 i‡(
debug
 > 2)

302 
	`msg_dump
(
msg
);

303 i‡(
	`©omicio
((
	`ssize_t
 (*)(, *, 
size_t
))
wrôe
,

304 
s
, 
msg
, 
	`¡ohl
(msg->
›_Àn
)) < 0){

305 
	`˛ic⁄_îr
(
OE_CFG
, 
î∫o
, "%s", 
__FUNCTION__
);

306 
	`˛ic⁄_log
(
LOG_WARNING
, "%s: wrôe: %†Àn:%u msg:%s", 
__FUNCTION__
,

307 
	`°ªº‹
(
î∫o
), 
	`¡ohs
(
msg
->
›_Àn
), msg->
›_body
);

308 
d⁄e
;

310 
ªtvÆ
 = 0;

311 
d⁄e
:

312  
ªtvÆ
;

313 
	}
}

331 
	$˛ic⁄_msg_rcv
(
s
,

332 
˛ic⁄_msg
 **
msg
,

333 *
eof
)

335 
ªtvÆ
 = -1;

336 
˛ic⁄_msg
 
hdr
;

337 
hÀn
;

338 
uöt32_t
 
Àn2
;

339 
sig‚_t
 
ﬁdh™dÀr
;

340 
uöt32_t
 
mÀn
;

342 *
eof
 = 0;

344 
	`£t_sig«l
(
SIGINT
, 
©omicio_sig_h™dÀr
, &
ﬁdh™dÀr
);

346 i‡((
hÀn
 = 
	`©omicio
(
ªad
, 
s
, &
hdr
, (hdr))) < 0){

347 
	`˛ic⁄_îr
(
OE_CFG
, 
î∫o
, "%s", 
__FUNCTION__
);

348 
d⁄e
;

350 i‡(
hÀn
 == 0){

351 
ªtvÆ
 = 0;

352 *
eof
 = 1;

353 
d⁄e
;

355 i‡(
hÀn
 !(
hdr
)){

356 
	`˛ic⁄_îr
(
OE_CFG
, 
î∫o
, "%s: hódîÅoÿsh‹à(%d)", 
__FUNCTION__
, 
hÀn
);

357 
d⁄e
;

359 
mÀn
 = 
	`¡ohl
(
hdr
.
›_Àn
);

360 
	`˛ic⁄_debug
(2, "%s:Ñcv msgÜen=%d",

361 
__FUNCTION__
, 
mÀn
);

362 i‡((*
msg
 = (
˛ic⁄_msg
 *)
	`mÆloc
(
mÀn
)Ë=
NULL
){

363 
	`˛ic⁄_îr
(
OE_CFG
, 
î∫o
, "malloc");

364 
d⁄e
;

366 
	`mem˝y
(*
msg
, &
hdr
, 
hÀn
);

367 i‡((
Àn2
 = 
	`©omicio
(
ªad
, 
s
, (*
msg
)->
›_body
, 
mÀn
 - (
hdr
))) < 0){

368 
	`˛ic⁄_îr
(
OE_CFG
, 
î∫o
, "%s:Ñód", 
__FUNCTION__
);

369 
d⁄e
;

371 i‡(
Àn2
 !
mÀn
 - (
hdr
)){

372 
	`˛ic⁄_îr
(
OE_CFG
, 
î∫o
, "%s: bodyÅoÿsh‹t", 
__FUNCTION__
);

373 
d⁄e
;

375 i‡(
debug
 > 1)

376 
	`msg_dump
(*
msg
);

377 
ªtvÆ
 = 0;

378 
d⁄e
:

380 
	`£t_sig«l
(
SIGINT
, 
ﬁdh™dÀr
, 
NULL
);

381  
ªtvÆ
;

382 
	}
}

395 
	$˛ic⁄_Ωc_c⁄√˘_unix
(
˛ic⁄_msg
 *
msg
,

396 *
sock∑th
,

397 **
ªtd©a
,

398 *
sock0
)

400 
ªtvÆ
 = -1;

401 
s
 = -1;

402 
°©
 
sb
;

404 
	`˛ic⁄_debug
(1, "Síd msg o¿%s", 
sock∑th
);

406 i‡(
	`°©
(
sock∑th
, &
sb
) < 0){

407 
	`˛ic⁄_îr
(
OE_PROTO
, 
î∫o
, "%s: c⁄fig d´m⁄ÇŸÑu¬ög?", 
sock∑th
);

408 
d⁄e
;

410 i‡(!
	`S_ISSOCK
(
sb
.
°_mode
)){

411 
	`˛ic⁄_îr
(
OE_PROTO
, 
EIO
, "%s: NŸ unix sockë", 
sock∑th
);

412 
d⁄e
;

414 i‡((
s
 = 
	`˛ic⁄_c⁄√˘_unix
(
sock∑th
)) < 0)

415 
d⁄e
;

416 i‡(
	`˛ic⁄_Ωc
(
s
, 
msg
, 
ªtd©a
) < 0)

417 
d⁄e
;

418 i‡(
sock0
 !
NULL
)

419 *
sock0
 = 
s
;

420 
ªtvÆ
 = 0;

421 
d⁄e
:

422 i‡(
sock0
 =
NULL
 && 
s
 >= 0)

423 
	`˛o£
(
s
);

424  
ªtvÆ
;

425 
	}
}

439 
	$˛ic⁄_Ωc_c⁄√˘_öë
(
˛ic⁄_msg
 *
msg
,

440 *
d°
,

441 
uöt16_t
 
p‹t
,

442 **
ªtd©a
,

443 *
sock0
)

445 
ªtvÆ
 = -1;

446 
s
 = -1;

447 
sockaddr_ö
 
addr
;

449 
	`˛ic⁄_debug
(1, "Síd msgÅÿ%s:%hu", 
d°
, 
p‹t
);

451 
	`mem£t
(&
addr
, 0, (addr));

452 
addr
.
sö_Ámûy
 = 
AF_INET
;

453 
addr
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

454 i‡(
	`öë_±⁄
(
addr
.
sö_Ámûy
, 
d°
, &addr.
sö_addr
) != 1)

455 
d⁄e
;

458 i‡((
s
 = 
	`sockë
(
addr
.
sö_Ámûy
, 
SOCK_STREAM
, 0)) < 0) {

459 
	`˛ic⁄_îr
(
OE_CFG
, 
î∫o
, "socket");

462 i‡(
	`c⁄√˘
(
s
, (
sockaddr
*)&
addr
, (addr)) < 0){

463 
	`˛ic⁄_îr
(
OE_CFG
, 
î∫o
, "connecting socket inet4");

464 
	`˛o£
(
s
);

465 
d⁄e
;

467 i‡(
	`˛ic⁄_Ωc
(
s
, 
msg
, 
ªtd©a
) < 0)

468 
d⁄e
;

469 i‡(
sock0
 !
NULL
)

470 *
sock0
 = 
s
;

471 
ªtvÆ
 = 0;

472 
d⁄e
:

473 i‡(
sock0
 =
NULL
 && 
s
 >= 0)

474 
	`˛o£
(
s
);

475  
ªtvÆ
;

476 
	}
}

492 
	$˛ic⁄_Ωc
(
s
,

493 
˛ic⁄_msg
 *
msg
,

494 **
ªt
)

496 
ªtvÆ
 = -1;

497 
˛ic⁄_msg
 *
ª∂y
 = 
NULL
;

498 
eof
;

499 *
d©a
 = 
NULL
;

500 
cxobj
 *
cx
 = 
NULL
;

502 i‡(
	`˛ic⁄_msg_£nd
(
s
, 
msg
) < 0)

503 
d⁄e
;

504 i‡(
	`˛ic⁄_msg_rcv
(
s
, &
ª∂y
, &
eof
) < 0)

505 
d⁄e
;

506 i‡(
eof
){

507 
	`˛ic⁄_îr
(
OE_PROTO
, 
ESHUTDOWN
, "%s: Sockë u√x≥˘ed clo£", 
__FUNCTION__
);

508 
	`˛o£
(
s
);

509 
î∫o
 = 
ESHUTDOWN
;

510 
d⁄e
;

512 
d©a
 = 
ª∂y
->
›_body
;

513 i‡(
ªt
 && 
d©a
)

514 i‡((*
ªt
 = 
	`°rdup
(
d©a
)Ë=
NULL
){

515 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "strdup");

516 
d⁄e
;

518 
ªtvÆ
 = 0;

519 
d⁄e
:

520 i‡(
cx
)

521 
	`xml_‰ì
(
cx
);

522 i‡(
ª∂y
)

523 
	`‰ì
(
ª∂y
);

524  
ªtvÆ
;

525 
	}
}

536 
	$£nd_msg_ª∂y
(
s
,

537 *
d©a
,

538 
uöt32_t
 
d©Æí
)

540 
ªtvÆ
 = -1;

541 
˛ic⁄_msg
 *
ª∂y
 = 
NULL
;

542 
uöt32_t
 
Àn
;

544 
Àn
 = (*
ª∂y
Ë+ 
d©Æí
;

545 i‡((
ª∂y
 = (
˛ic⁄_msg
 *)
	`mÆloc
(
Àn
)Ë=
NULL
)

546 
d⁄e
;

547 
	`mem£t
(
ª∂y
, 0, 
Àn
);

548 
ª∂y
->
›_Àn
 = 
	`ht⁄l
(
Àn
);

549 i‡(
d©Æí
 > 0)

550 
	`mem˝y
(
ª∂y
->
›_body
, 
d©a
, 
d©Æí
);

551 i‡(
	`˛ic⁄_msg_£nd
(
s
, 
ª∂y
) < 0)

552 
d⁄e
;

553 
ªtvÆ
 = 0;

554 
d⁄e
:

555 i‡(
ª∂y
)

556 
	`‰ì
(
ª∂y
);

557  
ªtvÆ
;

558 
	}
}

569 
	$£nd_msg_nŸify
(
s
,

570 
Àvñ
,

571 *
evít
)

573 
ªtvÆ
 = -1;

574 
˛ic⁄_msg
 *
msg
 = 
NULL
;

576 i‡((
msg
=
	`˛ic⁄_msg_ícode
("<nŸifiˇti⁄><evít>%s</evít></nŸifiˇti⁄>", 
evít
)Ë=
NULL
)

577 
d⁄e
;

578 i‡(
	`˛ic⁄_msg_£nd
(
s
, 
msg
) < 0)

579 
d⁄e
;

580 
ªtvÆ
 = 0;

581 
d⁄e
:

582 i‡(
msg
)

583 
	`‰ì
(
msg
);

584  
ªtvÆ
;

585 
	}
}

595 
	$dëe˘_ídèg
(*
èg
,

596 
ch
,

597 *
°©e
)

599 
ªtvÆ
 = 0;

601 i‡(
èg
[*
°©e
] =
ch
){

602 (*
°©e
)++;

603 i‡(*
°©e
 =
	`°æí
(
èg
)){

604 *
°©e
 = 0;

605 
ªtvÆ
 = 1;

609 *
°©e
 = 0;

610  
ªtvÆ
;

611 
	}
}

	@clixon-master/lib/src/clixon_proto_client.c

40 #ifde‡
HAVE_CONFIG_H


41 
	~"˛ix⁄_c⁄fig.h
"

44 
	~<°dlib.h
>

45 
	~<°dio.h
>

46 
	~<°rög.h
>

47 
	~<î∫o.h
>

48 
	~<as£π.h
>

49 
	~<uni°d.h
>

50 
	~<sys/∑øm.h
>

51 
	~<sys/°©.h
>

52 
	~<sys/sockë.h
>

53 
	~<sys/sy¶og.h
>

56 
	~<˛igí/˛igí.h
>

59 
	~"˛ix⁄_queue.h
"

60 
	~"˛ix⁄_log.h
"

61 
	~"˛ix⁄_hash.h
"

62 
	~"˛ix⁄_h™dÀ.h
"

63 
	~"˛ix⁄_y™g.h
"

64 
	~"˛ix⁄_›ti⁄s.h
"

65 
	~"˛ix⁄_xml.h
"

66 
	~"˛ix⁄_∂ugö.h
"

67 
	~"˛ix⁄_x¶.h
"

68 
	~"˛ix⁄_¥Ÿo.h
"

69 
	~"˛ix⁄_îr.h
"

70 
	~"˛ix⁄_¥Ÿo_˛õ¡.h
"

82 
	$˛ic⁄_Ωc_msg
(
˛ic⁄_h™dÀ
 
h
,

83 
˛ic⁄_msg
 *
msg
,

84 
cxobj
 **
xªt0
,

85 *
sock0
)

87 
ªtvÆ
 = -1;

88 *
sock
;

89 
p‹t
;

90 *
ªtd©a
 = 
NULL
;

91 
cxobj
 *
xªt
 = 
NULL
;

92 
y™g_•ec
 *
y•ec
;

94 
	`˛ic⁄_debug
(1, "%†ªque°:%s", 
__FUNCTION__
, 
msg
->
›_body
);

95 i‡((
sock
 = 
	`˛ic⁄_sock
(
h
)Ë=
NULL
){

96 
	`˛ic⁄_îr
(
OE_FATAL
, 0, "CLICON_SOCK optionÇot set");

97 
d⁄e
;

100 
	`˛ic⁄_sock_Ámûy
(
h
)){

101 
AF_UNIX
:

102 i‡(
	`˛ic⁄_Ωc_c⁄√˘_unix
(
msg
, 
sock
, &
ªtd©a
, 
sock0
) < 0){

104 i‡(
î∫o
 =
ESHUTDOWN
)

107 
	`˛igí_exôög_£t
(
	`˛i_˛igí
(
h
), 1);

109 
d⁄e
;

112 
AF_INET
:

113 i‡((
p‹t
 = 
	`˛ic⁄_sock_p‹t
(
h
)) < 0){

114 
	`˛ic⁄_îr
(
OE_FATAL
, 0, "CLICON_SOCK optionÇot set");

115 
d⁄e
;

117 i‡(
p‹t
 < 0){

118 
	`˛ic⁄_îr
(
OE_FATAL
, 0, "CLICON_SOCK_PORTÇot set");

119 
d⁄e
;

121 i‡(
	`˛ic⁄_Ωc_c⁄√˘_öë
(
msg
, 
sock
, 
p‹t
, &
ªtd©a
, 
sock0
) < 0)

122 
d⁄e
;

125 
	`˛ic⁄_debug
(1, "%†ªtd©a:%s", 
__FUNCTION__
, 
ªtd©a
);

127 i‡(
ªtd©a
){

128 
y•ec
 = 
	`˛ic⁄_db•ec_y™g
(
h
);

129 i‡(
	`xml_∑r£_°rög
(
ªtd©a
, 
y•ec
, &
xªt
) < 0)

130 
d⁄e
;

132 i‡(
xªt0
){

133 *
xªt0
 = 
xªt
;

134 
xªt
 = 
NULL
;

136 
ªtvÆ
 = 0;

137 
d⁄e
:

138 i‡(
ªtd©a
)

139 
	`‰ì
(
ªtd©a
);

140 i‡(
xªt
)

141 
	`xml_‰ì
(
xªt
);

142  
ªtvÆ
;

143 
	}
}

154 
	$˛ic⁄_Ωc_√tc⁄f
(
˛ic⁄_h™dÀ
 
h
,

155 *
xml°r
,

156 
cxobj
 **
xªt
,

157 *
•
)

159 
ªtvÆ
 = -1;

160 
˛ic⁄_msg
 *
msg
 = 
NULL
;

162 i‡((
msg
 = 
	`˛ic⁄_msg_ícode
("%s", 
xml°r
)) < 0)

163 
d⁄e
;

164 i‡(
	`˛ic⁄_Ωc_msg
(
h
, 
msg
, 
xªt
, 
•
) < 0)

165 
d⁄e
;

166 
ªtvÆ
 = 0;

167 
d⁄e
:

168 i‡(
msg
)

169 
	`‰ì
(
msg
);

170  
ªtvÆ
;

171 
	}
}

182 
	$˛ic⁄_Ωc_√tc⁄f_xml
(
˛ic⁄_h™dÀ
 
h
,

183 
cxobj
 *
xml
,

184 
cxobj
 **
xªt
,

185 *
•
)

187 
ªtvÆ
 = -1;

188 
cbuf
 *
cb
 = 
NULL
;

190 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
){

191 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cbuf_new");

192 
d⁄e
;

194 i‡(
	`˛ic⁄_xml2cbuf
(
cb
, 
xml
, 0, 0) < 0)

195 
d⁄e
;

196 i‡(
	`˛ic⁄_Ωc_√tc⁄f
(
h
, 
	`cbuf_gë
(
cb
), 
xªt
, 
•
) < 0)

197 
d⁄e
;

198 
ªtvÆ
 = 0;

199 
d⁄e
:

200 i‡(
cb
)

201 
	`cbuf_‰ì
(
cb
);

202  
ªtvÆ
;

203 
	}
}

209 
	$˛ic⁄_Ωc_gíî©e_îr‹
(*
f‹m©
,

210 
cxobj
 *
xîr
)

212 
ªtvÆ
 = -1;

213 
cbuf
 *
cb
 = 
NULL
;

214 
cxobj
 *
x
;

216 i‡((
cb
 = 
	`cbuf_√w
()Ë==
NULL
){

217 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cbuf_new");

218 
d⁄e
;

220 i‡((
x
=
	`x∑th_fú°
(
xîr
, "îr‹-ty≥"))!=
NULL
)

221 
	`˝rötf
(
cb
, "%†", 
	`xml_body
(
x
));

222 i‡((
x
=
	`x∑th_fú°
(
xîr
, "îr‹-èg"))!=
NULL
)

223 
	`˝rötf
(
cb
, "%†", 
	`xml_body
(
x
));

224 i‡((
x
=
	`x∑th_fú°
(
xîr
, "îr‹-mesßge"))!=
NULL
)

225 
	`˝rötf
(
cb
, "%†", 
	`xml_body
(
x
));

226 i‡((
x
=
	`x∑th_fú°
(
xîr
, "îr‹-öfo"))!=
NULL
)

227 
	`˛ic⁄_xml2cbuf
(
cb
, 
	`xml_chûd_i
(
x
,0), 0, 0);

228 
	`˛ic⁄_log
(
LOG_ERR
, "%s: %s", 
f‹m©
, 
	`cbuf_gë
(
cb
));

229 
ªtvÆ
 = 0;

230 
d⁄e
:

231 i‡(
cb
)

232 
	`cbuf_‰ì
(
cb
);

233  
ªtvÆ
;

234 
	}
}

259 
	$˛ic⁄_Ωc_gë_c⁄fig
(
˛ic⁄_h™dÀ
 
h
,

260 *
db
,

261 *
x∑th
,

262 
cxobj
 **
xt
)

264 
ªtvÆ
 = -1;

265 
˛ic⁄_msg
 *
msg
 = 
NULL
;

266 
cbuf
 *
cb
 = 
NULL
;

267 
cxobj
 *
xªt
 = 
NULL
;

268 
cxobj
 *
xd
;

269 *
u£∫ame
;

271 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
)

272 
d⁄e
;

273 
	`˝rötf
(
cb
, "<rpc");

274 i‡((
u£∫ame
 = 
	`˛ic⁄_u£∫ame_gë
(
h
)Ë!
NULL
)

275 
	`˝rötf
(
cb
, " u£∫ame=\"%s\"", 
u£∫ame
);

276 
	`˝rötf
(
cb
, "><gë-c⁄fig><sour˚><%s/></sour˚>", 
db
);

277 i‡(
x∑th
 && 
	`°æí
(xpath))

278 
	`˝rötf
(
cb
, "<fûã∏ty≥=\"x∑th\" sñe˘=\"%s\"/>", 
x∑th
);

279 
	`˝rötf
(
cb
, "</get-config></rpc>");

280 i‡((
msg
 = 
	`˛ic⁄_msg_ícode
("%s", 
	`cbuf_gë
(
cb
))Ë=
NULL
)

281 
d⁄e
;

282 i‡(
	`˛ic⁄_Ωc_msg
(
h
, 
msg
, &
xªt
, 
NULL
) < 0)

283 
d⁄e
;

285 i‡((
xd
 = 
	`x∑th_fú°
(
xªt
, "/Ωc-ª∂y/Ωc-îr‹")Ë!
NULL
)

286 
xd
 = 
	`xml_∑ª¡
(xd);

287 i‡((
xd
 = 
	`x∑th_fú°
(
xªt
, "/Ωc-ª∂y/d©a")Ë=
NULL
)

288 i‡((
xd
 = 
	`xml_√w
("d©a", 
NULL
, NULL)) == NULL)

289 
d⁄e
;

290 i‡(
xt
){

291 i‡(
	`xml_rm
(
xd
) < 0)

292 
d⁄e
;

293 *
xt
 = 
xd
;

295 
ªtvÆ
 = 0;

296 
d⁄e
:

297 i‡(
cb
)

298 
	`cbuf_‰ì
(
cb
);

299 i‡(
xªt
)

300 
	`xml_‰ì
(
xªt
);

301 i‡(
msg
)

302 
	`‰ì
(
msg
);

303  
ªtvÆ
;

304 
	}
}

321 
	$˛ic⁄_Ωc_edô_c⁄fig
(
˛ic⁄_h™dÀ
 
h
,

322 *
db
,

323 
›î©i⁄_ty≥
 
›
,

324 *
xml°r
)

326 
ªtvÆ
 = -1;

327 
˛ic⁄_msg
 *
msg
 = 
NULL
;

328 
cbuf
 *
cb
 = 
NULL
;

329 
cxobj
 *
xªt
 = 
NULL
;

330 
cxobj
 *
xîr
;

331 *
u£∫ame
;

333 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
)

334 
d⁄e
;

335 
	`˝rötf
(
cb
, "<rpc");

336 i‡((
u£∫ame
 = 
	`˛ic⁄_u£∫ame_gë
(
h
)Ë!
NULL
)

337 
	`˝rötf
(
cb
, " u£∫ame=\"%s\"", 
u£∫ame
);

338 
	`˝rötf
(
cb
, "><edô-c⁄fig><èrgë><%s/></èrgë>", 
db
);

339 
	`˝rötf
(
cb
, "<default-operation>%s</default-operation>",

340 
	`xml_›î©i⁄2°r
(
›
));

341 i‡(
xml°r
)

342 
	`˝rötf
(
cb
, "%s", 
xml°r
);

343 
	`˝rötf
(
cb
, "</edit-config></rpc>");

344 i‡((
msg
 = 
	`˛ic⁄_msg_ícode
("%s", 
	`cbuf_gë
(
cb
))Ë=
NULL
)

345 
d⁄e
;

346 i‡(
	`˛ic⁄_Ωc_msg
(
h
, 
msg
, &
xªt
, 
NULL
) < 0)

347 
d⁄e
;

348 i‡((
xîr
 = 
	`x∑th_fú°
(
xªt
, "//Ωc-îr‹")Ë!
NULL
){

349 
	`˛ic⁄_Ωc_gíî©e_îr‹
("Edôög c⁄figuøti⁄", 
xîr
);

350 
d⁄e
;

352 
ªtvÆ
 = 0;

353 
d⁄e
:

354 i‡(
xªt
)

355 
	`xml_‰ì
(
xªt
);

356 i‡(
cb
)

357 
	`cbuf_‰ì
(
cb
);

358 i‡(
msg
)

359 
	`‰ì
(
msg
);

360  
ªtvÆ
;

361 
	}
}

377 
	$˛ic⁄_Ωc_c›y_c⁄fig
(
˛ic⁄_h™dÀ
 
h
,

378 *
db1
,

379 *
db2
)

381 
ªtvÆ
 = -1;

382 
˛ic⁄_msg
 *
msg
 = 
NULL
;

383 
cxobj
 *
xªt
 = 
NULL
;

384 
cxobj
 *
xîr
;

385 *
u£∫ame
;

387 
u£∫ame
 = 
	`˛ic⁄_u£∫ame_gë
(
h
);

388 i‡((
msg
 = 
	`˛ic⁄_msg_ícode
("<rpc username=\"%s\"><copy-config><source><%s/></source><target><%s/></target></copy-config></rpc>",

389 
u£∫ame
?username:"",

390 
db1
, 
db2
)Ë=
NULL
)

391 
d⁄e
;

392 i‡(
	`˛ic⁄_Ωc_msg
(
h
, 
msg
, &
xªt
, 
NULL
) < 0)

393 
d⁄e
;

394 i‡((
xîr
 = 
	`x∑th_fú°
(
xªt
, "//Ωc-îr‹")Ë!
NULL
){

395 
	`˛ic⁄_Ωc_gíî©e_îr‹
("C›yög c⁄figuøti⁄", 
xîr
);

396 
d⁄e
;

398 
ªtvÆ
 = 0;

399 
d⁄e
:

400 i‡(
xªt
)

401 
	`xml_‰ì
(
xªt
);

402 i‡(
msg
)

403 
	`‰ì
(
msg
);

404  
ªtvÆ
;

405 
	}
}

418 
	$˛ic⁄_Ωc_dñëe_c⁄fig
(
˛ic⁄_h™dÀ
 
h
,

419 *
db
)

421 
ªtvÆ
 = -1;

422 
˛ic⁄_msg
 *
msg
 = 
NULL
;

423 
cxobj
 *
xªt
 = 
NULL
;

424 
cxobj
 *
xîr
;

425 *
u£∫ame
;

427 
u£∫ame
 = 
	`˛ic⁄_u£∫ame_gë
(
h
);

428 i‡((
msg
 = 
	`˛ic⁄_msg_ícode
("<rpc username=\"%s\"><delete-config><target><%s/></target></delete-config></rpc>",

429 
u£∫ame
?u£∫ame:"", 
db
)Ë=
NULL
)

430 
d⁄e
;

431 i‡(
	`˛ic⁄_Ωc_msg
(
h
, 
msg
, &
xªt
, 
NULL
) < 0)

432 
d⁄e
;

433 i‡((
xîr
 = 
	`x∑th_fú°
(
xªt
, "//Ωc-îr‹")Ë!
NULL
){

434 
	`˛ic⁄_Ωc_gíî©e_îr‹
("Dñëög c⁄figuøti⁄", 
xîr
);

435 
d⁄e
;

437 
ªtvÆ
 = 0;

438 
d⁄e
:

439 i‡(
xªt
)

440 
	`xml_‰ì
(
xªt
);

441 i‡(
msg
)

442 
	`‰ì
(
msg
);

443  
ªtvÆ
;

444 
	}
}

453 
	$˛ic⁄_Ωc_lock
(
˛ic⁄_h™dÀ
 
h
,

454 *
db
)

456 
ªtvÆ
 = -1;

457 
˛ic⁄_msg
 *
msg
 = 
NULL
;

458 
cxobj
 *
xªt
 = 
NULL
;

459 
cxobj
 *
xîr
;

460 *
u£∫ame
;

462 
u£∫ame
 = 
	`˛ic⁄_u£∫ame_gë
(
h
);

463 i‡((
msg
 = 
	`˛ic⁄_msg_ícode
("<rpc username=\"%s\"><lock><target><%s/></target></lock></rpc>",

464 
u£∫ame
?u£∫ame:"", 
db
)Ë=
NULL
)

465 
d⁄e
;

466 i‡(
	`˛ic⁄_Ωc_msg
(
h
, 
msg
, &
xªt
, 
NULL
) < 0)

467 
d⁄e
;

468 i‡((
xîr
 = 
	`x∑th_fú°
(
xªt
, "//Ωc-îr‹")Ë!
NULL
){

469 
	`˛ic⁄_Ωc_gíî©e_îr‹
("Lockög c⁄figuøti⁄", 
xîr
);

470 
d⁄e
;

472 
ªtvÆ
 = 0;

473 
d⁄e
:

474 i‡(
xªt
)

475 
	`xml_‰ì
(
xªt
);

476 i‡(
msg
)

477 
	`‰ì
(
msg
);

478  
ªtvÆ
;

479 
	}
}

488 
	$˛ic⁄_Ωc_u∆ock
(
˛ic⁄_h™dÀ
 
h
,

489 *
db
)

491 
ªtvÆ
 = -1;

492 
˛ic⁄_msg
 *
msg
 = 
NULL
;

493 
cxobj
 *
xªt
 = 
NULL
;

494 
cxobj
 *
xîr
;

495 *
u£∫ame
;

497 
u£∫ame
 = 
	`˛ic⁄_u£∫ame_gë
(
h
);

498 i‡((
msg
 = 
	`˛ic⁄_msg_ícode
("<Ω¯u£∫ame=\"%s\"><u∆ock><èrgë><%s/></èrgë></u∆ock></Ωc>", 
u£∫ame
?u£∫ame:"", 
db
)Ë=
NULL
)

499 
d⁄e
;

500 i‡(
	`˛ic⁄_Ωc_msg
(
h
, 
msg
, &
xªt
, 
NULL
) < 0)

501 
d⁄e
;

502 i‡((
xîr
 = 
	`x∑th_fú°
(
xªt
, "//Ωc-îr‹")Ë!
NULL
){

503 
	`˛ic⁄_Ωc_gíî©e_îr‹
("C⁄figuøti⁄ u∆ock", 
xîr
);

504 
d⁄e
;

506 
ªtvÆ
 = 0;

507 
d⁄e
:

508 i‡(
xªt
)

509 
	`xml_‰ì
(
xªt
);

510 i‡(
msg
)

511 
	`‰ì
(
msg
);

512  
ªtvÆ
;

513 
	}
}

536 
	$˛ic⁄_Ωc_gë
(
˛ic⁄_h™dÀ
 
h
,

537 *
x∑th
,

538 
cxobj
 **
xt
)

540 
ªtvÆ
 = -1;

541 
˛ic⁄_msg
 *
msg
 = 
NULL
;

542 
cbuf
 *
cb
 = 
NULL
;

543 
cxobj
 *
xªt
 = 
NULL
;

544 
cxobj
 *
xd
;

545 *
u£∫ame
;

547 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
)

548 
d⁄e
;

549 
	`˝rötf
(
cb
, "<rpc");

550 i‡((
u£∫ame
 = 
	`˛ic⁄_u£∫ame_gë
(
h
)Ë!
NULL
)

551 
	`˝rötf
(
cb
, " u£∫ame=\"%s\"", 
u£∫ame
);

552 
	`˝rötf
(
cb
, "><get>");

553 i‡(
x∑th
 && 
	`°æí
(xpath))

554 
	`˝rötf
(
cb
, "<fûã∏ty≥=\"x∑th\" sñe˘=\"%s\"/>", 
x∑th
);

555 
	`˝rötf
(
cb
, "</get></rpc>");

556 i‡((
msg
 = 
	`˛ic⁄_msg_ícode
("%s", 
	`cbuf_gë
(
cb
))Ë=
NULL
)

557 
d⁄e
;

558 i‡(
	`˛ic⁄_Ωc_msg
(
h
, 
msg
, &
xªt
, 
NULL
) < 0)

559 
d⁄e
;

561 i‡((
xd
 = 
	`x∑th_fú°
(
xªt
, "/Ωc-ª∂y/Ωc-îr‹")Ë!
NULL
)

562 
xd
 = 
	`xml_∑ª¡
(xd);

563 i‡((
xd
 = 
	`x∑th_fú°
(
xªt
, "/Ωc-ª∂y/d©a")Ë=
NULL
)

564 i‡((
xd
 = 
	`xml_√w
("d©a", 
NULL
, NULL)) == NULL)

565 
d⁄e
;

566 i‡(
xt
){

567 i‡(
	`xml_rm
(
xd
) < 0)

568 
d⁄e
;

569 *
xt
 = 
xd
;

571 
ªtvÆ
 = 0;

572 
d⁄e
:

573 i‡(
cb
)

574 
	`cbuf_‰ì
(
cb
);

575 i‡(
xªt
)

576 
	`xml_‰ì
(
xªt
);

577 i‡(
msg
)

578 
	`‰ì
(
msg
);

579  
ªtvÆ
;

580 
	}
}

588 
	$˛ic⁄_Ωc_˛o£_£ssi⁄
(
˛ic⁄_h™dÀ
 
h
)

590 
ªtvÆ
 = -1;

591 
˛ic⁄_msg
 *
msg
 = 
NULL
;

592 
cxobj
 *
xªt
 = 
NULL
;

593 
cxobj
 *
xîr
;

594 *
u£∫ame
;

596 
u£∫ame
 = 
	`˛ic⁄_u£∫ame_gë
(
h
);

597 i‡((
msg
 = 
	`˛ic⁄_msg_ícode
("<rpc username=\"%s\"><close-session/></rpc>",

598 
u£∫ame
?u£∫ame:"")Ë=
NULL
)

599 
d⁄e
;

600 i‡(
	`˛ic⁄_Ωc_msg
(
h
, 
msg
, &
xªt
, 
NULL
) < 0)

601 
d⁄e
;

602 i‡((
xîr
 = 
	`x∑th_fú°
(
xªt
, "//Ωc-îr‹")Ë!
NULL
){

603 
	`˛ic⁄_Ωc_gíî©e_îr‹
("Clo£ sessi⁄", 
xîr
);

604 
d⁄e
;

606 
ªtvÆ
 = 0;

607 
d⁄e
:

608 i‡(
xªt
)

609 
	`xml_‰ì
(
xªt
);

610 i‡(
msg
)

611 
	`‰ì
(
msg
);

612  
ªtvÆ
;

613 
	}
}

622 
	$˛ic⁄_Ωc_kûl_£ssi⁄
(
˛ic⁄_h™dÀ
 
h
,

623 
£ssi⁄_id
)

625 
ªtvÆ
 = -1;

626 
˛ic⁄_msg
 *
msg
 = 
NULL
;

627 
cxobj
 *
xªt
 = 
NULL
;

628 
cxobj
 *
xîr
;

629 *
u£∫ame
;

631 
u£∫ame
 = 
	`˛ic⁄_u£∫ame_gë
(
h
);

632 i‡((
msg
 = 
	`˛ic⁄_msg_ícode
("<rpc username=\"%s\"><kill-session><session-id>%d</session-id></kill-session></rpc>",

633 
u£∫ame
?u£∫ame:"", 
£ssi⁄_id
)Ë=
NULL
)

634 
d⁄e
;

635 i‡(
	`˛ic⁄_Ωc_msg
(
h
, 
msg
, &
xªt
, 
NULL
) < 0)

636 
d⁄e
;

637 i‡((
xîr
 = 
	`x∑th_fú°
(
xªt
, "//Ωc-îr‹")Ë!
NULL
){

638 
	`˛ic⁄_Ωc_gíî©e_îr‹
("Kû»£ssi⁄", 
xîr
);

639 
d⁄e
;

641 
ªtvÆ
 = 0;

642 
d⁄e
:

643 i‡(
xªt
)

644 
	`xml_‰ì
(
xªt
);

645 i‡(
msg
)

646 
	`‰ì
(
msg
);

647  
ªtvÆ
;

648 
	}
}

657 
	$˛ic⁄_Ωc_vÆid©e
(
˛ic⁄_h™dÀ
 
h
,

658 *
db
)

660 
ªtvÆ
 = -1;

661 
˛ic⁄_msg
 *
msg
 = 
NULL
;

662 
cxobj
 *
xªt
 = 
NULL
;

663 
cxobj
 *
xîr
;

664 *
u£∫ame
;

666 
u£∫ame
 = 
	`˛ic⁄_u£∫ame_gë
(
h
);

667 i‡((
msg
 = 
	`˛ic⁄_msg_ícode
("<Ω¯u£∫ame=\"%s\"><vÆid©e><sour˚><%s/></sour˚></vÆid©e></Ωc>", 
u£∫ame
?u£∫ame:"", 
db
)Ë=
NULL
)

668 
d⁄e
;

669 i‡(
	`˛ic⁄_Ωc_msg
(
h
, 
msg
, &
xªt
, 
NULL
) < 0)

670 
d⁄e
;

671 i‡((
xîr
 = 
	`x∑th_fú°
(
xªt
, "//Ωc-îr‹")Ë!
NULL
){

672 
	`˛ic⁄_Ωc_gíî©e_îr‹
("VÆid©êÁûed. EdôándÅryágaö o∏disˇrd ch™ges", 
xîr
);

673 
d⁄e
;

675 
ªtvÆ
 = 0;

676 
d⁄e
:

677 i‡(
msg
)

678 
	`‰ì
(
msg
);

679 i‡(
xªt
)

680 
	`xml_‰ì
(
xªt
);

681  
ªtvÆ
;

682 
	}
}

690 
	$˛ic⁄_Ωc_commô
(
˛ic⁄_h™dÀ
 
h
)

692 
ªtvÆ
 = -1;

693 
˛ic⁄_msg
 *
msg
 = 
NULL
;

694 
cxobj
 *
xªt
 = 
NULL
;

695 
cxobj
 *
xîr
;

696 *
u£∫ame
;

698 
u£∫ame
 = 
	`˛ic⁄_u£∫ame_gë
(
h
);

699 i‡((
msg
 = 
	`˛ic⁄_msg_ícode
("<Ω¯u£∫ame=\"%s\"><commô/></Ωc>", 
u£∫ame
?u£∫ame:"")Ë=
NULL
)

700 
d⁄e
;

701 i‡(
	`˛ic⁄_Ωc_msg
(
h
, 
msg
, &
xªt
, 
NULL
) < 0)

702 
d⁄e
;

703 i‡((
xîr
 = 
	`x∑th_fú°
(
xªt
, "//Ωc-îr‹")Ë!
NULL
){

704 
	`˛ic⁄_Ωc_gíî©e_îr‹
("Commô faûed. EdôándÅryágaö o∏disˇrd ch™ges", 
xîr
);

705 
d⁄e
;

707 
ªtvÆ
 = 0;

708 
d⁄e
:

709 i‡(
xªt
)

710 
	`xml_‰ì
(
xªt
);

711 i‡(
msg
)

712 
	`‰ì
(
msg
);

713  
ªtvÆ
;

714 
	}
}

722 
	$˛ic⁄_Ωc_disˇrd_ch™ges
(
˛ic⁄_h™dÀ
 
h
)

724 
ªtvÆ
 = -1;

725 
˛ic⁄_msg
 *
msg
 = 
NULL
;

726 
cxobj
 *
xªt
 = 
NULL
;

727 
cxobj
 *
xîr
;

728 *
u£∫ame
;

730 
u£∫ame
 = 
	`˛ic⁄_u£∫ame_gë
(
h
);

731 i‡((
msg
 = 
	`˛ic⁄_msg_ícode
("<Ω¯u£∫ame=\"%s\"><disˇrd-ch™ges/></Ωc>", 
u£∫ame
?u£∫ame:"")Ë=
NULL
)

732 
d⁄e
;

733 i‡(
	`˛ic⁄_Ωc_msg
(
h
, 
msg
, &
xªt
, 
NULL
) < 0)

734 
d⁄e
;

735 i‡((
xîr
 = 
	`x∑th_fú°
(
xªt
, "//Ωc-îr‹")Ë!
NULL
){

736 
	`˛ic⁄_Ωc_gíî©e_îr‹
("Disˇrd ch™ges", 
xîr
);

737 
d⁄e
;

739 
ªtvÆ
 = 0;

740 
d⁄e
:

741 i‡(
xªt
)

742 
	`xml_‰ì
(
xªt
);

743 i‡(
msg
)

744 
	`‰ì
(
msg
);

745  
ªtvÆ
;

746 
	}
}

759 
	$˛ic⁄_Ωc_¸óã_subs¸ùti⁄
(
˛ic⁄_h™dÀ
 
h
,

760 *
°ªam
,

761 *
fûãr
,

762 *
s0
)

764 
ªtvÆ
 = -1;

765 
˛ic⁄_msg
 *
msg
 = 
NULL
;

766 
cxobj
 *
xªt
 = 
NULL
;

767 
cxobj
 *
xîr
;

768 *
u£∫ame
;

770 
u£∫ame
 = 
	`˛ic⁄_u£∫ame_gë
(
h
);

771 i‡((
msg
 = 
	`˛ic⁄_msg_ícode
("<rpc username=\"%s\"><create-subscription>"

775 
u£∫ame
?username:"",

776 
°ªam
?°ªam:"", 
fûãr
?fûãr:"")Ë=
NULL
)

777 
d⁄e
;

778 i‡(
	`˛ic⁄_Ωc_msg
(
h
, 
msg
, &
xªt
, 
s0
) < 0)

779 
d⁄e
;

780 i‡((
xîr
 = 
	`x∑th_fú°
(
xªt
, "//Ωc-îr‹")Ë!
NULL
){

781 
	`˛ic⁄_Ωc_gíî©e_îr‹
("Cª©êsubs¸ùti⁄", 
xîr
);

782 
d⁄e
;

784 
ªtvÆ
 = 0;

785 
d⁄e
:

786 i‡(
xªt
)

787 
	`xml_‰ì
(
xªt
);

788 i‡(
msg
)

789 
	`‰ì
(
msg
);

790  
ªtvÆ
;

791 
	}
}

800 
	$˛ic⁄_Ωc_debug
(
˛ic⁄_h™dÀ
 
h
,

801 
Àvñ
)

803 
ªtvÆ
 = -1;

804 
˛ic⁄_msg
 *
msg
 = 
NULL
;

805 
cxobj
 *
xªt
 = 
NULL
;

806 
cxobj
 *
xîr
;

807 *
u£∫ame
;

809 
u£∫ame
 = 
	`˛ic⁄_u£∫ame_gë
(
h
);

810 i‡((
msg
 = 
	`˛ic⁄_msg_ícode
("<Ω¯u£∫ame=\"%s\"><debug><Àvñ>%d</Àvñ></debug></Ωc>", 
u£∫ame
?u£∫ame:"", 
Àvñ
)Ë=
NULL
)

811 
d⁄e
;

812 i‡(
	`˛ic⁄_Ωc_msg
(
h
, 
msg
, &
xªt
, 
NULL
) < 0)

813 
d⁄e
;

814 i‡((
xîr
 = 
	`x∑th_fú°
(
xªt
, "//Ωc-îr‹")Ë!
NULL
){

815 
	`˛ic⁄_Ωc_gíî©e_îr‹
("Debug",
xîr
);

816 
d⁄e
;

818 i‡(
	`x∑th_fú°
(
xªt
, "//Ωc-ª∂y/ok"Ë=
NULL
){

819 
	`˛ic⁄_îr
(
OE_XML
, 0, "rpcÉrror");

820 
d⁄e
;

822 
ªtvÆ
 = 0;

823 
d⁄e
:

824 i‡(
msg
)

825 
	`‰ì
(
msg
);

826 i‡(
xªt
)

827 
	`xml_‰ì
(
xªt
);

828  
ªtvÆ
;

829 
	}
}

	@clixon-master/lib/src/clixon_sha1.c

52 
	~<°rög.h
>

53 
	~<°dlib.h
>

54 
	~<öây≥s.h
>

55 
	~<î∫o.h
>

58 
	~<˛igí/˛igí.h
>

61 
	~"˛ix⁄_log.h
"

62 
	~"˛ix⁄_îr.h
"

69 
	sSHA1C⁄ãxt


71 
uöt32_t
 
	mMesßge_Dige°
[5];

73 
uöt32_t
 
	mLígth_Low
;

74 
uöt32_t
 
	mLígth_High
;

76 
	mMesßge_Block
[64];

77 
	mMesßge_Block_Index
;

79 
	mCompuãd
;

80 
	mC‹ru±ed
;

81 } 
	tSHA1C⁄ãxt
;

87 
	#SHA1CúcuœrShi·
(
bôs
,
w‹d
) \

88 ((((
w‹d
Ë<< (
bôs
)) & 0xFFFFFFFF) | \

89 ((
w‹d
Ë>> (32-(
bôs
))))

	)

92 
SHA1Pro˚ssMesßgeBlock
(
SHA1C⁄ãxt
 *);

93 
SHA1PadMesßge
(
SHA1C⁄ãxt
 *);

94 
SHA1Re£t
(
SHA1C⁄ãxt
 *);

95 
SHA1Resu…
(
SHA1C⁄ãxt
 *);

96 
SHA1I≈ut
–
SHA1C⁄ãxt
 *, c⁄° *, 
uöt32_t
);

116 
	$SHA1Re£t
(
SHA1C⁄ãxt
 *
c⁄ãxt
)

118 
c⁄ãxt
->
Lígth_Low
 = 0;

119 
c⁄ãxt
->
Lígth_High
 = 0;

120 
c⁄ãxt
->
Mesßge_Block_Index
 = 0;

122 
c⁄ãxt
->
Mesßge_Dige°
[0] = 0x67452301;

123 
c⁄ãxt
->
Mesßge_Dige°
[1] = 0xEFCDAB89;

124 
c⁄ãxt
->
Mesßge_Dige°
[2] = 0x98BADCFE;

125 
c⁄ãxt
->
Mesßge_Dige°
[3] = 0x10325476;

126 
c⁄ãxt
->
Mesßge_Dige°
[4] = 0xC3D2E1F0;

128 
c⁄ãxt
->
Compuãd
 = 0;

129 
c⁄ãxt
->
C‹ru±ed
 = 0;

130 
	}
}

150 
	$SHA1Resu…
(
SHA1C⁄ãxt
 *
c⁄ãxt
)

153 i‡(
c⁄ãxt
->
C‹ru±ed
)

158 i‡(!
c⁄ãxt
->
Compuãd
)

160 
	`SHA1PadMesßge
(
c⁄ãxt
);

161 
c⁄ãxt
->
Compuãd
 = 1;

165 
	}
}

190 
	$SHA1I≈ut
–
SHA1C⁄ãxt
 *
c⁄ãxt
,

191 c⁄° *
mesßge_¨øy
,

192 
uöt32_t
 
Àngth
)

194 i‡(!
Àngth
)

199 i‡(
c⁄ãxt
->
Compuãd
 || c⁄ãxt->
C‹ru±ed
)

201 
c⁄ãxt
->
C‹ru±ed
 = 1;

205 
Àngth
-- && !
c⁄ãxt
->
C‹ru±ed
)

207 
c⁄ãxt
->
Mesßge_Block
[c⁄ãxt->
Mesßge_Block_Index
++] =

208 (*
mesßge_¨øy
 & 0xFF);

210 
c⁄ãxt
->
Lígth_Low
 += 8;

212 
c⁄ãxt
->
Lígth_Low
 &= 0xFFFFFFFF;

213 i‡(
c⁄ãxt
->
Lígth_Low
 == 0)

215 
c⁄ãxt
->
Lígth_High
++;

217 
c⁄ãxt
->
Lígth_High
 &= 0xFFFFFFFF;

218 i‡(
c⁄ãxt
->
Lígth_High
 == 0)

221 
c⁄ãxt
->
C‹ru±ed
 = 1;

225 i‡(
c⁄ãxt
->
Mesßge_Block_Index
 == 64)

227 
	`SHA1Pro˚ssMesßgeBlock
(
c⁄ãxt
);

230 
mesßge_¨øy
++;

232 
	}
}

255 
	$SHA1Pro˚ssMesßgeBlock
(
SHA1C⁄ãxt
 *
c⁄ãxt
)

257 c⁄° 
uöt32_t
 
K
[] =

264 
t
;

265 
uöt32_t
 
ãmp
;

266 
uöt32_t
 
W
[80];

267 
uöt32_t
 
A
, 
B
, 
C
, 
D
, 
E
;

272 
t
 = 0;Å < 16;Å++)

274 
W
[
t
] = ((
uöt32_t
Ë
c⁄ãxt
->
Mesßge_Block
[t * 4]) << 24;

275 
W
[
t
] |((
uöt32_t
Ë
c⁄ãxt
->
Mesßge_Block
[t * 4 + 1]) << 16;

276 
W
[
t
] |((
uöt32_t
Ë
c⁄ãxt
->
Mesßge_Block
[t * 4 + 2]) << 8;

277 
W
[
t
] |((
uöt32_t
Ë
c⁄ãxt
->
Mesßge_Block
[t * 4 + 3]);

280 
t
 = 16;Å < 80;Å++)

282 
W
[
t
] = 
	`SHA1CúcuœrShi·
(1,W[t-3] ^ W[t-8] ^ W[t-14] ^ W[t-16]);

285 
A
 = 
c⁄ãxt
->
Mesßge_Dige°
[0];

286 
B
 = 
c⁄ãxt
->
Mesßge_Dige°
[1];

287 
C
 = 
c⁄ãxt
->
Mesßge_Dige°
[2];

288 
D
 = 
c⁄ãxt
->
Mesßge_Dige°
[3];

289 
E
 = 
c⁄ãxt
->
Mesßge_Dige°
[4];

291 
t
 = 0;Å < 20;Å++)

293 
ãmp
 = 
	`SHA1CúcuœrShi·
(5,
A
) +

294 ((
B
 & 
C
Ë| ((~BË& 
D
)Ë+ 
E
 + 
W
[
t
] + 
K
[0];

295 
ãmp
 &= 0xFFFFFFFF;

296 
E
 = 
D
;

297 
D
 = 
C
;

298 
C
 = 
	`SHA1CúcuœrShi·
(30,
B
);

299 
B
 = 
A
;

300 
A
 = 
ãmp
;

303 
t
 = 20;Å < 40;Å++)

305 
ãmp
 = 
	`SHA1CúcuœrShi·
(5,
A
Ë+ (
B
 ^ 
C
 ^ 
D
Ë+ 
E
 + 
W
[
t
] + 
K
[1];

306 
ãmp
 &= 0xFFFFFFFF;

307 
E
 = 
D
;

308 
D
 = 
C
;

309 
C
 = 
	`SHA1CúcuœrShi·
(30,
B
);

310 
B
 = 
A
;

311 
A
 = 
ãmp
;

314 
t
 = 40;Å < 60;Å++)

316 
ãmp
 = 
	`SHA1CúcuœrShi·
(5,
A
) +

317 ((
B
 & 
C
Ë| (B & 
D
Ë| (C & D)Ë+ 
E
 + 
W
[
t
] + 
K
[2];

318 
ãmp
 &= 0xFFFFFFFF;

319 
E
 = 
D
;

320 
D
 = 
C
;

321 
C
 = 
	`SHA1CúcuœrShi·
(30,
B
);

322 
B
 = 
A
;

323 
A
 = 
ãmp
;

326 
t
 = 60;Å < 80;Å++)

328 
ãmp
 = 
	`SHA1CúcuœrShi·
(5,
A
Ë+ (
B
 ^ 
C
 ^ 
D
Ë+ 
E
 + 
W
[
t
] + 
K
[3];

329 
ãmp
 &= 0xFFFFFFFF;

330 
E
 = 
D
;

331 
D
 = 
C
;

332 
C
 = 
	`SHA1CúcuœrShi·
(30,
B
);

333 
B
 = 
A
;

334 
A
 = 
ãmp
;

337 
c⁄ãxt
->
Mesßge_Dige°
[0] =

338 (
c⁄ãxt
->
Mesßge_Dige°
[0] + 
A
) & 0xFFFFFFFF;

339 
c⁄ãxt
->
Mesßge_Dige°
[1] =

340 (
c⁄ãxt
->
Mesßge_Dige°
[1] + 
B
) & 0xFFFFFFFF;

341 
c⁄ãxt
->
Mesßge_Dige°
[2] =

342 (
c⁄ãxt
->
Mesßge_Dige°
[2] + 
C
) & 0xFFFFFFFF;

343 
c⁄ãxt
->
Mesßge_Dige°
[3] =

344 (
c⁄ãxt
->
Mesßge_Dige°
[3] + 
D
) & 0xFFFFFFFF;

345 
c⁄ãxt
->
Mesßge_Dige°
[4] =

346 (
c⁄ãxt
->
Mesßge_Dige°
[4] + 
E
) & 0xFFFFFFFF;

348 
c⁄ãxt
->
Mesßge_Block_Index
 = 0;

349 
	}
}

375 
	$SHA1PadMesßge
(
SHA1C⁄ãxt
 *
c⁄ãxt
)

383 i‡(
c⁄ãxt
->
Mesßge_Block_Index
 > 55)

385 
c⁄ãxt
->
Mesßge_Block
[c⁄ãxt->
Mesßge_Block_Index
++] = 0x80;

386 
c⁄ãxt
->
Mesßge_Block_Index
 < 64)

388 
c⁄ãxt
->
Mesßge_Block
[c⁄ãxt->
Mesßge_Block_Index
++] = 0;

391 
	`SHA1Pro˚ssMesßgeBlock
(
c⁄ãxt
);

393 
c⁄ãxt
->
Mesßge_Block_Index
 < 56)

395 
c⁄ãxt
->
Mesßge_Block
[c⁄ãxt->
Mesßge_Block_Index
++] = 0;

400 
c⁄ãxt
->
Mesßge_Block
[c⁄ãxt->
Mesßge_Block_Index
++] = 0x80;

401 
c⁄ãxt
->
Mesßge_Block_Index
 < 56)

403 
c⁄ãxt
->
Mesßge_Block
[c⁄ãxt->
Mesßge_Block_Index
++] = 0;

410 
c⁄ãxt
->
Mesßge_Block
[56] = (c⁄ãxt->
Lígth_High
 >> 24) & 0xFF;

411 
c⁄ãxt
->
Mesßge_Block
[57] = (c⁄ãxt->
Lígth_High
 >> 16) & 0xFF;

412 
c⁄ãxt
->
Mesßge_Block
[58] = (c⁄ãxt->
Lígth_High
 >> 8) & 0xFF;

413 
c⁄ãxt
->
Mesßge_Block
[59] = (c⁄ãxt->
Lígth_High
) & 0xFF;

414 
c⁄ãxt
->
Mesßge_Block
[60] = (c⁄ãxt->
Lígth_Low
 >> 24) & 0xFF;

415 
c⁄ãxt
->
Mesßge_Block
[61] = (c⁄ãxt->
Lígth_Low
 >> 16) & 0xFF;

416 
c⁄ãxt
->
Mesßge_Block
[62] = (c⁄ãxt->
Lígth_Low
 >> 8) & 0xFF;

417 
c⁄ãxt
->
Mesßge_Block
[63] = (c⁄ãxt->
Lígth_Low
) & 0xFF;

419 
	`SHA1Pro˚ssMesßgeBlock
(
c⁄ãxt
);

420 
	}
}

424 
	$˛ic⁄_sha1hex
(c⁄° *
°r
)

426 
i
;

427 *
ªt°r
;

428 
SHA1C⁄ãxt
 
c⁄ãxt
;

431 
	`SHA1Re£t
(&
c⁄ãxt
);

432 
	`SHA1I≈ut
(&
c⁄ãxt
, (c⁄° *)
°r
, 
	`°æí
(str));

433 i‡(!
	`SHA1Resu…
(&
c⁄ãxt
)) {

434 
	`˛ic⁄_îr
(
OE_UNIX
, 0, "CouldÇot compute SHA1 message digest");

435  
NULL
;

439 i‡((
ªt°r
 = 
	`mÆloc
(41)Ë=
NULL
) {

440 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "malloc");

441  
NULL
;

444 
i
 = 0; i < 5 ; i++)

445 
	`•rötf
(
ªt°r
 + (
i
*8), "%.8x", 
c⁄ãxt
.
Mesßge_Dige°
[i]);

447  
ªt°r
;

448 
	}
}

	@clixon-master/lib/src/clixon_sig.c

36 #ifde‡
HAVE_CONFIG_H


37 
	~"˛ix⁄_c⁄fig.h
"

40 
	~<°dio.h
>

41 
	~<°rög.h
>

42 
	~<°dlib.h
>

43 
	~<uni°d.h
>

44 
	~<°d¨g.h
>

45 
	~<sig«l.h
>

46 
	~<sy¶og.h
>

47 
	~<î∫o.h
>

50 
	~"˛ix⁄_îr.h
"

51 
	~"˛ix⁄_log.h
"

52 
	~"˛ix⁄_sig.h
"

60 
£t_sig«l
(
signo
,

61 (*
h™dÀr
)(),

62 (**
ﬁdh™dÀr
)())

64 #i‡
	`deföed
(
HAVE_SIGACTION
)

65 
siga˘i⁄
 
sﬁd
, 
¢ew
;

67 
¢ew
.
ß_h™dÀr
 = 
h™dÀr
;

68 
	`sigem±y£t
(&
¢ew
.
ß_mask
);

69 
¢ew
.
ß_Êags
 = 0;

70 i‡(
	`siga˘i⁄
 (
signo
, &
¢ew
, &
sﬁd
) < 0){

71 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "sigaction");

74 i‡(
ﬁdh™dÀr
)

75 *
ﬁdh™dÀr
 = 
sﬁd
.
ß_h™dÀr
;

77 #ñi‡
	`deföed
(
HAVE_SIGVEC
)

78 
	`as£π
(0);

81 
	}
}

88 
	$˛ic⁄_sig«l_block
 (
sig
)

90 
sig£t_t


91 
£t
;

93 
	`sigem±y£t
 (&
£t
);

94 i‡(
sig
)

95 
	`sigadd£t
 (&
£t
, 
sig
);

97 
	`sigfûl£t
 (&
£t
);

99 
	`sig¥ocmask
 (
SIG_BLOCK
, &
£t
, 
NULL
);

100 
	}
}

106 
	$˛ic⁄_sig«l_unblock
 (
sig
)

108 
sig£t_t


109 
£t
;

111 
	`sigem±y£t
 (&
£t
);

112 i‡(
sig
)

113 
	`sigadd£t
 (&
£t
, 
sig
);

115 
	`sigfûl£t
 (&
£t
);

117 
	`sig¥ocmask
 (
SIG_UNBLOCK
, &
£t
, 
NULL
);

118 
	}
}

128 
	$pidfûe_gë
(*
pidfûe
,

129 
pid_t
 *
pid0
)

131 
FILE
 *
f
;

132 *
±r
;

133 
buf
[32];

134 
pid_t
 
pid
;

136 i‡((
f
 = 
	`f›í
 (
pidfûe
, "r")Ë!
NULL
){

137 
±r
 = 
	`fgës
(
buf
, (buf), 
f
);

138 
	`f˛o£
 (
f
);

139 i‡(
±r
 !
NULL
 && (
pid
 = 
	`©oi
 (ptr)) > 1) {

140 i‡(
	`kûl
 (
pid
, 0Ë=0 || 
î∫o
 !
ESRCH
) {

142 *
pid0
 = 
pid
;

147 *
pid0
 = 0;

149 
	}
}

159 
	$pidfûe_z≠ﬁd
(
pid_t
 
pid
)

161 
	`˛ic⁄_log
(
LOG_NOTICE
, "Kûlög old d´m⁄ wôhÖid: %d", 
pid
);

162 
	`kûÕg
(
pid
, 
SIGTERM
);

163 
	`kûl
(
pid
, 
SIGTERM
);

164 
	`¶ìp
(1);

165 i‡((
	`kûl
 (
pid
, 0)Ë!0 && 
î∫o
 =
ESRCH
)

168 
	`˛ic⁄_îr
(
OE_DEMON
, 
î∫o
, "Killing old demon");

172 
	}
}

179 
	$pidfûe_wrôe
(*
pidfûe
)

181 
FILE
 *
f
 = 
NULL
;

182 
ªtvÆ
 = -1;

185 i‡((
f
 = 
	`f›í
(
pidfûe
, "w")Ë=
NULL
){

186 i‡(
î∫o
 =
EACCES
)

187 
	`˛ic⁄_îr
(
OE_DEMON
, 
î∫o
, "Cª©ögÖid-fûê%†(TryÑu¿a†roŸ?)", 
pidfûe
);

189 
	`˛ic⁄_îr
(
OE_DEMON
, 
î∫o
, "Cª©ögÖid-fûê%s", 
pidfûe
);

190 
d⁄e
;

192 i‡((
ªtvÆ
 = 
	`Ârötf
(
f
, "%ld\n", (Ë
	`gëpid
())) < 1){

193 
	`˛ic⁄_îr
(
OE_DEMON
, 
î∫o
, "CouldÇŸ wrôêpidÅÿ%s", 
pidfûe
);

194 
d⁄e
;

196 
	`˛ic⁄_debug
(1, "O≥√dÖidfûê%†wôhÖid %d", 
pidfûe
, 
	`gëpid
());

197 
ªtvÆ
 = 0;

198 
d⁄e
:

199 i‡(
f
 !
NULL
)

200 
	`f˛o£
(
f
);

201  
ªtvÆ
;

202 
	}
}

	@clixon-master/lib/src/clixon_string.c

38 #ifde‡
HAVE_CONFIG_H


39 
	~"˛ix⁄_c⁄fig.h
"

42 
	~<°dio.h
>

43 
	~<°rög.h
>

44 
	~<°döt.h
>

45 
	~<°dlib.h
>

46 
	~<î∫o.h
>

47 
	~<ªgex.h
>

48 
	~<˘y≥.h
>

50 
	~<˛igí/˛igí.h
>

53 
	~"˛ix⁄_queue.h
"

54 
	~"˛ix⁄_°rög.h
"

55 
	~"˛ix⁄_îr.h
"

73 
	$˛ic⁄_°r£p
(*
°rög
,

74 *
dñim
,

75 *
nvec0
)

77 **
vec
 = 
NULL
;

78 *
±r
;

79 *
p
;

80 
nvec
 = 1;

81 
i
;

82 
size_t
 
siz
;

83 *
s
;

84 *
d
;

86 i‡((
s
 = 
°rög
)==
NULL
)

87 
d⁄e
;

88 *
s
){

89 i‡((
d
 = 
	`ödex
(
dñim
, *
s
)Ë!
NULL
)

90 
nvec
++;

91 
s
++;

94 
siz
 = (
nvec
+1)* (*Ë+ 
	`°æí
(
°rög
)+1;

95 i‡((
vec
 = (**)
	`mÆloc
(
siz
)Ë=
NULL
){

96 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "malloc");

97 
d⁄e
;

99 
	`mem£t
(
vec
, 0, 
siz
);

100 
±r
 = (*)
vec
 + (
nvec
+1)* (*);

101 
	`°∫˝y
(
±r
, 
°rög
, 
	`°æí
(string)+1);

102 
i
 = 0;

103 (
p
 = 
	`°r£p
(&
±r
, 
dñim
)Ë!
NULL
)

104 
vec
[
i
++] = 
p
;

105 *
nvec0
 = 
nvec
;

106 
d⁄e
:

107  
vec
;

108 
	}
}

117 
	$˛ic⁄_°rjoö
(
¨gc
,

118 **
¨gv
,

119 *
dñim
)

121 
i
;

122 
Àn
;

123 *
°r
;

125 
Àn
 = 0;

126 
i
 = 0; i < 
¨gc
; i++)

127 
Àn
 +
	`°æí
(
¨gv
[
i
]);

128 i‡(
dñim
)

129 
Àn
 +(
	`°æí
(
dñim
Ë* 
¨gc
);

130 
Àn
 += 1;

131 i‡((
°r
 = 
	`mÆloc
(
Àn
)Ë=
NULL
)

132  
NULL
;

133 
	`mem£t
 (
°r
, '\0', 
Àn
);

134 
i
 = 0; i < 
¨gc
; i++) {

135 i‡(
i
 != 0)

136 
	`°∫ˇt
 (
°r
, 
dñim
, 
Àn
 - 
	`°æí
(str));

137 
	`°∫ˇt
 (
°r
, 
¨gv
[
i
], 
Àn
 - 
	`°æí
(str));

139  
°r
;

140 
	}
}

143 
	$uri_uƒe£rved
(
ö
)

145 
ö
) {

164 
	}
}

176 
	$uri_≥r˚¡_ícode
(*
°r
,

177 **
es˝
)

179 
ªtvÆ
 = -1;

180 *
esc
 = 
NULL
;

181 
Àn
;

182 
i
, 
j
;

185 
Àn
 = 
	`°æí
(
°r
)*3+1;

186 i‡((
esc
 = 
	`mÆloc
(
Àn
)Ë=
NULL
){

187 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "malloc");

188 
d⁄e
;

190 
	`mem£t
(
esc
, 0, 
Àn
);

191 
j
 = 0;

192 
i
=0; i<
	`°æí
(
°r
); i++){

193 i‡(
	`uri_uƒe£rved
(
°r
[
i
]))

194 
esc
[
j
++] = 
°r
[
i
];

196 
	`¢¥ötf
(&
esc
[
j
], 4, "%%%02X", 
°r
[
i
]&0xff);

197 
j
 += 3;

200 *
es˝
 = 
esc
;

201 
ªtvÆ
 = 0;

202 
d⁄e
:

203 i‡(
ªtvÆ
 < 0 && 
esc
)

204 
	`‰ì
(
esc
);

205  
ªtvÆ
;

206 
	}
}

217 
	$uri_≥r˚¡_decode
(*
esc
,

218 **
°Ω
)

220 
ªtvÆ
 = -1;

221 *
°r
 = 
NULL
;

222 
i
, 
j
;

223 
h°r
[3];

224 
Àn
;

225 *
±r
;

228 
Àn
 = 
	`°æí
(
esc
)+1;

229 i‡((
°r
 = 
	`mÆloc
(
Àn
)Ë=
NULL
){

230 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "malloc");

231 
d⁄e
;

233 
	`mem£t
(
°r
, 0, 
Àn
);

234 
j
 = 0;

235 
i
=0; i<
	`°æí
(
esc
); i++){

236 i‡(
esc
[
i
] ='%' && 
	`°æí
(esc)-i > 2 &&

237 
	`isxdigô
(
esc
[
i
+1]) && isxdigit(esc[i+2])){

238 
h°r
[0] = 
esc
[
i
+1];

239 
h°r
[1] = 
esc
[
i
+2];

240 
h°r
[2] = 0;

241 
°r
[
j
] = 
	`°πoul
(
h°r
, &
±r
, 16);

242 
i
 += 2;

245 
°r
[
j
] = 
esc
[
i
];

246 
j
++;

248 
°r
[
j
++] = '\0';

249 *
°Ω
 = 
°r
;

250 
ªtvÆ
 = 0;

251 
d⁄e
:

252 i‡(
ªtvÆ
 < 0 && 
°r
)

253 
	`‰ì
(
°r
);

254  
ªtvÆ
;

255 
	}
}

282 
	$xml_ch¨d©a_ícode
(*
°r
,

283 **
es˝
)

285 
ªtvÆ
 = -1;

286 *
esc
 = 
NULL
;

287 
l
;

288 
Àn
;

289 
i
, 
j
;

291 
Àn
 = 0;

292 
i
=0; i<
	`°æí
(
°r
); i++){

293 
°r
[
i
]){

295 
Àn
 +
	`°æí
("&amp; ");

298 
Àn
 +
	`°æí
("&lt; ");

301 
Àn
 +
	`°æí
("&gt; ");

304 
Àn
++;

307 
Àn
++;

308 i‡((
esc
 = 
	`mÆloc
(
Àn
)Ë=
NULL
){

309 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "malloc");

310 
d⁄e
;

312 
	`mem£t
(
esc
, 0, 
Àn
);

313 
j
 = 0;

314 
i
=0; i<
	`°æí
(
°r
); i++){

315 
°r
[
i
]){

317 i‡((
l
=
	`¢¥ötf
(&
esc
[
j
], 7, "&amp; ")) < 0){

318 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "snprintf");

319 
d⁄e
;

321 
j
 +
l
;

324 i‡((
l
=
	`¢¥ötf
(&
esc
[
j
], 6, "&lt; ")) < 0){

325 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "snprintf");

326 
d⁄e
;

328 
j
 +
l
;

331 i‡((
l
=
	`¢¥ötf
(&
esc
[
j
], 6, "&gt; ")) < 0){

332 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "snprintf");

333 
d⁄e
;

335 
j
 +
l
;

338 
esc
[
j
++] = 
°r
[
i
];

341 *
es˝
 = 
esc
;

342 
ªtvÆ
 = 0;

343 
d⁄e
:

344 i‡(
ªtvÆ
 < 0 && 
esc
)

345 
	`‰ì
(
esc
);

346  
ªtvÆ
;

347 
	}
}

366 
	$°r2cvec
(*
°rög
,

367 
dñim1
,

368 
dñim2
,

369 
cvec
 **
cvp
)

371 
ªtvÆ
 = -1;

372 *
s
;

373 *
s0
 = 
NULL
;;

374 *
vÆ
;

375 *
vÆu
;

376 *
¢ext
;

377 
cvec
 *
cvv
 = 
NULL
;

378 
cg_v¨
 *
cv
;

380 i‡((
s0
 = 
	`°rdup
(
°rög
)Ë=
NULL
){

381 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "strdup");

382 
îr
;

384 
s
 = 
s0
;

385 i‡((
cvv
 = 
	`cvec_√w
(0)Ë==
NULL
){

386 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "cvec_new");

387 
îr
;

389 
s
 !
NULL
) {

397 i‡((
¢ext
 = 
	`ödex
(
s
, 
dñim1
)Ë!
NULL
)

398 *(
¢ext
++) = '\0';

399 i‡((
vÆ
 = 
	`ödex
(
s
, 
dñim2
)Ë!
NULL
){

400 *(
vÆ
++) = '\0';

401 i‡(
	`uri_≥r˚¡_decode
(
vÆ
, &
vÆu
) < 0)

402 
îr
;

403 i‡((
cv
 = 
	`cvec_add
(
cvv
, 
CGV_STRING
)Ë=
NULL
){

404 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "cvec_add");

405 
îr
;

407 (
	`°æí
(
s
Ë> 0Ë&& 
	`isbœnk
(*s))

408 
s
++;

409 
	`cv_«me_£t
(
cv
, 
s
);

410 
	`cv_°rög_£t
(
cv
, 
vÆu
);

411 
	`‰ì
(
vÆu
); vÆu = 
NULL
;

414 i‡(
	`°æí
(
s
)){

415 i‡((
cv
 = 
	`cvec_add
(
cvv
, 
CGV_STRING
)Ë=
NULL
){

416 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "cvec_add");

417 
îr
;

419 
	`cv_«me_£t
(
cv
, 
s
);

420 
	`cv_°rög_£t
(
cv
, "");

423 
s
 = 
¢ext
;

425 
ªtvÆ
 = 0;

426 
d⁄e
:

427 *
cvp
 = 
cvv
;

428 i‡(
s0
)

429 
	`‰ì
(
s0
);

430  
ªtvÆ
;

431 
îr
:

432 i‡(
cvv
){

433 
	`cvec_‰ì
(
cvv
);

434 
cvv
 = 
NULL
;

436 
d⁄e
;

437 
	}
}

447 
	$˛ic⁄_öt2°r
(c⁄° 
m≠_°r2öt
 *
m°ab
,

448 
i
)

450 c⁄° 
m≠_°r2öt
 *
ms
;

452 
ms
 = &
m°ab
[0]; ms->
ms_°r
; ms++)

453 i‡(
ms
->
ms_öt
 =
i
)

454  
ms
->
ms_°r
;

455  
NULL
;

456 
	}
}

466 
	$˛ic⁄_°r2öt
(c⁄° 
m≠_°r2öt
 *
m°ab
,

467 *
°r
)

469 c⁄° 
m≠_°r2öt
 *
ms
;

471 
ms
 = &
m°ab
[0]; ms->
ms_°r
; ms++)

472 i‡(
	`°rcmp
(
ms
->
ms_°r
, 
°r
) == 0)

473  
ms
->
ms_öt
;

475 
	}
}

479 #i‚de‡
HAVE_STRNDUP


481 
	$˛ic⁄_°∫dup
 (c⁄° *
°r
,

482 
size_t
 
Àn
)

484 *
√w
;

485 
size_t
 
¶í
;

487 
¶í
 = 
	`°æí
 (
°r
);

488 
Àn
 = (À¿< 
¶í
 ?Üen : slen);

490 
√w
 = 
	`mÆloc
 (
Àn
 + 1);

491 i‡(
√w
 =
NULL
)

492  
NULL
;

494 
√w
[
Àn
] = '\0';

495 
	`mem˝y
 (
√w
, 
°r
, 
Àn
);

497  
√w
;

498 
	}
}

513 
	$ußge
(*
¨gv0
)

515 
	`Ârötf
(
°dîr
, "ußge:%†<°rög>\n", 
¨gv0
);

516 
	`exô
(0);

517 
	}
}

520 
	$maö
(
¨gc
, **
¨gv
)

522 
nvec
;

523 **
vec
;

524 *
°r0
;

525 *
°r1
;

526 
i
;

528 i‡(
¨gc
 != 2){

529 
	`ußge
(
¨gv
[0]);

532 
°r0
 = 
¨gv
[1];

533 i‡((
vec
 = 
	`˛ic⁄_°r£p
(
°r0
, " \t", &
nvec
)Ë=
NULL
)

535 
	`Ârötf
(
°dîr
, "nvec: %d\n", 
nvec
);

536 
i
=0; i<
nvec
+1; i++)

537 
	`Ârötf
(
°dîr
, "vec[%d]: %s\n", 
i
, 
vec
[i]);

538 i‡((
°r1
 = 
	`˛ic⁄_°rjoö
(
nvec
, 
vec
, " ")Ë=
NULL
)

540 
	`Ârötf
(
°dîr
, "joö: %s\n", 
°r1
);

541 
	`‰ì
(
vec
);

542 
	`‰ì
(
°r1
);

544 
	}
}

	@clixon-master/lib/src/clixon_xml.c

39 #ifde‡
HAVE_CONFIG_H


40 
	~"˛ix⁄_c⁄fig.h
"

43 
	~<°dio.h
>

44 
	~<°dlib.h
>

45 
	~<uni°d.h
>

46 
	~<î∫o.h
>

47 
	~<°rög.h
>

48 
	~<limôs.h
>

49 
	~<‚m©ch.h
>

50 
	~<°döt.h
>

51 
	~<as£π.h
>

54 
	~<˛igí/˛igí.h
>

57 
	~"˛ix⁄_îr.h
"

58 
	~"˛ix⁄_log.h
"

59 
	~"˛ix⁄_°rög.h
"

60 
	~"˛ix⁄_queue.h
"

61 
	~"˛ix⁄_hash.h
"

62 
	~"˛ix⁄_h™dÀ.h
"

63 
	~"˛ix⁄_y™g.h
"

64 
	~"˛ix⁄_xml.h
"

65 
	~"˛ix⁄_xml_s‹t.h
"

66 
	~"˛ix⁄_xml_∑r£.h
"

72 
	#BUFLEN
 1024

	)

74 
	#XML_INDENT
 3

	)

76 
	#XML_TOP_SYMBOL
 "t›"

	)

103 
	sxml
{

104 *
	mx_«me
;

105 *
	mx_«me•a˚
;

106 
xml
 *
	mx_up
;

107 
xml
 **
	mx_chûdvec
;

108 
	mx_chûdvec_Àn
;

109 
cxobj_ty≥
 
	mx_ty≥
;

110 *
	mx_vÆue
;

111 
	m_x_ve˘‹_i
;

112 
	mx_Êags
;

113 
y™g_°mt
 *
	mx_•ec
;

115 
cg_v¨
 *
	mx_cv
;

119 c⁄° 
m≠_°r2öt
 
	gxsm≠
[] = {

120 {"îr‹", 
CX_ERROR
},

121 {"ñemít", 
CX_ELMNT
},

122 {"©å", 
CX_ATTR
},

123 {"body", 
CX_BODY
},

124 {
NULL
, -1}

133 
	$xml_ty≥2°r
(
cxobj_ty≥
 
ty≥
)

135  (*)
	`˛ic⁄_öt2°r
(
xsm≠
, 
ty≥
);

136 
	}
}

146 
	$xml_«me
(
cxobj
 *
xn
)

148  
xn
->
x_«me
;

149 
	}
}

158 
	$xml_«me_£t
(
cxobj
 *
xn
,

159 *
«me
)

161 i‡(
xn
->
x_«me
){

162 
	`‰ì
(
xn
->
x_«me
);

163 
xn
->
x_«me
 = 
NULL
;

165 i‡(
«me
){

166 i‡((
xn
->
x_«me
 = 
	`°rdup
(
«me
)Ë=
NULL
){

167 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "strdup");

172 
	}
}

179 
	$xml_«me•a˚
(
cxobj
 *
xn
)

181  
xn
->
x_«me•a˚
;

182 
	}
}

191 
	$xml_«me•a˚_£t
(
cxobj
 *
xn
,

192 *
«me•a˚
)

194 i‡(
xn
->
x_«me•a˚
){

195 
	`‰ì
(
xn
->
x_«me•a˚
);

196 
xn
->
x_«me•a˚
 = 
NULL
;

198 i‡(
«me•a˚
){

199 i‡((
xn
->
x_«me•a˚
 = 
	`°rdup
(
«me•a˚
)Ë=
NULL
){

200 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "strdup");

205 
	}
}

211 
cxobj
*

212 
	$xml_∑ª¡
(
cxobj
 *
xn
)

214  
xn
->
x_up
;

215 
	}
}

223 
	$xml_∑ª¡_£t
(
cxobj
 *
xn
,

224 
cxobj
 *
∑ª¡
)

226 
xn
->
x_up
 = 
∑ª¡
;

228 
	}
}

234 
uöt16_t


235 
	$xml_Êag
(
cxobj
 *
xn
,

236 
uöt16_t
 
Êag
)

238  
xn
->
x_Êags
&
Êag
;

239 
	}
}

246 
	$xml_Êag_£t
(
cxobj
 *
xn
,

247 
uöt16_t
 
Êag
)

249 
xn
->
x_Êags
 |
Êag
;

251 
	}
}

258 
	$xml_Êag_ª£t
(
cxobj
 *
xn
,

259 
uöt16_t
 
Êag
)

261 
xn
->
x_Êags
 &~
Êag
;

263 
	}
}

270 
	$xml_vÆue
(
cxobj
 *
xn
)

272  
xn
->
x_vÆue
;

273 
	}
}

282 
	$xml_vÆue_£t
(
cxobj
 *
xn
,

283 *
vÆ
)

285 i‡(
xn
->
x_vÆue
){

286 
	`‰ì
(
xn
->
x_vÆue
);

287 
xn
->
x_vÆue
 = 
NULL
;

289 i‡(
vÆ
){

290 i‡((
xn
->
x_vÆue
 = 
	`°rdup
(
vÆ
)Ë=
NULL
){

291 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "strdup");

296 
	}
}

305 
	$xml_vÆue_≠≥nd
(
cxobj
 *
xn
,

306 *
vÆ
)

308 
Àn0
;

309 
Àn
;

311 
Àn0
 = 
xn
->
x_vÆue
?
	`°æí
(xn->x_value):0;

312 i‡(
vÆ
){

313 
Àn
 = 
Àn0
 + 
	`°æí
(
vÆ
);

314 i‡((
xn
->
x_vÆue
 = 
	`ªÆloc
(xn->x_vÆue, 
Àn
+1)Ë=
NULL
){

315 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "realloc");

316  
NULL
;

318 
	`°∫˝y
(
xn
->
x_vÆue
 + 
Àn0
, 
vÆ
, 
Àn
-len0+1);

320  
xn
->
x_vÆue
;

321 
	}
}

327 
cxobj_ty≥


328 
	$xml_ty≥
(
cxobj
 *
xn
)

330  
xn
->
x_ty≥
;

331 
	}
}

338 
cxobj_ty≥


339 
	$xml_ty≥_£t
(
cxobj
 *
xn
,

340 
cxobj_ty≥
 
ty≥
)

342 
cxobj_ty≥
 
ﬁd
 = 
xn
->
x_ty≥
;

344 
xn
->
x_ty≥
 = 
ty≥
;

345  
ﬁd
;

346 
	}
}

353 
cg_v¨
 *

354 
	$xml_cv_gë
(
cxobj
 *
xn
)

356 i‡(
xn
->
x_cv
)

357  
xn
->
x_cv
;

359  
NULL
;

360 
	}
}

368 
	$xml_cv_£t
(
cxobj
 *
xn
,

369 
cg_v¨
 *
cv
)

371 i‡(
xn
->
x_cv
)

372 
	`‰ì
(
xn
->
x_cv
);

373 
xn
->
x_cv
 = 
cv
;

375 
	}
}

382 
	$xml_chûd_ƒ
(
cxobj
 *
xn
)

384  
xn
->
x_chûdvec_Àn
;

385 
	}
}

393 
	$xml_chûd_ƒ_ty≥
(
cxobj
 *
xn
,

394 
cxobj_ty≥
 
ty≥
)

396 
cxobj
 *
x
 = 
NULL
;

397 
Àn
 = 0;

399 (
x
 = 
	`xml_chûd_óch
(
xn
, x, 
ty≥
)Ë!
NULL
)

400 
Àn
++;

401  
Àn
;

402 
	}
}

409 
cxobj
 *

410 
	$xml_chûd_i
(
cxobj
 *
xn
,

411 
i
)

413 i‡(
i
 < 
xn
->
x_chûdvec_Àn
)

414  
xn
->
x_chûdvec
[
i
];

415  
NULL
;

416 
	}
}

424 
cxobj
 *

425 
	$xml_chûd_i_£t
(
cxobj
 *
xt
,

426 
i
,

427 
cxobj
 *
xc
)

429 i‡(
i
 < 
xt
->
x_chûdvec_Àn
)

430 
xt
->
x_chûdvec
[
i
] = 
xc
;

432 
	}
}

450 
cxobj
 *

451 
	$xml_chûd_óch
(
cxobj
 *
x∑ª¡
,

452 
cxobj
 *
x¥ev
,

453 
cxobj_ty≥
 
ty≥
)

455 
i
;

456 
cxobj
 *
xn
 = 
NULL
;

458 
i
=
x¥ev
?x¥ev->
_x_ve˘‹_i
+1:0; i<
x∑ª¡
->
x_chûdvec_Àn
; i++){

459 
xn
 = 
x∑ª¡
->
x_chûdvec
[
i
];

460 i‡(
xn
 =
NULL
)

462 i‡(
ty≥
 !
CX_ERROR
 && 
xn
->
x_ty≥
 !=Åype)

466 i‡(
i
 < 
x∑ª¡
->
x_chûdvec_Àn
)

467 
xn
->
_x_ve˘‹_i
 = 
i
;

469 
xn
 = 
NULL
;

470  
xn
;

471 
	}
}

477 
	$xml_chûd_≠≥nd
(
cxobj
 *
x
,

478 
cxobj
 *
xc
)

480 
x
->
x_chûdvec_Àn
++;

481 
x
->
x_chûdvec
 = 
	`ªÆloc
(x->x_chûdvec, x->
x_chûdvec_Àn
*(
cxobj
*));

482 i‡(
x
->
x_chûdvec
 =
NULL
){

483 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "realloc");

486 
x
->
x_chûdvec
[x->
x_chûdvec_Àn
-1] = 
xc
;

488 
	}
}

498 
	$xml_chûdvec_£t
(
cxobj
 *
x
,

499 
Àn
)

501 
x
->
x_chûdvec_Àn
 = 
Àn
;

502 i‡((
x
->
x_chûdvec
 = 
	`ˇŒoc
(
Àn
, (
cxobj
*))Ë=
NULL
){

503 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "calloc");

507 
	}
}

509 
cxobj
 **

510 
	$xml_chûdvec_gë
(
cxobj
 *
x
)

512  
x
->
x_chûdvec
;

513 
	}
}

533 
cxobj
 *

534 
	$xml_√w
(*
«me
,

535 
cxobj
 *
xp
,

536 
y™g_°mt
 *
y•ec
)

538 
cxobj
 *
x
;

540 i‡((
x
 = 
	`mÆloc
((
cxobj
))Ë=
NULL
){

541 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "malloc");

542  
NULL
;

544 
	`mem£t
(
x
, 0, (
cxobj
));

545 i‡((
	`xml_«me_£t
(
x
, 
«me
)) < 0)

546  
NULL
;

547 i‡(
xp
){

548 
	`xml_∑ª¡_£t
(
x
, 
xp
);

549 i‡(
	`xml_chûd_≠≥nd
(
xp
, 
x
) < 0)

550  
NULL
;

552 
x
->
x_•ec
 = 
y•ec
;

553  
x
;

554 
	}
}

559 
y™g_°mt
 *

560 
	$xml_•ec
(
cxobj
 *
x
)

562  
x
->
x_•ec
;

563 
	}
}

566 
	$xml_•ec_£t
(
cxobj
 *
x
,

567 
y™g_°mt
 *
•ec
)

569 
x
->
x_•ec
 = 
•ec
;

571 
	}
}

584 
cxobj
 *

585 
	$xml_föd
(
cxobj
 *
x_up
,

586 *
«me
)

588 
cxobj
 *
x
 = 
NULL
;

590 (
x
 = 
	`xml_chûd_óch
(
x_up
, x, -1)Ë!
NULL
)

591 i‡(
	`°rcmp
(
«me
, 
	`xml_«me
(
x
)) == 0)

592  
x
;

593  
NULL
;

594 
	}
}

604 
	$xml_addsub
(
cxobj
 *
xp
,

605 
cxobj
 *
xc
)

607 
cxobj
 *
ﬁdp
;

608 
i
;

610 i‡((
ﬁdp
 = 
	`xml_∑ª¡
(
xc
)Ë!
NULL
){

612 
i
=0; i<
	`xml_chûd_ƒ
(
ﬁdp
); i++)

613 i‡(
	`xml_chûd_i
(
ﬁdp
, 
i
Ë=
xc
)

616 i‡(
i
 < 
	`xml_chûd_ƒ
(
ﬁdp
))

617 
	`xml_chûd_rm
(
ﬁdp
, 
i
);

620 i‡(
xp
){

621 i‡(
	`xml_chûd_≠≥nd
(
xp
, 
xc
) < 0)

624 
	`xml_∑ª¡_£t
(
xc
, 
xp
);

627 
	}
}

638 
cxobj
 *

639 
	$xml_ö£π
(
cxobj
 *
xp
,

640 *
èg
)

642 
cxobj
 *
xc
;

644 i‡((
xc
 = 
	`xml_√w
(
èg
, 
NULL
, NULL)) == NULL)

645 
ˇtch
;

646 
xp
->
x_chûdvec_Àn
)

647 i‡(
	`xml_addsub
(
xc
, 
	`xml_chûd_i
(
xp
, 0)) < 0)

648 
ˇtch
;

649 i‡(
	`xml_addsub
(
xp
, 
xc
) < 0)

650 
ˇtch
;

651 
ˇtch
:

652  
xc
;

653 
	}
}

666 
	$xml_purge
(
cxobj
 *
xc
)

668 
ªtvÆ
 = -1;

669 
i
;

670 
cxobj
 *
xp
;

672 i‡((
xp
 = 
	`xml_∑ª¡
(
xc
)Ë!
NULL
){

674 
i
=0; i<
	`xml_chûd_ƒ
(
xp
); i++)

675 i‡(
	`xml_chûd_i
(
xp
, 
i
Ë=
xc
)

678 i‡(
i
 < 
	`xml_chûd_ƒ
(
xp
))

679 i‡(
	`xml_chûd_rm
(
xp
, 
i
) < 0)

680 
d⁄e
;

682 
	`xml_‰ì
(
xc
);

683 
ªtvÆ
 = 0;

684 
d⁄e
:

685  
ªtvÆ
;

686 
	}
}

699 
	$xml_chûd_rm
(
cxobj
 *
xp
,

700 
i
)

702 
ªtvÆ
 = -1;

703 
cxobj
 *
xc
 = 
NULL
;

705 i‡((
xc
 = 
	`xml_chûd_i
(
xp
, 
i
)Ë=
NULL
){

706 
	`˛ic⁄_îr
(
OE_XML
, 0, "ChildÇot found");

707 
d⁄e
;

709 
xp
->
x_chûdvec
[
i
] = 
NULL
;

710 
	`xml_∑ª¡_£t
(
xc
, 
NULL
);

711 
xp
->
x_chûdvec_Àn
--;

713 ; 
i
<
xp
->
x_chûdvec_Àn
; i++)

714 
xp
->
x_chûdvec
[
i
] = xp->x_childvec[i+1];

715 
ªtvÆ
 = 0;

716 
d⁄e
:

717  
ªtvÆ
;

718 
	}
}

729 
	$xml_rm
(
cxobj
 *
xc
)

731 
ªtvÆ
 = 0;

732 
cxobj
 *
xp
;

733 
cxobj
 *
x
;

734 
i
;

736 i‡((
xp
 = 
	`xml_∑ª¡
(
xc
)Ë=
NULL
)

737 
d⁄e
;

738 
ªtvÆ
 = -1;

740 
x
 = 
NULL
; 
i
 = 0;

741 (
x
 = 
	`xml_chûd_óch
(
xp
, x, -1)Ë!
NULL
) {

742 i‡(
x
 =
xc
)

744 
i
++;

746 i‡(
x
 !
NULL
)

747 
ªtvÆ
 = 
	`xml_chûd_rm
(
xp
, 
i
);

748 
d⁄e
:

749  
ªtvÆ
;

750 
	}
}

774 
	$xml_roŸchûd
(
cxobj
 *
xp
,

775 
i
,

776 
cxobj
 **
x˝
)

778 
ªtvÆ
 = -1;

779 
cxobj
 *
xc
;

781 i‡(
	`xml_∑ª¡
(
xp
Ë!
NULL
){

782 
	`˛ic⁄_îr
(
OE_XML
, 0, "Parent isÇotÑoot");

783 
d⁄e
;

785 i‡((
xc
 = 
	`xml_chûd_i
(
xp
, 
i
)Ë=
NULL
){

786 
	`˛ic⁄_îr
(
OE_XML
, 0, "ChildÇot found");

787 
d⁄e
;

789 i‡(
	`xml_chûd_rm
(
xp
, 
i
) < 0)

790 
d⁄e
;

791 i‡(
	`xml_‰ì
(
xp
) < 0)

792 
d⁄e
;

793 *
x˝
 = 
xc
;

794 
ªtvÆ
 = 0;

795 
d⁄e
:

796  
ªtvÆ
;

797 
	}
}

810 
	$xml_body
(
cxobj
 *
xn
)

812 
cxobj
 *
xb
 = 
NULL
;

814 (
xb
 = 
	`xml_chûd_óch
(
xn
, xb, 
CX_BODY
)Ë!
NULL
)

815  
	`xml_vÆue
(
xb
);

816  
NULL
;

817 
	}
}

825 
cxobj
 *

826 
	$xml_body_gë
(
cxobj
 *
xt
)

828 
cxobj
 *
xb
 = 
NULL
;

830 (
xb
 = 
	`xml_chûd_óch
(
xt
, xb, 
CX_BODY
)Ë!
NULL
)

831  
xb
;

832  
NULL
;

833 
	}
}

851 
	$xml_föd_vÆue
(
cxobj
 *
xt
,

852 *
«me
)

854 
cxobj
 *
x
 = 
NULL
;

856 (
x
 = 
	`xml_chûd_óch
(
xt
, x, -1)Ë!
NULL
)

857 i‡(
	`°rcmp
(
«me
, 
	`xml_«me
(
x
)) == 0)

858  
	`xml_vÆue
(
x
);

859  
NULL
;

860 
	}
}

875 
	$xml_föd_body
(
cxobj
 *
xt
,

876 *
«me
)

878 
cxobj
 *
x
=
NULL
;

880 (
x
 = 
	`xml_chûd_óch
(
xt
, x, -1)Ë!
NULL
)

881 i‡(
	`°rcmp
(
«me
, 
	`xml_«me
(
x
)) == 0)

882  
	`xml_body
(
x
);

883  
NULL
;

884 
	}
}

900 
cxobj
 *

901 
	$xml_föd_body_obj
(
cxobj
 *
xt
,

902 *
«me
,

903 *
vÆ
)

905 
cxobj
 *
x
 = 
NULL
;

906 *
b°r
;

908 (
x
 = 
	`xml_chûd_óch
(
xt
, x, 
CX_ELMNT
)Ë!
NULL
) {

909 i‡(
	`°rcmp
(
«me
, 
	`xml_«me
(
x
)))

911 i‡((
b°r
 = 
	`xml_body
(
x
)Ë=
NULL
)

913 i‡(
	`°rcmp
(
b°r
, 
vÆ
) == 0)

916  
x
;

917 
	}
}

924 
	$xml_‰ì
(
cxobj
 *
x
)

926 
i
;

927 
cxobj
 *
xc
;

929 i‡(
x
->
x_«me
)

930 
	`‰ì
(
x
->
x_«me
);

931 i‡(
x
->
x_vÆue
)

932 
	`‰ì
(
x
->
x_vÆue
);

933 i‡(
x
->
x_«me•a˚
)

934 
	`‰ì
(
x
->
x_«me•a˚
);

935 i‡(
x
->
x_cv
)

936 
	`cv_‰ì
(
x
->
x_cv
);

937 
i
=0; i<
x
->
x_chûdvec_Àn
; i++){

938 i‡((
xc
 = 
x
->
x_chûdvec
[
i
]Ë!
NULL
){

939 
	`xml_‰ì
(
xc
);

940 
x
->
x_chûdvec
[
i
] = 
NULL
;

943 i‡(
x
->
x_chûdvec
)

944 
	`‰ì
(
x
->
x_chûdvec
);

945 
	`‰ì
(
x
);

947 
	}
}

966 
	$˛ic⁄_xml2fûe
(
FILE
 *
f
,

967 
cxobj
 *
x
,

968 
Àvñ
,

969 
¥ëty¥öt
)

971 
ªtvÆ
 = -1;

972 *
«me
;

973 *
«me•a˚
;

974 
cxobj
 *
xc
;

975 
hasbody
;

976 
ha£Àmít
;

977 *
vÆ
;

978 *
íc°r
 = 
NULL
;

980 
«me
 = 
	`xml_«me
(
x
);

981 
«me•a˚
 = 
	`xml_«me•a˚
(
x
);

982 
	`xml_ty≥
(
x
)){

983 
CX_BODY
:

984 i‡((
vÆ
 = 
	`xml_vÆue
(
x
)Ë=
NULL
)

986 i‡(
	`xml_ch¨d©a_ícode
(
vÆ
, &
íc°r
) < 0)

987 
d⁄e
;

988 
	`Ârötf
(
f
, "%s", 
íc°r
);

990 
CX_ATTR
:

991 
	`Ârötf
(
f
, " ");

992 i‡(
«me•a˚
)

993 
	`Ârötf
(
f
, "%s:", 
«me•a˚
);

994 
	`Ârötf
(
f
, "%s=\"%s\"", 
«me
, 
	`xml_vÆue
(
x
));

996 
CX_ELMNT
:

997 
	`Ârötf
(
f
, "%*s<", 
¥ëty¥öt
?(
Àvñ
*
XML_INDENT
):0, "");

998 i‡(
«me•a˚
)

999 
	`Ârötf
(
f
, "%s:", 
«me•a˚
);

1000 
	`Ârötf
(
f
, "%s", 
«me
);

1001 
hasbody
 = 0;

1002 
ha£Àmít
 = 0;

1003 
xc
 = 
NULL
;

1005 (
xc
 = 
	`xml_chûd_óch
(
x
, xc, -1)Ë!
NULL
) {

1006 
xc
->
x_ty≥
){

1007 
CX_ATTR
:

1008 i‡(
	`˛ic⁄_xml2fûe
(
f
, 
xc
, 
Àvñ
+1, 
¥ëty¥öt
) <0)

1009 
d⁄e
;

1011 
CX_BODY
:

1012 
hasbody
=1;

1014 
CX_ELMNT
:

1015 
ha£Àmít
=1;

1024 i‡(
hasbody
==0 && 
ha£Àmít
==0)

1025 
	`Ârötf
(
f
, "/>");

1027 
	`Ârötf
(
f
, ">");

1028 i‡(
¥ëty¥öt
 && 
hasbody
 == 0)

1029 
	`Ârötf
(
f
, "\n");

1030 
xc
 = 
NULL
;

1031 (
xc
 = 
	`xml_chûd_óch
(
x
, xc, -1)Ë!
NULL
) {

1032 i‡(
	`xml_ty≥
(
xc
Ë!
CX_ATTR
)

1033 i‡(
	`˛ic⁄_xml2fûe
(
f
, 
xc
, 
Àvñ
+1, 
¥ëty¥öt
) <0)

1034 
d⁄e
;

1036 i‡(
¥ëty¥öt
 && 
hasbody
==0)

1037 
	`Ârötf
(
f
, "%*s", 
Àvñ
*
XML_INDENT
, "");

1038 
	`Ârötf
(
f
, "</");

1039 i‡(
«me•a˚
)

1040 
	`Ârötf
(
f
, "%s:", 
«me•a˚
);

1041 
	`Ârötf
(
f
, "%s>", 
«me
);

1043 i‡(
¥ëty¥öt
)

1044 
	`Ârötf
(
f
, "\n");

1049 
ªtvÆ
 = 0;

1050 
d⁄e
:

1051 i‡(
íc°r
)

1052 
	`‰ì
(
íc°r
);

1053  
ªtvÆ
;

1054 
	}
}

1066 
	$xml_¥öt
(
FILE
 *
f
,

1067 
cxobj
 *
xn
)

1069  
	`˛ic⁄_xml2fûe
(
f
, 
xn
, 0, 1);

1070 
	}
}

1090 
	$˛ic⁄_xml2cbuf
(
cbuf
 *
cb
,

1091 
cxobj
 *
x
,

1092 
Àvñ
,

1093 
¥ëty¥öt
)

1095 
ªtvÆ
 = -1;

1096 
cxobj
 *
xc
;

1097 *
«me
;

1098 
hasbody
;

1099 
ha£Àmít
;

1100 *
«me•a˚
;

1101 *
íc°r
 = 
NULL
;

1102 *
vÆ
;

1104 
«me
 = 
	`xml_«me
(
x
);

1105 
«me•a˚
 = 
	`xml_«me•a˚
(
x
);

1106 
	`xml_ty≥
(
x
)){

1107 
CX_BODY
:

1108 i‡((
vÆ
 = 
	`xml_vÆue
(
x
)Ë=
NULL
)

1110 i‡(
	`xml_ch¨d©a_ícode
(
vÆ
, &
íc°r
) < 0)

1111 
d⁄e
;

1112 
	`˝rötf
(
cb
, "%s", 
íc°r
);

1114 
CX_ATTR
:

1115 
	`˝rötf
(
cb
, " ");

1116 i‡(
«me•a˚
)

1117 
	`˝rötf
(
cb
, "%s:", 
«me•a˚
);

1118 
	`˝rötf
(
cb
, "%s=\"%s\"", 
«me
, 
	`xml_vÆue
(
x
));

1120 
CX_ELMNT
:

1121 
	`˝rötf
(
cb
, "%*s<", 
¥ëty¥öt
?(
Àvñ
*
XML_INDENT
):0, "");

1122 i‡(
«me•a˚
)

1123 
	`˝rötf
(
cb
, "%s:", 
«me•a˚
);

1124 
	`˝rötf
(
cb
, "%s", 
«me
);

1125 
hasbody
 = 0;

1126 
ha£Àmít
 = 0;

1127 
xc
 = 
NULL
;

1129 (
xc
 = 
	`xml_chûd_óch
(
x
, xc, -1)Ë!
NULL
)

1130 
xc
->
x_ty≥
){

1131 
CX_ATTR
:

1132 i‡(
	`˛ic⁄_xml2cbuf
(
cb
, 
xc
, 
Àvñ
+1, 
¥ëty¥öt
) < 0)

1133 
d⁄e
;

1135 
CX_BODY
:

1136 
hasbody
=1;

1138 
CX_ELMNT
:

1139 
ha£Àmít
=1;

1145 i‡(
hasbody
==0 && 
ha£Àmít
==0)

1146 
	`˝rötf
(
cb
, "/>");

1148 
	`˝rötf
(
cb
, ">");

1149 i‡(
¥ëty¥öt
 && 
hasbody
 == 0)

1150 
	`˝rötf
(
cb
, "\n");

1151 
xc
 = 
NULL
;

1152 (
xc
 = 
	`xml_chûd_óch
(
x
, xc, -1)Ë!
NULL
)

1153 i‡(
	`xml_ty≥
(
xc
Ë!
CX_ATTR
)

1154 i‡(
	`˛ic⁄_xml2cbuf
(
cb
, 
xc
, 
Àvñ
+1, 
¥ëty¥öt
) < 0)

1155 
d⁄e
;

1156 i‡(
¥ëty¥öt
 && 
hasbody
 == 0)

1157 
	`˝rötf
(
cb
, "%*s", 
Àvñ
*
XML_INDENT
, "");

1158 
	`˝rötf
(
cb
, "</");

1159 i‡(
«me•a˚
)

1160 
	`˝rötf
(
cb
, "%s:", 
«me•a˚
);

1161 
	`˝rötf
(
cb
, "%s>", 
«me
);

1163 i‡(
¥ëty¥öt
)

1164 
	`˝rötf
(
cb
, "\n");

1169 
ªtvÆ
 = 0;

1170 
d⁄e
:

1171 i‡(
íc°r
)

1172 
	`‰ì
(
íc°r
);

1173  
ªtvÆ
;

1174 
	}
}

1181 
	$xm…ªe2cbuf
(
cbuf
 *
cb
,

1182 
cxobj
 *
x
,

1183 
Àvñ
)

1185 
cxobj
 *
xc
;

1186 
i
;

1188 
i
=0; i<
Àvñ
*
XML_INDENT
; i++)

1189 
	`˝rötf
(
cb
, " ");

1190 i‡(
	`xml_ty≥
(
x
Ë!
CX_BODY
)

1191 
	`˝rötf
(
cb
, "%s", 
	`xml_ty≥2°r
(
	`xml_ty≥
(
x
)));

1192 i‡(
	`xml_«me•a˚
(
x
)==
NULL
)

1193 
	`˝rötf
(
cb
, " %s", 
	`xml_«me
(
x
));

1195 
	`˝rötf
(
cb
, " %s:%s", 
	`xml_«me•a˚
(
x
), 
	`xml_«me
(x));

1196 i‡(
	`xml_vÆue
(
x
))

1197 
	`˝rötf
(
cb
, " vÆue:\"%s\"", 
	`xml_vÆue
(
x
));

1198 i‡(
x
->
x_Êags
)

1199 
	`˝rötf
(
cb
, " fœgs:0x%x", 
x
->
x_Êags
);

1200 i‡(
	`xml_chûd_ƒ
(
x
))

1201 
	`˝rötf
(
cb
, " {");

1202 
	`˝rötf
(
cb
, "\n");

1203 
xc
 = 
NULL
;

1204 (
xc
 = 
	`xml_chûd_óch
(
x
, xc, -1)Ë!
NULL
)

1205 
	`xm…ªe2cbuf
(
cb
, 
xc
, 
Àvñ
+1);

1206 i‡(
	`xml_chûd_ƒ
(
x
)){

1207 
i
=0; i<
Àvñ
*
XML_INDENT
; i++)

1208 
	`˝rötf
(
cb
, " ");

1209 
	`˝rötf
(
cb
, "}\n");

1212 
	}
}

1228 
	$_xml_∑r£
(c⁄° *
°r
,

1229 
y™g_•ec
 *
y•ec
,

1230 
cxobj
 *
xt
)

1232 
ªtvÆ
 = -1;

1233 
xml_∑r£_yacc_¨g
 
ya
 = {0,};

1235 i‡(
xt
 =
NULL
){

1236 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "Unexpected NULL XML");

1239 i‡((
ya
.
ya_∑r£_°rög
 = 
	`°rdup
(
°r
)Ë=
NULL
){

1240 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "strdup");

1243 
ya
.
ya_x∑ª¡
 = 
xt
;

1244 
ya
.
ya_skù•a˚
 = 1;

1245 
ya
.
ya_y•ec
 = 
y•ec
;

1246 i‡(
	`˛ix⁄_xml_∑r£l_öô
(&
ya
) < 0)

1247 
d⁄e
;

1248 i‡(
	`˛ix⁄_xml_∑r£∑r£
(&
ya
) != 0)

1249 
d⁄e
;

1251 i‡(
y•ec
){

1252 i‡(
	`xml_≠∂y0
(
xt
, 
CX_ELMNT
, 
xml_s‹t
, 
NULL
) < 0)

1253 
d⁄e
;

1254 i‡(
	`xml_≠∂y0
(
xt
, -1, 
xml_s‹t_vîify
, 
NULL
) < 0)

1255 
d⁄e
;

1257 
ªtvÆ
 = 0;

1258 
d⁄e
:

1259 
	`˛ix⁄_xml_∑r£l_exô
(&
ya
);

1260 if(
ya
.
ya_∑r£_°rög
 !
NULL
)

1261 
	`‰ì
(
ya
.
ya_∑r£_°rög
);

1262  
ªtvÆ
;

1263 
	}
}

1267 
ölöe
 

1268 
	$FSM
(*
èg
,

1269 
ch
,

1270 
°©e
)

1272 i‡(
èg
[
°©e
] =
ch
)

1273  
°©e
+1;

1276 
	}
}

1298 
	$xml_∑r£_fûe
(
fd
,

1299 *
ídèg
,

1300 
y™g_•ec
 *
y•ec
,

1301 
cxobj
 **
xt
)

1303 
ªtvÆ
 = -1;

1304 
ªt
;

1305 
Àn
 = 0;

1306 
ch
;

1307 *
xmlbuf
 = 
NULL
;

1308 *
±r
;

1309 
xmlbuÊí
 = 
BUFLEN
;

1310 
ídègÀn
 = 0;

1311 
°©e
 = 0;

1312 
ﬁdxmlbuÊí
;

1314 i‡(
ídèg
 !
NULL
)

1315 
ídègÀn
 = 
	`°æí
(
ídèg
);

1316 i‡((
xmlbuf
 = 
	`mÆloc
(
xmlbuÊí
)Ë=
NULL
){

1317 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "malloc");

1318 
d⁄e
;

1320 
	`mem£t
(
xmlbuf
, 0, 
xmlbuÊí
);

1321 
±r
 = 
xmlbuf
;

1323 i‡((
ªt
 = 
	`ªad
(
fd
, &
ch
, 1)) < 0){

1324 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "read: [pid:%d]\n",

1325 ()
	`gëpid
());

1328 i‡(
ªt
 != 0){

1329 i‡(
ídèg
)

1330 
°©e
 = 
	`FSM
(
ídèg
, 
ch
, state);

1331 
xmlbuf
[
Àn
++] = 
ch
;

1333 i‡(
ªt
 == 0 ||

1334 (
ídèg
 && (
°©e
 =
ídègÀn
))){

1335 
°©e
 = 0;

1336 i‡(*
xt
 =
NULL
)

1337 i‡((*
xt
 = 
	`xml_√w
(
XML_TOP_SYMBOL
, 
NULL
, NULL)) == NULL)

1338 
d⁄e
;

1339 i‡(
	`_xml_∑r£
(
±r
, 
y•ec
, *
xt
) < 0)

1340 
d⁄e
;

1343 i‡(
Àn
>=
xmlbuÊí
-1){

1344 
ﬁdxmlbuÊí
 = 
xmlbuÊí
;

1345 
xmlbuÊí
 *= 2;

1346 i‡((
xmlbuf
 = 
	`ªÆloc
(xmlbuf, 
xmlbuÊí
)Ë=
NULL
){

1347 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "realloc");

1348 
d⁄e
;

1350 
	`mem£t
(
xmlbuf
+
ﬁdxmlbuÊí
, 0, 
xmlbuÊí
-oldxmlbuflen);

1351 
±r
 = 
xmlbuf
;

1354 
ªtvÆ
 = 0;

1355 
d⁄e
:

1356 i‡(
ªtvÆ
 < 0 && *
xt
){

1357 
	`‰ì
(*
xt
);

1358 *
xt
 = 
NULL
;

1360 i‡(
xmlbuf
)

1361 
	`‰ì
(
xmlbuf
);

1362  
ªtvÆ
;

1363 
	}
}

1385 
	$xml_∑r£_°rög
(c⁄° *
°r
,

1386 
y™g_•ec
 *
y•ec
,

1387 
cxobj
 **
xt›
)

1389 i‡(*
xt›
 =
NULL
)

1390 i‡((*
xt›
 = 
	`xml_√w
(
XML_TOP_SYMBOL
, 
NULL
, NULL)) == NULL)

1392  
	`_xml_∑r£
(
°r
, 
y•ec
, *
xt›
);

1393 
	}
}

1417 
	$xml_∑r£_va
(
cxobj
 **
xt›
,

1418 
y™g_•ec
 *
y•ec
,

1419 c⁄° *
f‹m©
, ...)

1421 
ªtvÆ
 = -1;

1422 
va_li°
 
¨gs
;

1423 *
°r
 = 
NULL
;

1424 
Àn
;

1426 
	`va_°¨t
(
¨gs
, 
f‹m©
);

1427 
Àn
 = 
	`v¢¥ötf
(
NULL
, 0, 
f‹m©
, 
¨gs
) + 1;

1428 
	`va_íd
(
¨gs
);

1429 i‡((
°r
 = 
	`mÆloc
(
Àn
)Ë=
NULL
){

1430 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "malloc");

1431 
d⁄e
;

1433 
	`mem£t
(
°r
, 0, 
Àn
);

1434 
	`va_°¨t
(
¨gs
, 
f‹m©
);

1435 
Àn
 = 
	`v¢¥ötf
(
°r
,Üí, 
f‹m©
, 
¨gs
) + 1;

1436 
	`va_íd
(
¨gs
);

1437 i‡(
	`xml_∑r£_°rög
(
°r
, 
y•ec
, 
xt›
) < 0)

1438 
d⁄e
;

1439 
ªtvÆ
 = 0;

1440 
d⁄e
:

1441 i‡(
°r
)

1442 
	`‰ì
(
°r
);

1443  
ªtvÆ
;

1444 
	}
}

1449 
	$xml_c›y_⁄e
(
cxobj
 *
x0
,

1450 
cxobj
 *
x1
)

1452 
cg_v¨
 *
cv1
;

1454 
	`xml_ty≥_£t
(
x1
, 
	`xml_ty≥
(
x0
));

1455 i‡(
	`xml_vÆue
(
x0
)){

1456 i‡((
x1
->
x_vÆue
 = 
	`°rdup
(
x0
->x_vÆue)Ë=
NULL
){

1457 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "strdup");

1461 i‡(
	`xml_«me
(
x0
))

1462 i‡((
	`xml_«me_£t
(
x1
, 
	`xml_«me
(
x0
))) < 0)

1464 i‡(
	`xml_cv_gë
(
x0
)){

1465 i‡((
cv1
 = 
	`cv_dup
(
	`xml_cv_gë
(
x0
))Ë=
NULL
){

1466 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cv_dup");

1469 i‡((
	`xml_cv_£t
(
x1
, 
cv1
)) < 0)

1473 
	}
}

1486 
	$xml_c›y
(
cxobj
 *
x0
,

1487 
cxobj
 *
x1
)

1489 
ªtvÆ
 = -1;

1490 
cxobj
 *
x
;

1491 
cxobj
 *
xc›y
;

1493 i‡(
	`xml_c›y_⁄e
(
x0
, 
x1
) <0)

1494 
d⁄e
;

1495 
x
 = 
NULL
;

1496 (
x
 = 
	`xml_chûd_óch
(
x0
, x, -1)Ë!
NULL
) {

1497 i‡((
xc›y
 = 
	`xml_√w
(
	`xml_«me
(
x
), 
x1
, 
	`xml_•ec
(x))Ë=
NULL
)

1498 
d⁄e
;

1499 i‡(
	`xml_c›y
(
x
, 
xc›y
) < 0)

1500 
d⁄e
;

1502 
ªtvÆ
 = 0;

1503 
d⁄e
:

1504  
ªtvÆ
;

1505 
	}
}

1515 
cxobj
 *

1516 
	$xml_dup
(
cxobj
 *
x0
)

1518 
cxobj
 *
x1
;

1520 i‡((
x1
 = 
	`xml_√w
("√w", 
NULL
, 
	`xml_•ec
(
x0
))) == NULL)

1521  
NULL
;

1522 i‡(
	`xml_c›y
(
x0
, 
x1
) < 0)

1523  
NULL
;

1524  
x1
;

1525 
	}
}

1534 
	$cxvec_dup
(
cxobj
 **
vec0
,

1535 
size_t
 
Àn0
,

1536 
cxobj
 ***
vec1
,

1537 
size_t
 *
Àn1
)

1539 
ªtvÆ
 = -1;

1541 *
Àn1
 = 
Àn0
;

1542 i‡((*
vec1
 = 
	`ˇŒoc
(
Àn0
, (
cxobj
*))Ë=
NULL
)

1543 
d⁄e
;

1544 
	`mem˝y
(*
vec1
, 
vec0
, 
Àn0
*(
cxobj
*));

1545 
ªtvÆ
 = 0;

1546 
d⁄e
:

1547  
ªtvÆ
;

1548 
	}
}

1556 
	$cxvec_≠≥nd
(
cxobj
 *
x
,

1557 
cxobj
 ***
vec
,

1558 
size_t
 *
Àn
)

1560 
ªtvÆ
 = -1;

1562 i‡((*
vec
 = 
	`ªÆloc
(*vec, (
cxobj
 *Ë* (*
Àn
+1))Ë=
NULL
){

1563 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "realloc");

1564 
d⁄e
;

1566 (*
vec
)[(*
Àn
)++] = 
x
;

1567 
ªtvÆ
 = 0;

1568 
d⁄e
:

1569  
ªtvÆ
;

1570 
	}
}

1599 
	$xml_≠∂y
(
cxobj
 *
xn
,

1600 
cxobj_ty≥
 
ty≥
,

1601 
xml_≠∂y‚_t
 
‚
,

1602 *
¨g
)

1604 
ªtvÆ
 = -1;

1605 
cxobj
 *
x
;

1606 
ªt
;

1608 
x
 = 
NULL
;

1609 (
x
 = 
	`xml_chûd_óch
(
xn
, x, 
ty≥
)Ë!
NULL
) {

1610 i‡((
ªt
 = 
	`‚
(
x
, 
¨g
)) < 0)

1611 
d⁄e
;

1612 i‡(
ªt
 == 2)

1614 i‡(
ªt
 == 1){

1615 
ªtvÆ
 = 1;

1616 
d⁄e
;

1618 i‡((
ªt
 = 
	`xml_≠∂y
(
x
, 
ty≥
, 
‚
, 
¨g
)) < 0)

1619 
d⁄e
;

1620 i‡(
ªt
 == 1){

1621 
ªtvÆ
 = 1;

1622 
d⁄e
;

1625 
ªtvÆ
 = 0;

1626 
d⁄e
:

1627  
ªtvÆ
;

1628 
	}
}

1641 
	$xml_≠∂y0
(
cxobj
 *
xn
,

1642 
cxobj_ty≥
 
ty≥
,

1643 
xml_≠∂y‚_t
 
‚
,

1644 *
¨g
)

1646 
ªtvÆ
 = -1;

1647 
ªt
;

1649 i‡((
ªt
 = 
	`‚
(
xn
, 
¨g
)) < 0)

1650 
d⁄e
;

1651 i‡(
ªt
 == 1)

1652 
ªtvÆ
 = 1;

1653 i‡(
ªt
 > 1)

1654 
ªtvÆ
 = 0;

1656 
ªtvÆ
 = 
	`xml_≠∂y
(
xn
, 
ty≥
, 
‚
, 
¨g
);

1657 
d⁄e
:

1658  
ªtvÆ
;

1659 
	}
}

1684 
	$xml_≠∂y_™˚°‹
(
cxobj
 *
xn
,

1685 
xml_≠∂y‚_t
 
‚
,

1686 *
¨g
)

1688 
ªtvÆ
 = -1;

1689 
cxobj
 *
xp
 = 
NULL
;

1690 
ªt
;

1692 (
xp
 = 
	`xml_∑ª¡
(
xn
)Ë!
NULL
) {

1693 i‡(
	`‚
(
xp
, 
¨g
) < 0)

1694 
d⁄e
;

1695 i‡((
ªt
 = 
	`xml_≠∂y_™˚°‹
(
xp
, 
‚
, 
¨g
)) < 0)

1696 
d⁄e
;

1697 i‡(
ªt
 > 0){

1698 
ªtvÆ
 = 
ªt
;

1699 
d⁄e
;

1701 
xn
 = 
xp
;

1703 
ªtvÆ
 = 0;

1704 
d⁄e
:

1705  
ªtvÆ
;

1706 
	}
}

1717 
	$xml_body_∑r£
(
cxobj
 *
xb
,

1718 
cv_ty≥
 
ty≥
,

1719 
cg_v¨
 **
cvp
)

1721 
ªtvÆ
 = -1;

1722 
cg_v¨
 *
cv
 = 
NULL
;

1723 
cvªt
;

1724 *
b°r
;

1725 *
ªas⁄
 = 
NULL
;

1727 i‡((
b°r
 = 
	`xml_body
(
xb
)Ë=
NULL
){

1728 
	`˛ic⁄_îr
(
OE_XML
, 0, "No body found");

1729 
d⁄e
;

1731 i‡((
cv
 = 
	`cv_√w
(
ty≥
)Ë=
NULL
){

1732 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cv_new");

1733 
d⁄e
;

1735 i‡((
cvªt
 = 
	`cv_∑r£1
(
b°r
, 
cv
, &
ªas⁄
)) < 0){

1736 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "cv_parse");

1737 
d⁄e
;

1739 i‡(
cvªt
 == 0){

1740 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "P¨sög CV: %s", &
ªas⁄
);

1741 i‡(
ªas⁄
)

1742 
	`‰ì
(
ªas⁄
);

1744 *
cvp
 = 
cv
;

1745 
ªtvÆ
 = 0;

1746 
d⁄e
:

1747 i‡(
ªtvÆ
 < 0 && 
cv
 !
NULL
)

1748 
	`cv_‰ì
(
cv
);

1749  
ªtvÆ
;

1751 
	}
}

1765 
	$xml_body_öt32
(
cxobj
 *
xb
,

1766 
öt32_t
 *
vÆ
)

1768 
cg_v¨
 *
cv
 = 
NULL
;

1770 i‡(
	`xml_body_∑r£
(
xb
, 
CGV_INT32
, &
cv
) < 0)

1772 *
vÆ
 = 
	`cv_öt32_gë
(
cv
);

1773 
	`cv_‰ì
(
cv
);

1775 
	}
}

1789 
	$xml_body_uöt32
(
cxobj
 *
xb
,

1790 
uöt32_t
 *
vÆ
)

1792 
cg_v¨
 *
cv
 = 
NULL
;

1794 i‡(
	`xml_body_∑r£
(
xb
, 
CGV_UINT32
, &
cv
) < 0)

1796 *
vÆ
 = 
	`cv_uöt32_gë
(
cv
);

1797 
	`cv_‰ì
(
cv
);

1799 
	}
}

1810 
	$xml_›î©i⁄
(*
›°r
,

1811 
›î©i⁄_ty≥
 *
›
)

1813 i‡(
	`°rcmp
("mîge", 
›°r
) == 0)

1814 *
›
 = 
OP_MERGE
;

1815 i‡(
	`°rcmp
("ª∂a˚", 
›°r
) == 0)

1816 *
›
 = 
OP_REPLACE
;

1817 i‡(
	`°rcmp
("¸óã", 
›°r
) == 0)

1818 *
›
 = 
OP_CREATE
;

1819 i‡(
	`°rcmp
("dñëe", 
›°r
) == 0)

1820 *
›
 = 
OP_DELETE
;

1821 i‡(
	`°rcmp
("ªmove", 
›°r
) == 0)

1822 *
›
 = 
OP_REMOVE
;

1823 i‡(
	`°rcmp
("n⁄e", 
›°r
) == 0)

1824 *
›
 = 
OP_NONE
;

1826 
	`˛ic⁄_îr
(
OE_XML
, 0, "Bad-©åibuã o≥øti⁄: %s", 
›°r
);

1830 
	}
}

1841 
	$xml_›î©i⁄2°r
(
›î©i⁄_ty≥
 
›
)

1843 
›
){

1844 
OP_MERGE
:

1847 
OP_REPLACE
:

1850 
OP_CREATE
:

1853 
OP_DELETE
:

1856 
OP_REMOVE
:

1862 
	}
}

1877 
	$ußge
(*
¨gv0
)

1879 
	`Ârötf
(
°dîr
, "ußge:%s.\n\tI≈uà⁄ stdö\n", 
¨gv0
);

1880 
	`exô
(0);

1881 
	}
}

1884 
	$maö
(
¨gc
, **
¨gv
)

1886 
cxobj
 *
xt
;

1887 
cxobj
 *
xc
;

1888 
cbuf
 *
cb
 = 
	`cbuf_√w
();

1890 i‡(
¨gc
 != 1){

1891 
	`ußge
(
¨gv
[0]);

1894 i‡(
	`xml_∑r£_fûe
(0, "</c⁄fig>", 
NULL
,&
xt
) < 0){

1895 
	`Ârötf
(
°dîr
, "parsing 2\n");

1898 
xc
 = 
NULL
;

1899 (
xc
 = 
	`xml_chûd_óch
(
xt
, xc, -1)Ë!
NULL
) {

1900 
	`xm…ªe2cbuf
(
cb
, 
xc
, 0);

1903 
	`Ârötf
(
°dout
, "%s", 
	`cbuf_gë
(
cb
));

1904 i‡(
xt
)

1905 
	`xml_‰ì
(
xt
);

1906 i‡(
cb
)

1907 
	`cbuf_‰ì
(
cb
);

1909 
	}
}

	@clixon-master/lib/src/clixon_xml_db.c

36 
	~<°dlib.h
>

37 
	~<°rög.h
>

38 
	~<uni°d.h
>

39 
	~<î∫o.h
>

40 
	~<sig«l.h
>

41 
	~<sy¶og.h
>

42 
	~<dlf˙.h
>

43 
	~<f˙é.h
>

44 
	~<time.h
>

45 
	~<sig«l.h
>

46 
	~<libgí.h
>

47 
	~<sys/time.h
>

48 
	~<sys/waô.h
>

49 
	~<sys/∑øm.h
>

53 
	~<˛igí/˛igí.h
>

56 
	~"˛ix⁄_îr.h
"

57 
	~"˛ix⁄_log.h
"

58 
	~"˛ix⁄_queue.h
"

59 
	~"˛ix⁄_hash.h
"

60 
	~"˛ix⁄_h™dÀ.h
"

61 
	~"˛ix⁄_y™g.h
"

62 
	~"˛ix⁄_xml.h
"

63 
	~"˛ix⁄_∂ugö.h
"

64 
	~"˛ix⁄_›ti⁄s.h
"

65 
	~"˛ix⁄_xml_db.h
"

68 
	#DEBUG
 0

	)

77 
	$xmldb_∂ugö_lﬂd
(
˛ic⁄_h™dÀ
 
h
,

78 *
fûíame
)

80 
ªtvÆ
 = -1;

81 *
dÀºcode
;

82 
∂ugö_öô_t
 *
öôfun
;

83 
∂ghndl_t
 
h™dÀ
 = 
NULL
;

84 *
îr‹
;

85 
xmldb_≠i
 *
xa
 = 
NULL
;

87 
	`dÀº‹
();

88 i‡((
h™dÀ
 = 
	`dl›í
(
fûíame
, 
RTLD_NOW
|
RTLD_GLOBAL
)Ë=
NULL
) {

89 
îr‹
 = (*)
	`dÀº‹
();

90 
	`˛ic⁄_îr
(
OE_PLUGIN
, 
î∫o
, "dl›í: %s\n", 
îr‹
 ?Érror : "UnknownÉrror");

91 
d⁄e
;

94 
öôfun
 = 
	`dlsym
(
h™dÀ
, 
XMLDB_PLUGIN_INIT_FN
);

95 i‡((
dÀºcode
 = (*)
	`dÀº‹
()Ë!
NULL
) {

96 
	`˛ic⁄_log
(
LOG_WARNING
, "Error whenÜoading init function %s: %s",

97 
XMLDB_PLUGIN_INIT_FN
, 
dÀºcode
);

98 
Áû
;

100 i‡((
xa
 = 
	`öôfun
(
XMLDB_API_VERSION
)Ë=
NULL
) {

101 
	`˛ic⁄_log
(
LOG_WARNING
, "%s: failed whenÑunning init function %s: %s",

102 
fûíame
, 
XMLDB_PLUGIN_INIT_FN
, 
î∫o
?
	`°ªº‹
(errno):"");

103 
Áû
;

105 i‡(
xa
->
xa_vîsi⁄
 !
XMLDB_API_VERSION
){

106 
	`˛ic⁄_log
(
LOG_WARNING
, "%s: UnexpectedÖlugin versionÇumber: %d",

107 
fûíame
, 
xa
->
xa_vîsi⁄
);

108 
Áû
;

110 i‡(
xa
->
xa_magic
 !
XMLDB_API_MAGIC
){

111 
	`˛ic⁄_log
(
LOG_WARNING
, "%s: WrongÖlugin magicÇumber: %x",

112 
fûíame
, 
xa
->
xa_magic
);

113 
Áû
;

116 i‡(
	`˛ic⁄_xmldb_∂ugö_£t
(
h
, 
h™dÀ
) < 0)

117 
d⁄e
;

119 i‡(
	`˛ic⁄_xmldb_≠i_£t
(
h
, 
xa
) < 0)

120 
d⁄e
;

121 
	`˛ic⁄_log
(
LOG_DEBUG
, "xmldbÖlugö %†lﬂded", 
fûíame
);

122 
ªtvÆ
 = 0;

123 
d⁄e
:

124 i‡(
ªtvÆ
 < 0 && 
h™dÀ
)

125 
	`dl˛o£
(
h™dÀ
);

126  
ªtvÆ
;

127 
Áû
:

128 
ªtvÆ
 = 0;

129 
d⁄e
;

130 
	}
}

138 
	$xmldb_∂ugö_u∆ﬂd
(
˛ic⁄_h™dÀ
 
h
)

140 
ªtvÆ
 = -1;

141 
∂ghndl_t
 
h™dÀ
;

142 
xmldb_≠i
 *
xa
;

143 
xmldb_h™dÀ
 
xh
;

144 *
îr‹
;

146 i‡((
h™dÀ
 = 
	`˛ic⁄_xmldb_∂ugö_gë
(
h
)Ë=
NULL
){

147 
	`˛ic⁄_îr
(
OE_PLUGIN
, 
î∫o
, "NoÖlugin handle");

148 
d⁄e
;

151 i‡((
xh
 = 
	`˛ic⁄_xmldb_h™dÀ_gë
(
h
)Ë!
NULL
)

152 
	`xmldb_disc⁄√˘
(
h
);

154 i‡((
xa
 = 
	`˛ic⁄_xmldb_≠i_gë
(
h
)Ë!
NULL
){

156 i‡(
xa
->
xa_∂ugö_exô_‚
 !
NULL
)

157 
xa
->
	`xa_∂ugö_exô_‚
();

159 
	`˛ic⁄_xmldb_≠i_£t
(
h
, 
NULL
);

162 
	`dÀº‹
();

163 i‡(
	`dl˛o£
(
h™dÀ
) != 0) {

164 
îr‹
 = (*)
	`dÀº‹
();

165 
	`˛ic⁄_îr
(
OE_PLUGIN
, 
î∫o
, "dl˛o£: %s\n", 
îr‹
 ?Érror : "UnknownÉrror");

168 
ªtvÆ
 = 0;

169 
d⁄e
:

170  
ªtvÆ
;

171 
	}
}

180 
	$xmldb_vÆid©e_db
(c⁄° *
db
)

182 i‡(
	`°rcmp
(
db
, "running") != 0 &&

183 
	`°rcmp
(
db
, "candidate") != 0 &&

184 
	`°rcmp
(
db
, "startup") != 0 &&

185 
	`°rcmp
(
db
, "tmp") != 0)

188 
	}
}

200 
	$xmldb_c⁄√˘
(
˛ic⁄_h™dÀ
 
h
)

202 
ªtvÆ
 = -1;

203 
xmldb_h™dÀ
 
xh
;

204 
xmldb_≠i
 *
xa
;

206 i‡((
xa
 = 
	`˛ic⁄_xmldb_≠i_gë
(
h
)Ë=
NULL
){

207 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldbÖlugin");

208 
d⁄e
;

210 i‡(
xa
->
xa_c⁄√˘_‚
 =
NULL
){

211 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldb function");

212 
d⁄e
;

214 i‡((
xh
 = 
xa
->
	`xa_c⁄√˘_‚
()Ë=
NULL
)

215 
d⁄e
;

216 
	`˛ic⁄_xmldb_h™dÀ_£t
(
h
, 
xh
);

217 
ªtvÆ
 = 0;

218 
d⁄e
:

219  
ªtvÆ
;

220 
	}
}

228 
	$xmldb_disc⁄√˘
(
˛ic⁄_h™dÀ
 
h
)

230 
ªtvÆ
 = -1;

231 
xmldb_h™dÀ
 
xh
;

232 
xmldb_≠i
 *
xa
;

234 i‡((
xa
 = 
	`˛ic⁄_xmldb_≠i_gë
(
h
)Ë=
NULL
){

235 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldbÖlugin");

236 
d⁄e
;

238 i‡(
xa
->
xa_disc⁄√˘_‚
 =
NULL
){

239 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldb function");

240 
d⁄e
;

242 i‡((
xh
 = 
	`˛ic⁄_xmldb_h™dÀ_gë
(
h
)Ë=
NULL
){

243 
	`˛ic⁄_îr
(
OE_DB
, 0, "Already disconnected from datastoreÖlugin");

244 
d⁄e
;

246 i‡(
xa
->
	`xa_disc⁄√˘_‚
(
xh
) < 0)

247 
d⁄e
;

248 
	`˛ic⁄_xmldb_h™dÀ_£t
(
h
, 
NULL
);

249 
ªtvÆ
 = 0;

250 
d⁄e
:

251  
ªtvÆ
;

252 
	}
}

262 
	$xmldb_gë›t
(
˛ic⁄_h™dÀ
 
h
,

263 *
›äame
,

264 **
vÆue
)

266 
ªtvÆ
 = -1;

267 
xmldb_h™dÀ
 
xh
;

268 
xmldb_≠i
 *
xa
;

270 i‡((
xa
 = 
	`˛ic⁄_xmldb_≠i_gë
(
h
)Ë=
NULL
){

271 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldbÖlugin");

272 
d⁄e
;

274 i‡(
xa
->
xa_gë›t_‚
 =
NULL
){

275 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldb function");

276 
d⁄e
;

278 i‡((
xh
 = 
	`˛ic⁄_xmldb_h™dÀ_gë
(
h
)Ë=
NULL
){

279 
	`˛ic⁄_îr
(
OE_DB
, 0, "Not connectedÅo datastoreÖlugin");

280 
d⁄e
;

282 
ªtvÆ
 = 
xa
->
	`xa_gë›t_‚
(
xh
, 
›äame
, 
vÆue
);

283 
d⁄e
:

284  
ªtvÆ
;

285 
	}
}

295 
	$xmldb_£t›t
(
˛ic⁄_h™dÀ
 
h
,

296 *
›äame
,

297 *
vÆue
)

299 
ªtvÆ
 = -1;

300 
xmldb_h™dÀ
 
xh
;

301 
xmldb_≠i
 *
xa
;

303 i‡((
xa
 = 
	`˛ic⁄_xmldb_≠i_gë
(
h
)Ë=
NULL
){

304 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldbÖlugin");

305 
d⁄e
;

307 i‡(
xa
->
xa_£t›t_‚
 =
NULL
){

308 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldb function");

309 
d⁄e
;

311 i‡((
xh
 = 
	`˛ic⁄_xmldb_h™dÀ_gë
(
h
)Ë=
NULL
){

312 
	`˛ic⁄_îr
(
OE_DB
, 0, "Not connectedÅo datastoreÖlugin");

313 
d⁄e
;

315 
ªtvÆ
 = 
xa
->
	`xa_£t›t_‚
(
xh
, 
›äame
, 
vÆue
);

316 
d⁄e
:

317  
ªtvÆ
;

318 
	}
}

340 
	$xmldb_gë
(
˛ic⁄_h™dÀ
 
h
,

341 c⁄° *
db
,

342 *
x∑th
,

343 
c⁄fig
,

344 
cxobj
 **
xªt
)

346 
ªtvÆ
 = -1;

347 
xmldb_h™dÀ
 
xh
;

348 
xmldb_≠i
 *
xa
;

350 i‡((
xa
 = 
	`˛ic⁄_xmldb_≠i_gë
(
h
)Ë=
NULL
){

351 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldbÖlugin");

352 
d⁄e
;

354 i‡(
xa
->
xa_gë_‚
 =
NULL
){

355 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldb function");

356 
d⁄e
;

358 i‡((
xh
 = 
	`˛ic⁄_xmldb_h™dÀ_gë
(
h
)Ë=
NULL
){

359 
	`˛ic⁄_îr
(
OE_DB
, 0, "Not connectedÅo datastoreÖlugin");

360 
d⁄e
;

362 
ªtvÆ
 = 
xa
->
	`xa_gë_‚
(
xh
, 
db
, 
x∑th
, 
c⁄fig
, 
xªt
);

363 #i‡
DEBUG


364 i‡(
ªtvÆ
 == 0) {

365 
cbuf
 *
cb
 = 
	`cbuf_√w
();

366 
	`˛ic⁄_xml2cbuf
(
cb
, *
xªt
, 0, 0);

367 
	`˛ic⁄_log
(
LOG_WARNING
, "%s: db:%s xpath:%s xml:%s",

368 
__FUNCTION__
, 
db
, 
x∑th
, 
	`cbuf_gë
(
cb
));

369 
	`cbuf_‰ì
(
cb
);

372 
d⁄e
:

373  
ªtvÆ
;

374 
	}
}

400 
	$xmldb_put
(
˛ic⁄_h™dÀ
 
h
,

401 c⁄° *
db
,

402 
›î©i⁄_ty≥
 
›
,

403 
cxobj
 *
xt
,

404 
cbuf
 *
cbªt
)

406 
ªtvÆ
 = -1;

407 
xmldb_h™dÀ
 
xh
;

408 
xmldb_≠i
 *
xa
;

410 i‡((
xa
 = 
	`˛ic⁄_xmldb_≠i_gë
(
h
)Ë=
NULL
){

411 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldbÖlugin");

412 
d⁄e
;

414 i‡(
xa
->
xa_put_‚
 =
NULL
){

415 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldb function");

416 
d⁄e
;

418 i‡((
xh
 = 
	`˛ic⁄_xmldb_h™dÀ_gë
(
h
)Ë=
NULL
){

419 
	`˛ic⁄_îr
(
OE_DB
, 0, "Not connectedÅo datastoreÖlugin");

420 
d⁄e
;

422 #i‡
DEBUG


424 
cbuf
 *
cb
 = 
	`cbuf_√w
();

425 i‡(
xt
)

426 i‡(
	`˛ic⁄_xml2cbuf
(
cb
, 
xt
, 0, 0) < 0)

427 
d⁄e
;

429 
	`˛ic⁄_log
(
LOG_WARNING
, "%s: db:%†›:%d xml:%s", 
__FUNCTION__
,

430 
db
, 
›
, 
	`cbuf_gë
(
cb
));

431 
	`cbuf_‰ì
(
cb
);

434 
ªtvÆ
 = 
xa
->
	`xa_put_‚
(
xh
, 
db
, 
›
, 
xt
, 
cbªt
);

435 
d⁄e
:

436  
ªtvÆ
;

437 
	}
}

447 
	$xmldb_c›y
(
˛ic⁄_h™dÀ
 
h
,

448 c⁄° *
‰om
,

449 c⁄° *
to
)

451 
ªtvÆ
 = -1;

452 
xmldb_h™dÀ
 
xh
;

453 
xmldb_≠i
 *
xa
;

455 i‡((
xa
 = 
	`˛ic⁄_xmldb_≠i_gë
(
h
)Ë=
NULL
){

456 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldbÖlugin");

457 
d⁄e
;

459 i‡(
xa
->
xa_c›y_‚
 =
NULL
){

460 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldb function");

461 
d⁄e
;

463 i‡((
xh
 = 
	`˛ic⁄_xmldb_h™dÀ_gë
(
h
)Ë=
NULL
){

464 
	`˛ic⁄_îr
(
OE_DB
, 0, "Not connectedÅo datastoreÖlugin");

465 
d⁄e
;

467 
ªtvÆ
 = 
xa
->
	`xa_c›y_‚
(
xh
, 
‰om
, 
to
);

468 
d⁄e
:

469  
ªtvÆ
;

470 
	}
}

480 
	$xmldb_lock
(
˛ic⁄_h™dÀ
 
h
,

481 c⁄° *
db
,

482 
pid
)

484 
ªtvÆ
 = -1;

485 
xmldb_h™dÀ
 
xh
;

486 
xmldb_≠i
 *
xa
;

488 i‡((
xa
 = 
	`˛ic⁄_xmldb_≠i_gë
(
h
)Ë=
NULL
){

489 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldbÖlugin");

490 
d⁄e
;

492 i‡(
xa
->
xa_lock_‚
 =
NULL
){

493 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldb function");

494 
d⁄e
;

496 i‡((
xh
 = 
	`˛ic⁄_xmldb_h™dÀ_gë
(
h
)Ë=
NULL
){

497 
	`˛ic⁄_îr
(
OE_DB
, 0, "Not connectedÅo datastoreÖlugin");

498 
d⁄e
;

500 
ªtvÆ
 = 
xa
->
	`xa_lock_‚
(
xh
, 
db
, 
pid
);

501 
d⁄e
:

502  
ªtvÆ
;

503 
	}
}

514 
	$xmldb_u∆ock
(
˛ic⁄_h™dÀ
 
h
,

515 c⁄° *
db
)

517 
ªtvÆ
 = -1;

518 
xmldb_h™dÀ
 
xh
;

519 
xmldb_≠i
 *
xa
;

521 i‡((
xa
 = 
	`˛ic⁄_xmldb_≠i_gë
(
h
)Ë=
NULL
){

522 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldbÖlugin");

523 
d⁄e
;

525 i‡(
xa
->
xa_u∆ock_‚
 =
NULL
){

526 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldb function");

527 
d⁄e
;

529 i‡((
xh
 = 
	`˛ic⁄_xmldb_h™dÀ_gë
(
h
)Ë=
NULL
){

530 
	`˛ic⁄_îr
(
OE_DB
, 0, "Not connectedÅo datastoreÖlugin");

531 
d⁄e
;

533 
ªtvÆ
 = 
xa
->
	`xa_u∆ock_‚
(
xh
, 
db
);

534 
d⁄e
:

535  
ªtvÆ
;

536 
	}
}

545 
	$xmldb_u∆ock_Æl
(
˛ic⁄_h™dÀ
 
h
,

546 
pid
)

548 
ªtvÆ
 = -1;

549 
xmldb_h™dÀ
 
xh
;

550 
xmldb_≠i
 *
xa
;

552 i‡((
xa
 = 
	`˛ic⁄_xmldb_≠i_gë
(
h
)Ë=
NULL
){

553 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldbÖlugin");

554 
d⁄e
;

556 i‡(
xa
->
xa_u∆ock_Æl_‚
 =
NULL
){

557 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldb function");

558 
d⁄e
;

560 i‡((
xh
 = 
	`˛ic⁄_xmldb_h™dÀ_gë
(
h
)Ë=
NULL
){

561 
	`˛ic⁄_îr
(
OE_DB
, 0, "Not connectedÅo datastoreÖlugin");

562 
d⁄e
;

564 
ªtvÆ
 = 
xa
->
	`xa_u∆ock_Æl_‚
(
xh
, 
pid
);

565 
d⁄e
:

566  
ªtvÆ
;

567 
	}
}

577 
	$xmldb_i¶ocked
(
˛ic⁄_h™dÀ
 
h
,

578 c⁄° *
db
)

580 
ªtvÆ
 = -1;

581 
xmldb_h™dÀ
 
xh
;

582 
xmldb_≠i
 *
xa
;

584 i‡((
xa
 = 
	`˛ic⁄_xmldb_≠i_gë
(
h
)Ë=
NULL
){

585 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldbÖlugin");

586 
d⁄e
;

588 i‡(
xa
->
xa_i¶ocked_‚
 =
NULL
){

589 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldb function");

590 
d⁄e
;

592 i‡((
xh
 = 
	`˛ic⁄_xmldb_h™dÀ_gë
(
h
)Ë=
NULL
){

593 
	`˛ic⁄_îr
(
OE_DB
, 0, "Not connectedÅo datastoreÖlugin");

594 
d⁄e
;

596 
ªtvÆ
 = 
xa
->
	`xa_i¶ocked_‚
(
xh
, 
db
);

597 
d⁄e
:

598  
ªtvÆ
;

599 
	}
}

609 
	$xmldb_exi°s
(
˛ic⁄_h™dÀ
 
h
,

610 c⁄° *
db
)

612 
ªtvÆ
 = -1;

613 
xmldb_h™dÀ
 
xh
;

614 
xmldb_≠i
 *
xa
;

616 i‡((
xa
 = 
	`˛ic⁄_xmldb_≠i_gë
(
h
)Ë=
NULL
){

617 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldbÖlugin");

618 
d⁄e
;

620 i‡(
xa
->
xa_exi°s_‚
 =
NULL
){

621 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldb function");

622 
d⁄e
;

624 i‡((
xh
 = 
	`˛ic⁄_xmldb_h™dÀ_gë
(
h
)Ë=
NULL
){

625 
	`˛ic⁄_îr
(
OE_DB
, 0, "Not connectedÅo datastoreÖlugin");

626 
d⁄e
;

628 
ªtvÆ
 = 
xa
->
	`xa_exi°s_‚
(
xh
, 
db
);

629 
d⁄e
:

630  
ªtvÆ
;

631 
	}
}

640 
	$xmldb_dñëe
(
˛ic⁄_h™dÀ
 
h
,

641 c⁄° *
db
)

643 
ªtvÆ
 = -1;

644 
xmldb_h™dÀ
 
xh
;

645 
xmldb_≠i
 *
xa
;

647 i‡((
xa
 = 
	`˛ic⁄_xmldb_≠i_gë
(
h
)Ë=
NULL
){

648 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldbÖlugin");

649 
d⁄e
;

651 i‡(
xa
->
xa_dñëe_‚
 =
NULL
){

652 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldb function");

653 
d⁄e
;

655 i‡((
xh
 = 
	`˛ic⁄_xmldb_h™dÀ_gë
(
h
)Ë=
NULL
){

656 
	`˛ic⁄_îr
(
OE_DB
, 0, "Not connectedÅo datastoreÖlugin");

657 
d⁄e
;

659 
ªtvÆ
 = 
xa
->
	`xa_dñëe_‚
(
xh
, 
db
);

660 
d⁄e
:

661  
ªtvÆ
;

662 
	}
}

671 
	$xmldb_¸óã
(
˛ic⁄_h™dÀ
 
h
,

672 c⁄° *
db
)

674 
ªtvÆ
 = -1;

675 
xmldb_h™dÀ
 
xh
;

676 
xmldb_≠i
 *
xa
;

678 i‡((
xa
 = 
	`˛ic⁄_xmldb_≠i_gë
(
h
)Ë=
NULL
){

679 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldbÖlugin");

680 
d⁄e
;

682 i‡(
xa
->
xa_¸óã_‚
 =
NULL
){

683 
	`˛ic⁄_îr
(
OE_DB
, 0, "No xmldb function");

684 
d⁄e
;

686 i‡((
xh
 = 
	`˛ic⁄_xmldb_h™dÀ_gë
(
h
)Ë=
NULL
){

687 
	`˛ic⁄_îr
(
OE_DB
, 0, "Not connectedÅo datastoreÖlugin");

688 
d⁄e
;

690 
ªtvÆ
 = 
xa
->
	`xa_¸óã_‚
(
xh
, 
db
);

691 
d⁄e
:

692  
ªtvÆ
;

693 
	}
}

	@clixon-master/lib/src/clixon_xml_map.c

54 #ifde‡
HAVE_CONFIG_H


55 
	~"˛ix⁄_c⁄fig.h
"

58 
	~<°dio.h
>

59 
	~<°dlib.h
>

60 
	~<uni°d.h
>

61 
	~<î∫o.h
>

62 
	~<˘y≥.h
>

63 
	~<°rög.h
>

64 
	~<sy¶og.h
>

65 
	~<f˙é.h
>

66 
	~<as£π.h
>

67 
	~<¨∑/öë.h
>

68 
	~<sys/∑øm.h
>

69 
	~<√töë/ö.h
>

72 
	~<˛igí/˛igí.h
>

76 
	~"˛ix⁄_°rög.h
"

77 
	~"˛ix⁄_queue.h
"

78 
	~"˛ix⁄_hash.h
"

79 
	~"˛ix⁄_h™dÀ.h
"

80 
	~"˛ix⁄_°rög.h
"

81 
	~"˛ix⁄_y™g.h
"

82 
	~"˛ix⁄_y™g_ty≥.h
"

83 
	~"˛ix⁄_›ti⁄s.h
"

84 
	~"˛ix⁄_xml.h
"

85 
	~"˛ix⁄_∂ugö.h
"

86 
	~"˛ix⁄_x¶.h
"

87 
	~"˛ix⁄_log.h
"

88 
	~"˛ix⁄_îr.h
"

89 
	~"˛ix⁄_xml_s‹t.h
"

90 
	~"˛ix⁄_xml_m≠.h
"

94 
	$éóf
(
cxobj
 *
x
)

96 
cxobj
 *
c
;

98 i‡(
	`xml_ty≥
(
x
Ë!
CX_ELMNT
)

100 i‡(
	`xml_chûd_ƒ
(
x
) != 1)

102 
c
 = 
	`xml_chûd_i
(
x
, 0);

103  (
	`xml_chûd_ƒ
(
c
) == 0);

104 
	}
}

111 
	$xml2txt
(
FILE
 *
f
,

112 
cxobj
 *
x
,

113 
Àvñ
)

115 
cxobj
 *
xe
 = 
NULL
;

116 
chûdªn
=0;

117 *
ãrm
 = 
NULL
;

118 
ªtvÆ
 = -1;

120 
xe
 = 
NULL
;

121 (
xe
 = 
	`xml_chûd_óch
(
x
, xe, -1)Ë!
NULL
)

122 
chûdªn
++;

123 i‡(!
chûdªn
){

124 i‡(
	`xml_ty≥
(
x
Ë=
CX_BODY
){

125 
ãrm
 = 
	`xml_vÆue
(
x
);

128 
	`Ârötf
(
f
, "%*s", 4*
Àvñ
, "");

129 
ãrm
 = 
	`xml_«me
(
x
);

131 
	`Ârötf
(
f
, "%s;\n", 
ãrm
);

132 
ªtvÆ
 = 0;

133 
d⁄e
;

135 
	`Ârötf
(
f
, "%*s", 4*
Àvñ
, "");

136 
	`Ârötf
(
f
, "%†", 
	`xml_«me
(
x
));

137 i‡(!
	`éóf
(
x
))

138 
	`Ârötf
(
f
, "{\n");

139 
xe
 = 
NULL
;

140 (
xe
 = 
	`xml_chûd_óch
(
x
, xe, -1)Ë!
NULL
){

141 i‡(
	`xml2txt
(
f
, 
xe
, 
Àvñ
+1) < 0)

144 i‡(!
	`éóf
(
x
))

145 
	`Ârötf
(
f
, "%*s}\n", 4*
Àvñ
, "");

146 
ªtvÆ
 = 0;

147 
d⁄e
:

148  
ªtvÆ
;

149 
	}
}

161 
	$xml2˛i
(
FILE
 *
f
,

162 
cxobj
 *
x
,

163 *
¥ïíd0
,

164 
gímodñ_ty≥
 
gt
)

166 
ªtvÆ
 = -1;

167 
cxobj
 *
xe
 = 
NULL
;

168 
cbuf
 *
cb¥e
 = 
NULL
;

169 
y™g_°mt
 *
ys
;

170 
m©ch
;

171 *
body
;

173 
ys
 = 
	`xml_•ec
(
x
);

174 i‡(
ys
->
ys_keyw‹d
 =
Y_LEAF
 || ys->ys_keyw‹d =
Y_LEAF_LIST
){

175 i‡(
¥ïíd0
)

176 
	`Ârötf
(
f
, "%s", 
¥ïíd0
);

177 
body
 = 
	`xml_body
(
x
);

178 i‡(
gt
 =
GT_ALL
 || gà=
GT_VARS
)

179 
	`Ârötf
(
f
, "%†", 
	`xml_«me
(
x
));

180 i‡(
	`ödex
(
body
, ' '))

181 
	`Ârötf
(
f
, "\"%s\"", 
body
);

183 
	`Ârötf
(
f
, "%s", 
body
);

184 
	`Ârötf
(
f
, "\n");

185 
ok
;

188 i‡((
cb¥e
 = 
	`cbuf_√w
()Ë=
NULL
){

189 
	`˛ic⁄_îr
(
OE_PLUGIN
, 
î∫o
, "cbuf_new");

190 
d⁄e
;

192 i‡(
¥ïíd0
)

193 
	`˝rötf
(
cb¥e
, "%s", 
¥ïíd0
);

194 
	`˝rötf
(
cb¥e
, "%†", 
	`xml_«me
(
x
));

196 i‡(
ys
->
ys_keyw‹d
 =
Y_LIST
){

198 
xe
 = 
NULL
;

199 (
xe
 = 
	`xml_chûd_óch
(
x
, xe, -1)Ë!
NULL
){

200 i‡((
m©ch
 = 
	`y™g_key_m©ch
((
y™g_node
*)
ys
, 
	`xml_«me
(
xe
))) < 0)

201 
d⁄e
;

202 i‡(!
m©ch
)

204 i‡(
gt
 =
GT_ALL
)

205 
	`˝rötf
(
cb¥e
, "%†", 
	`xml_«me
(
xe
));

206 
	`˝rötf
(
cb¥e
, "%†", 
	`xml_body
(
xe
));

210 
xe
 = 
NULL
;

211 (
xe
 = 
	`xml_chûd_óch
(
x
, xe, -1)Ë!
NULL
){

212 i‡(
ys
->
ys_keyw‹d
 =
Y_LIST
){

213 i‡((
m©ch
 = 
	`y™g_key_m©ch
((
y™g_node
*)
ys
, 
	`xml_«me
(
xe
))) < 0)

214 
d⁄e
;

215 i‡(
m©ch
)

218 i‡(
	`xml2˛i
(
f
, 
xe
, 
	`cbuf_gë
(
cb¥e
), 
gt
) < 0)

219 
d⁄e
;

221 
ok
:

222 
ªtvÆ
 = 0;

223 
d⁄e
:

224 i‡(
cb¥e
)

225 
	`cbuf_‰ì
(
cb¥e
);

226  
ªtvÆ
;

227 
	}
}

234 
	$vÆid©e_Àa‰ef
(
cxobj
 *
xt
,

235 
y™g_°mt
 *
yty≥
)

237 
ªtvÆ
 = -1;

238 
y™g_°mt
 *
y∑th
;

239 
cxobj
 **
xvec
 = 
NULL
;

240 
cxobj
 *
x
;

241 
i
;

242 
size_t
 
xÀn
 = 0;

243 *
Àa‰efbody
;

244 *
Àafbody
;

246 i‡((
Àa‰efbody
 = 
	`xml_body
(
xt
)Ë=
NULL
)

248 i‡((
y∑th
 = 
	`y™g_föd
((
y™g_node
*)
yty≥
, 
Y_PATH
, 
NULL
)) == NULL){

249 
	`˛ic⁄_îr
(
OE_DB
, 0, "Ló‰e‡%†ªquúe†∑th sèãmít", 
yty≥
->
ys_¨gumít
);

250 
d⁄e
;

252 i‡(
	`x∑th_vec
(
xt
, 
y∑th
->
ys_¨gumít
, &
xvec
, &
xÀn
) < 0)

253 
d⁄e
;

254 
i
 = 0; i < 
xÀn
; i++) {

255 
x
 = 
xvec
[
i
];

256 i‡((
Àafbody
 = 
	`xml_body
(
x
)Ë=
NULL
)

258 i‡(
	`°rcmp
(
Àafbody
, 
Àa‰efbody
) == 0)

261 i‡(
i
==
xÀn
){

262 
	`˛ic⁄_îr
(
OE_DB
, 0, "Leafref validation failed,Ço suchÜeaf: %s",

263 
Àa‰efbody
);

264 
d⁄e
;

266 
ªtvÆ
 = 0;

267 
d⁄e
:

268 i‡(
xvec
)

269 
	`‰ì
(
xvec
);

270  
ªtvÆ
;

271 
	}
}

282 
	$xml_y™g_vÆid©e_add
(
cxobj
 *
xt
,

283 *
¨g
)

285 
ªtvÆ
 = -1;

286 
cg_v¨
 *
cv
 = 
NULL
;

287 *
ªas⁄
 = 
NULL
;

288 
y™g_°mt
 *
yc
;

289 
i
;

290 
y™g_°mt
 *
ys
;

291 *
body
;

295 i‡((
ys
 = 
	`xml_•ec
(
xt
)Ë!
NULL
 && 
	`y™g_c⁄fig
(ys) != 0){

296 
ys
->
ys_keyw‹d
){

297 
Y_INPUT
:

298 
Y_LIST
:

300 
Y_CONTAINER
:

301 
i
=0; i<
ys
->
ys_Àn
; i++){

302 
yc
 = 
ys
->
ys_°mt
[
i
];

303 i‡(
yc
->
ys_keyw‹d
 !
Y_LEAF
)

305 i‡(
	`y™g_c⁄fig
(
yc
)==0)

307 i‡(
	`y™g_m™d©‹y
(
yc
Ë&& 
	`xml_föd
(
xt
, yc->
ys_¨gumít
)==
NULL
){

308 
	`˛ic⁄_îr
(
OE_CFG
, 0,"Missing mandatory variable: %s",

309 
yc
->
ys_¨gumít
);

310 
d⁄e
;

314 
Y_LEAF
:

316 
Y_LEAF_LIST
:

318 i‡((
cv
 = 
	`cv_dup
(
ys
->
ys_cv
)Ë=
NULL
){

319 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "cv_dup");

320 
d⁄e
;

325 i‡((
body
 = 
	`xml_body
(
xt
)Ë!
NULL
){

326 i‡(
	`cv_∑r£
(
body
, 
cv
) <0){

327 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "cv_parse");

328 
d⁄e
;

330 i‡((
	`ys_cv_vÆid©e
(
cv
, 
ys
, &
ªas⁄
)) != 1){

331 
	`˛ic⁄_îr
(
OE_DB
, 0,

333 
ys
->
ys_¨gumít
, 
ªas⁄
?reason:"");

334 i‡(
ªas⁄
)

335 
	`‰ì
(
ªas⁄
);

336 
d⁄e
;

344 
ªtvÆ
 = 0;

345 
d⁄e
:

346 i‡(
cv
)

347 
	`cv_‰ì
(
cv
);

348  
ªtvÆ
;

349 
	}
}

359 
	$xml_y™g_vÆid©e_Æl
(
cxobj
 *
xt
,

360 *
¨g
)

362 
ªtvÆ
 = -1;

363 
y™g_°mt
 *
ys
;

364 
y™g_°mt
 *
yty≥
;

368 i‡((
ys
 = 
	`xml_•ec
(
xt
)Ë!
NULL
 &&

369 
	`y™g_c⁄fig
(
ys
) != 0){

370 
ys
->
ys_keyw‹d
){

371 
Y_LEAF
:

373 
Y_LEAF_LIST
:

377 i‡((
yty≥
 = 
	`y™g_föd
((
y™g_node
*)
ys
, 
Y_TYPE
, 
NULL
)) != NULL &&

378 
	`°rcmp
(
yty≥
->
ys_¨gumít
, "leafref") == 0)

379 i‡(
	`vÆid©e_Àa‰ef
(
xt
, 
yty≥
) < 0)

380 
d⁄e
;

386 
ªtvÆ
 = 0;

387 
d⁄e
:

388  
ªtvÆ
;

389 
	}
}

413 
	$xml2cvec
(
cxobj
 *
xt
,

414 
y™g_°mt
 *
yt
,

415 
cvec
 **
cvv0
)

417 
ªtvÆ
 = -1;

418 
cvec
 *
cvv
 = 
NULL
;

419 
cxobj
 *
xc
;

420 
y™g_°mt
 *
ys
;

421 
cg_v¨
 *
cv
;

422 
cg_v¨
 *
ycv
;

423 *
body
;

424 *
ªas⁄
 = 
NULL
;

425 
ªt
;

426 *
«me
;

428 
xc
 = 
NULL
;

430 i‡((
cvv
 = 
	`cvec_√w
(0)Ë=
NULL
){

431 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "cvec_new");

432 
îr
;

434 
xc
 = 
NULL
;

436 (
xc
 = 
	`xml_chûd_óch
(
xt
, xc, 
CX_ELMNT
)Ë!
NULL
){

437 
«me
 = 
	`xml_«me
(
xc
);

438 i‡((
ys
 = 
	`y™g_föd_d©™ode
((
y™g_node
*)
yt
, 
«me
)Ë=
NULL
){

439 
	`˛ic⁄_debug
(0, "%s: yang sanityÖroblem: %s in xml butÇotÖresent in yang under %s",

440 
__FUNCTION__
, 
«me
, 
yt
->
ys_¨gumít
);

441 i‡((
body
 = 
	`xml_body
(
xc
)Ë!
NULL
){

442 i‡((
cv
 = 
	`cv_√w
(
CGV_STRING
)Ë=
NULL
){

443 
	`˛ic⁄_îr
(
OE_PLUGIN
, 
î∫o
, "cv_new");

444 
îr
;

446 
	`cv_«me_£t
(
cv
, 
«me
);

447 i‡((
ªt
 = 
	`cv_∑r£1
(
body
, 
cv
, &
ªas⁄
)) < 0){

448 
	`˛ic⁄_îr
(
OE_PLUGIN
, 
î∫o
, "cv_∑r£ %s",
«me
);

449 
îr
;

452 i‡(
ªt
 == 0){

453 
	`˛ic⁄_log
(
LOG_WARNING
, "cv_∑r£ %s: %s", 
«me
, 
ªas⁄
);

454 i‡(
ªas⁄
)

455 
	`‰ì
(
ªas⁄
);

458 
	`cvec_≠≥nd_v¨
(
cvv
, 
cv
);

459 
	`cv_‰ì
(
cv
);

462 i‡((
ycv
 = 
ys
->
ys_cv
Ë!
NULL
){

463 i‡((
body
 = 
	`xml_body
(
xc
)Ë!
NULL
){

464 i‡((
cv
 = 
	`cv_√w
(
CGV_STRING
)Ë=
NULL
){

465 
	`˛ic⁄_îr
(
OE_PLUGIN
, 
î∫o
, "cv_new");

466 
îr
;

468 i‡(
	`cv_˝
(
cv
, 
ycv
) < 0){

469 
	`˛ic⁄_îr
(
OE_PLUGIN
, 
î∫o
, "cv_cp");

470 
îr
;

472 i‡((
ªt
 = 
	`cv_∑r£1
(
body
, 
cv
, &
ªas⁄
)) < 0){

473 
	`˛ic⁄_îr
(
OE_PLUGIN
, 
î∫o
, "cv_∑r£: %s", 
«me
);

474 
îr
;

476 i‡(
ªt
 == 0){

477 
	`˛ic⁄_log
(
LOG_WARNING
, "cv_∑r£ %s: %s", 
«me
, 
ªas⁄
);

478 i‡(
ªas⁄
)

479 
	`‰ì
(
ªas⁄
);

482 
	`cvec_≠≥nd_v¨
(
cvv
, 
cv
);

483 
	`cv_‰ì
(
cv
);

487 i‡(
debug
 > 1){

488 
	`˛ic⁄_debug
(2, "%†cvv:\n", 
__FUNCTION__
);

489 
	`cvec_¥öt
(
°dîr
, 
cvv
);

491 *
cvv0
 = 
cvv
;

493 
îr
:

494 i‡(
cvv
)

495 
	`cvec_‰ì
(
cvv
);

496  
ªtvÆ
;

497 
	}
}

510 
	$cvec2xml_1
(
cvec
 *
cvv
,

511 *
t›èg
,

512 
cxobj
 *
xp
,

513 
cxobj
 **
xt0
)

515 
ªtvÆ
 = -1;

516 
cxobj
 *
xt
 = 
NULL
;

517 
cxobj
 *
xn
;

518 
cxobj
 *
xb
;

519 
cg_v¨
 *
cv
;

520 *
vÆ
;

521 
Àn
=0;

522 
i
;

524 
cv
 = 
NULL
;

525 (
cv
 = 
	`cvec_óch
(
cvv
, cv)Ë!
NULL
)

526 
Àn
++;

527 i‡((
xt
 = 
	`xml_√w
(
t›èg
, 
xp
, 
NULL
)) == NULL)

528 
îr
;

529 i‡(
	`xml_chûdvec_£t
(
xt
, 
Àn
) < 0)

530 
îr
;

531 
cv
 = 
NULL
;

532 
i
 = 0;

533 (
cv
 = 
	`cvec_óch
(
cvv
, cv)Ë!
NULL
) {

534 i‡(
	`cv_ty≥_gë
(
cv
)==
CGV_ERR
 || 
	`cv_«me_gë
(cvË=
NULL
)

536 i‡((
xn
 = 
	`xml_√w
(
	`cv_«me_gë
(
cv
), 
NULL
, NULL)) == NULL)

537 
îr
;

538 
	`xml_∑ª¡_£t
(
xn
, 
xt
);

539 
	`xml_chûd_i_£t
(
xt
, 
i
++, 
xn
);

540 i‡((
xb
 = 
	`xml_√w
("body", 
xn
, 
NULL
)) == NULL)

541 
îr
;

542 
	`xml_ty≥_£t
(
xb
, 
CX_BODY
);

543 
vÆ
 = 
	`cv2°r_dup
(
cv
);

544 
	`xml_vÆue_£t
(
xb
, 
vÆ
);

545 i‡(
vÆ
)

546 
	`‰ì
(
vÆ
);

548 *
xt0
 = 
xt
;

550 
îr
:

551 i‡(
xt
)

552 
	`xml_‰ì
(
xt
);

553  
ªtvÆ
;

554 
	}
}

563 
y™g_°mt
 *

564 
	$y™g_√xt
(
y™g_node
 *
y
,

565 *
«me
)

567 
y™g_°mt
 *
ys
;

569 i‡(
y
->
yn_keyw‹d
 =
Y_SPEC
)

570 
ys
 = 
	`y™g_föd_t›node
((
y™g_•ec
*)
y
, 
«me
, 
YC_DATANODE
);

572 
ys
 = 
	`y™g_föd_d©™ode
(
y
, 
«me
);

573 i‡(
ys
 =
NULL
)

574 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "Nÿy™gÇodêfound: %s", 
«me
);

575  
ys
;

576 
	}
}

590 
	$xml_diff1
(
y™g_°mt
 *
ys
,

591 
cxobj
 *
x1
,

592 
cxobj
 *
x2
,

593 
cxobj
 ***
x1vec
,

594 
size_t
 *
x1ve˛í
,

595 
cxobj
 ***
x2vec
,

596 
size_t
 *
x2ve˛í
,

597 
cxobj
 ***
ch™ged_x1
,

598 
cxobj
 ***
ch™ged_x2
,

599 
size_t
 *
ch™gedÀn
)

601 
ªtvÆ
 = -1;

602 
cxobj
 *
x1c
 = 
NULL
;

603 
cxobj
 *
x2c
 = 
NULL
;

604 
y™g_°mt
 *
yc
;

605 *
b1
;

606 *
b2
;

608 
	`˛ic⁄_debug
(2, "%s: %s", 
__FUNCTION__
, 
ys
->
ys_¨gumít
?ys->ys_argument:"yspec");

613 
x1c
 = 
NULL
;

614 (
x1c
 = 
	`xml_chûd_óch
(
x1
, x1c, 
CX_ELMNT
)Ë!
NULL
){

615 i‡((
yc
 = 
	`y™g_√xt
((
y™g_node
*)
ys
, 
	`xml_«me
(
x1c
))Ë=
NULL
)

616 
d⁄e
;

617 i‡(
	`m©ch_ba£_chûd
(
x2
, 
x1c
, &
x2c
, 
yc
) < 0)

618 
d⁄e
;

619 i‡(
x2c
 =
NULL
){

620 i‡(
	`cxvec_≠≥nd
(
x1c
, 
x1vec
, 
x1ve˛í
) < 0)

621 
d⁄e
;

624 i‡(
yc
->
ys_keyw‹d
 =
Y_LEAF
){

625 i‡((
b1
 = 
	`xml_body
(
x1c
)Ë=
NULL
)

627 i‡((
b2
 = 
	`xml_body
(
x2c
)Ë=
NULL
)

629 i‡(
	`°rcmp
(
b1
, 
b2
)){

630 i‡(
	`cxvec_≠≥nd
(
x1c
, 
ch™ged_x1
, 
ch™gedÀn
) < 0)

631 
d⁄e
;

632 (*
ch™gedÀn
)--;

633 i‡(
	`cxvec_≠≥nd
(
x2c
, 
ch™ged_x2
, 
ch™gedÀn
) < 0)

634 
d⁄e
;

637 i‡(
	`xml_diff1
(
yc
, 
x1c
, 
x2c
,

638 
x1vec
, 
x1ve˛í
,

639 
x2vec
, 
x2ve˛í
,

640 
ch™ged_x1
, 
ch™ged_x2
, 
ch™gedÀn
)< 0)

641 
d⁄e
;

647 
x2c
 = 
NULL
;

648 (
x2c
 = 
	`xml_chûd_óch
(
x2
, x2c, 
CX_ELMNT
)Ë!
NULL
){

649 i‡((
yc
 = 
	`y™g_√xt
((
y™g_node
*)
ys
, 
	`xml_«me
(
x2c
))Ë=
NULL
)

650 
d⁄e
;

651 i‡(
	`m©ch_ba£_chûd
(
x1
, 
x2c
, &
x1c
, 
yc
) < 0)

652 
d⁄e
;

653 i‡(
x1c
 =
NULL
)

654 i‡(
	`cxvec_≠≥nd
(
x2c
, 
x2vec
, 
x2ve˛í
) < 0)

655 
d⁄e
;

657 
ªtvÆ
 = 0;

658 
d⁄e
:

659  
ªtvÆ
;

660 
	}
}

677 
	$xml_diff
(
y™g_•ec
 *
y•ec
,

678 
cxobj
 *
x1
,

679 
cxobj
 *
x2
,

680 
cxobj
 ***
fú°
,

681 
size_t
 *
fú°Àn
,

682 
cxobj
 ***
£c⁄d
,

683 
size_t
 *
£c⁄dÀn
,

684 
cxobj
 ***
ch™ged1
,

685 
cxobj
 ***
ch™ged2
,

686 
size_t
 *
ch™gedÀn
)

688 
ªtvÆ
 = -1;

690 *
fú°Àn
 = 0;

691 *
£c⁄dÀn
 = 0;

692 *
ch™gedÀn
 = 0;

693 i‡(
x1
 =
NULL
 && 
x2
 == NULL)

695 i‡(
x2
 =
NULL
){

696 i‡(
	`cxvec_≠≥nd
(
x1
, 
fú°
, 
fú°Àn
) < 0)

697 
d⁄e
;

698 
ok
;

700 i‡(
x1
 =
NULL
){

701 i‡(
	`cxvec_≠≥nd
(
x1
, 
£c⁄d
, 
£c⁄dÀn
) < 0)

702 
d⁄e
;

703 
ok
;

705 i‡(
	`xml_diff1
((
y™g_°mt
*)
y•ec
, 
x1
, 
x2
,

706 
fú°
, 
fú°Àn
,

707 
£c⁄d
, 
£c⁄dÀn
,

708 
ch™ged1
, 
ch™ged2
, 
ch™gedÀn
) < 0)

709 
d⁄e
;

710 
ok
:

711 
ªtvÆ
 = 0;

712 
d⁄e
:

713  
ªtvÆ
;

714 
	}
}

726 
	$y™g2≠i_∑th_fmt_1
(
y™g_°mt
 *
ys
,

727 
ö˛key
,

728 
cbuf
 *
cb
)

730 
y™g_node
 *
yp
;

731 
i
;

732 
cvec
 *
cvk
 = 
NULL
;

733 
ªtvÆ
 = -1;

735 
yp
 = 
ys
->
ys_∑ª¡
;

736 i‡(
yp
 !
NULL
 &&

737 
yp
->
yn_keyw‹d
 !
Y_MODULE
 &&

738 
yp
->
yn_keyw‹d
 !
Y_SUBMODULE
){

739 i‡(
	`y™g2≠i_∑th_fmt_1
((
y™g_°mt
 *)
yp
, 1, 
cb
) < 0)

740 
d⁄e
;

742 i‡(
ö˛key
){

743 i‡(
ys
->
ys_keyw‹d
 !
Y_CHOICE
 && ys->ys_keyw‹d !
Y_CASE
)

744 
	`˝rötf
(
cb
, "/%s", 
ys
->
ys_¨gumít
);

748 i‡(
ys
->
ys_keyw‹d
 =
Y_LEAF
 && 
yp
 &&

749 
yp
->
yn_keyw‹d
 =
Y_LIST
){

750 i‡(
	`y™g_key_m©ch
(
yp
, 
ys
->
ys_¨gumít
) == 0)

751 
	`˝rötf
(
cb
, "/%s", 
ys
->
ys_¨gumít
);

755 i‡(
ys
->
ys_keyw‹d
 !
Y_CHOICE
 && ys->ys_keyw‹d !
Y_CASE
)

756 
	`˝rötf
(
cb
, "/%s", 
ys
->
ys_¨gumít
);

759 
ys
->
ys_keyw‹d
){

760 
Y_LIST
:

761 
cvk
 = 
ys
->
ys_cvec
;

762 i‡(
	`cvec_Àn
(
cvk
))

763 
	`˝rötf
(
cb
, "=");

765 
i
=0; i<
	`cvec_Àn
(
cvk
); i++){

766 i‡(
i
)

767 
	`˝rötf
(
cb
, ",");

768 
	`˝rötf
(
cb
, "%%s");

771 
Y_LEAF_LIST
:

772 
	`˝rötf
(
cb
, "=%%s");

777 
ªtvÆ
 = 0;

778 
d⁄e
:

779  
ªtvÆ
;

780 
	}
}

792 
	$y™g2≠i_∑th_fmt
(
y™g_°mt
 *
ys
,

793 
ö˛key
,

794 **
≠i_∑th_fmt
)

796 
ªtvÆ
 = -1;

797 
cbuf
 *
cb
 = 
NULL
;

799 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
){

800 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "cbuf_new");

801 
d⁄e
;

803 i‡(
	`y™g2≠i_∑th_fmt_1
(
ys
, 
ö˛key
, 
cb
) < 0)

804 
d⁄e
;

805 i‡((*
≠i_∑th_fmt
 = 
	`°rdup
(
	`cbuf_gë
(
cb
))Ë=
NULL
){

806 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "strdup");

807 
d⁄e
;

809 
ªtvÆ
 = 0;

810 
d⁄e
:

811 i‡(
cb
)

812 
	`cbuf_‰ì
(
cb
);

813  
ªtvÆ
;

814 
	}
}

845 
	$≠i_∑th_fmt2≠i_∑th
(*
≠i_∑th_fmt
,

846 
cvec
 *
cvv
,

847 **
≠i_∑th
)

849 
ªtvÆ
 = -1;

850 
c
;

851 
esc
=0;

852 
cbuf
 *
cb
 = 
NULL
;

853 
i
;

854 
j
;

855 *
°r
;

856 *
°ªnc
=
NULL
;

857 
cg_v¨
 *
cv
;

859 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
){

860 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "cbuf_new");

861 
d⁄e
;

863 
j
 = 1;

864 
i
=0; i<
	`°æí
(
≠i_∑th_fmt
); i++){

865 
c
 = 
≠i_∑th_fmt
[
i
];

866 i‡(
esc
){

867 
esc
 = 0;

868 i‡(
c
!='s')

870 i‡(
j
 =
	`cvec_Àn
(
cvv
))

873 
cv
 = 
	`cvec_i
(
cvv
, 
j
++);

874 i‡((
°r
 = 
	`cv2°r_dup
(
cv
)Ë=
NULL
){

875 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "cv2str_dup");

876 
d⁄e
;

878 i‡(
	`uri_≥r˚¡_ícode
(
°r
, &
°ªnc
) < 0)

879 
d⁄e
;

880 
	`˝rötf
(
cb
, "%s", 
°ªnc
);

881 
	`‰ì
(
°ªnc
); såí¯
NULL
;

882 
	`‰ì
(
°r
); så = 
NULL
;

886 i‡(
c
 == '%')

887 
esc
++;

889 i‡((
c
 ='=' || c =','Ë&& 
≠i_∑th_fmt
[
i
+1]=='%' && 
j
 =
	`cvec_Àn
(
cvv
))

892 
	`˝rötf
(
cb
, "%c", 
c
);

895 i‡((*
≠i_∑th
 = 
	`°rdup
(
	`cbuf_gë
(
cb
))Ë=
NULL
){

896 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "strdup");

897 
d⁄e
;

899 
ªtvÆ
 = 0;

900 
d⁄e
:

901 i‡(
cb
)

902 
	`cbuf_‰ì
(
cb
);

903  
ªtvÆ
;

904 
	}
}

927 
	$≠i_∑th_fmt2x∑th
(*
≠i_∑th_fmt
,

928 
cvec
 *
cvv
,

929 **
x∑th
)

931 
ªtvÆ
 = -1;

932 
c
;

933 
esc
=0;

934 
cbuf
 *
cb
 = 
NULL
;

935 
i
;

936 
j
;

937 *
°r
;

938 
cg_v¨
 *
cv
;

940 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
){

941 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "cbuf_new");

942 
d⁄e
;

944 
j
 = 1;

945 
i
=0; i<
	`°æí
(
≠i_∑th_fmt
); i++){

946 
c
 = 
≠i_∑th_fmt
[
i
];

947 i‡(
esc
){

948 
esc
 = 0;

949 i‡(
c
!='s')

951 i‡(
j
 =
	`cvec_Àn
(
cvv
))

954 
cv
 = 
	`cvec_i
(
cvv
, 
j
++);

955 i‡((
°r
 = 
	`cv2°r_dup
(
cv
)Ë=
NULL
){

956 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "cv2str_dup");

957 
d⁄e
;

959 
	`˝rötf
(
cb
, "[%s=%s]", 
	`cv_«me_gë
(
cv
), 
°r
);

960 
	`‰ì
(
°r
);

964 i‡(
c
 == '%')

965 
esc
++;

967 i‡((
c
 ='=' || c =','Ë&& 
≠i_∑th_fmt
[
i
+1]=='%')

970 
	`˝rötf
(
cb
, "%c", 
c
);

973 i‡((*
x∑th
 = 
	`°rdup4
(
	`cbuf_gë
(
cb
))Ë=
NULL
){

974 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "strdup");

975 
d⁄e
;

977 
ªtvÆ
 = 0;

978 
d⁄e
:

979 i‡(
cb
)

980 
	`cbuf_‰ì
(
cb
);

981  
ªtvÆ
;

982 
	}
}

999 
	$xml_åì_¥u√_Êagged_sub
(
cxobj
 *
xt
,

1000 
Êag
,

1001 
ã°
,

1002 *
upm¨k
)

1004 
ªtvÆ
 = -1;

1005 
subm¨k
;

1006 
m¨k
;

1007 
cxobj
 *
x
;

1008 
cxobj
 *
x¥ev
;

1009 
iskey
;

1010 
™ykey
=0;

1011 
y™g_°mt
 *
yt
;

1013 
m¨k
 = 0;

1014 
yt
 = 
	`xml_•ec
(
xt
);

1015 
x
 = 
NULL
;

1016 
x¥ev
 = 
x
 = 
NULL
;

1017 (
x
 = 
	`xml_chûd_óch
(
xt
, x, 
CX_ELMNT
)Ë!
NULL
) {

1018 i‡(
	`xml_Êag
(
x
, 
Êag
Ë=
ã°
?flag:0){

1020 
m¨k
++;

1021 
x¥ev
 = 
x
;

1025 i‡(
yt
){

1026 i‡((
iskey
 = 
	`y™g_key_m©ch
((
y™g_node
*)
yt
, 
	`xml_«me
(
x
))) < 0)

1027 
d⁄e
;

1028 i‡(
iskey
){

1029 
™ykey
++;

1030 
x¥ev
 = 
x
;

1034 i‡(
	`xml_åì_¥u√_Êagged_sub
(
x
, 
Êag
, 
ã°
, &
subm¨k
) < 0)

1035 
d⁄e
;

1038 i‡(
subm¨k
)

1039 
m¨k
++;

1041 i‡(
	`xml_purge
(
x
) < 0)

1042 
d⁄e
;

1043 
x
 = 
x¥ev
;

1045 
x¥ev
 = 
x
;

1048 i‡(
™ykey
 && !
m¨k
){

1049 
x
 = 
NULL
;

1050 
x¥ev
 = 
x
 = 
NULL
;

1051 (
x
 = 
	`xml_chûd_óch
(
xt
, x, 
CX_ELMNT
)Ë!
NULL
) {

1053 i‡(
yt
){

1054 i‡((
iskey
 = 
	`y™g_key_m©ch
((
y™g_node
*)
yt
, 
	`xml_«me
(
x
))) < 0)

1055 
d⁄e
;

1056 i‡(
iskey
 && 
	`xml_purge
(
x
) < 0)

1057 
d⁄e
;

1058 
x
 = 
x¥ev
;

1060 
x¥ev
 = 
x
;

1063 
ªtvÆ
 = 0;

1064 
d⁄e
:

1065 i‡(
upm¨k
)

1066 *
upm¨k
 = 
m¨k
;

1067  
ªtvÆ
;

1068 
	}
}

1081 
	$xml_åì_¥u√_Êagged
(
cxobj
 *
xt
,

1082 
Êag
,

1083 
ã°
)

1085 
ªtvÆ
 = -1;

1086 
cxobj
 *
x
;

1087 
cxobj
 *
x¥ev
;

1089 
x
 = 
NULL
;

1090 
x¥ev
 = 
x
 = 
NULL
;

1091 (
x
 = 
	`xml_chûd_óch
(
xt
, x, 
CX_ELMNT
)Ë!
NULL
) {

1092 i‡(
	`xml_Êag
(
x
, 
Êag
Ë=
ã°
?flag:0){

1093 i‡(
	`xml_purge
(
x
) < 0)

1094 
d⁄e
;

1095 
x
 = 
x¥ev
;

1098 i‡(
	`xml_åì_¥u√_Êagged
(
x
, 
Êag
, 
ã°
) < 0)

1099 
d⁄e
;

1100 
x¥ev
 = 
x
;

1102 
ªtvÆ
 = 0;

1103 
d⁄e
:

1104  
ªtvÆ
;

1105 
	}
}

1111 
	$xml_deÁu…
(
cxobj
 *
xt
,

1112 *
¨g
)

1114 
ªtvÆ
 = -1;

1115 
y™g_°mt
 *
ys
;

1116 
y™g_°mt
 *
y
;

1117 
i
;

1118 
cxobj
 *
xc
;

1119 
cxobj
 *
xb
;

1120 *
°r
;

1122 i‡((
ys
 = (
y™g_°mt
*)
	`xml_•ec
(
xt
)Ë=
NULL
){

1123 
ªtvÆ
 = 0;

1124 
d⁄e
;

1127 i‡(
ys
->
ys_keyw‹d
 =
Y_CONTAINER
 || ys->ys_keyw‹d =
Y_LIST
){

1128 
i
=0; i<
ys
->
ys_Àn
; i++){

1129 
y
 = 
ys
->
ys_°mt
[
i
];

1130 i‡(
y
->
ys_keyw‹d
 !
Y_LEAF
)

1132 
	`as£π
(
y
->
ys_cv
);

1133 i‡(!
	`cv_Êag
(
y
->
ys_cv
, 
V_UNSET
)){

1134 i‡(!
	`xml_föd
(
xt
, 
y
->
ys_¨gumít
)){

1135 i‡((
xc
 = 
	`xml_√w
(
y
->
ys_¨gumít
, 
xt
, y)Ë=
NULL
)

1136 
d⁄e
;

1137 i‡((
xb
 = 
	`xml_√w
("body", 
xc
, 
NULL
)) == NULL)

1138 
d⁄e
;

1139 
	`xml_ty≥_£t
(
xb
, 
CX_BODY
);

1140 i‡((
°r
 = 
	`cv2°r_dup
(
y
->
ys_cv
)Ë=
NULL
){

1141 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "cv2str_dup");

1142 
d⁄e
;

1144 i‡(
	`xml_vÆue_£t
(
xb
, 
°r
) < 0)

1145 
d⁄e
;

1146 
	`‰ì
(
°r
);

1151 
	`xml_s‹t
(
xt
, 
NULL
);

1152 
ªtvÆ
 = 0;

1153 
d⁄e
:

1154  
ªtvÆ
;

1155 
	}
}

1161 
	$xml_‹dî
(
cxobj
 *
xt
,

1162 *
¨g
)

1164 
ªtvÆ
 = -1;

1165 
y™g_°mt
 *
y
;

1166 
y™g_°mt
 *
yc
;

1167 
i
;

1168 
j0
;

1169 
j
;

1170 
cxobj
 *
xc
;

1171 
cxobj
 *
xj
;

1172 *
y«me
;

1173 *
x«me
;

1175 i‡((
y
 = (
y™g_°mt
*)
	`xml_•ec
(
xt
)Ë=
NULL
){

1176 
ªtvÆ
 = 0;

1177 
d⁄e
;

1179 
j0
 = 0;

1184 
i
=0; i<
y
->
ys_Àn
; i++){

1185 
yc
 = 
y
->
ys_°mt
[
i
];

1186 i‡(!
	`y™g_d©™ode
(
yc
))

1188 
y«me
 = 
yc
->
ys_¨gumít
;

1190 ; 
j0
<
	`xml_chûd_ƒ
(
xt
); j0++){

1191 
xc
 = 
	`xml_chûd_i
(
xt
, 
j0
);

1192 i‡(
	`xml_ty≥
(
xc
Ë!
CX_ELMNT
)

1194 
x«me
 = 
	`xml_«me
(
xc
);

1195 i‡(
	`°rcmp
(
x«me
, 
y«me
))

1199 
j
=
j0
; j<
	`xml_chûd_ƒ
(
xt
); j++){

1200 
xc
 = 
	`xml_chûd_i
(
xt
, 
j
);

1201 i‡(
	`xml_ty≥
(
xc
Ë!
CX_ELMNT
)

1203 
x«me
 = 
	`xml_«me
(
xc
);

1204 i‡(
	`°rcmp
(
x«me
, 
y«me
))

1207 
xj
 = 
	`xml_chûd_i
(
xt
, 
j0
);

1208 
	`xml_chûd_i_£t
(
xt
, 
j0
, 
xc
);

1209 
	`xml_chûd_i_£t
(
xt
, 
j
, 
xj
);

1210 
j0
++;

1213 
ªtvÆ
 = 0;

1214 
d⁄e
:

1215  
ªtvÆ
;

1216 
	}
}

1222 
	$xml_ßnôy
(
cxobj
 *
xt
,

1223 *
¨g
)

1225 
ªtvÆ
 = -1;

1226 
y™g_°mt
 *
ys
;

1227 *
«me
;

1229 i‡((
ys
 = (
y™g_°mt
*)
	`xml_•ec
(
xt
)Ë=
NULL
){

1230 
ªtvÆ
 = 0;

1231 
d⁄e
;

1233 
«me
 = 
	`xml_«me
(
xt
);

1234 i‡(
	`°r°r
(
ys
->
ys_¨gumít
, 
«me
)==
NULL
){

1235 
	`˛ic⁄_îr
(
OE_XML
, 0, "xmlÇodeÇame '%s' doesÇot match yang specárg '%s'",

1236 
«me
, 
ys
->
ys_¨gumít
);

1237 
d⁄e
;

1239 
ªtvÆ
 = 0;

1240 
d⁄e
:

1241  
ªtvÆ
;

1242 
	}
}

1249 
	$xml_n⁄_c⁄fig_d©a
(
cxobj
 *
xt
,

1250 *
¨g
)

1252 
ªtvÆ
 = -1;

1253 
y™g_°mt
 *
ys
;

1255 i‡((
ys
 = (
y™g_°mt
*)
	`xml_•ec
(
xt
)Ë=
NULL
){

1256 
ªtvÆ
 = 0;

1257 
d⁄e
;

1259 i‡(!
	`y™g_c⁄fig
(
ys
)){

1260 
	`xml_Êag_£t
(
xt
, 
XML_FLAG_MARK
);

1261 i‡(
¨g
)

1262 (*(*)
¨g
) = 1;

1264 
ªtvÆ
 = 0;

1265 
d⁄e
:

1266  
ªtvÆ
;

1267 
	}
}

1281 
	$xml_•ec_p›uœã
(
cxobj
 *
x
,

1282 *
¨g
)

1284 
ªtvÆ
 = -1;

1285 
y™g_•ec
 *
y•ec
 = (y™g_•ec*)
¨g
;

1286 
y™g_°mt
 *
y
=
NULL
;

1288 i‡(
	`xml_chûd_•ec
(
	`xml_«me
(
x
), 
	`xml_∑ª¡
(x), 
y•ec
, &
y
) < 0)

1289 
d⁄e
;

1291 i‡((
xp
 = 
	`xml_∑ª¡
(
x
)Ë!
NULL
 &&

1292 (
yp
 = 
	`xml_•ec
(
xp
)Ë!
NULL
)

1293 
y
 = 
	`y™g_föd_d©™ode
((
y™g_node
*)
yp
, 
	`xml_«me
(
x
));

1295 
y
 = 
	`y™g_föd_t›node
(
y•ec
, 
«me
, 
YC_DATANODE
);

1297 i‡(
y
)

1298 
	`xml_•ec_£t
(
x
, 
y
);

1299 
ªtvÆ
 = 0;

1300 
d⁄e
:

1301  
ªtvÆ
;

1302 
	}
}

1328 
	$≠i_∑th2x∑th_cvv
(
y™g_•ec
 *
y•ec
,

1329 
cvec
 *
cvv
,

1330 
off£t
,

1331 
cbuf
 *
x∑th
)

1333 
ªtvÆ
 = -1;

1334 
i
;

1335 
cg_v¨
 *
cv
;

1336 *
«me
;

1337 
cvec
 *
cvk
 = 
NULL
;

1338 
y™g_°mt
 *
y
 = 
NULL
;

1339 *
vÆ
;

1340 *
v
;

1341 
cg_v¨
 *
cvi
;

1343 
i
=
off£t
; i<
	`cvec_Àn
(
cvv
); i++){

1344 
cv
 = 
	`cvec_i
(
cvv
, 
i
);

1345 
«me
 = 
	`cv_«me_gë
(
cv
);

1346 
	`˛ic⁄_debug
(1, "[%d] cv«me:%s", 
i
, 
«me
);

1347 
	`˛ic⁄_debug
(1, "cv2°r%d", 
	`cv2°r
(
cv
, 
NULL
, 0));

1348 i‡(
i
 =
off£t
){

1349 i‡((
y
 = 
	`y™g_föd_t›node
(
y•ec
, 
«me
, 
YC_DATANODE
)Ë=
NULL
){

1350 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "Nÿy™gÇodêfound: %s", 
«me
);

1351 
d⁄e
;

1355 
	`as£π
(
y
!=
NULL
);

1356 i‡((
y
 = 
	`y™g_föd_d©™ode
((
y™g_node
*)y, 
«me
)Ë=
NULL
){

1357 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "Nÿy™gÇodêfound: %s", 
«me
);

1358 
d⁄e
;

1362 i‡(
	`cv2°r
(
cv
, 
NULL
, 0) > 0){

1363 i‡((
vÆ
 = 
	`cv2°r_dup
(
cv
)Ë=
NULL
)

1364 
d⁄e
;

1365 
v
 = 
vÆ
;

1367 (
v
=
	`ödex
(v, ',')Ë!
NULL
){

1368 *
v
 = '\0';

1369 
v
++;

1371 
cvk
 = 
y
->
ys_cvec
;

1372 
cvi
 = 
NULL
;

1374 
	`˝rötf
(
x∑th
, "/%s", 
«me
);

1375 
v
 = 
vÆ
;

1376 (
cvi
 = 
	`cvec_óch
(
cvk
, cvi)Ë!
NULL
){

1377 
	`˝rötf
(
x∑th
, "[%s=%s]", 
	`cv_°rög_gë
(
cvi
), 
v
);

1378 
v
 +
	`°æí
(v)+1;

1380 i‡(
vÆ
)

1381 
	`‰ì
(
vÆ
);

1384 
	`˝rötf
(
x∑th
, "%s%s", (
i
==
off£t
?"":"/"), 
«me
);

1387 
ªtvÆ
 = 0;

1388 
d⁄e
:

1389  
ªtvÆ
;

1390 
	}
}

1406 
	$≠i_∑th2x∑th
(
y™g_•ec
 *
y•ec
,

1407 *
≠i_∑th
,

1408 
cbuf
 *
x∑th
)

1410 
ªtvÆ
 = -1;

1411 
cvec
 *
≠i_∑th_cvv
 = 
NULL
;

1414 i‡(
	`°r2cvec
(
≠i_∑th
, '/', '=', &
≠i_∑th_cvv
) < 0)

1415 
d⁄e
;

1416 i‡(
	`≠i_∑th2x∑th_cvv
(
y•ec
, 
≠i_∑th_cvv
, 0, 
x∑th
) < 0)

1417 
d⁄e
;

1418 
ªtvÆ
 = 0;

1419 
d⁄e
:

1420 i‡(
≠i_∑th_cvv
)

1421 
	`cvec_‰ì
(
≠i_∑th_cvv
);

1422  
ªtvÆ
;

1423 
	}
}

1436 
	$≠i_∑th2xml_vec
(**
vec
,

1437 
nvec
,

1438 
cxobj
 *
x0
,

1439 
y™g_node
 *
y0
,

1440 
y™g_˛ass
 
node˛ass
,

1441 
cxobj
 **
x∑thp
,

1442 
y™g_node
 **
y∑thp
)

1444 
ªtvÆ
 = -1;

1445 
j
;

1446 *
«me
;

1447 *
ª°vÆ
 = 
NULL
;

1448 *
ª°vÆ_íc
;

1449 
cxobj
 *
xn
 = 
NULL
;

1450 
cxobj
 *
xb
;

1451 
cvec
 *
cvk
 = 
NULL
;

1452 
cg_v¨
 *
cvi
;

1453 *
key«me
;

1454 *
vÆ2
;

1455 **
vÆvec
 = 
NULL
;

1456 
nvÆvec
;

1457 
cxobj
 *
x
 = 
NULL
;

1458 
y™g_°mt
 *
y
 = 
NULL
;

1459 *
loˇl
;

1461 i‡((
«me
 = 
vec
[0]Ë=
NULL
){

1462 i‡(
x∑thp
)

1463 *
x∑thp
 = 
x0
;

1464 i‡(
y∑thp
)

1465 *
y∑thp
 = 
y0
;

1469 i‡((
ª°vÆ_íc
 = 
	`ödex
(
«me
, '=')Ë!
NULL
){

1470 *
ª°vÆ_íc
 = '\0';

1471 
ª°vÆ_íc
++;

1472 i‡(
	`uri_≥r˚¡_decode
(
ª°vÆ_íc
, &
ª°vÆ
) < 0)

1473 
d⁄e
;

1476 i‡((
loˇl
 = 
	`ödex
(
«me
, ':')Ë!
NULL
){

1477 *
loˇl
 = '\0';

1478 
loˇl
++;

1479 
«me
 = 
loˇl
;

1481 i‡(
y0
->
yn_keyw‹d
 =
Y_SPEC
){

1482 
y
 = 
	`y™g_föd_t›node
((
y™g_•ec
*)
y0
, 
«me
, 
node˛ass
);

1485 
y
 = (
node˛ass
==
YC_SCHEMANODE
)?
	`y™g_föd_schem™ode
((
y™g_node
*)
y0
, 
«me
):

1486 
	`y™g_föd_d©™ode
((
y™g_node
*)
y0
, 
«me
);

1488 i‡(
y
 =
NULL
){

1489 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "Nÿy™gÇodêfound: %s", 
«me
);

1490 
d⁄e
;

1492 
y
->
ys_keyw‹d
){

1493 
Y_LEAF_LIST
:

1494 i‡(0 && 
ª°vÆ
==
NULL
){

1495 
	`˛ic⁄_îr
(
OE_XML
, 0, "malformed key,Éxpected '=<restval>'");

1496 
d⁄e
;

1498 i‡((
x
 = 
	`xml_√w
(
y
->
ys_¨gumít
, 
x0
, y)Ë=
NULL
)

1499 
d⁄e
;

1500 
	`xml_ty≥_£t
(
x
, 
CX_ELMNT
);

1501 i‡((
xb
 = 
	`xml_√w
("body", 
x
, 
NULL
)) == NULL)

1502 
d⁄e
;

1503 
	`xml_ty≥_£t
(
xb
, 
CX_BODY
);

1504 i‡(
ª°vÆ
 && 
	`xml_vÆue_£t
(
xb
,Ñestval) < 0)

1505 
d⁄e
;

1507 
Y_LIST
:

1508 
cvk
 = 
y
->
ys_cvec
;

1509 i‡(
vÆvec
){

1510 
	`‰ì
(
vÆvec
);

1511 
vÆvec
 = 
NULL
;

1513 i‡(
ª°vÆ
==
NULL
){

1519 i‡((
vÆvec
 = 
	`˛ic⁄_°r£p
(
ª°vÆ
, ",", &
nvÆvec
)Ë=
NULL
)

1520 
d⁄e
;

1521 i‡(
nvÆvec
 > 
	`cvec_Àn
(
cvk
)){

1522 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "Li° %† keyÜígth mism©ch", 
«me
);

1523 
d⁄e
;

1526 
cvi
 = 
NULL
;

1528 i‡((
x
 = 
	`xml_√w
(
«me
, 
x0
, 
y
)Ë=
NULL
)

1529 
d⁄e
;

1530 
	`xml_ty≥_£t
(
x
, 
CX_ELMNT
);

1531 
j
 = 0;

1533 (
cvi
 = 
	`cvec_óch
(
cvk
, cvi)Ë!
NULL
) {

1534 
key«me
 = 
	`cv_°rög_gë
(
cvi
);

1535 i‡((
xn
 = 
	`xml_√w
(
key«me
, 
x
, 
NULL
)) == NULL)

1536 
d⁄e
;

1537 
	`xml_ty≥_£t
(
xn
, 
CX_ELMNT
);

1538 i‡((
xb
 = 
	`xml_√w
("body", 
xn
, 
NULL
)) == NULL)

1539 
d⁄e
;

1540 
	`xml_ty≥_£t
(
xb
, 
CX_BODY
);

1541 
vÆ2
 = 
vÆvec
?vÆvec[
j
++]:
NULL
;

1542 i‡(
	`xml_vÆue_£t
(
xb
, 
vÆ2
) <0)

1543 
d⁄e
;

1547 i‡((
x
 = 
	`xml_√w
(
«me
, 
x0
, 
y
)Ë=
NULL
)

1548 
d⁄e
;

1549 
	`xml_ty≥_£t
(
x
, 
CX_ELMNT
);

1552 i‡(
	`≠i_∑th2xml_vec
(
vec
+1, 
nvec
-1,

1553 
x
, (
y™g_node
*)
y
,

1554 
node˛ass
,

1555 
x∑thp
, 
y∑thp
) < 0)

1556 
d⁄e
;

1557 
ªtvÆ
 = 0;

1558 
d⁄e
:

1559 i‡(
ª°vÆ
)

1560 
	`‰ì
(
ª°vÆ
);

1561 i‡(
vÆvec
)

1562 
	`‰ì
(
vÆvec
);

1563  
ªtvÆ
;

1564 
	}
}

1584 
	$≠i_∑th2xml
(*
≠i_∑th
,

1585 
y™g_•ec
 *
y•ec
,

1586 
cxobj
 *
xt›
,

1587 
y™g_˛ass
 
node˛ass
,

1588 
cxobj
 **
xbŸp
,

1589 
y™g_node
 **
ybŸp
)

1591 
ªtvÆ
 = -1;

1592 **
vec
 = 
NULL
;

1593 
nvec
;

1595 i‡(*
≠i_∑th
!='/'){

1596 
	`˛ic⁄_log
(
LOG_WARNING
, "InvÆid key: %†(mu° sèπ wôh '/')", 
≠i_∑th
);

1597 
ok
;

1599 i‡((
vec
 = 
	`˛ic⁄_°r£p
(
≠i_∑th
, "/", &
nvec
)Ë=
NULL
)

1600 
d⁄e
;

1602 i‡(
nvec
 > 1 && !
	`°æí
(
vec
[nvec-1]))

1603 
nvec
--;

1604 i‡(
nvec
 < 1){

1605 
	`˛ic⁄_îr
(
OE_XML
, 0, "MÆf‹med key: %s", 
≠i_∑th
);

1606 
d⁄e
;

1608 
nvec
--;

1609 i‡(
	`≠i_∑th2xml_vec
(
vec
+1, 
nvec
,

1610 
xt›
, (
y™g_node
*)
y•ec
, 
node˛ass
,

1611 
xbŸp
, 
ybŸp
) < 0)

1612 
d⁄e
;

1613 
ok
:

1614 
ªtvÆ
 = 0;

1615 
d⁄e
:

1616 i‡(
vec
)

1617 
	`‰ì
(
vec
);

1618  
ªtvÆ
;

1619 
	}
}

1633 
	$xml_mîge1
(
cxobj
 *
x0
,

1634 
y™g_node
 *
y0
,

1635 
cxobj
 *
x0p
,

1636 
cxobj
 *
x1
,

1637 **
ªas⁄
)

1639 
ªtvÆ
 = -1;

1640 *
x1«me
;

1641 *
x1˙ame
;

1642 
cxobj
 *
x0c
;

1643 
cxobj
 *
x0b
;

1644 
cxobj
 *
x1c
;

1645 *
x1b°r
;

1646 
y™g_°mt
 *
yc
;

1648 
	`as£π
(
x1
 && 
	`xml_ty≥
(x1Ë=
CX_ELMNT
);

1649 
	`as£π
(
y0
);

1651 
x1«me
 = 
	`xml_«me
(
x1
);

1652 i‡(
y0
->
yn_keyw‹d
 =
Y_LEAF_LIST
 || y0->yn_keyw‹d =
Y_LEAF
){

1653 
x1b°r
 = 
	`xml_body
(
x1
);

1654 i‡(
x0
==
NULL
){

1655 i‡((
x0
 = 
	`xml_√w
(
x1«me
, 
x0p
, (
y™g_°mt
*)
y0
)Ë=
NULL
)

1656 
d⁄e
;

1657 i‡(
x1b°r
){

1658 i‡((
x0b
 = 
	`xml_√w
("body", 
x0
, 
NULL
)) == NULL)

1659 
d⁄e
;

1660 
	`xml_ty≥_£t
(
x0b
, 
CX_BODY
);

1663 i‡(
x1b°r
){

1664 i‡((
x0b
 = 
	`xml_body_gë
(
x0
)Ë=
NULL
){

1665 i‡((
x0b
 = 
	`xml_√w
("body", 
x0
, 
NULL
)) == NULL)

1666 
d⁄e
;

1667 
	`xml_ty≥_£t
(
x0b
, 
CX_BODY
);

1669 i‡(
	`xml_vÆue_£t
(
x0b
, 
x1b°r
) < 0)

1670 
d⁄e
;

1675 i‡(
x0
==
NULL
){

1676 i‡((
x0
 = 
	`xml_√w
(
x1«me
, 
x0p
, (
y™g_°mt
*)
y0
)Ë=
NULL
)

1677 
d⁄e
;

1680 
x1c
 = 
NULL
;

1681 (
x1c
 = 
	`xml_chûd_óch
(
x1
, x1c, 
CX_ELMNT
)Ë!
NULL
) {

1682 
x1˙ame
 = 
	`xml_«me
(
x1c
);

1684 i‡((
yc
 = 
	`y™g_föd_d©™ode
(
y0
, 
x1˙ame
)Ë=
NULL
){

1685 i‡(
ªas⁄
 && (*ªas⁄ = 
	`°rdup
("XMLÇodêha†nÿc‹ª•⁄dög y™g s≥cifiˇti⁄ (InvÆid XML o∏wr⁄g Y™g s≥c?")Ë=
NULL
){

1686 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "strdup");

1687 
d⁄e
;

1692 
x0c
 = 
NULL
;

1693 i‡(
yc
 && 
	`m©ch_ba£_chûd
(
x0
, 
x1c
, &
x0c
, yc) < 0)

1694 
d⁄e
;

1695 i‡(
	`xml_mîge1
(
x0c
, (
y™g_node
*)
yc
, 
x0
, 
x1c
, 
ªas⁄
) < 0)

1696 
d⁄e
;

1697 i‡(*
ªas⁄
 !
NULL
)

1698 
ok
;

1701 
ok
:

1702 
ªtvÆ
 = 0;

1703 
d⁄e
:

1704  
ªtvÆ
;

1705 
	}
}

1719 
	$xml_mîge
(
cxobj
 *
x0
,

1720 
cxobj
 *
x1
,

1721 
y™g_•ec
 *
y•ec
,

1722 **
ªas⁄
)

1724 
ªtvÆ
 = -1;

1725 *
x1˙ame
;

1726 
cxobj
 *
x0c
;

1727 
cxobj
 *
x1c
;

1728 
y™g_°mt
 *
yc
;

1731 
x1c
 = 
NULL
;

1732 (
x1c
 = 
	`xml_chûd_óch
(
x1
, x1c, 
CX_ELMNT
)Ë!
NULL
) {

1733 
x1˙ame
 = 
	`xml_«me
(
x1c
);

1735 i‡((
yc
 = 
	`y™g_föd_t›node
(
y•ec
, 
x1˙ame
, 
YC_DATANODE
)Ë=
NULL
){

1736 i‡(
ªas⁄
 && (*ªas⁄ = 
	`°rdup
("XMLÇodêha†nÿc‹ª•⁄dög y™g s≥cifiˇti⁄ (InvÆid XML o∏wr⁄g Y™g s≥c?")Ë=
NULL
){

1737 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "strdup");

1738 
d⁄e
;

1743 i‡(
	`m©ch_ba£_chûd
(
x0
, 
x1c
, &
x0c
, 
yc
) < 0)

1744 
d⁄e
;

1745 i‡(
	`xml_mîge1
(
x0c
, (
y™g_node
*)
yc
, 
x0
, 
x1c
, 
ªas⁄
) < 0)

1746 
d⁄e
;

1747 i‡(*
ªas⁄
 !
NULL
)

1750 
ªtvÆ
 = 0;

1751 
d⁄e
:

1752  
ªtvÆ
;

1753 
	}
}

1769 
	$y™g_íum_öt_vÆue
(
cxobj
 *
node
,

1770 
öt32_t
 *
vÆ
)

1772 
ªtvÆ
 = -1;

1773 
y™g_•ec
 *
y•ec
;

1774 
y™g_°mt
 *
ys
;

1775 
y™g_°mt
 *
yty≥
;

1776 
y™g_°mt
 *
yª°y≥
;

1777 
y™g_°mt
 *
yíum
;

1778 
y™g_°mt
 *
yvÆ
;

1779 *
ªas⁄
 = 
NULL
;

1781 i‡(
node
 =
NULL
)

1782 
d⁄e
;

1783 i‡((
ys
 = (
y™g_°mt
 *Ë
	`xml_•ec
(
node
)Ë=
NULL
)

1784 
d⁄e
;

1785 i‡((
y•ec
 = 
	`ys_•ec
(
ys
)Ë=
NULL
)

1786 
d⁄e
;

1787 i‡((
yty≥
 = 
	`y™g_föd
((
y™g_node
 *)
ys
, 
Y_TYPE
, 
NULL
)) == NULL)

1788 
d⁄e
;

1789 i‡(
	`y™g_ty≥_ªsﬁve
(
ys
, 
yty≥
, &
yª°y≥
,

1790 
NULL
, NULL, NULL, NULL, NULL) < 0)

1791 
d⁄e
;

1792 i‡(
yª°y≥
==
NULL
 || 
	`°rcmp
(yª°y≥->
ys_¨gumít
, "enumeration"))

1793 
d⁄e
;

1794 i‡((
yíum
 = 
	`y™g_föd
((
y™g_node
 *)
yª°y≥
, 
Y_ENUM
, 
	`xml_body
(
node
))Ë=
NULL
)

1795 
d⁄e
;

1797 i‡((
yvÆ
 = 
	`y™g_föd
((
y™g_node
 *)
yíum
, 
Y_VALUE
, 
NULL
)) == NULL)

1798 
d⁄e
;

1800 i‡(
	`∑r£_öt32
(
yvÆ
->
ys_¨gumít
, 
vÆ
, &
ªas⁄
) < 0)

1801 
d⁄e
;

1802 
ªtvÆ
 = 0;

1803 
d⁄e
:

1804  
ªtvÆ
;

1805 
	}
}

1826 
	$ußge
(*
¨gv0
)

1828 
	`Ârötf
(
°dîr
, "ußge:%†<≠i_∑th_fmt> <cv0>, <cv1>,...\n", 
¨gv0
);

1829 
	`exô
(0);

1830 
	}
}

1833 
	$maö
(
¨gc
, **
¨gv
)

1835 
nvec
;

1836 **
vec
;

1837 *
°r0
;

1838 *
°r1
;

1839 
i
;

1840 *
≠i_∑th_fmt
;

1841 
cg_v¨
 *
cv
;

1842 
cvec
 *
cvv
;

1843 *
≠i_∑th
=
NULL
;

1845 
	`˛ic⁄_log_öô
(
__FILE__
, 
LOG_INFO
, 
CLICON_LOG_STDERR
);

1846 i‡(
¨gc
 < 2){

1847 
	`ußge
(
¨gv
[0]);

1850 
≠i_∑th_fmt
 = 
¨gv
[1];

1851 i‡((
cvv
 = 
	`cvec_√w
(0)Ë=
NULL
){

1852 
	`≥º‹
("cvec_new");

1855 
cv
 = 
	`cv_√w
(
CGV_STRING
);

1856 
	`cv_°rög_£t
(
cv
, "CLI base command");

1857 
	`cvec_≠≥nd_v¨
(
cvv
, 
cv
);

1858 
i
=2; i<
¨gc
; i++){

1859 
cv
 = 
	`cv_√w
(
CGV_STRING
);

1860 i‡(
	`cv_∑r£
(
¨gv
[
i
], 
cv
) < 0){

1861 
	`≥º‹
("cv_parse");

1864 
	`cvec_≠≥nd_v¨
(
cvv
, 
cv
);

1866 i‡(
	`≠i_∑th_fmt2≠i_∑th
(
≠i_∑th_fmt
, 
cvv
, &
≠i_∑th
) < 0)

1868 
	`¥ötf
("%s\n", 
≠i_∑th
);

1870 
	}
}

	@clixon-master/lib/src/clixon_xml_parse.h

38 #i‚de‡
_CLIXON_XML_PARSE_H_


39 
	#_CLIXON_XML_PARSE_H_


	)

45 
	sxml_∑r£_yacc_¨g
{

46 *
	mya_∑r£_°rög
;

47 
	mya_löíum
;

48 *
	mya_Àxbuf
;

50 
cxobj
 *
	mya_xñemít
;

51 
cxobj
 *
	mya_x∑ª¡
;

52 
	mya_skù•a˚
;

53 
y™g_•ec
 *
	mya_y•ec
;

54 
	mya_Àx_°©e
;

57 *
˛ix⁄_xml_∑r£ãxt
;

62 
˛ix⁄_xml_∑r£l_öô
(
xml_∑r£_yacc_¨g
 *
ya
);

63 
˛ix⁄_xml_∑r£l_exô
(
xml_∑r£_yacc_¨g
 *
ya
);

65 
˛ix⁄_xml_∑r£l_löír
();

66 
˛ix⁄_xml_∑r£Àx
(*);

67 
˛ix⁄_xml_∑r£∑r£
(*);

	@clixon-master/lib/src/clixon_xml_parse.tab.c

44 
	#YYBISON
 1

	)

47 
	#YYBISON_VERSION
 "3.0.4"

	)

50 
	#YYSKELETON_NAME
 "yacc.c"

	)

53 
	#YYPURE
 0

	)

56 
	#YYPUSH
 0

	)

59 
	#YYPULL
 1

	)

63 
	#yy∑r£
 
˛ix⁄_xml_∑r£∑r£


	)

64 
	#yyÀx
 
˛ix⁄_xml_∑r£Àx


	)

65 
	#yyîr‹
 
˛ix⁄_xml_∑r£îr‹


	)

66 
	#yydebug
 
˛ix⁄_xml_∑r£debug


	)

67 
	#yy√ºs
 
˛ix⁄_xml_∑r£√ºs


	)

69 
	#yylvÆ
 
˛ix⁄_xml_∑r£lvÆ


	)

70 
	#yych¨
 
˛ix⁄_xml_∑r£ch¨


	)

76 #i‚de‡
YY_NULLPTR


77 #i‡
deföed
 
__˝lu•lus
 && 201103L <= __cplusplus

78 
	#YY_NULLPTR
 
nuŒ±r


	)

80 
	#YY_NULLPTR
 0

	)

85 #ifde‡
YYERROR_VERBOSE


86 #unde‡
YYERROR_VERBOSE


87 
	#YYERROR_VERBOSE
 1

	)

89 
	#YYERROR_VERBOSE
 0

	)

94 #i‚de‡
YY_CLIXON_XML_PARSE_Y_TAB_H_INCLUDED


95 
	#YY_CLIXON_XML_PARSE_Y_TAB_H_INCLUDED


	)

97 #i‚de‡
YYDEBUG


98 
	#YYDEBUG
 0

	)

100 #i‡
YYDEBUG


101 
˛ix⁄_xml_∑r£debug
;

105 #i‚de‡
YYTOKENTYPE


106 
	#YYTOKENTYPE


	)

107 
	eyytokíty≥


109 
	mNAME
 = 258,

110 
	mCHARDATA
 = 259,

111 
	mVER
 = 260,

112 
	mENC
 = 261,

113 
	mBSLASH
 = 262,

114 
	mESLASH
 = 263,

115 
	mBTEXT
 = 264,

116 
	mETEXT
 = 265,

117 
	mBCOMMENT
 = 266,

118 
	mECOMMENT
 = 267

122 
	#NAME
 258

	)

123 
	#CHARDATA
 259

	)

124 
	#VER
 260

	)

125 
	#ENC
 261

	)

126 
	#BSLASH
 262

	)

127 
	#ESLASH
 263

	)

128 
	#BTEXT
 264

	)

129 
	#ETEXT
 265

	)

130 
	#BCOMMENT
 266

	)

131 
	#ECOMMENT
 267

	)

134 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


136 
	uYYSTYPE


140 *
	m°rög
;

145 
YYSTYPE
 
	tYYSTYPE
;

146 
	#YYSTYPE_IS_TRIVIAL
 1

	)

147 
	#YYSTYPE_IS_DECLARED
 1

	)

151 
YYSTYPE
 
˛ix⁄_xml_∑r£lvÆ
;

153 
˛ix⁄_xml_∑r£∑r£
 (*
_ya
);

162 
	#_YA
 ((
xml_∑r£_yacc_¨g
 *)
_ya
)

	)

164 
	~<°dio.h
>

165 
	~<°döt.h
>

166 
	~<°rög.h
>

167 
	~<î∫o.h
>

168 
	~<°dlib.h
>

171 
	~<˛igí/˛igí.h
>

174 
	~"˛ix⁄_îr.h
"

175 
	~"˛ix⁄_log.h
"

176 
	~"˛ix⁄_queue.h
"

177 
	~"˛ix⁄_hash.h
"

178 
	~"˛ix⁄_h™dÀ.h
"

179 
	~"˛ix⁄_y™g.h
"

180 
	~"˛ix⁄_xml.h
"

181 
	~"˛ix⁄_xml_s‹t.h
"

182 
	~"˛ix⁄_xml_∑r£.h
"

185 
	$˛ix⁄_xml_∑r£îr‹
(*
_ya
, *
s
)

187 
	`˛ic⁄_îr
(
OE_XML
, 0, "xml_parse:Üine %d: %s:át or before: %s",

188 
_YA
->
ya_löíum
, 
s
, 
˛ix⁄_xml_∑r£ãxt
);

190 
	}
}

197 
	$xml_∑r£_c⁄ã¡
(
xml_∑r£_yacc_¨g
 *
ya
,

198 *
°r
)

200 
cxobj
 *
xn
 = 
ya
->
ya_xñemít
;

201 
cxobj
 *
xp
 = 
ya
->
ya_x∑ª¡
;

202 
ªtvÆ
 = -1;

204 
ya
->
ya_xñemít
 = 
NULL
;

205 i‡(
xn
 =
NULL
){

206 i‡((
xn
 = 
	`xml_√w
("body", 
xp
, 
NULL
)) == NULL)

207 
d⁄e
;

208 
	`xml_ty≥_£t
(
xn
, 
CX_BODY
);

210 i‡(
	`xml_vÆue_≠≥nd
(
xn
, 
°r
)==
NULL
)

211 
d⁄e
;

212 
ya
->
ya_xñemít
 = 
xn
;

213 
ªtvÆ
 = 0;

214 
d⁄e
:

215  
ªtvÆ
;

216 
	}
}

219 
	$xml_∑r£_vîsi⁄
(
xml_∑r£_yacc_¨g
 *
ya
,

220 *
vî
)

222 if(
	`°rcmp
(
vî
, "1.0")){

223 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "Wr⁄g XML vîsi⁄ %†ex≥˘ed 1.0\n", 
vî
);

224 
	`‰ì
(
vî
);

227 
	`‰ì
(
vî
);

229 
	}
}

237 
	$xml_∑r£_q«me
(
xml_∑r£_yacc_¨g
 *
ya
,

238 *
¥efix
,

239 *
«me
)

241 
ªtvÆ
 = -1;

242 
cxobj
 *
x
;

243 
y™g_°mt
 *
y
 = 
NULL
;

244 
cxobj
 *
xp
;

246 
xp
 = 
ya
->
ya_x∑ª¡
;

247 i‡(
	`xml_chûd_•ec
(
«me
, 
xp
, 
ya
->
ya_y•ec
, &
y
) < 0)

248 
d⁄e
;

249 i‡((
x
 = 
	`xml_√w
(
«me
, 
xp
, 
y
)Ë=
NULL
)

250 
d⁄e
;

251 i‡(
	`xml_«me•a˚_£t
(
x
, 
¥efix
) < 0)

252 
d⁄e
;

253 
ya
->
ya_xñemít
 = 
x
;

254 
ªtvÆ
 = 0;

255 
d⁄e
:

256 i‡(
¥efix
)

257 
	`‰ì
(
¥efix
);

258 
	`‰ì
(
«me
);

259  
ªtvÆ
;

260 
	}
}

263 
	$xml_∑r£_íd¶ash_¥e
(
xml_∑r£_yacc_¨g
 *
ya
)

265 
ya
->
ya_x∑ª¡
 = ya->
ya_xñemít
;

266 
ya
->
ya_xñemít
 = 
NULL
;

268 
	}
}

271 
	$xml_∑r£_íd¶ash_mid
(
xml_∑r£_yacc_¨g
 *
ya
)

273 i‡(
ya
->
ya_xñemít
 !
NULL
)

274 
ya
->
ya_xñemít
 = 
	`xml_∑ª¡
(ya->ya_xelement);

276 
ya
->
ya_xñemít
 = ya->
ya_x∑ª¡
;

277 
ya
->
ya_x∑ª¡
 = 
	`xml_∑ª¡
(ya->
ya_xñemít
);

279 
	}
}

282 
	$xml_∑r£_íd¶ash_po°
(
xml_∑r£_yacc_¨g
 *
ya
)

284 
ya
->
ya_xñemít
 = 
NULL
;

286 
	}
}

290 
	$xml_∑r£_b¶ash1
(
xml_∑r£_yacc_¨g
 *
ya
,

291 *
«me
)

293 
ªtvÆ
 = -1;

294 
cxobj
 *
x
 = 
ya
->
ya_xñemít
;

295 
cxobj
 *
xc
;

297 i‡(
	`°rcmp
(
	`xml_«me
(
x
), 
«me
)){

298 
	`˛ic⁄_îr
(
OE_XML
, 0, "XMLÖarse sanity check failed: %s vs %s",

299 
	`xml_«me
(
x
), 
«me
);

300 
d⁄e
;

302 i‡(
	`xml_«me•a˚
(
x
)!=
NULL
){

303 
	`˛ic⁄_îr
(
OE_XML
, 0, "XMLÖarse sanity check failed: %s:%s vs %s\n",

304 
	`xml_«me•a˚
(
x
), 
	`xml_«me
(x), 
«me
);

305 
d⁄e
;

312 i‡(
ya
->
ya_skù•a˚
){

313 
xc
 = 
NULL
;

314 (
xc
 = 
	`xml_chûd_óch
(
x
, xc, 
CX_ELMNT
)Ë!
NULL
)

316 i‡(
xc
 !
NULL
){

317 
xc
 = 
NULL
;

318 (
xc
 = 
	`xml_chûd_óch
(
x
, xc, 
CX_BODY
)Ë!
NULL
) {

319 
	`xml_purge
(
xc
);

320 
xc
 = 
NULL
;

324 
ªtvÆ
 = 0;

325 
d⁄e
:

326 
	`‰ì
(
«me
);

327  
ªtvÆ
;

328 
	}
}

332 
	$xml_∑r£_b¶ash2
(
xml_∑r£_yacc_¨g
 *
ya
,

333 *
«me•a˚
,

334 *
«me
)

336 
ªtvÆ
 = -1;

337 
cxobj
 *
x
 = 
ya
->
ya_xñemít
;

338 
cxobj
 *
xc
;

340 i‡(
	`°rcmp
(
	`xml_«me
(
x
), 
«me
)){

341 
	`˛ic⁄_îr
(
OE_XML
, 0, "Sanity check failed: %s:%s vs %s:%s\n",

342 
	`xml_«me•a˚
(
x
),

343 
	`xml_«me
(
x
),

344 
«me•a˚
,

345 
«me
);

346 
d⁄e
;

348 i‡(
	`xml_«me•a˚
(
x
)==
NULL
 ||

349 
	`°rcmp
(
	`xml_«me•a˚
(
x
), 
«me•a˚
)){

350 
	`˛ic⁄_îr
(
OE_XML
, 0, "Sanity check failed: %s:%s vs %s:%s\n",

351 
	`xml_«me•a˚
(
x
),

352 
	`xml_«me
(
x
),

353 
«me•a˚
,

354 
«me
);

355 
d⁄e
;

362 i‡(
ya
->
ya_skù•a˚
){

363 
xc
 = 
NULL
;

364 (
xc
 = 
	`xml_chûd_óch
(
x
, xc, 
CX_ELMNT
)Ë!
NULL
)

366 i‡(
xc
 !
NULL
){

367 
xc
 = 
NULL
;

368 (
xc
 = 
	`xml_chûd_óch
(
x
, xc, 
CX_BODY
)Ë!
NULL
) {

369 
	`xml_vÆue_£t
(
xc
, "");

373 
ªtvÆ
 = 0;

374 
d⁄e
:

375 
	`‰ì
(
«me
);

376 
	`‰ì
(
«me•a˚
);

377  
ªtvÆ
;

378 
	}
}

381 
	$xml_∑r£_©å
(
xml_∑r£_yacc_¨g
 *
ya
,

382 *
q«me
,

383 *
©tvÆ
)

385 
ªtvÆ
 = -1;

386 
cxobj
 *
xa
;

388 i‡((
xa
 = 
	`xml_√w
(
q«me
, 
ya
->
ya_xñemít
, 
NULL
)) == NULL)

389 
d⁄e
;

390 
	`xml_ty≥_£t
(
xa
, 
CX_ATTR
);

391 i‡(
	`xml_vÆue_£t
(
xa
, 
©tvÆ
) < 0)

392 
d⁄e
;

393 
ªtvÆ
 = 0;

394 
d⁄e
:

395 
	`‰ì
(
q«me
);

396 
	`‰ì
(
©tvÆ
);

397  
ªtvÆ
;

398 
	}
}

404 
	$xml_mîge_©tq«me
(
xml_∑r£_yacc_¨g
 *
ya
,

405 *
¥efix
,

406 *
«me
)

408 *
°r
;

409 
Àn
 = 
	`°æí
(
¥efix
)+°æí(
«me
)+2;

411 i‡((
°r
=
	`mÆloc
(
Àn
)Ë=
NULL
)

412  
NULL
;

413 
	`¢¥ötf
(
°r
, 
Àn
, "%s:%s", 
¥efix
, 
«me
);

414 
	`‰ì
(
¥efix
);

415 
	`‰ì
(
«me
);

416  
°r
;

417 
	}
}

427 #ifde‡
YYTYPE_UINT8


428 
YYTYPE_UINT8
 
	tyyty≥_uöt8
;

430 
	tyyty≥_uöt8
;

433 #ifde‡
YYTYPE_INT8


434 
YYTYPE_INT8
 
	tyyty≥_öt8
;

436 sig√d 
	tyyty≥_öt8
;

439 #ifde‡
YYTYPE_UINT16


440 
YYTYPE_UINT16
 
	tyyty≥_uöt16
;

442 
	tyyty≥_uöt16
;

445 #ifde‡
YYTYPE_INT16


446 
YYTYPE_INT16
 
	tyyty≥_öt16
;

448 
	tyyty≥_öt16
;

451 #i‚de‡
YYSIZE_T


452 #ifde‡
__SIZE_TYPE__


453 
	#YYSIZE_T
 
__SIZE_TYPE__


	)

454 #ñi‡
deföed
 
size_t


455 
	#YYSIZE_T
 
size_t


	)

456 #ñi‡! 
deföed
 
YYSIZE_T


457 
	~<°ddef.h
>

458 
	#YYSIZE_T
 
size_t


	)

460 
	#YYSIZE_T
 

	)

464 
	#YYSIZE_MAXIMUM
 ((
YYSIZE_T
Ë-1)

	)

466 #i‚de‡
YY_


467 #i‡
deföed
 
YYENABLE_NLS
 && YYENABLE_NLS

468 #i‡
ENABLE_NLS


469 
	~<liböé.h
>

470 
	#YY_
(
Msgid
Ë
	`dgëãxt
 ("bis⁄-ru¡ime", Msgid)

	)

473 #i‚de‡
YY_


474 
	#YY_
(
Msgid
Ë
	)
Msgid

478 #i‚de‡
YY_ATTRIBUTE


479 #i‡(
deföed
 
__GNUC__
 \

480 && (2 < 
	g__GNUC__
 || (__GNUC__ =2 && 96 <
__GNUC_MINOR__
))) \

481 || 
deföed
 
__SUNPRO_C
 && 0x5110 <= __SUNPRO_C

482 
	#YY_ATTRIBUTE
(
S≥c
Ë
	`__©åibuã__
(S≥c)

	)

484 
	#YY_ATTRIBUTE
(
S≥c
Ë

	)

488 #i‚de‡
YY_ATTRIBUTE_PURE


489 
	#YY_ATTRIBUTE_PURE
 
	`YY_ATTRIBUTE
 ((
__puª__
))

	)

492 #i‚de‡
YY_ATTRIBUTE_UNUSED


493 
	#YY_ATTRIBUTE_UNUSED
 
	`YY_ATTRIBUTE
 ((
__unu£d__
))

	)

496 #i‡!
deföed
 
_N‹ëu∫
 \

497 && (!
deföed
 
__STDC_VERSION__
 || __STDC_VERSION__ < 201112)

498 #i‡
deföed
 
_MSC_VER
 && 1200 <= _MSC_VER

499 
	#_N‹ëu∫
 
	`__de˛•ec
 (
n‹ëu∫
)

	)

501 
	#_N‹ëu∫
 
	`YY_ATTRIBUTE
 ((
__n‹ëu∫__
))

	)

506 #i‡! 
deföed
 
löt
 || deföed 
__GNUC__


507 
	#YYUSE
(
E
Ë((Ë(E))

	)

509 
	#YYUSE
(
E
Ë

	)

512 #i‡
deföed
 
__GNUC__
 && 407 <__GNUC__ * 100 + 
__GNUC_MINOR__


514 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
 \

515 
	`_Pøgma
 ("GCC diagnosticÖush") \

516 
	`_Pøgma
 ("GCC diagnostic ignored \"-Wuninitialized\"")\

517 
	`_Pøgma
 ("GCC dügno°i¯ign‹ed \"-Wmaybe-unöôülized\"")

	)

518 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END
 \

519 
	`_Pøgma
 ("GCC dügno°i¯p›")

	)

521 
	#YY_INITIAL_VALUE
(
VÆue
Ë
	)
Value

523 #i‚de‡
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


524 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


	)

525 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END


	)

527 #i‚de‡
YY_INITIAL_VALUE


528 
	#YY_INITIAL_VALUE
(
VÆue
Ë

	)

532 #i‡! 
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


536 #ifde‡
YYSTACK_USE_ALLOCA


537 #i‡
YYSTACK_USE_ALLOCA


538 #ifde‡
__GNUC__


539 
	#YYSTACK_ALLOC
 
__buûtö_Æloˇ


	)

540 #ñi‡
deföed
 
__BUILTIN_VA_ARG_INCR


541 
	~<Æloˇ.h
>

542 #ñi‡
deföed
 
_AIX


543 
	#YYSTACK_ALLOC
 
__Æloˇ


	)

544 #ñi‡
deföed
 
_MSC_VER


545 
	~<mÆloc.h
>

546 
	#Æloˇ
 
_Æloˇ


	)

548 
	#YYSTACK_ALLOC
 
Æloˇ


	)

549 #i‡! 
deföed
 
_ALLOCA_H
 && ! deföed 
EXIT_SUCCESS


550 
	~<°dlib.h
>

552 #i‚de‡
EXIT_SUCCESS


553 
	#EXIT_SUCCESS
 0

	)

560 #ifde‡
YYSTACK_ALLOC


562 
	#YYSTACK_FREE
(
På
Ëdÿ{ ; } 0)

	)

563 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


568 
	#YYSTACK_ALLOC_MAXIMUM
 4032

	)

571 
	#YYSTACK_ALLOC
 
YYMALLOC


	)

572 
	#YYSTACK_FREE
 
YYFREE


	)

573 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


574 
	#YYSTACK_ALLOC_MAXIMUM
 
YYSIZE_MAXIMUM


	)

576 #i‡(
deföed
 
__˝lu•lus
 && ! deföed 
EXIT_SUCCESS
 \

577 && ! ((
deföed
 
	gYYMALLOC
 || deföed 
	gmÆloc
) \

578 && (
deföed
 
	gYYFREE
 || deföed 
	g‰ì
)))

579 
	~<°dlib.h
>

580 #i‚de‡
EXIT_SUCCESS


581 
	#EXIT_SUCCESS
 0

	)

584 #i‚de‡
YYMALLOC


585 
	#YYMALLOC
 
mÆloc


	)

586 #i‡! 
deföed
 
mÆloc
 && ! deföed 
EXIT_SUCCESS


587 *
mÆloc
 (
YYSIZE_T
);

590 #i‚de‡
YYFREE


591 
	#YYFREE
 
‰ì


	)

592 #i‡! 
deföed
 
‰ì
 && ! deföed 
EXIT_SUCCESS


593 
‰ì
 (*);

600 #i‡(! 
deföed
 
yyovîÊow
 \

601 && (! 
deföed
 
	g__˝lu•lus
 \

602 || (
deföed
 
	gYYSTYPE_IS_TRIVIAL
 && YYSTYPE_IS_TRIVIAL)))

605 
	uyyÆloc


607 
yyty≥_öt16
 
	myyss_Æloc
;

608 
YYSTYPE
 
	myyvs_Æloc
;

612 
	#YYSTACK_GAP_MAXIMUM
 ( (
yyÆloc
Ë- 1)

	)

616 
	#YYSTACK_BYTES
(
N
) \

617 ((
N
Ë* ( (
yyty≥_öt16
Ë+  (
YYSTYPE
)) \

618 + 
YYSTACK_GAP_MAXIMUM
)

	)

620 
	#YYCOPY_NEEDED
 1

	)

627 
	#YYSTACK_RELOCATE
(
Sèck_Æloc
, 
Sèck
) \

630 
YYSIZE_T
 
yy√wbyãs
; \

631 
	`YYCOPY
 (&
yy±r
->
Sèck_Æloc
, 
Sèck
, 
yysize
); \

632 
Sèck
 = &
yy±r
->
Sèck_Æloc
; \

633 
yy√wbyãs
 = 
yy°acksize
 *  (*
Sèck
Ë+ 
YYSTACK_GAP_MAXIMUM
; \

634 
yy±r
 +
yy√wbyãs
 /  (*yyptr); \

636 0)

	)

640 #i‡
deföed
 
YYCOPY_NEEDED
 && YYCOPY_NEEDED

643 #i‚de‡
YYCOPY


644 #i‡
deföed
 
__GNUC__
 && 1 < __GNUC__

645 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

646 
	`__buûtö_mem˝y
 (
D°
, 
Src
, (
Cou¡
Ë*  (*(Src)))

	)

648 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

651 
YYSIZE_T
 
yyi
; \

652 
yyi
 = 0; yyò< (
Cou¡
); yyi++) \

653 (
D°
)[
yyi
] = (
Src
)[yyi]; \

655 0)

	)

661 
	#YYFINAL
 16

	)

663 
	#YYLAST
 53

	)

666 
	#YYNTOKENS
 19

	)

668 
	#YYNNTS
 18

	)

670 
	#YYNRULES
 32

	)

672 
	#YYNSTATES
 63

	)

676 
	#YYUNDEFTOK
 2

	)

677 
	#YYMAXUTOK
 267

	)

679 
	#YYTRANSLATE
(
YYX
) \

680 ((Ë(
YYX
Ë<
YYMAXUTOK
 ? 
yyå™¶©e
[YYX] : 
YYUNDEFTOK
)

	)

684 c⁄° 
yyty≥_uöt8
 
	gyyå™¶©e
[] =

715 #i‡
YYDEBUG


717 c⁄° 
yyty≥_uöt16
 
	gyyæöe
[] =

726 #i‡
YYDEBUG
 || 
YYERROR_VERBOSE
 || 0

729 c⁄° *c⁄° 
	gyyäame
[] =

735 "c⁄ã¡", "commít", "©ås", "©å", "©tq«me", "©tvÆue", 
YY_NULLPTR


739 #ifde‡
YYPRINT


742 c⁄° 
yyty≥_uöt16
 
	gyytoknum
[] =

749 
	#YYPACT_NINF
 -9

	)

751 
	#yy∑˘_vÆue_is_deÁu…
(
Yy°©e
) \

752 (!!((
Yy°©e
Ë=(-9)))

	)

754 
	#YYTABLE_NINF
 -1

	)

756 
	#yyèbÀ_vÆue_is_îr‹
(
YyèbÀ_vÆue
) \

757 0

	)

761 c⁄° 
yyty≥_öt8
 
	gyy∑˘
[] =

775 c⁄° 
yyty≥_uöt8
 
	gyydeÁ˘
[] =

787 c⁄° 
yyty≥_öt8
 
	gyypgŸo
[] =

794 c⁄° 
yyty≥_öt8
 
	gyydefgŸo
[] =

803 c⁄° 
yyty≥_uöt8
 
	gyyèbÀ
[] =

813 c⁄° 
yyty≥_öt8
 
	gyycheck
[] =

825 c⁄° 
yyty≥_uöt8
 
	gyy°os
[] =

837 c⁄° 
yyty≥_uöt8
 
	gyyr1
[] =

846 c⁄° 
yyty≥_uöt8
 
	gyyr2
[] =

855 
	#yyîrok
 (
yyîr°©us
 = 0)

	)

856 
	#yy˛órö
 (
yych¨
 = 
YYEMPTY
)

	)

857 
	#YYEMPTY
 (-2)

	)

858 
	#YYEOF
 0

	)

860 
	#YYACCEPT
 
yyac˚±œb


	)

861 
	#YYABORT
 
yyab‹éab


	)

862 
	#YYERROR
 
yyîr‹œb


	)

865 
	#YYRECOVERING
(Ë(!!
yyîr°©us
)

	)

867 
	#YYBACKUP
(
Tokí
, 
VÆue
) \

869 i‡(
yych¨
 =
YYEMPTY
) \

871 
yych¨
 = (
Tokí
); \

872 
yylvÆ
 = (
VÆue
); \

873 
	`YYPOPSTACK
 (
yyÀn
); \

874 
yy°©e
 = *
yys•
; \

875 
yybackup
; \

879 
	`yyîr‹
 (
_ya
, 
	`YY_
("syntaxÉrror: cannot back up")); \

880 
YYERROR
; \

882 0)

	)

885 
	#YYTERROR
 1

	)

886 
	#YYERRCODE
 256

	)

891 #i‡
YYDEBUG


893 #i‚de‡
YYFPRINTF


894 
	~<°dio.h
>

895 
	#YYFPRINTF
 
Ârötf


	)

898 
	#YYDPRINTF
(
Args
) \

900 i‡(
yydebug
) \

901 
YYFPRINTF
 
Args
; \

902 } 0)

	)

905 #i‚de‡
YY_LOCATION_PRINT


906 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
Ë((Ë0)

	)

910 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
) \

912 i‡(
yydebug
) \

914 
	`YYFPRINTF
 (
°dîr
, "%†", 
TôÀ
); \

915 
	`yy_symbﬁ_¥öt
 (
°dîr
, \

916 
Ty≥
, 
VÆue
, 
_ya
); \

917 
	`YYFPRINTF
 (
°dîr
, "\n"); \

919 } 0)

	)

927 
	$yy_symbﬁ_vÆue_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
, *
_ya
)

929 
FILE
 *
yyo
 = 
yyouçut
;

930 
	`YYUSE
 (
yyo
);

931 
	`YYUSE
 (
_ya
);

932 i‡(!
yyvÆuï
)

934 #ifde‡
YYPRINT


935 i‡(
yyty≥
 < 
YYNTOKENS
)

936 
	`YYPRINT
 (
yyouçut
, 
yytoknum
[
yyty≥
], *
yyvÆuï
);

938 
	`YYUSE
 (
yyty≥
);

939 
	}
}

947 
	$yy_symbﬁ_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
, *
_ya
)

949 
	`YYFPRINTF
 (
yyouçut
, "%s %s (",

950 
yyty≥
 < 
YYNTOKENS
 ? "tokí" : "¡îm", 
yyäame
[yytype]);

952 
	`yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
, 
_ya
);

953 
	`YYFPRINTF
 (
yyouçut
, ")");

954 
	}
}

962 
	$yy_°ack_¥öt
 (
yyty≥_öt16
 *
yybŸtom
, yyty≥_öt16 *
yyt›
)

964 
	`YYFPRINTF
 (
°dîr
, "StackÇow");

965 ; 
yybŸtom
 <
yyt›
; yybottom++)

967 
yybŸ
 = *
yybŸtom
;

968 
	`YYFPRINTF
 (
°dîr
, " %d", 
yybŸ
);

970 
	`YYFPRINTF
 (
°dîr
, "\n");

971 
	}
}

973 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
) \

975 i‡(
yydebug
) \

976 
	`yy_°ack_¥öt
 ((
BŸtom
), (
T›
)); \

977 } 0)

	)

985 
	$yy_ªdu˚_¥öt
 (
yyty≥_öt16
 *
yys•
, 
YYSTYPE
 *
yyv•
, 
yyruÀ
, *
_ya
)

987 
yy o
 = 
yyæöe
[
yyruÀ
];

988 
yyƒhs
 = 
yyr2
[
yyruÀ
];

989 
yyi
;

990 
	`YYFPRINTF
 (
°dîr
, "Reducing stack byÑule %d (line %lu):\n",

991 
yyruÀ
 - 1, 
yy o
);

993 
yyi
 = 0; yyò< 
yyƒhs
; yyi++)

995 
	`YYFPRINTF
 (
°dîr
, " $%d = ", 
yyi
 + 1);

996 
	`yy_symbﬁ_¥öt
 (
°dîr
,

997 
yy°os
[
yys•
[
yyi
 + 1 - 
yyƒhs
]],

998 &(
yyv•
[(
yyi
 + 1Ë- (
yyƒhs
)])

999 , 
_ya
);

1000 
	`YYFPRINTF
 (
°dîr
, "\n");

1002 
	}
}

1004 
	#YY_REDUCE_PRINT
(
RuÀ
) \

1006 i‡(
yydebug
) \

1007 
	`yy_ªdu˚_¥öt
 (
yys•
, 
yyv•
, 
RuÀ
, 
_ya
); \

1008 } 0)

	)

1012 
	gyydebug
;

1014 
	#YYDPRINTF
(
Args
)

	)

1015 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
)

	)

1016 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
)

	)

1017 
	#YY_REDUCE_PRINT
(
RuÀ
)

	)

1022 #i‚de‡
YYINITDEPTH


1023 
	#YYINITDEPTH
 200

	)

1033 #i‚de‡
YYMAXDEPTH


1034 
	#YYMAXDEPTH
 10000

	)

1038 #i‡
YYERROR_VERBOSE


1040 #i‚de‡
yy°æí


1041 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H


1042 
	#yy°æí
 
°æí


	)

1045 
YYSIZE_T


1046 
	$yy°æí
 (c⁄° *
yy°r
)

1048 
YYSIZE_T
 
yyÀn
;

1049 
yyÀn
 = 0; 
yy°r
[yylen]; yylen++)

1051  
yyÀn
;

1052 
	}
}

1056 #i‚de‡
yy°p˝y


1057 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H
 && deföed 
_GNU_SOURCE


1058 
	#yy°p˝y
 
°p˝y


	)

1063 
	$yy°p˝y
 (*
yyde°
, c⁄° *
yy§c
)

1065 *
yyd
 = 
yyde°
;

1066 c⁄° *
yys
 = 
yy§c
;

1068 (*
yyd
++ = *
yys
++) != '\0')

1071  
yyd
 - 1;

1072 
	}
}

1076 #i‚de‡
yyäamîr


1084 
YYSIZE_T


1085 
	$yyäamîr
 (*
yyªs
, c⁄° *
yy°r
)

1087 i‡(*
yy°r
 == '"')

1089 
YYSIZE_T
 
yyn
 = 0;

1090 c⁄° *
yyp
 = 
yy°r
;

1093 *++
yyp
)

1097 
do_nŸ_°rù_quŸes
;

1100 i‡(*++
yyp
 != '\\')

1101 
do_nŸ_°rù_quŸes
;

1104 i‡(
yyªs
)

1105 
yyªs
[
yyn
] = *
yyp
;

1106 
yyn
++;

1110 i‡(
yyªs
)

1111 
yyªs
[
yyn
] = '\0';

1112  
yyn
;

1114 
do_nŸ_°rù_quŸes
: ;

1117 i‡(! 
yyªs
)

1118  
	`yy°æí
 (
yy°r
);

1120  
	`yy°p˝y
 (
yyªs
, 
yy°r
) - yyres;

1121 
	}
}

1133 
	$yysy¡ax_îr‹
 (
YYSIZE_T
 *
yymsg_Æloc
, **
yymsg
,

1134 
yyty≥_öt16
 *
yys•
, 
yytokí
)

1136 
YYSIZE_T
 
yysize0
 = 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yytokí
]);

1137 
YYSIZE_T
 
yysize
 = 
yysize0
;

1138 íum { 
YYERROR_VERBOSE_ARGS_MAXIMUM
 = 5 };

1140 c⁄° *
yyf‹m©
 = 
YY_NULLPTR
;

1142 c⁄° *
yy¨g
[
YYERROR_VERBOSE_ARGS_MAXIMUM
];

1145 
yycou¡
 = 0;

1170 i‡(
yytokí
 !
YYEMPTY
)

1172 
yyn
 = 
yy∑˘
[*
yys•
];

1173 
yy¨g
[
yycou¡
++] = 
yyäame
[
yytokí
];

1174 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1179 
yyxbegö
 = 
yyn
 < 0 ? -yyn : 0;

1181 
yychecklim
 = 
YYLAST
 - 
yyn
 + 1;

1182 
yyxíd
 = 
yychecklim
 < 
YYNTOKENS
 ? yychecklim : YYNTOKENS;

1183 
yyx
;

1185 
yyx
 = 
yyxbegö
; yyx < 
yyxíd
; ++yyx)

1186 i‡(
yycheck
[
yyx
 + 
yyn
] =yyx && yyx !
YYTERROR


1187 && !
	`yyèbÀ_vÆue_is_îr‹
 (
yyèbÀ
[
yyx
 + 
yyn
]))

1189 i‡(
yycou¡
 =
YYERROR_VERBOSE_ARGS_MAXIMUM
)

1191 
yycou¡
 = 1;

1192 
yysize
 = 
yysize0
;

1195 
yy¨g
[
yycou¡
++] = 
yyäame
[
yyx
];

1197 
YYSIZE_T
 
yysize1
 = 
yysize
 + 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yyx
]);

1198 i‡(! (
yysize
 <
yysize1


1199 && 
yysize1
 <
YYSTACK_ALLOC_MAXIMUM
))

1201 
yysize
 = 
yysize1
;

1207 
yycou¡
)

1209 
	#YYCASE_
(
N
, 
S
) \

1210 
N
: \

1211 
yyf‹m©
 = 
S
; \

1212 

	)

1213 
	`YYCASE_
(0, 
	`YY_
("syntaxÉrror"));

1214 
	`YYCASE_
(1, 
	`YY_
("syntaxÉrror, unexpected %s"));

1215 
	`YYCASE_
(2, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s"));

1216 
	`YYCASE_
(3, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s"));

1217 
	`YYCASE_
(4, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s"));

1218 
	`YYCASE_
(5, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s or %s"));

1219 #unde‡
YYCASE_


1223 
YYSIZE_T
 
yysize1
 = 
yysize
 + 
	`yy°æí
 (
yyf‹m©
);

1224 i‡(! (
yysize
 <
yysize1
 && yysize1 <
YYSTACK_ALLOC_MAXIMUM
))

1226 
yysize
 = 
yysize1
;

1229 i‡(*
yymsg_Æloc
 < 
yysize
)

1231 *
yymsg_Æloc
 = 2 * 
yysize
;

1232 i‡(! (
yysize
 <*
yymsg_Æloc


1233 && *
yymsg_Æloc
 <
YYSTACK_ALLOC_MAXIMUM
))

1234 *
yymsg_Æloc
 = 
YYSTACK_ALLOC_MAXIMUM
;

1242 *
yyp
 = *
yymsg
;

1243 
yyi
 = 0;

1244 (*
yyp
 = *
yyf‹m©
) != '\0')

1245 i‡(*
yyp
 ='%' && 
yyf‹m©
[1] ='s' && 
yyi
 < 
yycou¡
)

1247 
yyp
 +
	`yyäamîr
 (yyp, 
yy¨g
[
yyi
++]);

1248 
yyf‹m©
 += 2;

1252 
yyp
++;

1253 
yyf‹m©
++;

1257 
	}
}

1265 
	$yyde°ru˘
 (c⁄° *
yymsg
, 
yyty≥
, 
YYSTYPE
 *
yyvÆuï
, *
_ya
)

1267 
	`YYUSE
 (
yyvÆuï
);

1268 
	`YYUSE
 (
_ya
);

1269 i‡(!
yymsg
)

1270 
yymsg
 = "Deleting";

1271 
	`YY_SYMBOL_PRINT
 (
yymsg
, 
yyty≥
, 
yyvÆuï
, 
yyloˇti⁄p
);

1273 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1274 
	`YYUSE
 (
yyty≥
);

1275 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1276 
	}
}

1282 
	gyych¨
;

1285 
YYSTYPE
 
	gyylvÆ
;

1287 
	gyy√ºs
;

1295 
	$yy∑r£
 (*
_ya
)

1297 
yy°©e
;

1299 
yyîr°©us
;

1309 
yyty≥_öt16
 
yysß
[
YYINITDEPTH
];

1310 
yyty≥_öt16
 *
yyss
;

1311 
yyty≥_öt16
 *
yys•
;

1314 
YYSTYPE
 
yyvß
[
YYINITDEPTH
];

1315 
YYSTYPE
 *
yyvs
;

1316 
YYSTYPE
 *
yyv•
;

1318 
YYSIZE_T
 
yy°acksize
;

1320 
yyn
;

1321 
yyªsu…
;

1323 
yytokí
 = 0;

1326 
YYSTYPE
 
yyvÆ
;

1328 #i‡
YYERROR_VERBOSE


1330 
yymsgbuf
[128];

1331 *
yymsg
 = 
yymsgbuf
;

1332 
YYSIZE_T
 
yymsg_Æloc
 =  
yymsgbuf
;

1335 
	#YYPOPSTACK
(
N
Ë(
yyv•
 -(N), 
yys•
 -(N))

	)

1339 
yyÀn
 = 0;

1341 
yys•
 = 
yyss
 = 
yysß
;

1342 
yyv•
 = 
yyvs
 = 
yyvß
;

1343 
yy°acksize
 = 
YYINITDEPTH
;

1345 
	`YYDPRINTF
 ((
°dîr
, "StartingÖarse\n"));

1347 
yy°©e
 = 0;

1348 
yyîr°©us
 = 0;

1349 
yy√ºs
 = 0;

1350 
yych¨
 = 
YYEMPTY
;

1351 
yy£t°©e
;

1356 
yy√w°©e
:

1359 
yys•
++;

1361 
yy£t°©e
:

1362 *
yys•
 = 
yy°©e
;

1364 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1367 
YYSIZE_T
 
yysize
 = 
yys•
 - 
yyss
 + 1;

1369 #ifde‡
yyovîÊow


1374 
YYSTYPE
 *
yyvs1
 = 
yyvs
;

1375 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1381 
	`yyovîÊow
 (
	`YY_
("memoryÉxhausted"),

1382 &
yyss1
, 
yysize
 *  (*
yys•
),

1383 &
yyvs1
, 
yysize
 *  (*
yyv•
),

1384 &
yy°acksize
);

1386 
yyss
 = 
yyss1
;

1387 
yyvs
 = 
yyvs1
;

1390 #i‚de‡
YYSTACK_RELOCATE


1391 
yyexhau°edœb
;

1394 i‡(
YYMAXDEPTH
 <
yy°acksize
)

1395 
yyexhau°edœb
;

1396 
yy°acksize
 *= 2;

1397 i‡(
YYMAXDEPTH
 < 
yy°acksize
)

1398 
yy°acksize
 = 
YYMAXDEPTH
;

1401 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1402 
yyÆloc
 *
yy±r
 =

1403 (
yyÆloc
 *Ë
	`YYSTACK_ALLOC
 (
	`YYSTACK_BYTES
 (
yy°acksize
));

1404 i‡(! 
yy±r
)

1405 
yyexhau°edœb
;

1406 
	`YYSTACK_RELOCATE
 (
yyss_Æloc
, 
yyss
);

1407 
	`YYSTACK_RELOCATE
 (
yyvs_Æloc
, 
yyvs
);

1408 #unde‡
YYSTACK_RELOCATE


1409 i‡(
yyss1
 !
yysß
)

1410 
	`YYSTACK_FREE
 (
yyss1
);

1415 
yys•
 = 
yyss
 + 
yysize
 - 1;

1416 
yyv•
 = 
yyvs
 + 
yysize
 - 1;

1418 
	`YYDPRINTF
 ((
°dîr
, "Stack size increasedÅo %lu\n",

1419 (Ë
yy°acksize
));

1421 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1422 
YYABORT
;

1425 
	`YYDPRINTF
 ((
°dîr
, "E¡îög sèã %d\n", 
yy°©e
));

1427 i‡(
yy°©e
 =
YYFINAL
)

1428 
YYACCEPT
;

1430 
yybackup
;

1435 
yybackup
:

1441 
yyn
 = 
yy∑˘
[
yy°©e
];

1442 i‡(
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1443 
yydeÁu…
;

1448 i‡(
yych¨
 =
YYEMPTY
)

1450 
	`YYDPRINTF
 ((
°dîr
, "ReadingáÅoken: "));

1451 
yych¨
 = 
	`yyÀx
 (
_ya
);

1454 i‡(
yych¨
 <
YYEOF
)

1456 
yych¨
 = 
yytokí
 = 
YYEOF
;

1457 
	`YYDPRINTF
 ((
°dîr
, "NowátÉnd of input.\n"));

1461 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

1462 
	`YY_SYMBOL_PRINT
 ("Nexàtokí is", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1467 
yyn
 +
yytokí
;

1468 i‡(
yyn
 < 0 || 
YYLAST
 < yy¿|| 
yycheck
[yyn] !
yytokí
)

1469 
yydeÁu…
;

1470 
yyn
 = 
yyèbÀ
[yyn];

1471 i‡(
yyn
 <= 0)

1473 i‡(
	`yyèbÀ_vÆue_is_îr‹
 (
yyn
))

1474 
yyîæab
;

1475 
yyn
 = -yyn;

1476 
yyªdu˚
;

1481 i‡(
yyîr°©us
)

1482 
yyîr°©us
--;

1485 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1488 
yych¨
 = 
YYEMPTY
;

1490 
yy°©e
 = 
yyn
;

1491 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1492 *++
yyv•
 = 
yylvÆ
;

1493 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1495 
yy√w°©e
;

1501 
yydeÁu…
:

1502 
yyn
 = 
yydeÁ˘
[
yy°©e
];

1503 i‡(
yyn
 == 0)

1504 
yyîæab
;

1505 
yyªdu˚
;

1511 
yyªdu˚
:

1513 
yyÀn
 = 
yyr2
[
yyn
];

1523 
yyvÆ
 = 
yyv•
[1-
yyÀn
];

1526 
	`YY_REDUCE_PRINT
 (
yyn
);

1527 
yyn
)

1531 { 
	`˛ic⁄_debug
(3, "topxml->list ACCEPT");

1532 
YYACCEPT
; }

1538 { 
	`˛ic⁄_debug
(3, "topxml->dclÜist ACCEPT");

1539 
YYACCEPT
; }

1545 { 
	`˛ic⁄_debug
(3, "dcl->infoÉncode"); }

1551 { i‡(
	`xml_∑r£_vîsi⁄
(
_YA
, (
yyv•
[-1].
°rög
)Ë<0Ë
YYABORT
; }

1557 { i‡(
	`xml_∑r£_vîsi⁄
(
_YA
, (
yyv•
[-1].
°rög
)Ë<0Ë
YYABORT
; }

1563 {
	`‰ì
((
yyv•
[-1].
°rög
));}

1569 {
	`‰ì
((
yyv•
[-1].
°rög
));}

1575 { 
	`˛ic⁄_debug
(3, "element -> < qnameáttrsÉlement1"); }

1581 { i‡(
	`xml_∑r£_q«me
(
_YA
, 
NULL
, (
yyv•
[0].
°rög
)Ë< 0Ë
YYABORT
;

1582 
	`˛ic⁄_debug
(3, "q«mê-> NAME %s", (
yyv•
[0].
°rög
));}

1588 { i‡(
	`xml_∑r£_q«me
(
_YA
, (
yyv•
[-2].
°rög
), (yyv•[0].°rög)Ë< 0Ë
YYABORT
;

1589 
	`˛ic⁄_debug
(3, "qname -> NAME : NAME");}

1595 {
_YA
->
ya_xñemít
 = 
NULL
;

1596 
	`˛ic⁄_debug
(3, "element1 -> />");}

1602 { 
	`xml_∑r£_íd¶ash_¥e
(
_YA
); }

1608 { 
	`xml_∑r£_íd¶ash_mid
(
_YA
); }

1614 { 
	`xml_∑r£_íd¶ash_po°
(
_YA
);

1615 
	`˛ic⁄_debug
(3, "element1 -> >ÜistÉtg");}

1621 { 
	`˛ic⁄_debug
(3, "ëg -> < </ NAME %s>", (
yyv•
[-1].
°rög
)); i‡(
	`xml_∑r£_b¶ash1
(
_YA
, (yyv•[-1].°rög)Ë< 0Ë
YYABORT
; }

1627 { i‡(
	`xml_∑r£_b¶ash2
(
_YA
, (
yyv•
[-3].
°rög
), (yyv•[-1].°rög)Ë< 0Ë
YYABORT
;

1628 
	`˛ic⁄_debug
(3, "etg -> < </ NAME:NAME >"); }

1634 { 
	`˛ic⁄_debug
(3, "list ->Üist content"); }

1640 { 
	`˛ic⁄_debug
(3, "list -> content"); }

1646 { 
	`˛ic⁄_debug
(3, "content ->Élement"); }

1652 { 
	`˛ic⁄_debug
(3, "content -> comment"); }

1658 { i‡(
	`xml_∑r£_c⁄ã¡
(
_YA
, (
yyv•
[0].
°rög
)Ë< 0Ë
YYABORT
;

1659 
	`˛ic⁄_debug
(3, "c⁄ã¡ -> CHARDATA %s", (
yyv•
[0].
°rög
)); }

1665 { 
	`˛ic⁄_debug
(3, "content -> "); }

1671 { i‡(
	`xml_∑r£_©å
(
_YA
, (
yyv•
[-2].
°rög
), (yyv•[0].°rög)Ë< 0Ë
YYABORT
; }

1677 {(
yyvÆ
.
°rög
Ë(
yyv•
[0].string);}

1683 { i‡(((
yyvÆ
.
°rög
Ë
	`xml_mîge_©tq«me
(
_YA
, (
yyv•
[-2].°rög), (yyv•[0].°rög))Ë=
NULL
Ë
YYABORT
; }

1689 { (
yyvÆ
.
°rög
)=(
yyv•
[-1].string); }

1695 { (
yyvÆ
.
°rög
)=
	`°rdup
(""); }

1714 
	`YY_SYMBOL_PRINT
 ("-> $$ =", 
yyr1
[
yyn
], &
yyvÆ
, &
yyloc
);

1716 
	`YYPOPSTACK
 (
yyÀn
);

1717 
yyÀn
 = 0;

1718 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1720 *++
yyv•
 = 
yyvÆ
;

1726 
yyn
 = 
yyr1
[yyn];

1728 
yy°©e
 = 
yypgŸo
[
yyn
 - 
YYNTOKENS
] + *
yys•
;

1729 i‡(0 <
yy°©e
 && yy°©ê<
YYLAST
 && 
yycheck
[yy°©e] =*
yys•
)

1730 
yy°©e
 = 
yyèbÀ
[yystate];

1732 
yy°©e
 = 
yydefgŸo
[
yyn
 - 
YYNTOKENS
];

1734 
yy√w°©e
;

1740 
yyîæab
:

1743 
yytokí
 = 
yych¨
 =
YYEMPTY
 ? YYEMPTY : 
	`YYTRANSLATE
 (yychar);

1746 i‡(!
yyîr°©us
)

1748 ++
yy√ºs
;

1749 #i‡! 
YYERROR_VERBOSE


1750 
	`yyîr‹
 (
_ya
, 
	`YY_
("syntaxÉrror"));

1752 
	#YYSYNTAX_ERROR
 
	`yysy¡ax_îr‹
 (&
yymsg_Æloc
, &
yymsg
, \

1753 
yys•
, 
yytokí
)

	)

1755 c⁄° *
yymsgp
 = 
	`YY_
("syntaxÉrror");

1756 
yysy¡ax_îr‹_°©us
;

1757 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

1758 i‡(
yysy¡ax_îr‹_°©us
 == 0)

1759 
yymsgp
 = 
yymsg
;

1760 i‡(
yysy¡ax_îr‹_°©us
 == 1)

1762 i‡(
yymsg
 !
yymsgbuf
)

1763 
	`YYSTACK_FREE
 (
yymsg
);

1764 
yymsg
 = (*Ë
	`YYSTACK_ALLOC
 (
yymsg_Æloc
);

1765 i‡(!
yymsg
)

1767 
yymsg
 = 
yymsgbuf
;

1768 
yymsg_Æloc
 =  
yymsgbuf
;

1769 
yysy¡ax_îr‹_°©us
 = 2;

1773 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

1774 
yymsgp
 = 
yymsg
;

1777 
	`yyîr‹
 (
_ya
, 
yymsgp
);

1778 i‡(
yysy¡ax_îr‹_°©us
 == 2)

1779 
yyexhau°edœb
;

1781 #unde‡
YYSYNTAX_ERROR


1787 i‡(
yyîr°©us
 == 3)

1792 i‡(
yych¨
 <
YYEOF
)

1795 i‡(
yych¨
 =
YYEOF
)

1796 
YYABORT
;

1800 
	`yyde°ru˘
 ("Error: discarding",

1801 
yytokí
, &
yylvÆ
, 
_ya
);

1802 
yych¨
 = 
YYEMPTY
;

1808 
yyîæab1
;

1814 
yyîr‹œb
:

1820 
yyîr‹œb
;

1824 
	`YYPOPSTACK
 (
yyÀn
);

1825 
yyÀn
 = 0;

1826 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1827 
yy°©e
 = *
yys•
;

1828 
yyîæab1
;

1834 
yyîæab1
:

1835 
yyîr°©us
 = 3;

1839 
yyn
 = 
yy∑˘
[
yy°©e
];

1840 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1842 
yyn
 +
YYTERROR
;

1843 i‡(0 <
yyn
 && yy¿<
YYLAST
 && 
yycheck
[yyn] =
YYTERROR
)

1845 
yyn
 = 
yyèbÀ
[yyn];

1846 i‡(0 < 
yyn
)

1852 i‡(
yys•
 =
yyss
)

1853 
YYABORT
;

1856 
	`yyde°ru˘
 ("Error:Öopping",

1857 
yy°os
[
yy°©e
], 
yyv•
, 
_ya
);

1858 
	`YYPOPSTACK
 (1);

1859 
yy°©e
 = *
yys•
;

1860 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1863 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1864 *++
yyv•
 = 
yylvÆ
;

1865 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1869 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yy°os
[
yyn
], 
yyv•
, 
yyl•
);

1871 
yy°©e
 = 
yyn
;

1872 
yy√w°©e
;

1878 
yyac˚±œb
:

1879 
yyªsu…
 = 0;

1880 
yyªtu∫
;

1885 
yyab‹éab
:

1886 
yyªsu…
 = 1;

1887 
yyªtu∫
;

1889 #i‡!
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


1893 
yyexhau°edœb
:

1894 
	`yyîr‹
 (
_ya
, 
	`YY_
("memoryÉxhausted"));

1895 
yyªsu…
 = 2;

1899 
yyªtu∫
:

1900 i‡(
yych¨
 !
YYEMPTY
)

1904 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

1905 
	`yyde°ru˘
 ("Cleanup: discardingÜookahead",

1906 
yytokí
, &
yylvÆ
, 
_ya
);

1910 
	`YYPOPSTACK
 (
yyÀn
);

1911 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1912 
yys•
 !
yyss
)

1914 
	`yyde°ru˘
 ("Cleanup:Öopping",

1915 
yy°os
[*
yys•
], 
yyv•
, 
_ya
);

1916 
	`YYPOPSTACK
 (1);

1918 #i‚de‡
yyovîÊow


1919 i‡(
yyss
 !
yysß
)

1920 
	`YYSTACK_FREE
 (
yyss
);

1922 #i‡
YYERROR_VERBOSE


1923 i‡(
yymsg
 !
yymsgbuf
)

1924 
	`YYSTACK_FREE
 (
yymsg
);

1926  
yyªsu…
;

1927 
	}
}

	@clixon-master/lib/src/clixon_xml_parse.tab.h

33 #i‚de‡
YY_CLIXON_XML_PARSE_Y_TAB_H_INCLUDED


34 
	#YY_CLIXON_XML_PARSE_Y_TAB_H_INCLUDED


	)

36 #i‚de‡
YYDEBUG


37 
	#YYDEBUG
 0

	)

39 #i‡
YYDEBUG


40 
˛ix⁄_xml_∑r£debug
;

44 #i‚de‡
YYTOKENTYPE


45 
	#YYTOKENTYPE


	)

46 
	eyytokíty≥


48 
	mNAME
 = 258,

49 
	mCHARDATA
 = 259,

50 
	mVER
 = 260,

51 
	mENC
 = 261,

52 
	mBSLASH
 = 262,

53 
	mESLASH
 = 263,

54 
	mBTEXT
 = 264,

55 
	mETEXT
 = 265,

56 
	mBCOMMENT
 = 266,

57 
	mECOMMENT
 = 267

61 
	#NAME
 258

	)

62 
	#CHARDATA
 259

	)

63 
	#VER
 260

	)

64 
	#ENC
 261

	)

65 
	#BSLASH
 262

	)

66 
	#ESLASH
 263

	)

67 
	#BTEXT
 264

	)

68 
	#ETEXT
 265

	)

69 
	#BCOMMENT
 266

	)

70 
	#ECOMMENT
 267

	)

73 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


75 
	uYYSTYPE


79 *
	m°rög
;

84 
YYSTYPE
 
	tYYSTYPE
;

85 
	#YYSTYPE_IS_TRIVIAL
 1

	)

86 
	#YYSTYPE_IS_DECLARED
 1

	)

90 
YYSTYPE
 
˛ix⁄_xml_∑r£lvÆ
;

92 
˛ix⁄_xml_∑r£∑r£
 (*
_ya
);

	@clixon-master/lib/src/clixon_xml_sort.c

37 #ifde‡
HAVE_CONFIG_H


38 
	~"˛ix⁄_c⁄fig.h
"

41 
	~<°dio.h
>

42 
	~<°dlib.h
>

43 
	~<uni°d.h
>

44 
	~<î∫o.h
>

45 
	~<°rög.h
>

46 
	~<limôs.h
>

47 
	~<‚m©ch.h
>

48 
	~<°döt.h
>

49 
	~<as£π.h
>

50 
	~<sy¶og.h
>

53 
	~<˛igí/˛igí.h
>

56 
	~"˛ix⁄_îr.h
"

57 
	~"˛ix⁄_log.h
"

58 
	~"˛ix⁄_°rög.h
"

60 
	~"˛ix⁄_queue.h
"

61 
	~"˛ix⁄_hash.h
"

62 
	~"˛ix⁄_h™dÀ.h
"

63 
	~"˛ix⁄_y™g.h
"

64 
	~"˛ix⁄_xml.h
"

65 
	~"˛ix⁄_xml_s‹t.h
"

74 
	gxml_chûd_s‹t
 = 1;

85 
	$xml_chûd_•ec
(*
«me
,

86 
cxobj
 *
xp
,

87 
y™g_•ec
 *
y•ec
,

88 
y™g_°mt
 **
yªsu…
)

90 
y™g_°mt
 *
y
;

91 
y™g_°mt
 *
y∑ª¡
;

93 i‡(
xp
 && (
y∑ª¡
 = 
	`xml_•ec
(xp)Ë!
NULL
)

94 
y
 = 
	`y™g_föd_d©™ode
((
y™g_node
*)
y∑ª¡
, 
«me
);

95 i‡(
y•ec
)

96 
y
 = 
	`y™g_föd_t›node
(
y•ec
, 
«me
, 
YC_DATANODE
);

98 
y
 = 
NULL
;

99 *
yªsu…
 = 
y
;

101 
	}
}

113 
	$xml_cmp
(c⁄° * 
¨g1
,

114 c⁄° * 
¨g2
)

116 
cxobj
 *
x1
 = *(
xml
**)
¨g1
;

117 
cxobj
 *
x2
 = *(
xml
**)
¨g2
;

118 
y™g_°mt
 *
y1
;

119 
y™g_°mt
 *
y2
;

120 
yi1
;

121 
yi2
;

122 
cvec
 *
cvk
 = 
NULL
;

123 
cg_v¨
 *
cvi
;

124 
equÆ
 = 0;

125 *
b1
;

126 *
b2
;

127 *
key«me
;

129 
	`as£π
(
x1
&&
x2
);

130 
y1
 = 
	`xml_•ec
(
x1
);

131 
y2
 = 
	`xml_•ec
(
x2
);

132 i‡(
y1
==
NULL
 || 
y2
==NULL)

134 i‡(
y1
 !
y2
){

135 
yi1
 = 
	`y™g_‹dî
(
y1
);

136 
yi2
 = 
	`y™g_‹dî
(
y2
);

137 i‡((
equÆ
 = 
yi1
-
yi2
) != 0)

138  
equÆ
;

143 i‡(
	`y™g_föd
((
y™g_node
*)
y1
, 
Y_ORDERED_BY
, "u£r"Ë!
NULL
)

145 
y1
->
ys_keyw‹d
){

146 
Y_LEAF_LIST
:

147 
equÆ
 = 
	`°rcmp
(
	`xml_body
(
x1
), xml_body(
x2
));

149 
Y_LIST
:

152 
cvk
 = 
y1
->
ys_cvec
;

153 
cvi
 = 
NULL
;

154 (
cvi
 = 
	`cvec_óch
(
cvk
, cvi)Ë!
NULL
) {

155 
key«me
 = 
	`cv_°rög_gë
(
cvi
);

156 
b1
 = 
	`xml_föd_body
(
x1
, 
key«me
);

157 
b2
 = 
	`xml_föd_body
(
x2
, 
key«me
);

158 i‡((
equÆ
 = 
	`°rcmp
(
b1
,
b2
)) != 0)

159 
d⁄e
;

161 
equÆ
 = 0;

166 
d⁄e
:

167  
equÆ
;

168 
	}
}

182 
	$xml_cmp1
(
cxobj
 *
x
,

183 
y™g_°mt
 *
y
,

184 *
«me
,

185 
rfc_6020
 
keyw‹d
,

186 
keyƒ
,

187 **
keyvec
,

188 **
keyvÆ
,

189 *
u£r‹dî
)

191 *
b
;

192 
i
;

193 *
key«me
;

194 *
key
;

195 
m©ch
 = 0;

198 
keyw‹d
){

199 
Y_CONTAINER
:

200 
Y_LEAF
:

201 
m©ch
 = 
	`°rcmp
(
«me
, 
	`xml_«me
(
x
));

203 
Y_LEAF_LIST
:

204 i‡(
u£r‹dî
 && 
	`y™g_föd
((
y™g_node
*)
y
, 
Y_ORDERED_BY
, "u£r"Ë!
NULL
)

205 *
u£r‹dî
=1;

206 
b
=
	`xml_body
(
x
);

207 
m©ch
 = 
	`°rcmp
(
keyvÆ
[0], 
b
);

209 
Y_LIST
:

210 i‡(
u£r‹dî
 && 
	`y™g_föd
((
y™g_node
*)
y
, 
Y_ORDERED_BY
, "u£r"Ë!
NULL
)

211 *
u£r‹dî
=1;

213 
i
=0; i<
keyƒ
; i++){

214 
key«me
 = 
keyvec
[
i
];

215 
key
 = 
keyvÆ
[
i
];

217 i‡((
b
 = 
	`xml_föd_body
(
x
, 
key«me
)Ë=
NULL
)

219 i‡((
m©ch
 = 
	`°rcmp
(
key
, 
b
)) != 0)

226  
m©ch
;

227 
	}
}

235 
	$xml_s‹t
(
cxobj
 *
x
,

236 *
¨g
)

238 
	`qs‹t
(
	`xml_chûdvec_gë
(
x
), 
	`xml_chûd_ƒ
(x), (
cxobj
 *), 
xml_cmp
);

240 
	}
}

244 
cxobj
 *

245 
	$xml_£¨ch_u£r‹dî
(
cxobj
 *
x0
,

246 
y™g_°mt
 *
y
,

247 *
«me
,

248 
y™gi
,

249 
mid
,

250 
rfc_6020
 
keyw‹d
,

251 
keyƒ
,

252 **
keyvec
,

253 **
keyvÆ
)

255 
i
;

256 
cxobj
 *
xc
;

258 
i
=
mid
+1; i<
	`xml_chûd_ƒ
(
x0
); i++){

259 
xc
 = 
	`xml_chûd_i
(
x0
, 
i
);

260 
y
 = 
	`xml_•ec
(
xc
);

261 i‡(
y™gi
!=
	`y™g_‹dî
(
y
))

263 i‡(
	`xml_cmp1
(
xc
, 
y
, 
«me
, 
keyw‹d
, 
keyƒ
, 
keyvec
, 
keyvÆ
, 
NULL
) == 0)

264  
xc
;

266 
i
=
mid
-1; i>=0; i--){

267 
xc
 = 
	`xml_chûd_i
(
x0
, 
i
);

268 
y
 = 
	`xml_•ec
(
xc
);

269 i‡(
y™gi
!=
	`y™g_‹dî
(
y
))

271 i‡(
	`xml_cmp1
(
xc
, 
y
, 
«me
, 
keyw‹d
, 
keyƒ
, 
keyvec
, 
keyvÆ
, 
NULL
) == 0)

272  
xc
;

274  
NULL
;

275 
	}
}

285 
cxobj
 *

286 
	$xml_£¨ch1
(
cxobj
 *
x0
,

287 *
«me
,

288 
y™gi
,

289 
rfc_6020
 
keyw‹d
,

290 
keyƒ
,

291 **
keyvec
,

292 **
keyvÆ
,

293 
low
,

294 
uµî
)

296 
mid
;

297 
cmp
;

298 
cxobj
 *
xc
;

299 
y™g_°mt
 *
y
;

300 
u£r‹dî
= 0;

302 i‡(
uµî
 < 
low
)

303  
NULL
;

304 
mid
 = (
low
 + 
uµî
) / 2;

305 i‡(
mid
 >
	`xml_chûd_ƒ
(
x0
))

306  
NULL
;

307 
xc
 = 
	`xml_chûd_i
(
x0
, 
mid
);

308 
	`as£π
(
y
 = 
	`xml_•ec
(
xc
));

309 
cmp
 = 
y™gi
-
	`y™g_‹dî
(
y
);

310 i‡(
cmp
 == 0){

311 
cmp
 = 
	`xml_cmp1
(
xc
, 
y
, 
«me
, 
keyw‹d
, 
keyƒ
, 
keyvec
, 
keyvÆ
, &
u£r‹dî
);

312 i‡(
u£r‹dî
 && 
cmp
)

313  
	`xml_£¨ch_u£r‹dî
(
x0
, 
y
, 
«me
, 
y™gi
, 
mid
, 
keyw‹d
, 
keyƒ
, 
keyvec
, 
keyvÆ
);

315 i‡(
cmp
 == 0)

316  
xc
;

317 i‡(
cmp
 < 0)

318  
	`xml_£¨ch1
(
x0
, 
«me
, 
y™gi
, 
keyw‹d
,

319 
keyƒ
, 
keyvec
, 
keyvÆ
, 
low
, 
mid
-1);

321  
	`xml_£¨ch1
(
x0
, 
«me
, 
y™gi
, 
keyw‹d
,

322 
keyƒ
, 
keyvec
, 
keyvÆ
, 
mid
+1, 
uµî
);

323  
NULL
;

324 
	}
}

332 
cxobj
 *

333 
	$xml_£¨ch
(
cxobj
 *
x0
,

334 *
«me
,

335 
y™gi
,

336 
rfc_6020
 
keyw‹d
,

337 
keyƒ
,

338 **
keyvec
,

339 **
keyvÆ
)

341  
	`xml_£¨ch1
(
x0
, 
«me
, 
y™gi
, 
keyw‹d
, 
keyƒ
, 
keyvec
, 
keyvÆ
,

342 0, 
	`xml_chûd_ƒ
(
x0
));

343 
	}
}

356 
	$xml_ö£π_pos
(
cxobj
 *
x0
,

357 *
«me
,

358 
y™gi
,

359 
rfc_6020
 
keyw‹d
,

360 
keyƒ
,

361 **
keyvec
,

362 **
keyvÆ
,

363 
low
,

364 
uµî
)

366 
mid
;

367 
cxobj
 *
xc
;

368 
y™g_°mt
 *
y
;

369 
cmp
;

370 
i
;

371 
u£r‹dî
= 0;

373 i‡(
uµî
 < 
low
)

374  
low
;

375 
mid
 = (
low
 + 
uµî
) / 2;

376 i‡(
mid
 >
	`xml_chûd_ƒ
(
x0
))

377  
	`xml_chûd_ƒ
(
x0
);

378 
xc
 = 
	`xml_chûd_i
(
x0
, 
mid
);

379 
y
 = 
	`xml_•ec
(
xc
);

380 
cmp
 = 
y™gi
-
	`y™g_‹dî
(
y
);

381 i‡(
cmp
 == 0){

382 
cmp
 = 
	`xml_cmp1
(
xc
, 
y
, 
«me
, 
keyw‹d
, 
keyƒ
, 
keyvec
, 
keyvÆ
, &
u£r‹dî
);

383 i‡(
u£r‹dî
){

385 
i
=
mid
+1;i<
	`xml_chûd_ƒ
(
x0
);i++){

386 
xc
 = 
	`xml_chûd_i
(
x0
, 
i
);

387 i‡(
	`°rcmp
(
	`xml_«me
(
xc
), 
«me
))

389 
mid
=
i
;

391  
mid
;

394 i‡(
cmp
 == 0)

395  
mid
;

396 i‡(
cmp
 < 0)

397  
	`xml_ö£π_pos
(
x0
, 
«me
, 
y™gi
, 
keyw‹d
,

398 
keyƒ
, 
keyvec
, 
keyvÆ
, 
low
, 
mid
-1);

400  
	`xml_ö£π_pos
(
x0
, 
«me
, 
y™gi
, 
keyw‹d
,

401 
keyƒ
, 
keyvec
, 
keyvÆ
, 
mid
+1, 
uµî
);

402 
	}
}

442 
cxobj
 *

443 
	$xml_m©ch
(
cxobj
 *
x0
,

444 *
«me
,

445 
rfc_6020
 
keyw‹d
,

446 
keyƒ
,

447 **
keyvec
,

448 **
keyvÆ
)

450 *
key
;

451 *
key«me
;

452 *
b0
;

453 
cxobj
 *
x
 = 
NULL
;

454 
equÆ
;

455 
i
;

457 
x
 = 
NULL
;

458 
keyw‹d
){

459 
Y_CONTAINER
:

460 
Y_LEAF
:

461 i‡(
keyƒ
 != 0){

462 
	`˛ic⁄_îr
(
OE_XML
, 
EINVAL
, "ExpectedÇo keyárgumentÅo CONTAINER or LEAF");

463 
ok
;

465 
x
 = 
	`xml_föd
(
x0
, 
«me
);

467 
Y_LEAF_LIST
:

468 i‡(
keyƒ
 != 1)

469 
ok
;

470 
x
 = 
	`xml_föd_body_obj
(
x0
, 
«me
, 
keyvÆ
[0]);

472 
Y_LIST
:

473 
i
 = 0;

474 (
x
 = 
	`xml_chûd_óch
(
x0
, x, 
CX_ELMNT
)Ë!
NULL
){

475 
equÆ
 = 0;

476 i‡(
	`°rcmp
(
	`xml_«me
(
x
), 
«me
))

479 
i
=0; i<
keyƒ
; i++){

480 
key«me
 = 
keyvec
[
i
];

481 
key
 = 
keyvÆ
[
i
];

482 
equÆ
 = 0;

483 i‡((
b0
 = 
	`xml_föd_body
(
x
, 
key«me
)Ë=
NULL
)

485 i‡(
	`°rcmp
(
b0
, 
key
))

487 
equÆ
=1;

489 i‡(
equÆ
)

496 
ok
:

497  
x
;

498 
	}
}

508 
	$xml_s‹t_vîify
(
cxobj
 *
x0
,

509 *
¨g
)

511 
ªtvÆ
 = -1;

512 
cxobj
 *
x
 = 
NULL
;

513 
cxobj
 *
x¥ev
 = 
NULL
;

515 (
x
 = 
	`xml_chûd_óch
(
x0
, x, -1)Ë!
NULL
) {

516 i‡(
x¥ev
 !
NULL
){

517 i‡(
	`xml_cmp
(&
x¥ev
, &
x
) > 0)

518 
d⁄e
;

520 
x¥ev
 = 
x
;

522 
ªtvÆ
 = 0;

523 
d⁄e
:

524  
ªtvÆ
;

525 
	}
}

540 
	$m©ch_ba£_chûd
(
cxobj
 *
x0
,

541 
cxobj
 *
x1c
,

542 
cxobj
 **
x0˝
,

543 
y™g_°mt
 *
yc
)

545 
ªtvÆ
 = -1;

546 
cvec
 *
cvk
 = 
NULL
;

547 
cg_v¨
 *
cvi
;

548 *
b
;

549 *
key«me
;

550 
keyƒ
 = 0;

551 **
keyvÆ
 = 
NULL
;

552 **
keyvec
 = 
NULL
;

553 
i
;

554 
y‹dî
;

556 *
x0˝
 = 
NULL
;

557 
yc
->
ys_keyw‹d
){

558 
Y_CONTAINER
:

559 
Y_LEAF
:

561 
Y_LEAF_LIST
:

562 
keyƒ
 = 1;

563 i‡((
keyvÆ
 = 
	`ˇŒoc
(
keyƒ
+1, (*))Ë=
NULL
){

564 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "calloc");

565 
d⁄e
;

567 i‡((
keyvÆ
[0] = 
	`xml_body
(
x1c
)Ë=
NULL
)

568 
ok
;

570 
Y_LIST
:

571 
cvk
 = 
yc
->
ys_cvec
;

576 
cvi
 = 
NULL
; 
keyƒ
 = 0;

577 (
cvi
 = 
	`cvec_óch
(
cvk
, cvi)Ë!
NULL
)

578 
keyƒ
++;

579 i‡((
keyvÆ
 = 
	`ˇŒoc
(
keyƒ
+1, (*))Ë=
NULL
){

580 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "calloc");

581 
d⁄e
;

583 i‡((
keyvec
 = 
	`ˇŒoc
(
keyƒ
+1, (*))Ë=
NULL
){

584 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "calloc");

585 
d⁄e
;

587 
cvi
 = 
NULL
; 
i
 = 0;

588 (
cvi
 = 
	`cvec_óch
(
cvk
, cvi)Ë!
NULL
) {

589 
key«me
 = 
	`cv_°rög_gë
(
cvi
);

590 
keyvec
[
i
] = 
key«me
;

591 i‡((
b
 = 
	`xml_föd_body
(
x1c
, 
key«me
)Ë=
NULL
)

592 
ok
;

593 
keyvÆ
[
i
++] = 
b
;

600 i‡(
xml_chûd_s‹t
==0)

601 *
x0˝
 = 
	`xml_m©ch
(
x0
, 
	`xml_«me
(
x1c
), 
yc
->
ys_keyw‹d
, 
keyƒ
, 
keyvec
, 
keyvÆ
);

603 i‡(
	`xml_chûd_ƒ
(
x0
)==0 || 
	`xml_•ec
(
	`xml_chûd_i
(x0,0))!=
NULL
){

604 
y‹dî
 = 
	`y™g_‹dî
(
yc
);

605 *
x0˝
 = 
	`xml_£¨ch
(
x0
, 
	`xml_«me
(
x1c
), 
y‹dî
, 
yc
->
ys_keyw‹d
, 
keyƒ
, 
keyvec
, 
keyvÆ
);

612 
	`˛ic⁄_log
(
LOG_WARNING
, "%†Nÿy•ec", 
__FUNCTION__
);

614 *
x0˝
 = 
	`xml_m©ch
(
x0
, 
	`xml_«me
(
x1c
), 
yc
->
ys_keyw‹d
, 
keyƒ
, 
keyvec
, 
keyvÆ
);

617 
ok
:

618 
ªtvÆ
 = 0;

619 
d⁄e
:

620 i‡(
keyvÆ
)

621 
	`‰ì
(
keyvÆ
);

622 i‡(
keyvec
)

623 
	`‰ì
(
keyvec
);

624  
ªtvÆ
;

625 
	}
}

	@clixon-master/lib/src/clixon_xsl.c

87 
	~<°dio.h
>

88 
	~<°dlib.h
>

89 
	~<uni°d.h
>

90 
	~<î∫o.h
>

91 
	~<°rög.h
>

92 
	~<limôs.h
>

93 
	~<‚m©ch.h
>

94 
	~<°döt.h
>

95 
	~<as£π.h
>

96 
	~<sy¶og.h
>

99 
	~<˛igí/˛igí.h
>

102 
	~"˛ix⁄_îr.h
"

103 
	~"˛ix⁄_log.h
"

104 
	~"˛ix⁄_°rög.h
"

105 
	~"˛ix⁄_queue.h
"

106 
	~"˛ix⁄_hash.h
"

107 
	~"˛ix⁄_h™dÀ.h
"

108 
	~"˛ix⁄_y™g.h
"

109 
	~"˛ix⁄_xml.h
"

110 
	~"˛ix⁄_x¶.h
"

113 
	#XPATH_VEC_START
 128

	)

118 
	s£¨chvec
{

119 
cxobj
 **
	msv_v0
;

120 
	msv_v0Àn
;

121 
cxobj
 **
	msv_v1
;

122 
	msv_v1Àn
;

123 
	msv_max
;

125 
£¨chvec
 
	t£¨chvec
;

129 
	eaxis_ty≥
{

130 
	mA_SELF
,

131 
	mA_CHILD
,

132 
	mA_PARENT
,

133 
	mA_ROOT
,

134 
	mA_ANCESTOR
,

135 
	mA_DESCENDANT_OR_SELF
,

139 c⁄° 
m≠_°r2öt
 
	gaxism≠
[] = {

140 {"£lf", 
A_SELF
},

141 {"chûd", 
A_CHILD
},

142 {"∑ª¡", 
A_PARENT
},

143 {"roŸ", 
A_ROOT
},

144 {"™˚°‹", 
A_ANCESTOR
},

145 {"des˚nd™t-‹-£lf", 
A_DESCENDANT_OR_SELF
},

146 {
NULL
, -1}

149 
	sx∑th_¥ediˇã
{

150 
x∑th_¥ediˇã
 *
	mxp_√xt
;

151 *
	mxp_ex¥
;

154 
	sx∑th_ñemít
{

155 
x∑th_ñemít
 *
	mxe_√xt
;

156 
axis_ty≥
 
	mxe_ty≥
;

157 *
	mxe_¥efix
;

158 *
	mxe_°r
;

159 
x∑th_¥ediˇã
 *
	mxe_¥ediˇã
;

162 
x∑th_•lô
(*
x∑th°r
, **
∑thex¥
);

165 
	$x∑th_¥öt
(
FILE
 *
f
, 
x∑th_ñemít
 *
x∂i°
)

167 
x∑th_ñemít
 *
xe
;

168 
x∑th_¥ediˇã
 *
xp
;

170 
xe
=
x∂i°
; xe; xe=xe->
xe_√xt
){

171 
	`Ârötf
(
f
, "\t:%†%†", 
	`˛ic⁄_öt2°r
(
axism≠
, 
xe
->
xe_ty≥
),

172 
xe
->
xe_°r
?xe->xe_str:"");

173 
xp
=
xe
->
xe_¥ediˇã
; xp; xp=xp->
xp_√xt
)

174 
	`Ârötf
(
f
, "[%s]", 
xp
->
xp_ex¥
);

177 
	}
}

183 
	$x∑th_∑r£_¥ediˇã
(
x∑th_ñemít
 *
xe
,

184 *
¥ed
)

186 
ªtvÆ
 = -1;

187 
x∑th_¥ediˇã
 *
xp
;

188 *
s
;

189 
i
;

190 
Àn
;

192 
Àn
 = 
	`°æí
(
¥ed
);

193 
i
=
Àn
-1; i>=0; i--){

194 
s
 = &
¥ed
[
i
];

195 i‡(
i
==0 ||

196 (*(
s
)==']' && *(s+1)=='[')){

197 i‡(
i
) {

198 *(
s
)= '\0';

199 
s
 += 2;

201 i‡((
xp
 = 
	`mÆloc
((*xp))Ë=
NULL
){

202 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "malloc");

203 
d⁄e
;

205 
	`mem£t
(
xp
, 0, (*xp));

206 i‡((
xp
->
xp_ex¥
 = 
	`°rdup
(
s
)Ë=
NULL
){

207 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "%s: sådup", 
__FUNCTION__
);

208 
d⁄e
;

210 
xp
->
xp_√xt
 = 
xe
->
xe_¥ediˇã
;

211 
xe
->
xe_¥ediˇã
 = 
xp
;

214 
ªtvÆ
 = 0;

215 
d⁄e
:

216  
ªtvÆ
;

217 
	}
}

220 
	$x∑th_ñemít_√w
(
axis_ty≥
 
©y≥
,

221 *
°r
,

222 
x∑th_ñemít
 ***
x≤ext
)

224 
ªtvÆ
 = -1;

225 
x∑th_ñemít
 *
xe
;

226 *
°r1
 = 
NULL
;

227 *
¥ed
;

228 *
loˇl
;

230 i‡((
xe
 = 
	`mÆloc
((*xe))Ë=
NULL
){

231 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "malloc");

232 
d⁄e
;

234 
	`mem£t
(
xe
, 0, (*xe));

235 
xe
->
xe_ty≥
 = 
©y≥
;

236 i‡(
°r
){

237 i‡((
°r1
 = 
	`°rdup
(
°r
)Ë=
NULL
){

238 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "%s: sådup", 
__FUNCTION__
);

239 
d⁄e
;

241 i‡(
	`x∑th_•lô
(
°r1
, &
¥ed
) < 0)

242 
d⁄e
;

243 i‡(
	`°æí
(
°r1
)){

245 i‡((
loˇl
 = 
	`ödex
(
°r1
, ':')Ë!
NULL
){

246 *
loˇl
 = '\0';

247 
loˇl
++;

248 i‡((
xe
->
xe_¥efix
 = 
	`°rdup
(
°r1
)Ë=
NULL
){

249 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "%s: sådup", 
__FUNCTION__
);

250 
d⁄e
;

254 
loˇl
 = 
°r1
;

255 i‡((
xe
->
xe_°r
 = 
	`°rdup
(
loˇl
)Ë=
NULL
){

256 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "%s: sådup", 
__FUNCTION__
);

257 
d⁄e
;

261 i‡((
xe
->
xe_°r
 = 
	`°rdup
("*")Ë=
NULL
){

262 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "%s: sådup", 
__FUNCTION__
);

263 
d⁄e
;

266 i‡(
¥ed
 && 
	`°æí
(pred)){

267 i‡(
	`x∑th_∑r£_¥ediˇã
(
xe
, 
¥ed
) < 0)

268 
d⁄e
;

271 (**
x≤ext
Ë
xe
;

272 *
x≤ext
 = &
xe
->
xe_√xt
;

273 
ªtvÆ
 = 0;

274 
d⁄e
:

275 i‡(
°r1
)

276 
	`‰ì
(
°r1
);

277  
ªtvÆ
;

278 
	}
}

281 
	$x∑th_ñemít_‰ì
(
x∑th_ñemít
 *
xe
)

283 
x∑th_¥ediˇã
 *
xp
;

285 i‡(
xe
->
xe_°r
)

286 
	`‰ì
(
xe
->
xe_°r
);

287 i‡(
xe
->
xe_¥efix
)

288 
	`‰ì
(
xe
->
xe_¥efix
);

289 (
xp
 = 
xe
->
xe_¥ediˇã
Ë!
NULL
){

290 
xe
->
xe_¥ediˇã
 = 
xp
->
xp_√xt
;

291 i‡(
xp
->
xp_ex¥
)

292 
	`‰ì
(
xp
->
xp_ex¥
);

293 
	`‰ì
(
xp
);

295 
	`‰ì
(
xe
);

297 
	}
}

300 
	$x∑th_‰ì
(
x∑th_ñemít
 *
x∂i°
)

302 
x∑th_ñemít
 *
xe
, *
xe_√xt
;

304 
xe
=
x∂i°
; xe; xe=
xe_√xt
){

305 
xe_√xt
 = 
xe
->xe_next;

306 
	`x∑th_ñemít_‰ì
(
xe
);

309 
	}
}

315 
	$x∑th_∑r£
(*
x∑th
,

316 
x∑th_ñemít
 **
x∂i°0
)

318 
ªtvÆ
 = -1;

319 
nvec
 = 0;

320 *
s
;

321 *
s0
;

322 
i
;

323 
x∑th_ñemít
 *
x∂i°
 = 
NULL
;

324 
x∑th_ñemít
 **
x≤ext
 = &
x∂i°
;

325 
esc
 = 0;

327 i‡((
s0
 = 
	`°rdup
(
x∑th
)Ë=
NULL
){

328 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "%s: sådup", 
__FUNCTION__
);

329 
d⁄e
;

331 
s
 = 
s0
;

332 i‡(
	`°æí
(
s
))

333 
nvec
 = 1;

337 
esc
 = 0;

338 *
s
 != '\0'){

339 *
s
){

341 i‡(
esc
)

343 
nvec
++;

344 *
s
 = '\0';

347 
esc
++;

350 
esc
--;

355 
s
++;

357 
s
 = 
s0
;

358 
i
=0; i<
nvec
; i++){

359 i‡((
i
==0 && 
	`°rcmp
(
s
,"")==0))

360 
	`x∑th_ñemít_√w
(
A_ROOT
, 
NULL
, &
x≤ext
);

361 i‡(
i
!=
nvec
-1 && 
	`°rcmp
(
s
,"")==0)

362 
	`x∑th_ñemít_√w
(
A_DESCENDANT_OR_SELF
, 
NULL
, &
x≤ext
);

363 i‡(
	`°∫cmp
(
s
,"des˚nd™t-‹-£lf::", 
	`°æí
("descendant-or-self::"))==0){

364 
	`x∑th_ñemít_√w
(
A_DESCENDANT_OR_SELF
, 
s
+
	`°æí
("des˚nd™t-‹-£lf::"), &
x≤ext
);

367 i‡(
	`°∫cmp
(
s
,"..", 
	`°æí
(".."))==0)

368 
	`x∑th_ñemít_√w
(
A_PARENT
, 
s
+
	`°æí
(".."), &
x≤ext
);

370 i‡(
	`°∫cmp
(
s
,"..", 
	`°æí
(s))==0)

371 
	`x∑th_ñemít_√w
(
A_PARENT
, 
NULL
, &
x≤ext
);

374 i‡(
	`°∫cmp
(
s
,".", 
	`°æí
("."))==0)

375 
	`x∑th_ñemít_√w
(
A_SELF
, 
s
+
	`°æí
("."), &
x≤ext
);

377 i‡(
	`°∫cmp
(
s
,".", 
	`°æí
(s))==0)

378 
	`x∑th_ñemít_√w
(
A_SELF
, 
NULL
, &
x≤ext
);

381 i‡(
	`°∫cmp
(
s
,"£lf::", 
	`°æí
("self::"))==0)

382 
	`x∑th_ñemít_√w
(
A_SELF
, 
s
+
	`°æí
("£lf::"), &
x≤ext
);

384 i‡(
	`°∫cmp
(
s
,"∑ª¡::", 
	`°æí
("parent::"))==0)

385 
	`x∑th_ñemít_√w
(
A_PARENT
, 
s
+
	`°æí
("∑ª¡::"), &
x≤ext
);

386 i‡(
	`°∫cmp
(
s
,"™˚°‹::", 
	`°æí
("ancestor::"))==0)

387 
	`x∑th_ñemít_√w
(
A_ANCESTOR
, 
s
+
	`°æí
("™˚°‹::"), &
x≤ext
);

388 i‡(
	`°∫cmp
(
s
,"chûd::", 
	`°æí
("child::"))==0)

389 
	`x∑th_ñemít_√w
(
A_CHILD
, 
s
+
	`°æí
("chûd::"), &
x≤ext
);

391 
	`x∑th_ñemít_√w
(
A_CHILD
, 
s
, &
x≤ext
);

392 
s
 +
	`°æí
(s) + 1;

394 
ªtvÆ
 = 0;

395 
d⁄e
:

396 i‡(
s0
)

397 
	`‰ì
(
s0
);

398 i‡(
ªtvÆ
 == 0)

399 *
x∂i°0
 = 
x∂i°
;

400  
ªtvÆ
;

401 
	}
}

418 
	$ªcursive_föd
(
cxobj
 *
xn
,

419 *
∑âîn
,

420 
node_ty≥
,

421 
uöt16_t
 
Êags
,

422 
cxobj
 ***
vec0
,

423 
size_t
 *
vec0Àn
)

425 
ªtvÆ
 = -1;

426 
cxobj
 *
xsub
;

427 
cxobj
 **
vec
 = *
vec0
;

428 
size_t
 
ve˛í
 = *
vec0Àn
;

429 *
«me
;

431 
xsub
 = 
NULL
;

432 (
xsub
 = 
	`xml_chûd_óch
(
xn
, xsub, 
node_ty≥
)Ë!
NULL
) {

433 
«me
 = 
	`xml_«me
(
xsub
);

434 i‡(
	`‚m©ch
(
∑âîn
, 
«me
, 0) == 0){

435 
	`˛ic⁄_debug
(2, "%†%x %x", 
__FUNCTION__
, 
Êags
, 
	`xml_Êag
(
xsub
, flags));

436 i‡(
Êags
==0x0 || 
	`xml_Êag
(
xsub
, flags))

437 i‡(
	`cxvec_≠≥nd
(
xsub
, &
vec
, &
ve˛í
) < 0)

438 
d⁄e
;

441 i‡(
	`ªcursive_föd
(
xsub
, 
∑âîn
, 
node_ty≥
, 
Êags
, &
vec
, &
ve˛í
) < 0)

442 
d⁄e
;

444 
ªtvÆ
 = 0;

445 *
vec0
 = 
vec
;

446 *
vec0Àn
 = 
ve˛í
;

447 
d⁄e
:

448  
ªtvÆ
;

449 
	}
}

453 
x∑th_exec
(
cxobj
 *
xcur
, *
x∑th
, cxobj **
vec0
, 
size_t
 
vec0Àn
,

454 
uöt16_t
 
Êags
, 
cxobj
 ***
vec2
, 
size_t
 *
vec2Àn
);

472 
	$x∑th_ex¥
(
cxobj
 *
xcur
,

473 *
¥ediˇã_ex¥essi⁄
,

474 
uöt16_t
 
Êags
,

475 
cxobj
 ***
vec0
,

476 
size_t
 *
vec0Àn
)

478 *
e_a
;

479 *
e_v
;

480 
i
;

481 
j
;

482 
ªtvÆ
 = -1;

483 
cxobj
 *
x
;

484 
cxobj
 *
xv
;

485 
cxobj
 **
vec
 = 
NULL
;

486 
size_t
 
ve˛í
 = 0;

487 
›Àn
;

488 *
èg
;

489 *
vÆ
;

490 *
e0
;

491 *
e
;

492 *
«me
;

494 i‡((
e0
 = 
	`°rdup
(
¥ediˇã_ex¥essi⁄
)Ë=
NULL
){

495 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "strdup");

496 
d⁄e
;

498 
e
 = 
e0
;

499 i‡(*
e
 == '@'){

500 
e
++;

501 
e_v
=
e
;

502 
e_a
 = 
	`°r£p
(&
e_v
, "=");

503 i‡(
e_a
 =
NULL
){

504 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "%s: malformedÉxpression: [@%s]",

505 
__FUNCTION__
, 
e
);

506 
d⁄e
;

508 
i
=0; i<*
vec0Àn
; i++){

509 
xv
 = (*
vec0
)[
i
];

510 i‡((
x
 = 
	`xml_föd
(
xv
, 
e_a
)Ë!
NULL
 &&

511 (
	`xml_ty≥
(
x
Ë=
CX_ATTR
)){

512 i‡(!
e_v
 || 
	`°rcmp
(
	`xml_vÆue
(
x
),É_v) == 0){

513 
	`˛ic⁄_debug
(2, "%†%x %x", 
__FUNCTION__
, 
Êags
, 
	`xml_Êag
(
xv
, flags));

514 i‡(
Êags
==0x0 || 
	`xml_Êag
(
xv
, flags)){

515 i‡(
	`cxvec_≠≥nd
(
xv
, &
vec
, &
ve˛í
) < 0)

516 
d⁄e
;

524 
›Àn
 = 
	`°rc•n
(
e
, "=");

525 i‡(
	`°æí
(
e
+
›Àn
)==0){

526 i‡(
	`ssˇnf
(
e
, "%d", &
i
) == 1){

527 i‡(
i
 < *
vec0Àn
){

528 
xv
 = (*
vec0
)[
i
];

529 
	`˛ic⁄_debug
(2, "%†%x %x", 
__FUNCTION__
, 
Êags
, 
	`xml_Êag
(
xv
, flags));

530 i‡(
Êags
==0x0 || 
	`xml_Êag
(
xv
, flags))

531 i‡(
	`cxvec_≠≥nd
(
xv
, &
vec
, &
ve˛í
) < 0)

532 
d⁄e
;

536 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "%s: malformedÉxpression: [%s]",

537 
__FUNCTION__
, 
e
);

538 
d⁄e
;

542 i‡((
èg
 = 
	`°r£p
(&
e
, "=")Ë=
NULL
){

543 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "%s: malformedÉxpression: [%s]",

544 
__FUNCTION__
, 
e
);

545 
d⁄e
;

548 
èg
[
	`°æí
(tag)-1] == ' ')

549 
èg
[
	`°æí
(tag)-1] = '\0';

551 
e
[0]==' ')

552 
e
++;

553 i‡(
	`°∫cmp
(
e
, "cuºít()", 
	`°æí
("current()")) == 0){

555 
cxobj
 **
svec0
 = 
NULL
;

556 
size_t
 
svec0Àn
 = 0;

557 
cxobj
 **
svec1
 = 
NULL
;

558 
size_t
 
svec1Àn
 = 0;

559 *
ebody
;

561 
e
 +
	`°æí
("current(");

562 *
e
 = '.';

563 i‡((
svec0
 = 
	`ˇŒoc
(1, (
cxobj
 *))Ë=
NULL
){

564 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "calloc");

565 
d⁄e
;

567 
svec0
[0] = 
xcur
;

568 
svec0Àn
++;

570 i‡(
	`x∑th_exec
(
xcur
, 
e
, 
svec0
, 
svec0Àn
,

571 
Êags
, &
svec1
, &
svec1Àn
) < 0)

572 
d⁄e
;

573 
j
=0; j<
svec1Àn
; j++){

574 
ebody
 = 
	`xml_body
(
svec1
[
j
]);

575 
i
=0; i<*
vec0Àn
; i++){

576 
xv
 = (*
vec0
)[
i
];

577 
x
 = 
NULL
;

578 (
x
 = 
	`xml_chûd_óch
(
xv
, x, 
CX_ELMNT
)Ë!
NULL
) {

579 
«me
 = 
	`xml_«me
(
x
);

580 i‡(
«me
==
NULL
 || 
	`°rcmp
(
èg
,Çame) != 0)

582 i‡((
vÆ
 = 
	`xml_body
(
x
)Ë!
NULL
 &&

583 
	`°rcmp
(
vÆ
, 
ebody
) == 0){

584 
	`˛ic⁄_debug
(2, "%†%x %x", 
__FUNCTION__
, 
Êags
, 
	`xml_Êag
(
xv
, flags));

585 i‡(
Êags
==0x0 || 
	`xml_Êag
(
xv
, flags))

586 i‡(
	`cxvec_≠≥nd
(
xv
, &
vec
, &
ve˛í
) < 0)

587 
d⁄e
;

594 
i
=0; i<*
vec0Àn
; i++){

595 
xv
 = (*
vec0
)[
i
];

597 
x
 = 
NULL
;

598 (
x
 = 
	`xml_chûd_óch
(
xv
, x, 
CX_ELMNT
)Ë!
NULL
) {

599 
«me
 = 
	`xml_«me
(
x
);

600 i‡(
«me
==
NULL
 || 
	`°rcmp
(
èg
,Çame) != 0)

602 i‡((
vÆ
 = 
	`xml_body
(
x
)Ë!
NULL
 &&

603 
	`°rcmp
(
vÆ
, 
e
) == 0){

604 
	`˛ic⁄_debug
(2, "%†%x %x", 
__FUNCTION__
, 
Êags
, 
	`xml_Êag
(
xv
, flags));

605 i‡(
Êags
==0x0 || 
	`xml_Êag
(
xv
, flags))

606 i‡(
	`cxvec_≠≥nd
(
xv
, &
vec
, &
ve˛í
) < 0)

607 
d⁄e
;

615 
	`‰ì
(*
vec0
);

616 *
vec0
 = 
vec
;

617 *
vec0Àn
 = 
ve˛í
;

618 
ªtvÆ
 = 0;

619 
d⁄e
:

620 i‡(
e0
)

621 
	`‰ì
(
e0
);

622  
ªtvÆ
;

623 
	}
}

636 
	$x∑th_föd
(
cxobj
 *
xcur
,

637 
x∑th_ñemít
 *
xe
,

638 
des˚nd™ts0
,

639 
cxobj
 **
vec0
,

640 
size_t
 
vec0Àn
,

641 
uöt16_t
 
Êags
,

642 
cxobj
 ***
vec2
,

643 
size_t
 *
vec2Àn


646 
ªtvÆ
 = -1;

647 
i
;

648 
j
;

649 
cxobj
 *
x
 = 
NULL
;

650 
cxobj
 *
xv
;

651 
des˚nd™ts
 = 0;

652 
cxobj
 **
vec1
 = 
NULL
;

653 
cxobj
 *
x∑ª¡
;

654 
size_t
 
vec1Àn
 = 0;

655 
x∑th_¥ediˇã
 *
xp
;

656 *
«me
;

658 i‡(
xe
 =
NULL
){

659 
i
=0; i<
vec0Àn
; i++){

660 
xv
 = 
vec0
[
i
];

661 i‡(
Êags
==0x0 || 
	`xml_Êag
(
xv
, flags))

662 
	`cxvec_≠≥nd
(
xv
, 
vec2
, 
vec2Àn
);

664 
	`‰ì
(
vec0
);

668 
	`Ârötf
(
°dîr
, "%s: %s: \"%s\"\n", 
__FUNCTION__
,

669 
	`˛ic⁄_öt2°r
(
axism≠
, 
xe
->
xe_ty≥
), xe->
xe_°r
?xe->xe_str:"");

671 
xe
->
xe_ty≥
){

672 
A_SELF
:

674 
A_PARENT
:

675 
j
 = 0;

676 
i
=0; i<
vec0Àn
; i++){

677 
xv
 = 
vec0
[
i
];

678 i‡((
x∑ª¡
 = 
	`xml_∑ª¡
(
xv
)Ë!
NULL
)

679 
vec0
[
j
++] = 
x∑ª¡
;

681 
vec0Àn
 = 
j
;

683 
A_ROOT
:

684 
x
 = 
vec0
[0];

685 
	`as£π
(
x
 !
NULL
);

686 
	`xml_∑ª¡
(
x
Ë!
NULL
)

687 
x
 = 
	`xml_∑ª¡
(x);

688 
	`‰ì
(
vec0
);

689 i‡((
vec0
 = 
	`ˇŒoc
(1, (
cxobj
 *))Ë=
NULL
){

690 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "calloc");

691 
d⁄e
;

693 
vec0
[0] = 
x
;

694 
vec0Àn
 = 1;

696 
A_CHILD
:

697 i‡(
des˚nd™ts0
){

698 
i
=0; i<
vec0Àn
; i++){

699 
xv
 = 
vec0
[
i
];

700 i‡(
	`ªcursive_föd
(
xv
, 
xe
->
xe_°r
, 
CX_ELMNT
, 
Êags
, &
vec1
, &
vec1Àn
) < 0)

701 
d⁄e
;

705 
i
=0; i<
vec0Àn
; i++){

706 
xv
 = 
vec0
[
i
];

707 
x
 = 
NULL
;

708 (
x
 = 
	`xml_chûd_óch
(
xv
, x, -1)Ë!
NULL
) {

709 
«me
 = 
	`xml_«me
(
x
);

710 i‡(
«me
 && 
	`‚m©ch
(
xe
->
xe_°r
,Çame, 0) == 0) {

711 
	`˛ic⁄_debug
(2, "%†%x %x", 
__FUNCTION__
, 
Êags
, 
	`xml_Êag
(
x
, flags));

712 i‡(
Êags
==0x0 || 
	`xml_Êag
(
x
, flags))

713 i‡(
	`cxvec_≠≥nd
(
x
, &
vec1
, &
vec1Àn
) < 0)

714 
d⁄e
;

719 
	`‰ì
(
vec0
);

720 
vec0
 = 
vec1
;

721 
vec0Àn
 = 
vec1Àn
;

723 
A_DESCENDANT_OR_SELF
:

726 
des˚nd™ts
++;

735 
i
=0; i<
vec0Àn
; i++){

736 
j
=
i
+1; j<
vec0Àn
; j++){

737 i‡(
vec0
[
i
] =vec0[
j
]){

738 
	`memmove
(
vec0
[
j
], vec0[j+1], (
vec0Àn
-j)*(
cxobj
*));

739 
vec0Àn
--;

744 
xp
 = 
xe
->
xe_¥ediˇã
; xp; x∞xp->
xp_√xt
){

745 i‡(
	`x∑th_ex¥
(
xcur
, 
xp
->
xp_ex¥
, 
Êags
, &
vec0
, &
vec0Àn
) < 0)

746 
d⁄e
;

749 i‡(
	`x∑th_föd
(
xcur
, 
xe
->
xe_√xt
, 
des˚nd™ts
,

750 
vec0
, 
vec0Àn
, 
Êags
,

751 
vec2
, 
vec2Àn
) < 0)

752 
d⁄e
;

753 
ªtvÆ
 = 0;

754 
d⁄e
:

755  
ªtvÆ
;

756 
	}
}

766 
	$x∑th_•lô
(*
x∑th°r
,

767 **
∑thex¥
)

769 
ªtvÆ
 = -1;

770 
œ°
;

771 *
≥
 = 
NULL
;

773 i‡(
	`°æí
(
x∑th°r
)){

774 
œ°
 = 
	`°æí
(
x∑th°r
) - 1;

775 i‡(
x∑th°r
[
œ°
] == ']'){

776 
x∑th°r
[
œ°
] = '\0';

777 i‡(
	`°æí
(
x∑th°r
)){

778 i‡((
≥
 = 
	`ödex
(
x∑th°r
,'[')Ë!
NULL
){

779 *
≥
 = '\0';

780 
≥
++;

783 i‡(
≥
==
NULL
){

784 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "%s: mism©ched []: %s", 
__FUNCTION__
, 
x∑th°r
);

785 
d⁄e
;

789 
ªtvÆ
 = 0;

790 
d⁄e
:

791 *
∑thex¥
 = 
≥
;

792  
ªtvÆ
;

793 
	}
}

805 
	$x∑th_exec
(
cxobj
 *
xcur
,

806 *
x∑th
,

807 
cxobj
 **
vec0
,

808 
size_t
 
vec0Àn
,

809 
uöt16_t
 
Êags
,

810 
cxobj
 ***
vec2
,

811 
size_t
 *
vec2Àn
)

813 
x∑th_ñemít
 *
x∂i°
;

814 
cxobj
 **
vec1
;

815 
size_t
 
vec1Àn
;

817 i‡(
	`cxvec_dup
(
vec0
, 
vec0Àn
, &
vec1
, &
vec1Àn
) < 0)

818 
d⁄e
;

819 i‡(
	`x∑th_∑r£
(
x∑th
, &
x∂i°
) < 0)

820 
d⁄e
;

821 i‡(
debug
 > 1)

822 
	`x∑th_¥öt
(
°dîr
, 
x∂i°
);

823 i‡(
	`x∑th_föd
(
xcur
, 
x∂i°
, 0, 
vec1
, 
vec1Àn
, 
Êags
, 
vec2
, 
vec2Àn
) < 0)

824 
d⁄e
;

825 i‡(
	`x∑th_‰ì
(
x∂i°
) < 0)

826 
d⁄e
;

827 
d⁄e
:

829 
	}
}

846 
	$x∑th_choi˚
(
cxobj
 *
xcur
,

847 *
x∑th0
,

848 
uöt16_t
 
Êags
,

849 
cxobj
 ***
vec1
,

850 
size_t
 *
vec1Àn
)

852 
ªtvÆ
 = -1;

853 *
s0
;

854 *
s1
;

855 *
s2
;

856 *
x∑th
;

857 
cxobj
 **
vec0
 = 
NULL
;

858 
size_t
 
vec0Àn
 = 0;

860 i‡((
s0
 = 
	`°rdup
(
x∑th0
)Ë=
NULL
){

861 
	`˛ic⁄_îr
(
OE_XML
, 
î∫o
, "%s: sådup", 
__FUNCTION__
);

862 
d⁄e
;

864 
s2
 = 
s1
 = 
s0
;

865 i‡((
vec0
 = 
	`ˇŒoc
(1, (
cxobj
 *))Ë=
NULL
){

866 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "calloc");

867 
d⁄e
;

869 
vec0
[0] = 
xcur
;

870 
vec0Àn
++;

871 
s1
 !
NULL
){

872 
s2
 = 
	`°r°r
(
s1
, " | ");

873 i‡(
s2
 !
NULL
){

874 *
s2
 = '\0';

875 
s2
 += 3;

877 
x∑th
 = 
s1
;

878 
s1
 = 
s2
;

879 i‡(
	`x∑th_exec
(
xcur
, 
x∑th
, 
vec0
, 
vec0Àn
, 
Êags
, 
vec1
, 
vec1Àn
) < 0)

880 
d⁄e
;

882 
ªtvÆ
 = 0;

883 
d⁄e
:

884 i‡(
s0
)

885 
	`‰ì
(
s0
);

886 i‡(
vec0
)

887 
	`‰ì
(
vec0
);

888  
ªtvÆ
;

889 
	}
}

893 
cxobj
 *

894 
	$x∑th_fú°0
(
cxobj
 *
xcur
,

895 *
x∑th
)

897 
cxobj
 **
vec1
 = 
NULL
;

898 
size_t
 
vec1Àn
 = 0;

899 
cxobj
 *
xn
 = 
NULL
;

901 i‡(
	`x∑th_choi˚
(
xcur
, 
x∑th
, 0, &
vec1
, &
vec1Àn
) < 0)

902 
d⁄e
;

903 i‡(
vec1Àn
)

904 
xn
 = 
vec1
[0];

906 
xn
 = 
NULL
;

907 
d⁄e
:

908 i‡(
vec1
)

909 
	`‰ì
(
vec1
);

910  
xn
;

911 
	}
}

931 
cxobj
 *

932 
	$x∑th_fú°
(
cxobj
 *
xcur
,

933 *
f‹m©
,

936 
cxobj
 *
ªtvÆ
 = 
NULL
;

937 
va_li°
 
≠
;

938 
size_t
 
Àn
;

939 *
x∑th
;

941 
	`va_°¨t
(
≠
, 
f‹m©
);

942 
Àn
 = 
	`v¢¥ötf
(
NULL
, 0, 
f‹m©
, 
≠
);

943 
	`va_íd
(
≠
);

945 i‡((
x∑th
 = 
	`mÆloc
(
Àn
+1)Ë=
NULL
){

946 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "malloc");

947 
d⁄e
;

950 
	`va_°¨t
(
≠
, 
f‹m©
);

951 i‡(
	`v¢¥ötf
(
x∑th
, 
Àn
+1, 
f‹m©
, 
≠
) < 0){

952 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "vsnprintf");

953 
	`va_íd
(
≠
);

954 
d⁄e
;

956 
	`va_íd
(
≠
);

957 
ªtvÆ
 = 
	`x∑th_fú°0
(
xcur
, 
x∑th
);

958 
d⁄e
:

959 i‡(
x∑th
)

960 
	`‰ì
(
x∑th
);

961  
ªtvÆ
;

962 
	}
}

984 
cxobj
 *

985 
	$x∑th_óch
(
cxobj
 *
xcur
,

986 *
x∑th
,

987 
cxobj
 *
x¥ev
)

989 
cxobj
 **
vec1
 = 
NULL
;

990 
size_t
 
vec1Àn
 = 0;

991 
cxobj
 *
xn
 = 
NULL
;

992 
i
;

994 i‡(
x¥ev
 =
NULL
){

995 i‡(
vec1
) {

996 
	`‰ì
(
vec1
);

997 
vec1
 = 
NULL
;

999 
vec1Àn
 = 0;

1000 i‡(
	`x∑th_choi˚
(
xcur
, 
x∑th
, 0, &
vec1
, &
vec1Àn
) < 0)

1001 
d⁄e
;

1003 i‡(
vec1Àn
){

1004 i‡(
x¥ev
==
NULL
)

1005 
xn
 = 
vec1
[0];

1007 
i
=0; i<
vec1Àn
; i++)

1008 i‡(
vec1
[
i
] =
x¥ev
)

1010 i‡(
i
>=
vec1Àn
-1)

1011 
xn
 = 
NULL
;

1013 
xn
 = 
vec1
[
i
+1];

1017 
xn
 = 
NULL
;

1018 
d⁄e
:

1019  
xn
;

1020 
	}
}

1048 
	$x∑th_vec
(
cxobj
 *
xcur
,

1049 *
f‹m©
,

1050 
cxobj
 ***
vec
,

1051 
size_t
 *
ve˛í
,

1054 
ªtvÆ
 = -1;

1055 
va_li°
 
≠
;

1056 
size_t
 
Àn
;

1057 *
x∑th
;

1059 
	`va_°¨t
(
≠
, 
ve˛í
);

1060 
Àn
 = 
	`v¢¥ötf
(
NULL
, 0, 
f‹m©
, 
≠
);

1061 
	`va_íd
(
≠
);

1063 i‡((
x∑th
 = 
	`mÆloc
(
Àn
+1)Ë=
NULL
){

1064 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "malloc");

1065 
d⁄e
;

1068 
	`va_°¨t
(
≠
, 
ve˛í
);

1069 i‡(
	`v¢¥ötf
(
x∑th
, 
Àn
+1, 
f‹m©
, 
≠
) < 0){

1070 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "vsnprintf");

1071 
	`va_íd
(
≠
);

1072 
d⁄e
;

1074 
	`va_íd
(
≠
);

1075 *
vec
 = 
NULL
;

1076 *
ve˛í
 = 0;

1077 
ªtvÆ
 = 
	`x∑th_choi˚
(
xcur
, 
x∑th
, 0x0, 
vec
, 
ve˛í
);

1078 
d⁄e
:

1079 i‡(
x∑th
)

1080 
	`‰ì
(
x∑th
);

1081  
ªtvÆ
;

1082 
	}
}

1108 
	$x∑th_vec_Êag
(
cxobj
 *
xcur
,

1109 *
f‹m©
,

1110 
uöt16_t
 
Êags
,

1111 
cxobj
 ***
vec
,

1112 
size_t
 *
ve˛í
,

1115 
ªtvÆ
 = -1;

1116 
va_li°
 
≠
;

1117 
size_t
 
Àn
;

1118 *
x∑th
;

1120 
	`va_°¨t
(
≠
, 
ve˛í
);

1121 
Àn
 = 
	`v¢¥ötf
(
NULL
, 0, 
f‹m©
, 
≠
);

1122 
	`va_íd
(
≠
);

1124 i‡((
x∑th
 = 
	`mÆloc
(
Àn
+1)Ë=
NULL
){

1125 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "malloc");

1126 
d⁄e
;

1129 
	`va_°¨t
(
≠
, 
ve˛í
);

1130 i‡(
	`v¢¥ötf
(
x∑th
, 
Àn
+1, 
f‹m©
, 
≠
) < 0){

1131 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "vsnprintf");

1132 
	`va_íd
(
≠
);

1133 
d⁄e
;

1135 
	`va_íd
(
≠
);

1136 *
vec
=
NULL
;

1137 *
ve˛í
 = 0;

1138 
ªtvÆ
 = 
	`x∑th_choi˚
(
xcur
, 
x∑th
, 
Êags
, 
vec
, 
ve˛í
);

1139 
d⁄e
:

1140 i‡(
x∑th
)

1141 
	`‰ì
(
x∑th
);

1142  
ªtvÆ
;

1143 
	}
}

1158 
	$ußge
(*
¨gv0
)

1160 
	`Ârötf
(
°dîr
, "ußge:%†<x∑th>.\n\tI≈uà⁄ stdö\n", 
¨gv0
);

1161 
	`exô
(0);

1162 
	}
}

1165 
	$maö
(
¨gc
, **
¨gv
)

1167 
i
;

1168 
cxobj
 **
xv


1169 
cxobj
 *
x
;

1170 
cxobj
 *
xn
;

1171 
size_t
 
xÀn
 = 0;

1173 i‡(
¨gc
 != 2){

1174 
	`ußge
(
¨gv
[0]);

1177 i‡(
	`xml_∑r£_fûe
(0, &
x
, "</clicon>") < 0){

1178 
	`Ârötf
(
°dîr
, "parsing 2\n");

1181 
	`¥ötf
("\n");

1183 i‡(
	`x∑th_vec
(
x
, 
¨gv
[1], &
xv
, &
xÀn
) < 0)

1185 i‡(
xv
){

1186 
i
=0; i<
xÀn
; i++){

1187 
xn
 = 
xv
[
i
];

1188 
	`Ârötf
(
°dout
, "[%d]:\n", 
i
);

1189 
	`˛ic⁄_xml2fûe
(
°dout
, 
xn
, 0, 1);

1191 
	`‰ì
(
xv
);

1193 i‡(
x
)

1194 
	`xml_‰ì
(
x
);

1197 
	}
}

	@clixon-master/lib/src/clixon_yang.c

39 #ifde‡
HAVE_CONFIG_H


40 
	~"˛ix⁄_c⁄fig.h
"

43 
	~<°dio.h
>

44 
	~<°dlib.h
>

45 
	~<î∫o.h
>

46 
	~<limôs.h
>

47 
	~<˘y≥.h
>

48 
	#__USE_GNU


	)

49 
	~<°rög.h
>

50 
	~<¨∑/öë.h
>

51 
	~<ªgex.h
>

52 
	~<dúít.h
>

53 
	~<sy¶og.h
>

54 
	~<as£π.h
>

55 
	~<sys/°©.h
>

56 
	~<√töë/ö.h
>

59 
	~<˛igí/˛igí.h
>

62 
	~"˛ix⁄_log.h
"

63 
	~"˛ix⁄_îr.h
"

64 
	~"˛ix⁄_°rög.h
"

65 
	~"˛ix⁄_queue.h
"

66 
	~"˛ix⁄_hash.h
"

67 
	~"˛ix⁄_h™dÀ.h
"

68 
	~"˛ix⁄_fûe.h
"

69 
	~"˛ix⁄_y™g.h
"

70 
	~"˛ix⁄_hash.h
"

71 
	~"˛ix⁄_xml.h
"

72 
	~"˛ix⁄_∂ugö.h
"

73 
	~"˛ix⁄_›ti⁄s.h
"

74 
	~"˛ix⁄_y™g_ty≥.h
"

75 
	~"˛ix⁄_y™g_∑r£.h
"

79 c⁄° 
m≠_°r2öt
 
	gykm≠
[] = {

80 {"™yxml", 
Y_ANYXML
},

81 {"¨gumít", 
Y_ARGUMENT
},

82 {"augmít", 
Y_AUGMENT
},

83 {"ba£", 
Y_BASE
},

84 {"bñ⁄gs-to", 
Y_BELONGS_TO
},

85 {"bô", 
Y_BIT
},

86 {"ˇ£", 
Y_CASE
},

87 {"choi˚", 
Y_CHOICE
},

88 {"c⁄fig", 
Y_CONFIG
},

89 {"c⁄è˘", 
Y_CONTACT
},

90 {"c⁄èöî", 
Y_CONTAINER
},

91 {"deÁu…", 
Y_DEFAULT
},

92 {"des¸ùti⁄", 
Y_DESCRIPTION
},

93 {"devüã", 
Y_DEVIATE
},

94 {"devüti⁄", 
Y_DEVIATION
},

95 {"íum", 
Y_ENUM
},

96 {"îr‹-≠p-èg", 
Y_ERROR_APP_TAG
},

97 {"îr‹_mesßge", 
Y_ERROR_MESSAGE
},

98 {"exãnsi⁄", 
Y_EXTENSION
},

99 {"„©uª", 
Y_FEATURE
},

100 {"‰a˘i⁄-digôs", 
Y_FRACTION_DIGITS
},

101 {"groupög", 
Y_GROUPING
},

102 {"idítôy", 
Y_IDENTITY
},

103 {"if-„©uª", 
Y_IF_FEATURE
},

104 {"imp‹t", 
Y_IMPORT
},

105 {"ö˛ude", 
Y_INCLUDE
},

106 {"öput", 
Y_INPUT
},

107 {"key", 
Y_KEY
},

108 {"Àaf", 
Y_LEAF
},

109 {"Àaf-li°", 
Y_LEAF_LIST
},

110 {"Àngth", 
Y_LENGTH
},

111 {"li°", 
Y_LIST
},

112 {"m™d©‹y", 
Y_MANDATORY
},

113 {"max-ñemíts", 
Y_MAX_ELEMENTS
},

114 {"mö-ñemíts", 
Y_MIN_ELEMENTS
},

115 {"moduÀ", 
Y_MODULE
},

116 {"mu°", 
Y_MUST
},

117 {"«me•a˚", 
Y_NAMESPACE
},

118 {"nŸifiˇti⁄", 
Y_NOTIFICATION
},

119 {"‹dîed-by", 
Y_ORDERED_BY
},

120 {"‹g™iz©i⁄", 
Y_ORGANIZATION
},

121 {"ouçut", 
Y_OUTPUT
},

122 {"∑th", 
Y_PATH
},

123 {"∑âîn", 
Y_PATTERN
},

124 {"posôi⁄", 
Y_POSITION
},

125 {"¥efix", 
Y_PREFIX
},

126 {"¥e£n˚", 
Y_PRESENCE
},

127 {"ønge", 
Y_RANGE
},

128 {"ª„ªn˚", 
Y_REFERENCE
},

129 {"ªföe", 
Y_REFINE
},

130 {"ªquúe-ö°™˚", 
Y_REQUIRE_INSTANCE
},

131 {"ªvisi⁄", 
Y_REVISION
},

132 {"ªvisi⁄-d©e", 
Y_REVISION_DATE
},

133 {"Ωc", 
Y_RPC
},

134 {"°©us", 
Y_STATUS
},

135 {"submoduÀ", 
Y_SUBMODULE
},

136 {"ty≥", 
Y_TYPE
},

137 {"ty≥def", 
Y_TYPEDEF
},

138 {"unique", 
Y_UNIQUE
},

139 {"unôs", 
Y_UNITS
},

140 {"unknown", 
Y_UNKNOWN
},

141 {"u£s", 
Y_USES
},

142 {"vÆue", 
Y_VALUE
},

143 {"whí", 
Y_WHEN
},

144 {"y™g-vîsi⁄", 
Y_YANG_VERSION
},

145 {"yö-ñemít", 
Y_YIN_ELEMENT
},

146 {"y™g-•ecifiˇti⁄", 
Y_SPEC
},

148 {
NULL
, -1}

155 
y™g_•ec
 *

156 
	$y•ec_√w
()

158 
y™g_•ec
 *
y•ec
;

160 i‡((
y•ec
 = 
	`mÆloc
((*y•ec))Ë=
NULL
){

161 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "%s: mÆloc", 
__FUNCTION__
);

162  
NULL
;

164 
	`mem£t
(
y•ec
, 0, (*yspec));

165 
y•ec
->
yp_keyw‹d
 = 
Y_SPEC
;

166  
y•ec
;

167 
	}
}

173 
y™g_°mt
 *

174 
	$ys_√w
(
rfc_6020
 
keyw
)

176 
y™g_°mt
 *
ys
;

178 i‡((
ys
 = 
	`mÆloc
((*ys))Ë=
NULL
){

179 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "%s: mÆloc", 
__FUNCTION__
);

180  
NULL
;

182 
	`mem£t
(
ys
, 0, (*ys));

183 
ys
->
ys_keyw‹d
 = 
keyw
;

186 i‡((
ys
->
ys_cvec
 = 
	`cvec_√w
(0)Ë=
NULL
){

187 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "%s: cvec_√w", 
__FUNCTION__
);

188  
NULL
;

190  
ys
;

191 
	}
}

195 
	$ys_‰ì1
(
y™g_°mt
 *
ys
)

197 i‡(
ys
->
ys_¨gumít
)

198 
	`‰ì
(
ys
->
ys_¨gumít
);

199 i‡(
ys
->
ys_cv
)

200 
	`cv_‰ì
(
ys
->
ys_cv
);

201 i‡(
ys
->
ys_cvec
)

202 
	`cvec_‰ì
(
ys
->
ys_cvec
);

203 i‡(
ys
->
ys_ty≥ˇche
)

204 
	`y™g_ty≥_ˇche_‰ì
(
ys
->
ys_ty≥ˇche
);

205 
	`‰ì
(
ys
);

207 
	}
}

211 
	$ys_‰ì
(
y™g_°mt
 *
ys
)

213 
i
;

214 
y™g_°mt
 *
yc
;

216 
i
=0; i<
ys
->
ys_Àn
; i++){

217 i‡((
yc
 = 
ys
->
ys_°mt
[
i
]Ë!
NULL
)

218 
	`ys_‰ì
(
yc
);

220 i‡(
ys
->
ys_°mt
)

221 
	`‰ì
(
ys
->
ys_°mt
);

222 
	`ys_‰ì1
(
ys
);

224 
	}
}

228 
	$y•ec_‰ì
(
y™g_•ec
 *
y•ec
)

230 
i
;

231 
y™g_°mt
 *
ys
;

233 
i
=0; i<
y•ec
->
yp_Àn
; i++){

234 i‡((
ys
 = 
y•ec
->
yp_°mt
[
i
]Ë!
NULL
)

235 
	`ys_‰ì
(
ys
);

237 i‡(
y•ec
->
yp_°mt
)

238 
	`‰ì
(
y•ec
->
yp_°mt
);

239 
	`‰ì
(
y•ec
);

241 
	}
}

245 
	$yn_ªÆloc
(
y™g_node
 *
yn
)

247 
yn
->
yn_Àn
++;

249 i‡((
yn
->
yn_°mt
 = 
	`ªÆloc
(yn->yn_°mt, (yn->
yn_Àn
)*(
y™g_°mt
 *))) == 0){

250 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "%s:ÑóŒoc", 
__FUNCTION__
);

253 
yn
->
yn_°mt
[yn->
yn_Àn
 - 1] = 
NULL
;

255 
	}
}

260 
	$ys_˝
(
y™g_°mt
 *
y√w
,

261 
y™g_°mt
 *
yﬁd
)

263 
ªtvÆ
 = -1;

264 
i
;

265 
y™g_°mt
 *
y˙
;

266 
y™g_°mt
 *
yco
;

268 
	`mem˝y
(
y√w
, 
yﬁd
, (*yold));

269 
y√w
->
ys_∑ª¡
 = 
NULL
;

270 i‡(
yﬁd
->
ys_°mt
)

271 i‡((
y√w
->
ys_°mt
 = 
	`ˇŒoc
(
yﬁd
->
ys_Àn
, (
y™g_°mt
 *))Ë=
NULL
){

272 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "%s: cÆloc", 
__FUNCTION__
);

273 
d⁄e
;

275 i‡(
yﬁd
->
ys_¨gumít
)

276 i‡((
y√w
->
ys_¨gumít
 = 
	`°rdup
(
yﬁd
->ys_¨gumít)Ë=
NULL
){

277 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "%s: sådup", 
__FUNCTION__
);

278 
d⁄e
;

280 i‡(
yﬁd
->
ys_cv
)

281 i‡((
y√w
->
ys_cv
 = 
	`cv_dup
(
yﬁd
->ys_cv)Ë=
NULL
){

282 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "%s: cv_dup", 
__FUNCTION__
);

283 
d⁄e
;

285 i‡(
yﬁd
->
ys_cvec
)

286 i‡((
y√w
->
ys_cvec
 = 
	`cvec_dup
(
yﬁd
->ys_cvec)Ë=
NULL
){

287 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "%s: cvec_dup", 
__FUNCTION__
);

288 
d⁄e
;

290 i‡(
yﬁd
->
ys_ty≥ˇche
){

291 
y√w
->
ys_ty≥ˇche
 = 
NULL
;

292 i‡(
	`y™g_ty≥_ˇche_˝
(&
y√w
->
ys_ty≥ˇche
, 
yﬁd
->ys_typecache) < 0)

293 
d⁄e
;

295 
i
=0; i<
y√w
->
ys_Àn
; i++){

296 
yco
 = 
yﬁd
->
ys_°mt
[
i
];

297 i‡((
y˙
 = 
	`ys_dup
(
yco
)Ë=
NULL
)

298 
d⁄e
;

299 
y√w
->
ys_°mt
[
i
] = 
y˙
;

300 
y˙
->
ys_∑ª¡
 = (
y™g_node
*)
y√w
;

302 
ªtvÆ
 = 0;

303 
d⁄e
:

304  
ªtvÆ
;

305 
	}
}

313 
y™g_°mt
 *

314 
	$ys_dup
(
y™g_°mt
 *
ﬁd
)

316 
y™g_°mt
 *
√w
;

318 i‡((
√w
 = 
	`ys_√w
(
ﬁd
->
ys_keyw‹d
)Ë=
NULL
)

319  
NULL
;

320 i‡(
√w
->
ys_cvec
){

321 
	`cvec_‰ì
(
√w
->
ys_cvec
);

322 
√w
->
ys_cvec
 = 
NULL
;

324 i‡(
	`ys_˝
(
√w
, 
ﬁd
) < 0){

325 
	`ys_‰ì
(
√w
);

326  
NULL
;

328  
√w
;

329 
	}
}

337 
	$yn_ö£π
(
y™g_node
 *
yn_∑ª¡
,

338 
y™g_°mt
 *
ys_chûd
)

340 
pos
 = 
yn_∑ª¡
->
yn_Àn
;

342 i‡(
	`yn_ªÆloc
(
yn_∑ª¡
) < 0)

344 
yn_∑ª¡
->
yn_°mt
[
pos
] = 
ys_chûd
;

345 
ys_chûd
->
ys_∑ª¡
 = 
yn_∑ª¡
;

347 
	}
}

359 
y™g_°mt
 *

360 
	$yn_óch
(
y™g_node
 *
yn
,

361 
y™g_°mt
 *
ys
)

363 
y™g_°mt
 *
yc
 = 
NULL
;

364 
i
;

366 
i
=0; i<
yn
->
yn_Àn
; i++){

367 
yc
 = 
yn
->
yn_°mt
[
i
];

368 i‡(
ys
==
NULL
)

369  
yc
;

370 i‡(
ys
==
yc
)

371 
ys
 = 
NULL
;

373  
NULL
;

374 
	}
}

385 
y™g_°mt
 *

386 
	$y™g_föd
(
y™g_node
 *
yn
,

387 
keyw‹d
,

388 *
¨gumít
)

390 
y™g_°mt
 *
ys
 = 
NULL
;

391 
i
;

392 
m©ch
 = 0;

394 
i
=0; i<
yn
->
yn_Àn
; i++){

395 
ys
 = 
yn
->
yn_°mt
[
i
];

396 i‡(
keyw‹d
 =0 || 
ys
->
ys_keyw‹d
 == keyword){

397 i‡(
¨gumít
 =
NULL
)

398 
m©ch
++;

400 i‡(
ys
->
ys_¨gumít
 && 
	`°rcmp
(
¨gumít
, ys->ys_argument) == 0)

401 
m©ch
++;

402 i‡(
m©ch
)

406  
m©ch
 ? 
ys
 : 
NULL
;

407 
	}
}

408 #ifde‡
NOTYET


411 
y™g_°mt
 *

412 
	$y™g_föd_˛ass
(
y™g_node
 *
yn
,

413 *
¨gumít
,

414 
y™g_˛ass
 
˛ass
)

416 
y™g_°mt
 *
ys
 = 
NULL
;

417 
y™g_°mt
 *
yc
 = 
NULL
;

418 
y™g_°mt
 *
ysm©ch
 = 
NULL
;

419 
i
, 
j
;

420 
ok
;

422 
i
=0; i<
yn
->
yn_Àn
; i++){

423 
ys
 = 
yn
->
yn_°mt
[
i
];

424 
˛ass
){

425 
YC_NONE
:

426 
ok
 = 1;

428 
YC_DATANODE
:

429 
ok
 = 
	`y™g_d©™ode
(
ys
);

431 
YC_DATADEFINITION
:

432 
ok
 = 
	`y™g_d©adeföôi⁄
(
ys
);

434 
YC_SCHEMANODE
:

435 
ok
 = 
	`y™g_schem™ode
(
ys
);

438 i‡(!
ok
)

440 
˛ass
){

441 
YC_NONE
:

442 i‡(
¨gumít
 =
NULL
)

443 
ysm©ch
 = 
ys
;

445 i‡(
ys
->
ys_¨gumít
 && 
	`°rcmp
(
¨gumít
, ys->ys_argument) == 0)

446 
ysm©ch
 = 
ys
;

447 i‡(
ysm©ch
)

448 
m©ch
;

450 
YC_DATANODE
:

451 
YC_DATADEFINITION
:

452 i‡(
¨gumít
 =
NULL
)

453 
ysm©ch
 = 
ys
;

455 i‡(
ys
->
ys_¨gumít
 && 
	`°rcmp
(
¨gumít
, ys->ys_argument) == 0)

456 
ysm©ch
 = 
ys
;

457 i‡(
ysm©ch
)

458 
m©ch
;

460 
YC_SCHEMANODE
:

461 i‡(
ys
->
ys_keyw‹d
 =
Y_CHOICE
){

462 
j
=0; j<
ys
->
ys_Àn
; j++){

463 
yc
 = 
ys
->
ys_°mt
[
j
];

464 i‡(
yc
->
ys_keyw‹d
 =
Y_CASE
)

465 
ysm©ch
 = 
	`y™g_föd_˛ass
((
y™g_node
*)
yc
, 
¨gumít
, 
˛ass
);

467 i‡(
	`y™g_schem™ode
(
yc
)){

468 i‡(
¨gumít
 =
NULL
)

469 
ysm©ch
 = 
yc
;

471 i‡(
yc
->
ys_¨gumít
 && 
	`°rcmp
(
¨gumít
, yc->ys_argument) == 0)

472 
ysm©ch
 = 
yc
;

475 i‡(
ysm©ch
)

476 
m©ch
;

480 i‡(
¨gumít
 =
NULL
)

481 
ysm©ch
 = 
ys
;

483 i‡(
ys
->
ys_¨gumít
 && 
	`°rcmp
(
¨gumít
, ys->ys_argument) == 0)

484 
ysm©ch
 = 
ys
;

485 i‡(
ysm©ch
)

486 
m©ch
;

492 
m©ch
:

493  
ysm©ch
;

494 
	}
}

505 
y™g_°mt
 *

506 
	$y™g_föd_d©™ode
(
y™g_node
 *
yn
,

507 *
¨gumít
)

509 
y™g_°mt
 *
ys
 = 
NULL
;

510 
y™g_°mt
 *
yc
 = 
NULL
;

511 
y™g_°mt
 *
ysm©ch
 = 
NULL
;

512 
i
, 
j
;

514 
i
=0; i<
yn
->
yn_Àn
; i++){

515 
ys
 = 
yn
->
yn_°mt
[
i
];

516 i‡(
ys
->
ys_keyw‹d
 =
Y_CHOICE
){

517 
j
=0; j<
ys
->
ys_Àn
; j++){

518 
yc
 = 
ys
->
ys_°mt
[
j
];

519 i‡(
yc
->
ys_keyw‹d
 =
Y_CASE
)

520 
ysm©ch
 = 
	`y™g_föd_d©™ode
((
y™g_node
*)
yc
, 
¨gumít
);

522 i‡(
	`y™g_d©™ode
(
yc
)){

523 i‡(
¨gumít
 =
NULL
)

524 
ysm©ch
 = 
yc
;

526 i‡(
yc
->
ys_¨gumít
 && 
	`°rcmp
(
¨gumít
, yc->ys_argument) == 0)

527 
ysm©ch
 = 
yc
;

529 i‡(
ysm©ch
)

530 
m©ch
;

534 i‡(
	`y™g_d©™ode
(
ys
)){

535 i‡(
¨gumít
 =
NULL
)

536 
ysm©ch
 = 
ys
;

538 i‡(
ys
->
ys_¨gumít
 && 
	`°rcmp
(
¨gumít
, ys->ys_argument) == 0)

539 
ysm©ch
 = 
ys
;

540 i‡(
ysm©ch
)

541 
m©ch
;

544 
m©ch
:

545  
ysm©ch
;

546 
	}
}

554 
y™g_°mt
 *

555 
	$y™g_föd_schem™ode
(
y™g_node
 *
yn
,

556 *
¨gumít
)

558 
y™g_°mt
 *
ys
 = 
NULL
;

559 
y™g_°mt
 *
yc
 = 
NULL
;

560 
y™g_°mt
 *
ysm©ch
 = 
NULL
;

561 
i
, 
j
;

563 
i
=0; i<
yn
->
yn_Àn
; i++){

564 
ys
 = 
yn
->
yn_°mt
[
i
];

565 i‡(
ys
->
ys_keyw‹d
 =
Y_CHOICE
){

566 
j
=0; j<
ys
->
ys_Àn
; j++){

567 
yc
 = 
ys
->
ys_°mt
[
j
];

568 i‡(
yc
->
ys_keyw‹d
 =
Y_CASE
)

569 
ysm©ch
 = 
	`y™g_föd_schem™ode
((
y™g_node
*)
yc
, 
¨gumít
);

571 i‡(
	`y™g_schem™ode
(
yc
)){

572 i‡(
¨gumít
 =
NULL
)

573 
ysm©ch
 = 
yc
;

575 i‡(
yc
->
ys_¨gumít
 && 
	`°rcmp
(
¨gumít
, yc->ys_argument) == 0)

576 
ysm©ch
 = 
yc
;

578 i‡(
ysm©ch
)

579 
m©ch
;

583 i‡(
	`y™g_schem™ode
(
ys
)){

584 i‡(
¨gumít
 =
NULL
)

585 
ysm©ch
 = 
ys
;

587 i‡(
ys
->
ys_¨gumít
 && 
	`°rcmp
(
¨gumít
, ys->ys_argument) == 0)

588 
ysm©ch
 = 
ys
;

589 i‡(
ysm©ch
)

590 
m©ch
;

593 
m©ch
:

594  
ysm©ch
;

595 
	}
}

608 
y™g_°mt
 *

609 
	$y™g_föd_t›node
(
y™g_•ec
 *
y•
,

610 *
¨gumít
,

611 
y™g_˛ass
 
˛ass
)

613 
y™g_°mt
 *
ys
 = 
NULL
;

614 
y™g_°mt
 *
yc
 = 
NULL
;

615 
i
;

617 
i
=0; i<
y•
->
yp_Àn
; i++){

618 
ys
 = 
y•
->
yp_°mt
[
i
];

619 
˛ass
){

620 
YC_NONE
:

621 i‡((
yc
 = 
	`y™g_föd
((
y™g_node
*)
ys
, 0, 
¨gumít
)Ë!
NULL
)

622  
yc
;

624 
YC_DATANODE
:

625 i‡((
yc
 = 
	`y™g_föd_d©™ode
((
y™g_node
*)
ys
, 
¨gumít
)Ë!
NULL
)

626  
yc
;

628 
YC_SCHEMANODE
:

629 i‡((
yc
 = 
	`y™g_föd_schem™ode
((
y™g_node
*)
ys
, 
¨gumít
)Ë!
NULL
)

630  
yc
;

632 
YC_DATADEFINITION
:

636  
NULL
;

637 
	}
}

645 
	$y™g_föd_my¥efix
(
y™g_°mt
 *
ys
)

647 
y™g_°mt
 *
ymod
;

648 
y™g_°mt
 *
y¥efix
;

649 *
¥efix
 = 
NULL
;

651 i‡((
ymod
 = 
	`ys_moduÀ
(
ys
)Ë=
NULL
){

652 
	`˛ic⁄_îr
(
OE_YANG
, 0, "My yang moduleÇot found");

653 
d⁄e
;

655 i‡((
y¥efix
 = 
	`y™g_föd
((
y™g_node
*)
ymod
, 
Y_PREFIX
, 
NULL
)) == NULL)

656 
d⁄e
;

657 
¥efix
 = 
y¥efix
->
ys_¨gumít
;

658 
d⁄e
:

659  
¥efix
;

660 
	}
}

667 
	$‹dî1
(
y™g_node
 *
yp
,

668 
y™g_°mt
 *
y
,

669 *
ödex
)

671 
y™g_°mt
 *
ys
;

672 
i
;

674 
i
=0; i<
yp
->
yn_Àn
; i++){

675 
ys
 = 
yp
->
yn_°mt
[
i
];

676 i‡(!
	`y™g_d©™ode
(
ys
))

678 i‡(
ys
==
y
)

680 (*
ödex
)++;

683 
	}
}

690 
	$y™g_‹dî
(
y™g_°mt
 *
y
)

692 
y™g_node
 *
yp
;

693 
y™g_node
 *
yµ
;

694 
y™g_node
 *
yn
;

695 
i
;

696 
j
=0;

698 
yp
 = 
y
->
ys_∑ª¡
;

699 i‡(
yp
->
yn_keyw‹d
 =
Y_MODULE
 ||yp->yn_keyw‹d =
Y_SUBMODULE
){

700 
yµ
 = 
yp
->
yn_∑ª¡
;

701 
i
=0; i<
yµ
->
yn_Àn
; i++){

702 
yn
 = (
y™g_node
*)
yµ
->
yn_°mt
[
i
];

703 i‡(
	`‹dî1
(
yn
, 
y
, &
j
) == 1)

704  
j
;

707 
	`‹dî1
(
yp
, 
y
, &
j
);

708  
j
;

709 
	}
}

713 
	$ys_Êag_ª£t
(
y™g_°mt
 *
ys
,

714 *
¨g
)

716 
Êags
 = (
öçå_t
)
¨g
;

718 
ys
->
ys_Êags
 |~
Êags
;

720 
	}
}

723 
	$y™g_key2°r
(
keyw‹d
)

725  (*)
	`˛ic⁄_öt2°r
(
ykm≠
, 
keyw‹d
);

726 
	}
}

733 
y™g_°mt
 *

734 
	$ys_moduÀ
(
y™g_°mt
 *
ys
)

736 
y™g_node
 *
yn
;

739 i‡(
ys
==
NULL
 || ys->
ys_keyw‹d
==
Y_SPEC
)

740  
NULL
;

742 i‡(
ys
==
NULL
 || ys->
ys_keyw‹d
==
Y_SPEC
)

743  
ys
;

745 
ys
 !
NULL
 && ys->
ys_keyw‹d
 !
Y_MODULE
 && ys->ys_keyw‹d !
Y_SUBMODULE
){

746 
yn
 = 
ys
->
ys_∑ª¡
;

748 i‡(
yn
 && yn->
yn_keyw‹d
 =
Y_SPEC
)

749 
yn
 = 
NULL
;

750 
ys
 = (
y™g_°mt
*)
yn
;

753  
ys
;

754 
	}
}

761 
y™g_•ec
 *

762 
	$ys_•ec
(
y™g_°mt
 *
ys
)

764 
y™g_node
 *
yn
;

766 
ys
 !
NULL
 && ys->
ys_keyw‹d
 !
Y_SPEC
){

767 
yn
 = 
ys
->
ys_∑ª¡
;

768 
ys
 = (
y™g_°mt
*)
yn
;

771  (
y™g_•ec
*)
ys
;

772 
	}
}

782 
	$y¨g_id
(
y™g_°mt
 *
ys
)

784 *
id
;

786 i‡((
id
 = 
	`°rchr
(
ys
->
ys_¨gumít
, ':')Ë=
NULL
)

787 
id
 = 
ys
->
ys_¨gumít
;

789 
id
++;

790  
id
;

791 
	}
}

800 
	$y¨g_¥efix
(
y™g_°mt
 *
ys
)

802 *
id
;

803 *
¥efix
 = 
NULL
;

805 i‡((
id
 = 
	`°rchr
(
ys
->
ys_¨gumít
, ':')Ë!
NULL
){

806 
¥efix
 = 
	`°rdup
(
ys
->
ys_¨gumít
);

807 
¥efix
[
id
-
ys
->
ys_¨gumít
] = '\0';

809  
¥efix
;

810 
	}
}

821 
y™g_°mt
 *

822 
	$y™g_föd_moduÀ_by_¥efix
(
y™g_°mt
 *
ys
,

823 *
¥efix
)

825 
y™g_°mt
 *
yimp‹t
;

826 
y™g_°mt
 *
y¥efix
;

827 
y™g_°mt
 *
my_ymod
;

828 
y™g_°mt
 *
ymod
 = 
NULL
;

829 
y™g_•ec
 *
y•ec
;

830 *
my¥efix
;

832 i‡((
y•ec
 = 
	`ys_•ec
(
ys
)Ë=
NULL
){

833 
	`˛ic⁄_îr
(
OE_YANG
, 0, "My yang specÇot found");

834 
d⁄e
;

836 i‡((
my_ymod
 = 
	`ys_moduÀ
(
ys
)Ë=
NULL
){

837 
	`˛ic⁄_îr
(
OE_YANG
, 0, "My yang moduleÇot found");

838 
d⁄e
;

841 i‡(
my_ymod
->
ys_keyw‹d
 !
Y_MODULE
 &&

842 
my_ymod
->
ys_keyw‹d
 !
Y_SUBMODULE
){

843 
	`˛ic⁄_îr
(
OE_YANG
, 0, "%†nŸ moduÀ o∏sub-moduÀ", 
my_ymod
->
ys_¨gumít
);

844 
d⁄e
;

847 
my¥efix
 = 
	`y™g_föd_my¥efix
(
ys
);

848 i‡(
my¥efix
 && 
	`°rcmp
(my¥efix, 
¥efix
) == 0){

849 
ymod
 = 
my_ymod
;

850 
d⁄e
;

852 
yimp‹t
 = 
NULL
;

853 (
yimp‹t
 = 
	`yn_óch
((
y™g_node
*)
my_ymod
, yimp‹t)Ë!
NULL
) {

854 i‡(
yimp‹t
->
ys_keyw‹d
 !
Y_IMPORT
)

856 i‡((
y¥efix
 = 
	`y™g_föd
((
y™g_node
*)
yimp‹t
, 
Y_PREFIX
, 
NULL
)) != NULL &&

857 
	`°rcmp
(
y¥efix
->
ys_¨gumít
, 
¥efix
) == 0){

861 i‡(
yimp‹t
){

862 i‡((
ymod
 = 
	`y™g_föd
((
y™g_node
*)
y•ec
, 
Y_MODULE
, 
yimp‹t
->
ys_¨gumít
)Ë=
NULL
){

863 
	`˛ic⁄_îr
(
OE_YANG
, 0, "No module or sub-module found withÖrefix %s",

864 
yimp‹t
->
ys_¨gumít
);

865 
yimp‹t
 = 
NULL
;

866 
d⁄e
;

869 
d⁄e
:

870  
ymod
;

871 
	}
}

874 
ölöe


875 
	$quŸed°rög
(*
s
)

877 
Àn
 = 
	`°æí
(
s
);

878 
i
;

880 
i
=0; i<
Àn
; i++)

881 i‡(
	`isbœnk
(
s
[
i
]))

883  
i
 < 
Àn
;

884 
	}
}

892 
	$y™g_¥öt
(
FILE
 *
f
,

893 
y™g_node
 *
yn
)

895 
ªtvÆ
 = -1;

896 
cbuf
 *
cb
 = 
NULL
;

898 i‡((
cb
 = 
	`cbuf_√w
()Ë=
NULL
){

899 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "%s: cbuf_√w", 
__FUNCTION__
);

900 
d⁄e
;

902 i‡(
	`y™g_¥öt_cbuf
(
cb
, 
yn
, 0) < 0)

903 
d⁄e
;

904 
	`Ârötf
(
f
, "%s", 
	`cbuf_gë
(
cb
));

905 i‡(
cb
)

906 
	`cbuf_‰ì
(
cb
);

907 
ªtvÆ
 = 0;

908 
d⁄e
:

909  
ªtvÆ
;

910 
	}
}

924 
	$y™g_¥öt_cbuf
(
cbuf
 *
cb
,

925 
y™g_node
 *
yn
,

926 
m¨göÆ
)

928 
y™g_°mt
 *
ys
 = 
NULL
;

930 (
ys
 = 
	`yn_óch
(
yn
, ys)Ë!
NULL
) {

931 i‡(
ys
->
ys_keyw‹d
 =
Y_UNKNOWN
){

932 
	`˝rötf
(
cb
, "%*s", 
m¨göÆ
-1, "");

935 
	`˝rötf
(
cb
, "%*s%s", 
m¨göÆ
, "", 
	`y™g_key2°r
(
ys
->
ys_keyw‹d
));

936 i‡(
ys
->
ys_¨gumít
){

937 i‡(
	`quŸed°rög
(
ys
->
ys_¨gumít
))

938 
	`˝rötf
(
cb
, " \"%s\"", 
ys
->
ys_¨gumít
);

940 
	`˝rötf
(
cb
, " %s", 
ys
->
ys_¨gumít
);

942 i‡(
ys
->
ys_Àn
){

943 
	`˝rötf
(
cb
, " {\n");

944 
	`y™g_¥öt_cbuf
(
cb
, (
y™g_node
*)
ys
, 
m¨göÆ
+3);

945 
	`˝rötf
(
cb
, "%*s%s\n", 
m¨göÆ
, "", "}");

948 
	`˝rötf
(
cb
, ";\n");

951 
	}
}

969 
	$ys_p›uœã_Àaf
(
y™g_°mt
 *
ys
,

970 *
¨g
)

972 
ªtvÆ
 = -1;

973 
cg_v¨
 *
cv
 = 
NULL
;

974 
y™g_node
 *
y∑ª¡
;

975 
y™g_°mt
 *
ydef
;

976 
cv_ty≥
 
cvty≥
 = 
CGV_ERR
;

977 
cvªt
;

978 
ªt
;

979 *
ªas⁄
 = 
NULL
;

980 
y™g_°mt
 *
yª°y≥
;

981 *
ª°y≥
;

982 *
ty≥
;

983 
uöt8_t
 
‰a˘i⁄_digôs
;

984 
›ti⁄s
 = 0x0;

986 
y∑ª¡
 = 
ys
->
ys_∑ª¡
;

988 i‡(
	`y™g_ty≥_gë
(
ys
, &
ty≥
, &
yª°y≥
, &
›ti⁄s
, 
NULL
, NULL, NULL, &
‰a˘i⁄_digôs
) < 0)

989 
d⁄e
;

990 
ª°y≥
 = 
yª°y≥
?yª°y≥->
ys_¨gumít
:
NULL
;

991 i‡(
	`˛ic⁄_ty≥2cv
(
ty≥
, 
ª°y≥
, &
cvty≥
) < 0)

992 
d⁄e
;

994 i‡((
cv
 = 
	`cv_√w
(
cvty≥
)Ë=
NULL
){

995 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "%s: cv_√w", 
__FUNCTION__
);

996 
d⁄e
;

998 i‡(
›ti⁄s
 & 
YANG_OPTIONS_FRACTION_DIGITS
 && 
cvty≥
 =
CGV_DEC64
)

999 
	`cv_dec64_n_£t
(
cv
, 
‰a˘i⁄_digôs
);

1001 i‡(
	`cv_«me_£t
(
cv
, 
ys
->
ys_¨gumít
Ë=
NULL
){

1002 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "%s: cv_√w_£t", 
__FUNCTION__
);

1003 
d⁄e
;

1008 i‡((
ydef
 = 
	`y™g_föd
((
y™g_node
*)
ys
, 
Y_DEFAULT
, 
NULL
)) != NULL){

1009 i‡((
cvªt
 = 
	`cv_∑r£1
(
ydef
->
ys_¨gumít
, 
cv
, &
ªas⁄
)) < 0){

1010 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "parsing cv");

1011 
d⁄e
;

1013 i‡(
cvªt
 == 0){

1014 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "P¨sög CV: %s", 
ªas⁄
);

1015 
	`‰ì
(
ªas⁄
);

1016 
d⁄e
;

1021 
	`cv_Êag_£t
(
cv
, 
V_UNSET
);

1025 i‡(
y∑ª¡
 && y∑ª¡->
yn_keyw‹d
 =
Y_LIST
){

1026 i‡((
ªt
 = 
	`y™g_key_m©ch
(
y∑ª¡
, 
ys
->
ys_¨gumít
)) < 0)

1027 
d⁄e
;

1028 i‡(
ªt
 == 1)

1029 
	`cv_Êag_£t
(
cv
, 
V_UNIQUE
);

1031 
ys
->
ys_cv
 = 
cv
;

1032 
ªtvÆ
 = 0;

1033 
d⁄e
:

1034 i‡(
cv
 && 
ªtvÆ
 < 0)

1035 
	`cv_‰ì
(
cv
);

1036  
ªtvÆ
;

1037 
	}
}

1040 
	$ys_p›uœã_li°
(
y™g_°mt
 *
ys
,

1041 *
¨g
)

1043 
y™g_°mt
 *
ykey
;

1045 i‡((
ykey
 = 
	`y™g_föd
((
y™g_node
*)
ys
, 
Y_KEY
, 
NULL
)) == NULL)

1047 
	`cvec_‰ì
(
ys
->
ys_cvec
);

1048 i‡((
ys
->
ys_cvec
 = 
	`y™g_¨g2cvec
(
ykey
, " ")Ë=
NULL
)

1051 
	}
}

1061 
	$ys_p›uœã_ønge
(
y™g_°mt
 *
ys
,

1062 *
¨g
)

1064 
ªtvÆ
 = -1;

1065 
y™g_node
 *
y∑ª¡
;

1066 *
‹igty≥
;

1067 
y™g_°mt
 *
yª°y≥
;

1068 *
ª°y≥
;

1069 
›ti⁄s
 = 0x0;

1070 
uöt8_t
 
‰a˘i⁄_digôs
;

1071 
cv_ty≥
 
cvty≥
 = 
CGV_ERR
;

1072 *
mö°r
 = 
NULL
;

1073 *
max°r
;

1074 
cg_v¨
 *
cv
;

1075 *
ªas⁄
 = 
NULL
;

1076 
cvªt
;

1078 
y∑ª¡
 = 
ys
->
ys_∑ª¡
;

1079 i‡(
y∑ª¡
->
yn_keyw‹d
 !
Y_TYPE
){

1080 
	`˛ic⁄_îr
(
OE_YANG
, 0, "%s:Ö¨íàshould bêty≥", 
__FUNCTION__
);

1081 
d⁄e
;

1083 i‡(
	`y™g_ty≥_ªsﬁve
(
ys
, (
y™g_°mt
*)
y∑ª¡
, &
yª°y≥
,

1084 &
›ti⁄s
, 
NULL
, NULL, NULL, &
‰a˘i⁄_digôs
) < 0)

1085 
d⁄e
;

1086 
ª°y≥
 = 
yª°y≥
?yª°y≥->
ys_¨gumít
:
NULL
;

1087 
‹igty≥
 = 
	`y¨g_id
((
y™g_°mt
*)
y∑ª¡
);

1089 i‡(
	`˛ic⁄_ty≥2cv
(
‹igty≥
, 
ª°y≥
, &
cvty≥
) < 0)

1090 
d⁄e
;

1092 i‡(
cvty≥
 =
CGV_STRING
)

1093 
cvty≥
 = 
CGV_UINT64
;

1094 i‡((
mö°r
 = 
	`°rdup
(
ys
->
ys_¨gumít
)Ë=
NULL
){

1095 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "strdup");

1096 
d⁄e
;

1098 i‡((
max°r
 = 
	`°r°r
(
mö°r
, "..")Ë!
NULL
){

1099 i‡(
	`°æí
(
max°r
) < 2){

1100 
	`˛ic⁄_îr
(
OE_YANG
, 0, "range statement: %sÇot onÅhe form: <int>..<int>");

1101 
d⁄e
;

1103 
mö°r
[
max°r
-minstr] = '\0';

1104 
max°r
 += 2;

1106 i‡(
	`isbœnk
(
mö°r
[
	`°æí
(minstr)-1]))

1107 
mö°r
[
	`°æí
(minstr)-1] = '\0';

1108 i‡(
	`isbœnk
(
max°r
[0]))

1109 
max°r
++;

1110 i‡((
cv
 = 
	`cvec_add
(
ys
->
ys_cvec
, 
cvty≥
)Ë=
NULL
){

1111 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "cvec_add");

1112 
d⁄e
;

1114 i‡(
	`cv_«me_£t
(
cv
, "ønge_mö"Ë=
NULL
){

1115 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "cv_name_set");

1116 
d⁄e
;

1118 i‡(
›ti⁄s
 & 
YANG_OPTIONS_FRACTION_DIGITS
 && 
cvty≥
 =
CGV_DEC64
)

1119 
	`cv_dec64_n_£t
(
cv
, 
‰a˘i⁄_digôs
);

1121 i‡((
cvªt
 = 
	`cv_∑r£1
(
mö°r
, 
cv
, &
ªas⁄
)) < 0){

1122 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "cv_parse1");

1123 
d⁄e
;

1125 i‡(
cvªt
 == 0){

1126 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "øngê°©emít, mö: %s", 
ªas⁄
);

1127 
	`‰ì
(
ªas⁄
);

1128 
d⁄e
;

1132 
max°r
 = 
mö°r
;

1133 i‡(
	`°rcmp
(
max°r
, "max") != 0){

1134 i‡((
cv
 = 
	`cvec_add
(
ys
->
ys_cvec
, 
cvty≥
)Ë=
NULL
){

1135 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "cvec_add");

1136 
d⁄e
;

1138 i‡(
	`cv_«me_£t
(
cv
, "ønge_max"Ë=
NULL
){

1139 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "cv_name_set");

1140 
d⁄e
;

1142 i‡(
›ti⁄s
 & 
YANG_OPTIONS_FRACTION_DIGITS
 && 
cvty≥
 =
CGV_DEC64
)

1143 
	`cv_dec64_n_£t
(
cv
, 
‰a˘i⁄_digôs
);

1144 i‡((
cvªt
 = 
	`cv_∑r£1
(
max°r
, 
cv
, &
ªas⁄
)) < 0){

1145 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "cv_parse1");

1146 
d⁄e
;

1148 i‡(
cvªt
 == 0){

1149 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "øngê°©emít, max: %s", 
ªas⁄
);

1150 
	`‰ì
(
ªas⁄
);

1151 
d⁄e
;

1154 
ªtvÆ
 = 0;

1155 
d⁄e
:

1156 i‡(
mö°r
)

1157 
	`‰ì
(
mö°r
);

1158  
ªtvÆ
;

1159 
	}
}

1165 
	$ys_p›uœã_ty≥
(
y™g_°mt
 *
ys
,

1166 *
¨g
)

1168 
ªtvÆ
 = -1;

1169 
y™g_°mt
 *
yba£
;

1171 i‡(
	`°rcmp
(
ys
->
ys_¨gumít
, "decimal64") == 0){

1172 i‡(
	`y™g_föd
((
y™g_node
*)
ys
, 
Y_FRACTION_DIGITS
, 
NULL
) == NULL){

1173 
	`˛ic⁄_îr
(
OE_YANG
, 0, "decimal64ÅypeÑequires fraction-digits sub-statement");

1174 
d⁄e
;

1178 i‡(
	`°rcmp
(
ys
->
ys_¨gumít
, "identityref") == 0){

1179 i‡((
yba£
 = 
	`y™g_föd
((
y™g_node
*)
ys
, 
Y_BASE
, 
NULL
)) == NULL){

1180 
	`˛ic⁄_îr
(
OE_YANG
, 0, "identityrefÅypeÑequires base sub-statement");

1181 
d⁄e
;

1183 i‡((
	`y™g_föd_idítôy
(
ys
, 
yba£
->
ys_¨gumít
)Ë=
NULL
){

1184 
	`˛ic⁄_îr
(
OE_YANG
, 0, "Identity %sÇot found (baseÅype of %s)",

1185 
yba£
->
ys_¨gumít
, 
ys
->ys_argument);

1186 
d⁄e
;

1189 
ªtvÆ
 = 0;

1190 
d⁄e
:

1191  
ªtvÆ
;

1192 
	}
}

1197 
	$ys_p›uœã_idítôy
(
y™g_°mt
 *
ys
,

1198 *
¨g
)

1200 
ªtvÆ
 = -1;

1201 
y™g_°mt
 *
yba£
;

1203 i‡((
yba£
 = 
	`y™g_föd
((
y™g_node
*)
ys
, 
Y_BASE
, 
NULL
)) == NULL)

1205 i‡((
	`y™g_föd_idítôy
(
ys
, 
yba£
->
ys_¨gumít
)Ë=
NULL
){

1206 
	`˛ic⁄_îr
(
OE_YANG
, 0, "Identity %sÇot found (baseÅype of %s)",

1207 
yba£
->
ys_¨gumít
, 
ys
->ys_argument);

1208 
d⁄e
;

1210 
ªtvÆ
 = 0;

1211 
d⁄e
:

1212  
ªtvÆ
;

1213 
	}
}

1223 
	$ys_p›uœã
(
y™g_°mt
 *
ys
,

1224 *
¨g
)

1226 
ªtvÆ
 = -1;

1228 
ys
->
ys_keyw‹d
){

1229 
Y_LEAF
:

1230 
Y_LEAF_LIST
:

1231 i‡(
	`ys_p›uœã_Àaf
(
ys
, 
¨g
) < 0)

1232 
d⁄e
;

1234 
Y_LIST
:

1235 i‡(
	`ys_p›uœã_li°
(
ys
, 
¨g
) < 0)

1236 
d⁄e
;

1238 
Y_RANGE
:

1239 
Y_LENGTH
:

1240 i‡(
	`ys_p›uœã_ønge
(
ys
, 
¨g
) < 0)

1241 
d⁄e
;

1243 
Y_MANDATORY
:

1244 
Y_CONFIG
:

1245 i‡(
	`ys_∑r£
(
ys
, 
CGV_BOOL
Ë=
NULL
)

1246 
d⁄e
;

1248 
Y_TYPE
:

1249 i‡(
	`ys_p›uœã_ty≥
(
ys
, 
¨g
) < 0)

1250 
d⁄e
;

1252 
Y_IDENTITY
:

1253 i‡(
	`ys_p›uœã_idítôy
(
ys
, 
¨g
) < 0)

1254 
d⁄e
;

1259 
ªtvÆ
 = 0;

1260 
d⁄e
:

1261  
ªtvÆ
;

1262 
	}
}

1270 
	$ys_groupög_ªsﬁve
(
y™g_°mt
 *
ys
,

1271 *
¥efix
,

1272 *
«me
,

1273 
y™g_°mt
 **
ygroupög0
)

1275 
ªtvÆ
 = -1;

1276 
y™g_°mt
 *
ymoduÀ
;

1277 
y™g_°mt
 *
ygroupög
 = 
NULL
;

1278 
y™g_node
 *
yn
;

1281 i‡(
¥efix
){

1282 i‡((
ymoduÀ
 = 
	`y™g_föd_moduÀ_by_¥efix
(
ys
, 
¥efix
)Ë!
NULL
)

1283 
ygroupög
 = 
	`y™g_föd
((
y™g_node
*)
ymoduÀ
, 
Y_GROUPING
, 
«me
);

1288 i‡((
yn
 = 
ys
->
ys_∑ª¡
Ë=
NULL
 || yn->
yn_keyw‹d
 =
Y_SPEC
)

1291 i‡((
ygroupög
 = 
	`y™g_föd
(
yn
, 
Y_GROUPING
, 
«me
)Ë!
NULL
)

1294 
ys
 = (
y™g_°mt
*)
yn
;

1296 *
ygroupög0
 = 
ygroupög
;

1297 
ªtvÆ
 = 0;

1299  
ªtvÆ
;

1300 
	}
}

1309 
	$y™g_augmít_node
(
y™g_°mt
 *
ys
,

1310 
y™g_•ec
 *
y•
)

1312 
ªtvÆ
 = -1;

1313 *
schema_nodeid
;

1314 
y™g_°mt
 *
yss
 = 
NULL
;

1315 
y™g_°mt
 *
yc
;

1316 
i
;

1318 
schema_nodeid
 = 
ys
->
ys_¨gumít
;

1319 
	`˛ic⁄_debug
(1, "%†%s", 
__FUNCTION__
, 
schema_nodeid
);

1322 i‡(
	`y™g_abs_schema_nodeid
(
y•
, 
schema_nodeid
, -1, &
yss
) < 0)

1323 
d⁄e
;

1324 i‡(
yss
 =
NULL
)

1325 
ok
;

1329 
i
=0; i<
ys
->
ys_Àn
; i++){

1330 i‡((
yc
 = 
	`ys_dup
(
ys
->
ys_°mt
[
i
])Ë=
NULL
)

1331 
d⁄e
;

1333 i‡(
	`yn_ö£π
((
y™g_node
*)
yss
, 
yc
) < 0)

1334 
d⁄e
;

1336 
ok
:

1337 
ªtvÆ
 = 0;

1338 
d⁄e
:

1339  
ªtvÆ
;

1340 
	}
}

1344 
	$y™g_augmít_•ec
(
y™g_•ec
 *
y•
)

1346 
ªtvÆ
 = -1;

1347 
y™g_°mt
 *
ym
;

1348 
y™g_°mt
 *
ys
;

1349 
i
;

1350 
j
;

1352 
i
 = 0;

1353 
i
<
y•
->
yp_Àn
){

1354 
ym
 = 
y•
->
yp_°mt
[
i
++];

1355 
j
 = 0;

1356 
j
<
ym
->
ys_Àn
){

1357 
ys
 = 
ym
->
ys_°mt
[
j
++];

1358 
ys
->
ys_keyw‹d
){

1359 
Y_AUGMENT
:

1360 i‡(
	`y™g_augmít_node
(
ys
, 
y•
) < 0)

1361 
d⁄e
;

1368 
ªtvÆ
 = 0;

1369 
d⁄e
:

1370  
ªtvÆ
;

1371 
	}
}

1384 
	$y™g_ex∑nd
(
y™g_node
 *
yn
)

1386 
ªtvÆ
 = -1;

1387 
y™g_°mt
 *
ys
 = 
NULL
;

1388 
y™g_°mt
 *
ygroupög
;

1389 
y™g_°mt
 *
yg
;

1390 
gÀn
;

1391 
i
;

1392 
j
;

1393 *
«me
;

1394 *
¥efix
;

1395 
size_t
 
size
;

1398 
i
 = 0;

1399 
i
<
yn
->
yn_Àn
){

1400 
ys
 = 
yn
->
yn_°mt
[
i
];

1401 
ys
->
ys_keyw‹d
){

1402 
Y_USES
:

1404 
«me
 = 
	`y¨g_id
(
ys
);

1405 
¥efix
 = 
	`y¨g_¥efix
(
ys
);

1406 i‡(
	`ys_groupög_ªsﬁve
(
ys
, 
¥efix
, 
«me
, &
ygroupög
) < 0)

1407 
d⁄e
;

1408 i‡(
¥efix
)

1409 
	`‰ì
(
¥efix
);

1410 i‡(
ygroupög
 =
NULL
){

1411 
	`˛ic⁄_log
(
LOG_NOTICE
, "%s: YangÉrror : grouping \"%s\"Çot found",

1412 
__FUNCTION__
, 
ys
->
ys_¨gumít
);

1413 
d⁄e
;

1419 i‡((
ygroupög
->
ys_Êags
 & 
YANG_FLAG_MARK
) == 0){

1420 i‡(
	`y™g_ex∑nd
((
y™g_node
*)
ygroupög
) < 0)

1421 
d⁄e
;

1422 
ygroupög
->
ys_Êags
 |
YANG_FLAG_MARK
;

1427 
gÀn
 = 
ygroupög
->
ys_Àn
;

1432 i‡(
gÀn
 != 1){

1433 
size
 = (
yn
->
yn_Àn
 - 
i
 - 1)*(
y™g_°mt
 *);

1434 
yn
->
yn_Àn
 +
gÀn
 - 1;

1435 i‡(
gÀn
 && (
yn
->
yn_°mt
 = 
	`ªÆloc
(yn->yn_°mt, (yn->
yn_Àn
)*(
y™g_°mt
 *))) == 0){

1436 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "%s:ÑóŒoc", 
__FUNCTION__
);

1440 i‡(
size
)

1441 
	`memmove
(&
yn
->
yn_°mt
[
i
+
gÀn
],

1442 &
yn
->
yn_°mt
[
i
+1],

1443 
size
);

1446 
j
=0; j<
gÀn
; j++){

1447 i‡((
yg
 = 
	`ys_dup
(
ygroupög
->
ys_°mt
[
j
])Ë=
NULL
)

1448 
d⁄e
;

1449 
yn
->
yn_°mt
[
i
+
j
] = 
yg
;

1450 
yg
->
ys_∑ª¡
 = 
yn
;

1454 
	`ys_‰ì
(
ys
);

1457 
i
++;

1462 
i
=0; i<
yn
->
yn_Àn
; i++){

1463 
ys
 = 
yn
->
yn_°mt
[
i
];

1464 i‡(
	`y™g_ex∑nd
((
y™g_node
*)
ys
) < 0)

1465 
d⁄e
;

1467 
ªtvÆ
 = 0;

1468 
d⁄e
:

1469  
ªtvÆ
;

1470 
	}
}

1490 
y™g_°mt
 *

1491 
	$y™g_∑r£_°r
(
˛ic⁄_h™dÀ
 
h
,

1492 *
°r
,

1493 c⁄° *
«me
,

1494 
y™g_•ec
 *
y•ec
)

1496 
˛ic⁄_y™g_yacc_¨g
 
yy
 = {0,};

1497 
y™g_°mt
 *
ymod
 = 
NULL
;

1499 
yy
.
yy_h™dÀ
 = 
h
;

1500 
yy
.
yy_«me
 = (*)
«me
;

1501 
yy
.
yy_löíum
 = 1;

1502 
yy
.
yy_∑r£_°rög
 = 
°r
;

1503 
yy
.
yy_°ack
 = 
NULL
;

1504 
yy
.
yy_moduÀ
 = 
NULL
;

1506 i‡(
	`y°ack_push
(&
yy
, (
y™g_node
*)
y•ec
Ë=
NULL
)

1507 
d⁄e
;

1508 i‡(
	`°æí
(
°r
)){

1509 i‡(
	`y™g_sˇn_öô
(&
yy
) < 0)

1510 
d⁄e
;

1511 i‡(
	`y™g_∑r£_öô
(&
yy
, 
y•ec
) < 0)

1512 
d⁄e
;

1513 i‡(
	`˛ix⁄_y™g_∑r£∑r£
(&
yy
) != 0) {

1514 
	`˛ic⁄_log
(
LOG_NOTICE
, "Y™gÉº‹: %†⁄Üöê%d", 
«me
, 
yy
.
yy_löíum
);

1515 i‡(
˛ic⁄_î∫o
 == 0)

1516 
	`˛ic⁄_îr
(
OE_YANG
, 0, "yangÖarserÉrror withÇoÉrror code (shouldÇot happen)");

1517 
	`y™g_∑r£_exô
(&
yy
);

1518 
	`y™g_sˇn_exô
(&
yy
);

1519 
d⁄e
;

1521 i‡(
	`y™g_∑r£_exô
(&
yy
) < 0)

1522 
d⁄e
;

1523 i‡(
	`y™g_sˇn_exô
(&
yy
) < 0)

1524 
d⁄e
;

1526 
ymod
 = 
yy
.
yy_moduÀ
;

1527 
d⁄e
:

1528 
	`y°ack_p›
(&
yy
);

1529  
ymod
;

1530 
	}
}

1550 
y™g_°mt
 *

1551 
	$y™g_∑r£_fûe
(
˛ic⁄_h™dÀ
 
h
,

1552 c⁄° *
fûíame
,

1553 
y™g_•ec
 *
y•


1556 *
buf
 = 
NULL
;

1557 
i
;

1558 
c
;

1559 
Àn
;

1560 
y™g_°mt
 *
ymod
 = 
NULL
;

1561 
FILE
 *
f
 = 
NULL
;

1562 
°©
 
°
;

1564 
	`˛ic⁄_log
(
LOG_DEBUG
, "P¨sög y™g fûe: %s", 
fûíame
);

1565 i‡(
	`°©
(
fûíame
, &
°
) < 0){

1566 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "%†nŸ found", 
fûíame
);

1567 
d⁄e
;

1569 i‡((
f
 = 
	`f›í
(
fûíame
, "r")Ë=
NULL
){

1570 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "f›í(%s)", 
fûíame
);

1571 
d⁄e
;

1574 
Àn
 = 1024;

1575 i‡((
buf
 = 
	`mÆloc
(
Àn
)Ë=
NULL
){

1576 
	`≥º‹
("pt_file malloc");

1577  
NULL
;

1579 
	`mem£t
(
buf
, 0, 
Àn
);

1581 
i
 = 0;

1583 i‡((
c
 = 
	`fgëc
(
f
)Ë=
EOF
)

1585 i‡(
Àn
==
i
){

1586 i‡((
buf
 = 
	`ªÆloc
(buf, 2*
Àn
)Ë=
NULL
){

1587 
	`Ârötf
(
°dîr
, "%s:ÑóŒoc: %s\n", 
__FUNCTION__
, 
	`°ªº‹
(
î∫o
));

1588 
d⁄e
;

1590 
	`mem£t
(
buf
+
Àn
, 0,Üen);

1591 
Àn
 *= 2;

1593 
buf
[
i
++] = ()(
c
&0xff);

1595 i‡((
ymod
 = 
	`y™g_∑r£_°r
(
h
, 
buf
, 
fûíame
, 
y•
)) < 0)

1596 
d⁄e
;

1597 
d⁄e
:

1598 i‡(
f
)

1599 
	`f˛o£
(
f
);

1600 i‡(
buf
)

1601 
	`‰ì
(
buf
);

1602  
ymod
;

1603 
	}
}

1616 
	$y™g_∑r£_föd_m©ch
(
˛ic⁄_h™dÀ
 
h
,

1617 c⁄° *
y™g_dú
,

1618 c⁄° *
moduÀ
,

1619 
cbuf
 *
fbuf
)

1621 
ªtvÆ
 = -1;

1622 
dúít
 *
dp
 = 
NULL
;

1623 
ndp
;

1624 
cbuf
 *
ªgex
 = 
NULL
;

1626 i‡((
ªgex
 = 
	`cbuf_√w
()Ë=
NULL
){

1627 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "cbuf_new");

1628 
d⁄e
;

1634 
	`˝rötf
(
ªgex
, "^%s(@[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9])?(.yang)$",

1635 
moduÀ
);

1636 i‡((
ndp
 = 
	`˛ic⁄_fûe_dúít
(
y™g_dú
,

1637 &
dp
,

1638 
	`cbuf_gë
(
ªgex
),

1639 
S_IFREG
)) < 0)

1640 
d⁄e
;

1642 i‡(
ndp
 != 0){

1643 
	`˝rötf
(
fbuf
, "%s/%s", 
y™g_dú
, 
dp
[
ndp
-1].
d_«me
);

1644 
ªtvÆ
 = 1;

1647 
ªtvÆ
 = 0;

1648 
d⁄e
:

1649 i‡(
ªgex
)

1650 
	`cbuf_‰ì
(
ªgex
);

1651 i‡(
dp
)

1652 
	`‰ì
(
dp
);

1653  
ªtvÆ
;

1654 
	}
}

1673 
y™g_°mt
 *

1674 
	$y™g_∑r£_ªcur£
(
˛ic⁄_h™dÀ
 
h
,

1675 c⁄° *
y™g_dú
,

1676 c⁄° *
moduÀ
,

1677 c⁄° *
ªvisi⁄
,

1678 
y™g_•ec
 *
y•
)

1680 
y™g_°mt
 *
yi
 = 
NULL
;

1681 
y™g_°mt
 *
ymod
 = 
NULL
;

1682 
y™g_°mt
 *
yªv
;

1683 *
mod«me
;

1684 *
subªvisi⁄
;

1685 
cbuf
 *
fbuf
 = 
NULL
;

1686 
ƒ
;

1688 i‡(
moduÀ
[0] == '/'){

1689 i‡((
ymod
 = 
	`y™g_∑r£_fûe
(
h
, 
moduÀ
, 
y•
)Ë=
NULL
)

1690 
d⁄e
;

1693 i‡((
fbuf
 = 
	`cbuf_√w
()Ë=
NULL
){

1694 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "%s: cbuf_√w", 
__FUNCTION__
);

1695 
d⁄e
;

1697 i‡(
ªvisi⁄
)

1698 
	`˝rötf
(
fbuf
, "%s/%s@%s.y™g", 
y™g_dú
, 
moduÀ
, 
ªvisi⁄
);

1701 i‡((
ƒ
 = 
	`y™g_∑r£_föd_m©ch
(
h
, 
y™g_dú
, 
moduÀ
, 
fbuf
)) < 0)

1702 
d⁄e
;

1703 i‡(
ƒ
 == 0){

1704 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "Nÿm©chög %†y™g fûe†found (ex≥˘ed moduÀÇamê‹ábsﬁuã fûíame)", 
moduÀ
);

1705 
d⁄e
;

1708 i‡((
ymod
 = 
	`y™g_∑r£_fûe
(
h
, 
	`cbuf_gë
(
fbuf
), 
y•
)Ë=
NULL
)

1709 
d⁄e
;

1713 (
yi
 = 
	`yn_óch
((
y™g_node
*)
ymod
, yi)Ë!
NULL
){

1714 i‡(
yi
->
ys_keyw‹d
 !
Y_IMPORT
)

1716 
mod«me
 = 
yi
->
ys_¨gumít
;

1717 i‡((
yªv
 = 
	`y™g_föd
((
y™g_node
*)
yi
, 
Y_REVISION_DATE
, 
NULL
)) != NULL)

1718 
subªvisi⁄
 = 
yªv
->
ys_¨gumít
;

1720 
subªvisi⁄
 = 
NULL
;

1721 i‡(
	`y™g_föd
((
y™g_node
*)
y•
, 
Y_MODULE
, 
mod«me
Ë=
NULL
)

1723 i‡(
	`y™g_∑r£_ªcur£
(
h
, 
y™g_dú
, 
mod«me
, 
subªvisi⁄
, 
y•
Ë=
NULL
){

1724 
ymod
 = 
NULL
;

1725 
d⁄e
;

1728 
d⁄e
:

1729 i‡(
fbuf
)

1730 
	`cbuf_‰ì
(
fbuf
);

1731  
ymod
;

1732 
	}
}

1735 
	$ys_schem™ode_check
(
y™g_°mt
 *
ys
,

1736 *
¨g
)

1738 
ªtvÆ
 = -1;

1739 
y™g_•ec
 *
y•ec
;

1740 
y™g_°mt
 *
yªs
;

1741 
y™g_node
 *
yp
;

1743 
yp
 = 
ys
->
ys_∑ª¡
;

1744 
ys
->
ys_keyw‹d
){

1745 
Y_AUGMENT
:

1746 i‡(
yp
->
yn_keyw‹d
 =
Y_MODULE
)

1749 
Y_REFINE
:

1750 
Y_UNIQUE
:

1751 i‡(
	`y™g_desc_schema_nodeid
(
yp
, 
ys
->
ys_¨gumít
, -1, &
yªs
) < 0)

1752 
d⁄e
;

1753 i‡(
yªs
 =
NULL
){

1754 
	`˛ic⁄_îr
(
OE_YANG
, 0, "schemanode sanity check of %d %s",

1755 
ys
->
ys_keyw‹d
,

1756 
ys
->
ys_¨gumít
);

1757 
d⁄e
;

1760 
Y_DEVIATION
:

1761 
y•ec
 = 
	`ys_•ec
(
ys
);

1762 i‡(
	`y™g_abs_schema_nodeid
(
y•ec
, 
ys
->
ys_¨gumít
, -1, &
yªs
) < 0)

1763 
d⁄e
;

1764 i‡(
yªs
 =
NULL
){

1765 
	`˛ic⁄_îr
(
OE_YANG
, 0, "schem™odêßnôy check o‡%s", 
ys
->
ys_¨gumít
);

1766 
d⁄e
;

1772 
ªtvÆ
 = 0;

1773 
d⁄e
:

1774  
ªtvÆ
;

1775 
	}
}

1797 
	$y™g_∑r£
(
˛ic⁄_h™dÀ
 
h
,

1798 c⁄° *
y™g_dú
,

1799 c⁄° *
maömoduÀ
,

1800 c⁄° *
ªvisi⁄
,

1801 
y™g_•ec
 *
y•
)

1803 
ªtvÆ
 = -1;

1804 
y™g_°mt
 *
ymod
;

1807 i‡((
ymod
 = 
	`y™g_∑r£_ªcur£
(
h
, 
y™g_dú
, 
maömoduÀ
, 
ªvisi⁄
, 
y•
)Ë=
NULL
)

1808 
d⁄e
;

1810 
	`˛ic⁄_db•ec_«me_£t
(
h
, 
ymod
->
ys_¨gumít
);

1813 i‡(
	`y™g_≠∂y
((
y™g_node
*)
y•
, -1, 
ys_p›uœã
, 
NULL
) < 0)

1814 
d⁄e
;

1819 
	`y™g_≠∂y
((
y™g_node
*)
y•
, 
Y_TYPE
, 
ys_ªsﬁve_ty≥
, 
NULL
);

1827 i‡(
	`y™g_ex∑nd
((
y™g_node
*)
y•
) < 0)

1828 
d⁄e
;

1829 
	`y™g_≠∂y
((
y™g_node
*)
ymod
, -1, 
ys_Êag_ª£t
, (*)
YANG_FLAG_MARK
);

1832 i‡(
	`y™g_augmít_•ec
(
y•
) < 0)

1833 
d⁄e
;

1836 i‡(
	`y™g_≠∂y
((
y™g_node
*)
y•
, -1, 
ys_schem™ode_check
, 
NULL
) < 0)

1837 
d⁄e
;

1839 
ªtvÆ
 = 0;

1840 
d⁄e
:

1841  
ªtvÆ
;

1842 
	}
}

1868 
	$y™g_≠∂y
(
y™g_node
 *
yn
,

1869 
rfc_6020
 
keyw‹d
,

1870 
y™g_≠∂y‚_t
 
‚
,

1871 *
¨g
)

1873 
ªtvÆ
 = -1;

1874 
y™g_°mt
 *
ys
 = 
NULL
;

1875 
i
;

1876 
ªt
;

1878 
i
=0; i<
yn
->
yn_Àn
; i++){

1879 
ys
 = 
yn
->
yn_°mt
[
i
];

1880 i‡(
keyw‹d
 =-1 || keyw‹d =
ys
->
ys_keyw‹d
){

1881 i‡((
ªt
 = 
	`‚
(
ys
, 
¨g
)) < 0)

1882 
d⁄e
;

1883 i‡(
ªt
 > 0){

1884 
ªtvÆ
 = 
ªt
;

1885 
d⁄e
;

1888 i‡((
ªt
 = 
	`y™g_≠∂y
((
y™g_node
*)
ys
, 
keyw‹d
, 
‚
, 
¨g
)) < 0)

1889 
d⁄e
;

1890 i‡(
ªt
 > 0){

1891 
ªtvÆ
 = 
ªt
;

1892 
d⁄e
;

1895 
ªtvÆ
 = 0;

1896 
d⁄e
:

1897  
ªtvÆ
;

1898 
	}
}

1911 
	$schema_nodeid_vec
(
y™g_node
 *
yn
,

1912 **
vec
,

1913 
nvec
,

1914 
rfc_6020
 
keyw‹d
,

1915 
y™g_°mt
 **
yªs
)

1917 
ªtvÆ
 = -1;

1918 *
¨g
;

1919 
y™g_node
 *
y√xt
;

1920 *
nodeid
 = 
NULL
;

1921 
i
;

1922 
y™g_°mt
 *
ys
;

1923 
m©ch
;

1925 i‡(
nvec
 <= 0)

1926 
d⁄e
;

1927 
¨g
 = 
vec
[0];

1928 
	`˛ic⁄_debug
(2, "%s: key=%sárg=%s match=%sÜen=%d",

1929 
__FUNCTION__
, 
	`y™g_key2°r
(
yn
->
yn_keyw‹d
), yn->
yn_¨gumít
,

1930 
¨g
, 
yn
->
yn_Àn
);

1931 i‡(
	`°rcmp
(
¨g
, "..") == 0)

1932 
y√xt
 = 
yn
->
yn_∑ª¡
;

1935 i‡((
nodeid
 = 
	`°rchr
(
¨g
, ':')Ë=
NULL
)

1936 
nodeid
 = 
¨g
;

1938 
nodeid
++;

1939 
m©ch
 = 0;

1940 
ys
 = 
NULL
;

1941 
i
=0; i<
yn
->
yn_Àn
; i++){

1942 
ys
 = 
yn
->
yn_°mt
[
i
];

1943 i‡(!
	`y™g_schem™ode
(
ys
))

1945 i‡(
keyw‹d
 !-1 && keyw‹d !
ys
->
ys_keyw‹d
)

1948 i‡(
ys
->
ys_keyw‹d
 =
Y_INPUT
 || ys->ys_keyw‹d =
Y_OUTPUT
){

1949 i‡(
	`°rcmp
(
nodeid
, 
	`y™g_key2°r
(
ys
->
ys_keyw‹d
)) == 0){

1950 
m©ch
++;

1954 i‡(
ys
->
ys_¨gumít
 && 
	`°rcmp
(
nodeid
, ys->ys_argument) == 0){

1955 
m©ch
++;

1959 i‡(!
m©ch
){

1960 
	`˛ic⁄_debug
(1, "%s: %†nŸ found", 
__FUNCTION__
, 
nodeid
);

1961 
ok
;

1963 
y√xt
 = (
y™g_node
*)
ys
;

1965 i‡(
nvec
 == 1){

1966 i‡(
	`y™g_schem™ode
((
y™g_°mt
*)
y√xt
))

1967 *
yªs
 = (
y™g_°mt
*)
y√xt
;

1969 
	`˛ic⁄_debug
(1, "%†nŸ schem®node", 
¨g
);

1970 
ok
;

1973 i‡(
	`schema_nodeid_vec
(
y√xt
, 
vec
+1, 
nvec
-1, 
keyw‹d
, 
yªs
) < 0)

1974 
d⁄e
;

1975 
ok
:

1976 
ªtvÆ
 = 0;

1977 
d⁄e
:

1978  
ªtvÆ
;

1979 
	}
}

1997 
	$y™g_abs_schema_nodeid
(
y™g_•ec
 *
y•ec
,

1998 *
schema_nodeid
,

1999 
rfc_6020
 
keyw‹d
,

2000 
y™g_°mt
 **
yªs
)

2002 
ªtvÆ
 = -1;

2003 **
vec
 = 
NULL
;

2004 
nvec
;

2005 
y™g_°mt
 *
ymod
;

2006 *
id
;

2007 *
¥efix
 = 
NULL
;

2008 
y™g_°mt
 *
y¥efix
;

2009 
y™g_°mt
 *
ys
;

2012 i‡(
schema_nodeid
[0] != '/'){

2013 
	`˛ic⁄_îr
(
OE_YANG
, 
EINVAL
, "absolute schemaÇodeid should start with /");

2014 
d⁄e
;

2016 i‡((
vec
 = 
	`˛ic⁄_°r£p
(
schema_nodeid
, "/", &
nvec
)Ë=
NULL
){

2017 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "%s: så£p", 
__FUNCTION__
);

2018 
d⁄e
;

2021 i‡(
nvec
 < 2){

2022 
	`˛ic⁄_îr
(
OE_YANG
, 0, "%s: NULL orÅruncatedÖath: %s",

2023 
__FUNCTION__
, 
schema_nodeid
);

2024 
d⁄e
;

2027 i‡((
id
 = 
	`°rchr
(
vec
[1], ':')Ë=
NULL
){

2028 
	`˛ic⁄_log
(
LOG_WARNING
, "%s: Absﬁuã schem®nodeid mu° havê¥efix", 
__FUNCTION__
);

2029 
ok
;

2031 i‡((
¥efix
 = 
	`°rdup
(
vec
[1])Ë=
NULL
){

2032 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "%s: sådup", 
__FUNCTION__
);

2033 
d⁄e
;

2035 
¥efix
[
id
-
vec
[1]] = '\0';

2036 
id
++;

2037 
ymod
 = 
NULL
;

2038 (
ymod
 = 
	`yn_óch
((
y™g_node
*)
y•ec
, ymod)Ë!
NULL
) {

2039 i‡((
y¥efix
 = 
	`y™g_föd
((
y™g_node
*)
ymod
, 
Y_PREFIX
, 
NULL
)) != NULL &&

2040 
	`°rcmp
(
y¥efix
->
ys_¨gumít
, 
¥efix
) == 0){

2044 i‡(
ymod
 =
NULL
){

2046 i‡((
ys
 = 
	`y™g_föd_t›node
(
y•ec
, 
id
, 
YC_SCHEMANODE
)Ë=
NULL
){

2047 
	`˛ic⁄_îr
(
OE_YANG
, 0, "ModuÀ wôh id:%s:%†nŸ found", 
¥efix
,
id
);

2048 
d⁄e
;

2050 i‡((
ymod
 = 
	`ys_moduÀ
(
ys
)Ë=
NULL
){

2051 
	`˛ic⁄_îr
(
OE_YANG
, 0, "ModuÀ wôh id:%s:%†nŸ found2", 
¥efix
,
id
);

2052 
d⁄e
;

2055 i‡(
	`schema_nodeid_vec
((
y™g_node
*)
ymod
, 
vec
+1, 
nvec
-1, 
keyw‹d
, 
yªs
) < 0)

2056 
d⁄e
;

2057 
ok
:

2058 
ªtvÆ
 = 0;

2059 
d⁄e
:

2060 i‡(
vec
)

2061 
	`‰ì
(
vec
);

2062 i‡(
¥efix
)

2063 
	`‰ì
(
¥efix
);

2064  
ªtvÆ
;

2065 
	}
}

2078 
	$y™g_desc_schema_nodeid
(
y™g_node
 *
yn
,

2079 *
schema_nodeid
,

2080 
rfc_6020
 
keyw‹d
,

2081 
y™g_°mt
 **
yªs
)

2083 
ªtvÆ
 = -1;

2084 **
vec
 = 
NULL
;

2085 
nvec
;

2087 i‡(
	`°æí
(
schema_nodeid
) == 0)

2088 
d⁄e
;

2090 i‡(
schema_nodeid
[0] == '/'){

2091 
	`˛ic⁄_îr
(
OE_YANG
, 
EINVAL
, "descendant schemaÇodeid shouldÇot start with /");

2092 
d⁄e
;

2094 i‡((
vec
 = 
	`˛ic⁄_°r£p
(
schema_nodeid
, "/", &
nvec
)Ë=
NULL
)

2095 
d⁄e
;

2096 i‡(
	`schema_nodeid_vec
(
yn
, 
vec
, 
nvec
, 
keyw‹d
, 
yªs
) < 0)

2097 
d⁄e
;

2098 
ªtvÆ
 = 0;

2099 
d⁄e
:

2100 i‡(
vec
)

2101 
	`‰ì
(
vec
);

2102  
ªtvÆ
;

2103 
	}
}

2111 
cg_v¨
 *

2112 
	$ys_∑r£
(
y™g_°mt
 *
ys
,

2113 
cv_ty≥
 
cvty≥
)

2115 
cvªt
;

2116 *
ªas⁄
 = 
NULL
;

2118 
	`as£π
(
ys
->
ys_cv
 =
NULL
);

2119 i‡((
ys
->
ys_cv
 = 
	`cv_√w
(
cvty≥
)Ë=
NULL
){

2120 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "%s: cv_√w", 
__FUNCTION__
);

2121 
d⁄e
;

2123 i‡((
cvªt
 = 
	`cv_∑r£1
(
ys
->
ys_¨gumít
, ys->
ys_cv
, &
ªas⁄
)) < 0){

2124 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "parsing cv");

2125 
ys
->
ys_cv
 = 
NULL
;

2126 
d⁄e
;

2128 i‡(
cvªt
 == 0){

2129 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "P¨sög CV: %s", 
ªas⁄
);

2130 
ys
->
ys_cv
 = 
NULL
;

2131 
d⁄e
;

2134 
d⁄e
:

2135 i‡(
ªas⁄
)

2136 
	`‰ì
(
ªas⁄
);

2137  
ys
->
ys_cv
;

2138 
	}
}

2154 
	$ys_∑r£_sub
(
y™g_°mt
 *
ys
,

2155 *
exåa
)

2157 
ªtvÆ
 = -1;

2158 
cvªt
;

2159 *
ªas⁄
 = 
NULL
;

2160 
y™g_°mt
 *
ymod
;

2161 
uöt8_t
 
fd
;

2162 *
¥efix
 = 
NULL
;

2163 *
«me
;

2165 
ys
->
ys_keyw‹d
){

2166 
Y_FRACTION_DIGITS
:

2167 i‡(
	`ys_∑r£
(
ys
, 
CGV_UINT8
Ë=
NULL
)

2168 
d⁄e
;

2169 
fd
 = 
	`cv_uöt8_gë
(
ys
->
ys_cv
);

2170 i‡(
fd
 < 1 || fd > 18){

2171 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "%u: Ouào‡ønge, should bê[1:18]", 
fd
);

2172 
d⁄e
;

2175 
Y_UNKNOWN
:

2176 i‡(
exåa
 =
NULL
)

2180 
¥efix
 = 
	`y¨g_¥efix
(
ys
);

2181 
«me
 = 
	`y¨g_id
(
ys
);

2182 i‡((
ymod
 = 
	`y™g_föd_moduÀ_by_¥efix
(
ys
, 
¥efix
)Ë=
NULL
)

2183 
ok
;

2184 i‡(
	`y™g_föd
((
y™g_node
*)
ymod
, 
Y_EXTENSION
, 
«me
Ë=
NULL
){

2185 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "Exãnsi⁄ %s:%†nŸ found", 
¥efix
, 
«me
);

2186 
d⁄e
;

2188 i‡((
ys
->
ys_cv
 = 
	`cv_√w
(
CGV_STRING
)Ë=
NULL
){

2189 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "%s: cv_√w", 
__FUNCTION__
);

2190 
d⁄e
;

2192 i‡((
cvªt
 = 
	`cv_∑r£1
(
exåa
, 
ys
->
ys_cv
, &
ªas⁄
)) < 0){

2193 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "parsing cv");

2194 
d⁄e
;

2196 i‡(
cvªt
 == 0){

2197 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "P¨sög CV: %s", 
ªas⁄
);

2198 
d⁄e
;

2200 
	`‰ì
(
exåa
);

2205 
ok
:

2206 
ªtvÆ
 = 0;

2207 
d⁄e
:

2208 i‡(
¥efix
)

2209 
	`‰ì
(
¥efix
);

2210  
ªtvÆ
;

2211 
	}
}

2219 
	$y™g_m™d©‹y
(
y™g_°mt
 *
ys
)

2221 
y™g_°mt
 *
ym
;

2223 i‡(
ys
->
ys_keyw‹d
 !
Y_LEAF
)

2225 i‡((
ym
 = 
	`y™g_föd
((
y™g_node
*)
ys
, 
Y_MANDATORY
, 
NULL
)) != NULL){

2226 i‡(
ym
->
ys_cv
 =
NULL
)

2228  
	`cv_boﬁ_gë
(
ym
->
ys_cv
);

2231 
	}
}

2241 
	$y™g_c⁄fig
(
y™g_°mt
 *
ys
)

2243 
y™g_°mt
 *
ym
;

2245 i‡((
ym
 = 
	`y™g_föd
((
y™g_node
*)
ys
, 
Y_CONFIG
, 
NULL
)) != NULL){

2246 i‡(
ym
->
ys_cv
 =
NULL
)

2248  
	`cv_boﬁ_gë
(
ym
->
ys_cv
);

2251 
	}
}

2254 
y™g_•ec
 *

2255 
	$y™g_•ec_√tc⁄f
(
˛ic⁄_h™dÀ
 
h
)

2257 
y™g_•ec
 *
y•ec
 = 
NULL
;

2259 i‡((
y•ec
 = 
	`y•ec_√w
()Ë=
NULL
)

2260 
d⁄e
;

2261 i‡(
	`y™g_∑r£
(
h
, 
CLIXON_DATADIR
, "õtf-√tc⁄f", 
NULL
, 
y•ec
) < 0){

2262 
	`y•ec_‰ì
(
y•ec
); y•e¯
NULL
;

2263 
d⁄e
;

2265 
	`˛ic⁄_√tc⁄f_y™g_£t
(
h
, 
y•ec
);

2266 
d⁄e
:

2267  
y•ec
;

2268 
	}
}

2275 
y™g_•ec
*

2276 
	$y™g_•ec_maö
(
˛ic⁄_h™dÀ
 
h
)

2278 
y™g_•ec
 *
y•ec
 = 
NULL
;

2279 *
y™g_dú
;

2280 *
y™g_moduÀ
;

2281 *
y™g_ªvisi⁄
;

2283 i‡((
y™g_dú
 = 
	`˛ic⁄_y™g_dú
(
h
)Ë=
NULL
){

2284 
	`˛ic⁄_îr
(
OE_FATAL
, 0, "CLICON_YANG_DIR optionÇot set");

2285 
d⁄e
;

2288 i‡((
y™g_moduÀ
 = 
	`˛ic⁄_y™g_moduÀ_maö
(
h
)Ë=
NULL
){

2289 
	`˛ic⁄_îr
(
OE_FATAL
, 0, "CLICON_YANG_MODULE_MAIN optionÇot set");

2290 
d⁄e
;

2292 
y™g_ªvisi⁄
 = 
	`˛ic⁄_y™g_moduÀ_ªvisi⁄
(
h
);

2293 i‡((
y•ec
 = 
	`y•ec_√w
()Ë=
NULL
)

2294 
d⁄e
;

2295 i‡(
	`y™g_∑r£
(
h
, 
y™g_dú
, 
y™g_moduÀ
, 
y™g_ªvisi⁄
, 
y•ec
) < 0){

2296 
	`y•ec_‰ì
(
y•ec
); y•e¯
NULL
;

2297 
d⁄e
;

2299 
	`˛ic⁄_db•ec_y™g_£t
(
h
, 
y•ec
);

2300 
d⁄e
:

2301  
y•ec
;

2302 
	}
}

2321 
cvec
 *

2322 
	$y™g_¨g2cvec
(
y™g_°mt
 *
ys
,

2323 *
dñim
)

2325 **
vec
 = 
NULL
;

2326 
i
;

2327 
nvec
;

2328 
cvec
 *
cvv
 = 
NULL
;

2329 
cg_v¨
 *
cv
;

2331 i‡((
vec
 = 
	`˛ic⁄_°r£p
(
ys
->
ys_¨gumít
, " ", &
nvec
)Ë=
NULL
)

2332 
d⁄e
;

2333 i‡((
cvv
 = 
	`cvec_√w
(
nvec
)Ë=
NULL
){

2334 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "cvec_new");

2335 
d⁄e
;

2337 
i
 = 0; i < 
nvec
; i++) {

2338 
cv
 = 
	`cvec_i
(
cvv
, 
i
);

2339 
	`cv_ty≥_£t
(
cv
, 
CGV_STRING
);

2340 i‡((
	`cv_°rög_£t
(
cv
, 
vec
[
i
])Ë=
NULL
){

2341 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "cv_string_set");

2342 
cvv
 = 
NULL
;

2343 
d⁄e
;

2346 
d⁄e
:

2347 i‡(
vec
)

2348 
	`‰ì
(
vec
);

2349  
cvv
;

2350 
	}
}

2362 
	$y™g_key_m©ch
(
y™g_node
 *
yn
,

2363 *
«me
)

2365 
ªtvÆ
 = -1;

2366 
y™g_°mt
 *
ys
 = 
NULL
;

2367 
i
;

2368 
cvec
 *
cvv
 = 
NULL
;

2369 
cg_v¨
 *
cv
;

2371 
i
=0; i<
yn
->
yn_Àn
; i++){

2372 
ys
 = 
yn
->
yn_°mt
[
i
];

2373 i‡(
ys
->
ys_keyw‹d
 =
Y_KEY
){

2374 i‡((
cvv
 = 
	`y™g_¨g2cvec
(
ys
, " ")Ë=
NULL
)

2375 
d⁄e
;

2376 
cv
 = 
NULL
;

2377 (
cv
 = 
	`cvec_óch
(
cvv
, cv)Ë!
NULL
) {

2378 i‡(
	`°rcmp
(
«me
, 
	`cv_°rög_gë
(
cv
)) == 0){

2379 
ªtvÆ
 = 1;

2380 
d⁄e
;

2383 
	`cvec_‰ì
(
cvv
);

2384 
cvv
 = 
NULL
;

2387 
ªtvÆ
 = 0;

2388 
d⁄e
:

2389 i‡(
cvv
)

2390 
	`cvec_‰ì
(
cvv
);

2391  
ªtvÆ
;

2392 
	}
}

	@clixon-master/lib/src/clixon_yang_parse.h

41 #i‚de‡
_CLIXON_YANG_PARSE_H_


42 
	#_CLIXON_YANG_PARSE_H_


	)

48 
	sys_°ack
{

49 
ys_°ack
 *
	mys_√xt
;

50 
y™g_node
 *
	mys_node
;

53 
	s˛ic⁄_y™g_yacc_¨g
{

54 
˛ic⁄_h™dÀ
 
	myy_h™dÀ
;

55 *
	myy_«me
;

56 
	myy_löíum
;

57 *
	myy_∑r£_°rög
;

58 *
	myy_Àxbuf
;

59 
ys_°ack
 *
	myy_°ack
;

60 
	myy_Àx_°©e
;

61 
	myy_Àx_°rög_°©e
;

62 
y™g_°mt
 *
	myy_moduÀ
;

70 
	sy™g_u£rd©a
{

71 *
	mdu_ödexv¨
;

74 *
	mdu_y™g
;

76 
	mdu_›ti⁄Æ
;

77 
cg_v¨
 *
	mdu_deÁu…
;

78 
	mdu_ve˘‹
;

84 *
˛ix⁄_y™g_∑r£ãxt
;

89 
y™g_sˇn_öô
(
˛ic⁄_y™g_yacc_¨g
 *
ya
);

90 
y™g_sˇn_exô
(
˛ic⁄_y™g_yacc_¨g
 *
ya
);

92 
y™g_∑r£_öô
(
˛ic⁄_y™g_yacc_¨g
 *
ya
, 
y™g_•ec
 *
y•
);

93 
y™g_∑r£_exô
(
˛ic⁄_y™g_yacc_¨g
 *
ya
);

95 
˛ix⁄_y™g_∑r£Àx
(*
_ya
);

96 
˛ix⁄_y™g_∑r£∑r£
(*);

97 
˛ix⁄_y™g_∑r£îr‹
(*
_ya
, *);

99 
y°ack_p›
(
˛ic⁄_y™g_yacc_¨g
 *
ya
);

100 
ys_°ack
 *
y°ack_push
(
˛ic⁄_y™g_yacc_¨g
 *
ya
, 
y™g_node
 *
yn
);

	@clixon-master/lib/src/clixon_yang_parse.tab.c

44 
	#YYBISON
 1

	)

47 
	#YYBISON_VERSION
 "3.0.4"

	)

50 
	#YYSKELETON_NAME
 "yacc.c"

	)

53 
	#YYPURE
 0

	)

56 
	#YYPUSH
 0

	)

59 
	#YYPULL
 1

	)

63 
	#yy∑r£
 
˛ix⁄_y™g_∑r£∑r£


	)

64 
	#yyÀx
 
˛ix⁄_y™g_∑r£Àx


	)

65 
	#yyîr‹
 
˛ix⁄_y™g_∑r£îr‹


	)

66 
	#yydebug
 
˛ix⁄_y™g_∑r£debug


	)

67 
	#yy√ºs
 
˛ix⁄_y™g_∑r£√ºs


	)

69 
	#yylvÆ
 
˛ix⁄_y™g_∑r£lvÆ


	)

70 
	#yych¨
 
˛ix⁄_y™g_∑r£ch¨


	)

76 #i‚de‡
YY_NULLPTR


77 #i‡
deföed
 
__˝lu•lus
 && 201103L <= __cplusplus

78 
	#YY_NULLPTR
 
nuŒ±r


	)

80 
	#YY_NULLPTR
 0

	)

85 #ifde‡
YYERROR_VERBOSE


86 #unde‡
YYERROR_VERBOSE


87 
	#YYERROR_VERBOSE
 1

	)

89 
	#YYERROR_VERBOSE
 0

	)

94 #i‚de‡
YY_CLIXON_YANG_PARSE_Y_TAB_H_INCLUDED


95 
	#YY_CLIXON_YANG_PARSE_Y_TAB_H_INCLUDED


	)

97 #i‚de‡
YYDEBUG


98 
	#YYDEBUG
 0

	)

100 #i‡
YYDEBUG


101 
˛ix⁄_y™g_∑r£debug
;

105 #i‚de‡
YYTOKENTYPE


106 
	#YYTOKENTYPE


	)

107 
	eyytokíty≥


109 
	mMY_EOF
 = 258,

110 
	mDQ
 = 259,

111 
	mCHAR
 = 260,

112 
	mK_ANYXML
 = 261,

113 
	mK_ARGUMENT
 = 262,

114 
	mK_AUGMENT
 = 263,

115 
	mK_BASE
 = 264,

116 
	mK_BELONGS_TO
 = 265,

117 
	mK_BIT
 = 266,

118 
	mK_CASE
 = 267,

119 
	mK_CHOICE
 = 268,

120 
	mK_CONFIG
 = 269,

121 
	mK_CONTACT
 = 270,

122 
	mK_CONTAINER
 = 271,

123 
	mK_DEFAULT
 = 272,

124 
	mK_DESCRIPTION
 = 273,

125 
	mK_DEVIATE
 = 274,

126 
	mK_DEVIATION
 = 275,

127 
	mK_ENUM
 = 276,

128 
	mK_ERROR_APP_TAG
 = 277,

129 
	mK_ERROR_MESSAGE
 = 278,

130 
	mK_EXTENSION
 = 279,

131 
	mK_FEATURE
 = 280,

132 
	mK_FRACTION_DIGITS
 = 281,

133 
	mK_GROUPING
 = 282,

134 
	mK_IDENTITY
 = 283,

135 
	mK_IF_FEATURE
 = 284,

136 
	mK_IMPORT
 = 285,

137 
	mK_INCLUDE
 = 286,

138 
	mK_INPUT
 = 287,

139 
	mK_KEY
 = 288,

140 
	mK_LEAF
 = 289,

141 
	mK_LEAF_LIST
 = 290,

142 
	mK_LENGTH
 = 291,

143 
	mK_LIST
 = 292,

144 
	mK_MANDATORY
 = 293,

145 
	mK_MAX_ELEMENTS
 = 294,

146 
	mK_MIN_ELEMENTS
 = 295,

147 
	mK_MODULE
 = 296,

148 
	mK_MUST
 = 297,

149 
	mK_NAMESPACE
 = 298,

150 
	mK_NOTIFICATION
 = 299,

151 
	mK_ORDERED_BY
 = 300,

152 
	mK_ORGANIZATION
 = 301,

153 
	mK_OUTPUT
 = 302,

154 
	mK_PATH
 = 303,

155 
	mK_PATTERN
 = 304,

156 
	mK_POSITION
 = 305,

157 
	mK_PREFIX
 = 306,

158 
	mK_PRESENCE
 = 307,

159 
	mK_RANGE
 = 308,

160 
	mK_REFERENCE
 = 309,

161 
	mK_REFINE
 = 310,

162 
	mK_REQUIRE_INSTANCE
 = 311,

163 
	mK_REVISION
 = 312,

164 
	mK_REVISION_DATE
 = 313,

165 
	mK_RPC
 = 314,

166 
	mK_STATUS
 = 315,

167 
	mK_SUBMODULE
 = 316,

168 
	mK_TYPE
 = 317,

169 
	mK_TYPEDEF
 = 318,

170 
	mK_UNIQUE
 = 319,

171 
	mK_UNITS
 = 320,

172 
	mK_USES
 = 321,

173 
	mK_VALUE
 = 322,

174 
	mK_WHEN
 = 323,

175 
	mK_YANG_VERSION
 = 324,

176 
	mK_YIN_ELEMENT
 = 325

180 
	#MY_EOF
 258

	)

181 
	#DQ
 259

	)

182 
	#CHAR
 260

	)

183 
	#K_ANYXML
 261

	)

184 
	#K_ARGUMENT
 262

	)

185 
	#K_AUGMENT
 263

	)

186 
	#K_BASE
 264

	)

187 
	#K_BELONGS_TO
 265

	)

188 
	#K_BIT
 266

	)

189 
	#K_CASE
 267

	)

190 
	#K_CHOICE
 268

	)

191 
	#K_CONFIG
 269

	)

192 
	#K_CONTACT
 270

	)

193 
	#K_CONTAINER
 271

	)

194 
	#K_DEFAULT
 272

	)

195 
	#K_DESCRIPTION
 273

	)

196 
	#K_DEVIATE
 274

	)

197 
	#K_DEVIATION
 275

	)

198 
	#K_ENUM
 276

	)

199 
	#K_ERROR_APP_TAG
 277

	)

200 
	#K_ERROR_MESSAGE
 278

	)

201 
	#K_EXTENSION
 279

	)

202 
	#K_FEATURE
 280

	)

203 
	#K_FRACTION_DIGITS
 281

	)

204 
	#K_GROUPING
 282

	)

205 
	#K_IDENTITY
 283

	)

206 
	#K_IF_FEATURE
 284

	)

207 
	#K_IMPORT
 285

	)

208 
	#K_INCLUDE
 286

	)

209 
	#K_INPUT
 287

	)

210 
	#K_KEY
 288

	)

211 
	#K_LEAF
 289

	)

212 
	#K_LEAF_LIST
 290

	)

213 
	#K_LENGTH
 291

	)

214 
	#K_LIST
 292

	)

215 
	#K_MANDATORY
 293

	)

216 
	#K_MAX_ELEMENTS
 294

	)

217 
	#K_MIN_ELEMENTS
 295

	)

218 
	#K_MODULE
 296

	)

219 
	#K_MUST
 297

	)

220 
	#K_NAMESPACE
 298

	)

221 
	#K_NOTIFICATION
 299

	)

222 
	#K_ORDERED_BY
 300

	)

223 
	#K_ORGANIZATION
 301

	)

224 
	#K_OUTPUT
 302

	)

225 
	#K_PATH
 303

	)

226 
	#K_PATTERN
 304

	)

227 
	#K_POSITION
 305

	)

228 
	#K_PREFIX
 306

	)

229 
	#K_PRESENCE
 307

	)

230 
	#K_RANGE
 308

	)

231 
	#K_REFERENCE
 309

	)

232 
	#K_REFINE
 310

	)

233 
	#K_REQUIRE_INSTANCE
 311

	)

234 
	#K_REVISION
 312

	)

235 
	#K_REVISION_DATE
 313

	)

236 
	#K_RPC
 314

	)

237 
	#K_STATUS
 315

	)

238 
	#K_SUBMODULE
 316

	)

239 
	#K_TYPE
 317

	)

240 
	#K_TYPEDEF
 318

	)

241 
	#K_UNIQUE
 319

	)

242 
	#K_UNITS
 320

	)

243 
	#K_USES
 321

	)

244 
	#K_VALUE
 322

	)

245 
	#K_WHEN
 323

	)

246 
	#K_YANG_VERSION
 324

	)

247 
	#K_YIN_ELEMENT
 325

	)

250 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


252 
	uYYSTYPE


256 
	mötvÆ
;

257 *
	m°rög
;

262 
YYSTYPE
 
	tYYSTYPE
;

263 
	#YYSTYPE_IS_TRIVIAL
 1

	)

264 
	#YYSTYPE_IS_DECLARED
 1

	)

268 
YYSTYPE
 
˛ix⁄_y™g_∑r£lvÆ
;

270 
˛ix⁄_y™g_∑r£∑r£
 (*
_yy
);

280 
	#_YY
 ((
˛ic⁄_y™g_yacc_¨g
 *)
_yy
)

	)

282 
	#_YYERROR
(
msg
Ë{
	`˛ic⁄_debug
(2, "YYERROR %†'%s' %d", (msg), 
˛ix⁄_y™g_∑r£ãxt
, 
_YY
->
yy_löíum
); 
YYERROR
;}

	)

285 
	#YY_
(
msgid
Ë
	)
msgid

287 
	~"˛ix⁄_c⁄fig.h
"

289 
	~<°dio.h
>

290 
	~<°rög.h
>

291 
	~<°döt.h
>

292 
	~<°dlib.h
>

293 
	~<î∫o.h
>

294 
	~<as£π.h
>

295 
	~<˘y≥.h
>

296 
	~<sys/ty≥s.h
>

297 
	~<sys/sockë.h
>

298 
	~<√töë/ö.h
>

299 
	~<√t/if.h
>

301 
	~<˛igí/˛igí.h
>

303 
	~"˛ix⁄_queue.h
"

304 
	~"˛ix⁄_hash.h
"

305 
	~"˛ix⁄_h™dÀ.h
"

306 
	~"˛ix⁄_îr.h
"

307 
	~"˛ix⁄_log.h
"

308 
	~"˛ix⁄_y™g.h
"

309 
	~"˛ix⁄_y™g_∑r£.h
"

311 
˛ix⁄_y™g_∑r£gë_löío
 ();

314 
	$˛ic⁄_y™g_debug
(
d
)

316 
debug
 = 
d
;

318 
	}
}

325 
	$˛ix⁄_y™g_∑r£îr‹
(*
_yy
,

326 *
s
)

328 
	`˛ic⁄_îr
(
OE_YANG
, 0, "%s onÜine %d: %sát or before: '%s'",

329 
_YY
->
yy_«me
,

330 
_YY
->
yy_löíum
 ,

331 
s
,

332 
˛ix⁄_y™g_∑r£ãxt
);

334 
	}
}

337 
	$y™g_∑r£_öô
(
˛ic⁄_y™g_yacc_¨g
 *
yy
,

338 
y™g_•ec
 *
y•
)

341 
	}
}

345 
	$y™g_∑r£_exô
(
˛ic⁄_y™g_yacc_¨g
 *
yy
)

348 
	}
}

351 
	$y°ack_p›
(
˛ic⁄_y™g_yacc_¨g
 *
yy
)

353 
ys_°ack
 *
y°ack
;

355 
	`as£π
(
y°ack
 = 
yy
->
yy_°ack
);

356 
yy
->
yy_°ack
 = 
y°ack
->
ys_√xt
;

357 
	`‰ì
(
y°ack
);

359 
	}
}

361 
ys_°ack
 *

362 
	$y°ack_push
(
˛ic⁄_y™g_yacc_¨g
 *
yy
,

363 
y™g_node
 *
yn
)

365 
ys_°ack
 *
y°ack
;

367 i‡((
y°ack
 = 
	`mÆloc
((*y°ack))Ë=
NULL
) {

368 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "malloc");

369  
NULL
;

371 
	`mem£t
(
y°ack
, 0, (*ystack));

372 
y°ack
->
ys_node
 = 
yn
;

373 
y°ack
->
ys_√xt
 = 
yy
->
yy_°ack
;

374 
yy
->
yy_°ack
 = 
y°ack
;

375  
y°ack
;

376 
	}
}

387 
y™g_°mt
 *

388 
	$y•_add
(
˛ic⁄_y™g_yacc_¨g
 *
yy
,

389 
rfc_6020
 
keyw‹d
,

390 *
¨gumít
,

391 *
exåa
)

393 
ys_°ack
 *
y°ack
 = 
yy
->
yy_°ack
;

394 
y™g_°mt
 *
ys
 = 
NULL
;

395 
y™g_node
 *
yn
;

397 
y°ack
 = 
yy
->
yy_°ack
;

398 i‡(
y°ack
 =
NULL
){

399 
	`˛ic⁄_îr
(
OE_YANG
, 
î∫o
, "No stack");

400 
îr
;

402 
yn
 = 
y°ack
->
ys_node
;

403 i‡((
ys
 = 
	`ys_√w
(
keyw‹d
)Ë=
NULL
)

404 
îr
;

406 
ys
->
ys_¨gumít
 = 
¨gumít
;

407 i‡(
	`yn_ö£π
(
yn
, 
ys
) < 0)

408 
îr
;

409 i‡(
	`ys_∑r£_sub
(
ys
, 
exåa
) < 0)

410 
îr2
;

412  
ys
;

413 
îr
:

414 i‡(
ys
)

415 
	`ys_‰ì
(
ys
);

416 
îr2
:

417  
NULL
;

418 
	}
}

421 
y™g_°mt
 *

422 
	$y•_add_push
(
˛ic⁄_y™g_yacc_¨g
 *
yy
,

423 
rfc_6020
 
keyw‹d
,

424 *
¨gumít
)

426 
y™g_°mt
 *
ys
;

428 i‡((
ys
 = 
	`y•_add
(
yy
, 
keyw‹d
, 
¨gumít
, 
NULL
)) == NULL)

429  
NULL
;

430 i‡(
	`y°ack_push
(
yy
, (
y™g_node
*)
ys
Ë=
NULL
)

431  
NULL
;

432  
ys
;

433 
	}
}

438 
	$¥efix_id_joö
(*
¥efix
,

439 *
id
)

441 *
°r
;

442 
Àn
;

444 i‡(
¥efix
){

445 
Àn
 = 
	`°æí
(
¥efix
Ë+ såÀn(
id
) + 2;

446 i‡((
°r
 = 
	`mÆloc
(
Àn
)Ë=
NULL
){

447 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "malloc");

448  
NULL
;

450 
	`¢¥ötf
(
°r
, 
Àn
, "%s:%s", 
¥efix
, 
id
);

451 
	`‰ì
(
¥efix
);

452 
	`‰ì
(
id
);

455 
°r
 = 
id
;

456  
°r
;

457 
	}
}

467 #ifde‡
YYTYPE_UINT8


468 
YYTYPE_UINT8
 
	tyyty≥_uöt8
;

470 
	tyyty≥_uöt8
;

473 #ifde‡
YYTYPE_INT8


474 
YYTYPE_INT8
 
	tyyty≥_öt8
;

476 sig√d 
	tyyty≥_öt8
;

479 #ifde‡
YYTYPE_UINT16


480 
YYTYPE_UINT16
 
	tyyty≥_uöt16
;

482 
	tyyty≥_uöt16
;

485 #ifde‡
YYTYPE_INT16


486 
YYTYPE_INT16
 
	tyyty≥_öt16
;

488 
	tyyty≥_öt16
;

491 #i‚de‡
YYSIZE_T


492 #ifde‡
__SIZE_TYPE__


493 
	#YYSIZE_T
 
__SIZE_TYPE__


	)

494 #ñi‡
deföed
 
size_t


495 
	#YYSIZE_T
 
size_t


	)

496 #ñi‡! 
deföed
 
YYSIZE_T


497 
	~<°ddef.h
>

498 
	#YYSIZE_T
 
size_t


	)

500 
	#YYSIZE_T
 

	)

504 
	#YYSIZE_MAXIMUM
 ((
YYSIZE_T
Ë-1)

	)

506 #i‚de‡
YY_


507 #i‡
deföed
 
YYENABLE_NLS
 && YYENABLE_NLS

508 #i‡
ENABLE_NLS


509 
	~<liböé.h
>

510 
	#YY_
(
Msgid
Ë
	`dgëãxt
 ("bis⁄-ru¡ime", Msgid)

	)

513 #i‚de‡
YY_


514 
	#YY_
(
Msgid
Ë
	)
Msgid

518 #i‚de‡
YY_ATTRIBUTE


519 #i‡(
deföed
 
__GNUC__
 \

520 && (2 < 
	g__GNUC__
 || (__GNUC__ =2 && 96 <
__GNUC_MINOR__
))) \

521 || 
deföed
 
__SUNPRO_C
 && 0x5110 <= __SUNPRO_C

522 
	#YY_ATTRIBUTE
(
S≥c
Ë
	`__©åibuã__
(S≥c)

	)

524 
	#YY_ATTRIBUTE
(
S≥c
Ë

	)

528 #i‚de‡
YY_ATTRIBUTE_PURE


529 
	#YY_ATTRIBUTE_PURE
 
	`YY_ATTRIBUTE
 ((
__puª__
))

	)

532 #i‚de‡
YY_ATTRIBUTE_UNUSED


533 
	#YY_ATTRIBUTE_UNUSED
 
	`YY_ATTRIBUTE
 ((
__unu£d__
))

	)

536 #i‡!
deföed
 
_N‹ëu∫
 \

537 && (!
deföed
 
__STDC_VERSION__
 || __STDC_VERSION__ < 201112)

538 #i‡
deföed
 
_MSC_VER
 && 1200 <= _MSC_VER

539 
	#_N‹ëu∫
 
	`__de˛•ec
 (
n‹ëu∫
)

	)

541 
	#_N‹ëu∫
 
	`YY_ATTRIBUTE
 ((
__n‹ëu∫__
))

	)

546 #i‡! 
deföed
 
löt
 || deföed 
__GNUC__


547 
	#YYUSE
(
E
Ë((Ë(E))

	)

549 
	#YYUSE
(
E
Ë

	)

552 #i‡
deföed
 
__GNUC__
 && 407 <__GNUC__ * 100 + 
__GNUC_MINOR__


554 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
 \

555 
	`_Pøgma
 ("GCC diagnosticÖush") \

556 
	`_Pøgma
 ("GCC diagnostic ignored \"-Wuninitialized\"")\

557 
	`_Pøgma
 ("GCC dügno°i¯ign‹ed \"-Wmaybe-unöôülized\"")

	)

558 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END
 \

559 
	`_Pøgma
 ("GCC dügno°i¯p›")

	)

561 
	#YY_INITIAL_VALUE
(
VÆue
Ë
	)
Value

563 #i‚de‡
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


564 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


	)

565 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END


	)

567 #i‚de‡
YY_INITIAL_VALUE


568 
	#YY_INITIAL_VALUE
(
VÆue
Ë

	)

572 #i‡! 
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


576 #ifde‡
YYSTACK_USE_ALLOCA


577 #i‡
YYSTACK_USE_ALLOCA


578 #ifde‡
__GNUC__


579 
	#YYSTACK_ALLOC
 
__buûtö_Æloˇ


	)

580 #ñi‡
deföed
 
__BUILTIN_VA_ARG_INCR


581 
	~<Æloˇ.h
>

582 #ñi‡
deföed
 
_AIX


583 
	#YYSTACK_ALLOC
 
__Æloˇ


	)

584 #ñi‡
deföed
 
_MSC_VER


585 
	~<mÆloc.h
>

586 
	#Æloˇ
 
_Æloˇ


	)

588 
	#YYSTACK_ALLOC
 
Æloˇ


	)

589 #i‡! 
deföed
 
_ALLOCA_H
 && ! deföed 
EXIT_SUCCESS


590 
	~<°dlib.h
>

592 #i‚de‡
EXIT_SUCCESS


593 
	#EXIT_SUCCESS
 0

	)

600 #ifde‡
YYSTACK_ALLOC


602 
	#YYSTACK_FREE
(
På
Ëdÿ{ ; } 0)

	)

603 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


608 
	#YYSTACK_ALLOC_MAXIMUM
 4032

	)

611 
	#YYSTACK_ALLOC
 
YYMALLOC


	)

612 
	#YYSTACK_FREE
 
YYFREE


	)

613 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


614 
	#YYSTACK_ALLOC_MAXIMUM
 
YYSIZE_MAXIMUM


	)

616 #i‡(
deföed
 
__˝lu•lus
 && ! deföed 
EXIT_SUCCESS
 \

617 && ! ((
deföed
 
	gYYMALLOC
 || deföed 
	gmÆloc
) \

618 && (
deföed
 
	gYYFREE
 || deföed 
	g‰ì
)))

619 
	~<°dlib.h
>

620 #i‚de‡
EXIT_SUCCESS


621 
	#EXIT_SUCCESS
 0

	)

624 #i‚de‡
YYMALLOC


625 
	#YYMALLOC
 
mÆloc


	)

626 #i‡! 
deföed
 
mÆloc
 && ! deföed 
EXIT_SUCCESS


627 *
mÆloc
 (
YYSIZE_T
);

630 #i‚de‡
YYFREE


631 
	#YYFREE
 
‰ì


	)

632 #i‡! 
deföed
 
‰ì
 && ! deföed 
EXIT_SUCCESS


633 
‰ì
 (*);

640 #i‡(! 
deföed
 
yyovîÊow
 \

641 && (! 
deföed
 
	g__˝lu•lus
 \

642 || (
deföed
 
	gYYSTYPE_IS_TRIVIAL
 && YYSTYPE_IS_TRIVIAL)))

645 
	uyyÆloc


647 
yyty≥_öt16
 
	myyss_Æloc
;

648 
YYSTYPE
 
	myyvs_Æloc
;

652 
	#YYSTACK_GAP_MAXIMUM
 ( (
yyÆloc
Ë- 1)

	)

656 
	#YYSTACK_BYTES
(
N
) \

657 ((
N
Ë* ( (
yyty≥_öt16
Ë+  (
YYSTYPE
)) \

658 + 
YYSTACK_GAP_MAXIMUM
)

	)

660 
	#YYCOPY_NEEDED
 1

	)

667 
	#YYSTACK_RELOCATE
(
Sèck_Æloc
, 
Sèck
) \

670 
YYSIZE_T
 
yy√wbyãs
; \

671 
	`YYCOPY
 (&
yy±r
->
Sèck_Æloc
, 
Sèck
, 
yysize
); \

672 
Sèck
 = &
yy±r
->
Sèck_Æloc
; \

673 
yy√wbyãs
 = 
yy°acksize
 *  (*
Sèck
Ë+ 
YYSTACK_GAP_MAXIMUM
; \

674 
yy±r
 +
yy√wbyãs
 /  (*yyptr); \

676 0)

	)

680 #i‡
deföed
 
YYCOPY_NEEDED
 && YYCOPY_NEEDED

683 #i‚de‡
YYCOPY


684 #i‡
deföed
 
__GNUC__
 && 1 < __GNUC__

685 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

686 
	`__buûtö_mem˝y
 (
D°
, 
Src
, (
Cou¡
Ë*  (*(Src)))

	)

688 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

691 
YYSIZE_T
 
yyi
; \

692 
yyi
 = 0; yyò< (
Cou¡
); yyi++) \

693 (
D°
)[
yyi
] = (
Src
)[yyi]; \

695 0)

	)

701 
	#YYFINAL
 14

	)

703 
	#YYLAST
 1652

	)

706 
	#YYNTOKENS
 77

	)

708 
	#YYNNTS
 171

	)

710 
	#YYNRULES
 446

	)

712 
	#YYNSTATES
 615

	)

716 
	#YYUNDEFTOK
 2

	)

717 
	#YYMAXUTOK
 325

	)

719 
	#YYTRANSLATE
(
YYX
) \

720 ((Ë(
YYX
Ë<
YYMAXUTOK
 ? 
yyå™¶©e
[YYX] : 
YYUNDEFTOK
)

	)

724 c⁄° 
yyty≥_uöt8
 
	gyyå™¶©e
[] =

761 #i‡
YYDEBUG


763 c⁄° 
yyty≥_uöt16
 
	gyyæöe
[] =

813 #i‡
YYDEBUG
 || 
YYERROR_VERBOSE
 || 0

816 c⁄° *c⁄° 
	gyyäame
[] =

872 "q°rögs", "q°rög", "u°rög", 
YY_NULLPTR


876 #ifde‡
YYPRINT


879 c⁄° 
yyty≥_uöt16
 
	gyytoknum
[] =

892 
	#YYPACT_NINF
 -307

	)

894 
	#yy∑˘_vÆue_is_deÁu…
(
Yy°©e
) \

895 (!!((
Yy°©e
Ë=(-307)))

	)

897 
	#YYTABLE_NINF
 -1

	)

899 
	#yyèbÀ_vÆue_is_îr‹
(
YyèbÀ_vÆue
) \

900 0

	)

904 c⁄° 
yyty≥_öt16
 
	gyy∑˘
[] =

973 c⁄° 
yyty≥_uöt16
 
	gyydeÁ˘
[] =

1040 c⁄° 
yyty≥_öt16
 
	gyypgŸo
[] =

1063 c⁄° 
yyty≥_öt16
 
	gyydefgŸo
[] =

1088 c⁄° 
yyty≥_uöt16
 
	gyyèbÀ
[] =

1258 c⁄° 
yyty≥_öt16
 
	gyycheck
[] =

1430 c⁄° 
yyty≥_uöt8
 
	gyy°os
[] =

1497 c⁄° 
yyty≥_uöt8
 
	gyyr1
[] =

1547 c⁄° 
yyty≥_uöt8
 
	gyyr2
[] =

1597 
	#yyîrok
 (
yyîr°©us
 = 0)

	)

1598 
	#yy˛órö
 (
yych¨
 = 
YYEMPTY
)

	)

1599 
	#YYEMPTY
 (-2)

	)

1600 
	#YYEOF
 0

	)

1602 
	#YYACCEPT
 
yyac˚±œb


	)

1603 
	#YYABORT
 
yyab‹éab


	)

1604 
	#YYERROR
 
yyîr‹œb


	)

1607 
	#YYRECOVERING
(Ë(!!
yyîr°©us
)

	)

1609 
	#YYBACKUP
(
Tokí
, 
VÆue
) \

1611 i‡(
yych¨
 =
YYEMPTY
) \

1613 
yych¨
 = (
Tokí
); \

1614 
yylvÆ
 = (
VÆue
); \

1615 
	`YYPOPSTACK
 (
yyÀn
); \

1616 
yy°©e
 = *
yys•
; \

1617 
yybackup
; \

1621 
	`yyîr‹
 (
_yy
, 
	`YY_
("syntaxÉrror: cannot back up")); \

1622 
YYERROR
; \

1624 0)

	)

1627 
	#YYTERROR
 1

	)

1628 
	#YYERRCODE
 256

	)

1633 #i‡
YYDEBUG


1635 #i‚de‡
YYFPRINTF


1636 
	~<°dio.h
>

1637 
	#YYFPRINTF
 
Ârötf


	)

1640 
	#YYDPRINTF
(
Args
) \

1642 i‡(
yydebug
) \

1643 
YYFPRINTF
 
Args
; \

1644 } 0)

	)

1647 #i‚de‡
YY_LOCATION_PRINT


1648 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
Ë((Ë0)

	)

1652 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
) \

1654 i‡(
yydebug
) \

1656 
	`YYFPRINTF
 (
°dîr
, "%†", 
TôÀ
); \

1657 
	`yy_symbﬁ_¥öt
 (
°dîr
, \

1658 
Ty≥
, 
VÆue
, 
_yy
); \

1659 
	`YYFPRINTF
 (
°dîr
, "\n"); \

1661 } 0)

	)

1669 
	$yy_symbﬁ_vÆue_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
, *
_yy
)

1671 
FILE
 *
yyo
 = 
yyouçut
;

1672 
	`YYUSE
 (
yyo
);

1673 
	`YYUSE
 (
_yy
);

1674 i‡(!
yyvÆuï
)

1676 #ifde‡
YYPRINT


1677 i‡(
yyty≥
 < 
YYNTOKENS
)

1678 
	`YYPRINT
 (
yyouçut
, 
yytoknum
[
yyty≥
], *
yyvÆuï
);

1680 
	`YYUSE
 (
yyty≥
);

1681 
	}
}

1689 
	$yy_symbﬁ_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
, *
_yy
)

1691 
	`YYFPRINTF
 (
yyouçut
, "%s %s (",

1692 
yyty≥
 < 
YYNTOKENS
 ? "tokí" : "¡îm", 
yyäame
[yytype]);

1694 
	`yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
, 
_yy
);

1695 
	`YYFPRINTF
 (
yyouçut
, ")");

1696 
	}
}

1704 
	$yy_°ack_¥öt
 (
yyty≥_öt16
 *
yybŸtom
, yyty≥_öt16 *
yyt›
)

1706 
	`YYFPRINTF
 (
°dîr
, "StackÇow");

1707 ; 
yybŸtom
 <
yyt›
; yybottom++)

1709 
yybŸ
 = *
yybŸtom
;

1710 
	`YYFPRINTF
 (
°dîr
, " %d", 
yybŸ
);

1712 
	`YYFPRINTF
 (
°dîr
, "\n");

1713 
	}
}

1715 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
) \

1717 i‡(
yydebug
) \

1718 
	`yy_°ack_¥öt
 ((
BŸtom
), (
T›
)); \

1719 } 0)

	)

1727 
	$yy_ªdu˚_¥öt
 (
yyty≥_öt16
 *
yys•
, 
YYSTYPE
 *
yyv•
, 
yyruÀ
, *
_yy
)

1729 
yy o
 = 
yyæöe
[
yyruÀ
];

1730 
yyƒhs
 = 
yyr2
[
yyruÀ
];

1731 
yyi
;

1732 
	`YYFPRINTF
 (
°dîr
, "Reducing stack byÑule %d (line %lu):\n",

1733 
yyruÀ
 - 1, 
yy o
);

1735 
yyi
 = 0; yyò< 
yyƒhs
; yyi++)

1737 
	`YYFPRINTF
 (
°dîr
, " $%d = ", 
yyi
 + 1);

1738 
	`yy_symbﬁ_¥öt
 (
°dîr
,

1739 
yy°os
[
yys•
[
yyi
 + 1 - 
yyƒhs
]],

1740 &(
yyv•
[(
yyi
 + 1Ë- (
yyƒhs
)])

1741 , 
_yy
);

1742 
	`YYFPRINTF
 (
°dîr
, "\n");

1744 
	}
}

1746 
	#YY_REDUCE_PRINT
(
RuÀ
) \

1748 i‡(
yydebug
) \

1749 
	`yy_ªdu˚_¥öt
 (
yys•
, 
yyv•
, 
RuÀ
, 
_yy
); \

1750 } 0)

	)

1754 
	gyydebug
;

1756 
	#YYDPRINTF
(
Args
)

	)

1757 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
)

	)

1758 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
)

	)

1759 
	#YY_REDUCE_PRINT
(
RuÀ
)

	)

1764 #i‚de‡
YYINITDEPTH


1765 
	#YYINITDEPTH
 200

	)

1775 #i‚de‡
YYMAXDEPTH


1776 
	#YYMAXDEPTH
 10000

	)

1780 #i‡
YYERROR_VERBOSE


1782 #i‚de‡
yy°æí


1783 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H


1784 
	#yy°æí
 
°æí


	)

1787 
YYSIZE_T


1788 
	$yy°æí
 (c⁄° *
yy°r
)

1790 
YYSIZE_T
 
yyÀn
;

1791 
yyÀn
 = 0; 
yy°r
[yylen]; yylen++)

1793  
yyÀn
;

1794 
	}
}

1798 #i‚de‡
yy°p˝y


1799 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H
 && deföed 
_GNU_SOURCE


1800 
	#yy°p˝y
 
°p˝y


	)

1805 
	$yy°p˝y
 (*
yyde°
, c⁄° *
yy§c
)

1807 *
yyd
 = 
yyde°
;

1808 c⁄° *
yys
 = 
yy§c
;

1810 (*
yyd
++ = *
yys
++) != '\0')

1813  
yyd
 - 1;

1814 
	}
}

1818 #i‚de‡
yyäamîr


1826 
YYSIZE_T


1827 
	$yyäamîr
 (*
yyªs
, c⁄° *
yy°r
)

1829 i‡(*
yy°r
 == '"')

1831 
YYSIZE_T
 
yyn
 = 0;

1832 c⁄° *
yyp
 = 
yy°r
;

1835 *++
yyp
)

1839 
do_nŸ_°rù_quŸes
;

1842 i‡(*++
yyp
 != '\\')

1843 
do_nŸ_°rù_quŸes
;

1846 i‡(
yyªs
)

1847 
yyªs
[
yyn
] = *
yyp
;

1848 
yyn
++;

1852 i‡(
yyªs
)

1853 
yyªs
[
yyn
] = '\0';

1854  
yyn
;

1856 
do_nŸ_°rù_quŸes
: ;

1859 i‡(! 
yyªs
)

1860  
	`yy°æí
 (
yy°r
);

1862  
	`yy°p˝y
 (
yyªs
, 
yy°r
) - yyres;

1863 
	}
}

1875 
	$yysy¡ax_îr‹
 (
YYSIZE_T
 *
yymsg_Æloc
, **
yymsg
,

1876 
yyty≥_öt16
 *
yys•
, 
yytokí
)

1878 
YYSIZE_T
 
yysize0
 = 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yytokí
]);

1879 
YYSIZE_T
 
yysize
 = 
yysize0
;

1880 íum { 
YYERROR_VERBOSE_ARGS_MAXIMUM
 = 5 };

1882 c⁄° *
yyf‹m©
 = 
YY_NULLPTR
;

1884 c⁄° *
yy¨g
[
YYERROR_VERBOSE_ARGS_MAXIMUM
];

1887 
yycou¡
 = 0;

1912 i‡(
yytokí
 !
YYEMPTY
)

1914 
yyn
 = 
yy∑˘
[*
yys•
];

1915 
yy¨g
[
yycou¡
++] = 
yyäame
[
yytokí
];

1916 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1921 
yyxbegö
 = 
yyn
 < 0 ? -yyn : 0;

1923 
yychecklim
 = 
YYLAST
 - 
yyn
 + 1;

1924 
yyxíd
 = 
yychecklim
 < 
YYNTOKENS
 ? yychecklim : YYNTOKENS;

1925 
yyx
;

1927 
yyx
 = 
yyxbegö
; yyx < 
yyxíd
; ++yyx)

1928 i‡(
yycheck
[
yyx
 + 
yyn
] =yyx && yyx !
YYTERROR


1929 && !
	`yyèbÀ_vÆue_is_îr‹
 (
yyèbÀ
[
yyx
 + 
yyn
]))

1931 i‡(
yycou¡
 =
YYERROR_VERBOSE_ARGS_MAXIMUM
)

1933 
yycou¡
 = 1;

1934 
yysize
 = 
yysize0
;

1937 
yy¨g
[
yycou¡
++] = 
yyäame
[
yyx
];

1939 
YYSIZE_T
 
yysize1
 = 
yysize
 + 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yyx
]);

1940 i‡(! (
yysize
 <
yysize1


1941 && 
yysize1
 <
YYSTACK_ALLOC_MAXIMUM
))

1943 
yysize
 = 
yysize1
;

1949 
yycou¡
)

1951 
	#YYCASE_
(
N
, 
S
) \

1952 
N
: \

1953 
yyf‹m©
 = 
S
; \

1954 

	)

1955 
	`YYCASE_
(0, 
	`YY_
("syntaxÉrror"));

1956 
	`YYCASE_
(1, 
	`YY_
("syntaxÉrror, unexpected %s"));

1957 
	`YYCASE_
(2, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s"));

1958 
	`YYCASE_
(3, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s"));

1959 
	`YYCASE_
(4, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s"));

1960 
	`YYCASE_
(5, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s or %s"));

1961 #unde‡
YYCASE_


1965 
YYSIZE_T
 
yysize1
 = 
yysize
 + 
	`yy°æí
 (
yyf‹m©
);

1966 i‡(! (
yysize
 <
yysize1
 && yysize1 <
YYSTACK_ALLOC_MAXIMUM
))

1968 
yysize
 = 
yysize1
;

1971 i‡(*
yymsg_Æloc
 < 
yysize
)

1973 *
yymsg_Æloc
 = 2 * 
yysize
;

1974 i‡(! (
yysize
 <*
yymsg_Æloc


1975 && *
yymsg_Æloc
 <
YYSTACK_ALLOC_MAXIMUM
))

1976 *
yymsg_Æloc
 = 
YYSTACK_ALLOC_MAXIMUM
;

1984 *
yyp
 = *
yymsg
;

1985 
yyi
 = 0;

1986 (*
yyp
 = *
yyf‹m©
) != '\0')

1987 i‡(*
yyp
 ='%' && 
yyf‹m©
[1] ='s' && 
yyi
 < 
yycou¡
)

1989 
yyp
 +
	`yyäamîr
 (yyp, 
yy¨g
[
yyi
++]);

1990 
yyf‹m©
 += 2;

1994 
yyp
++;

1995 
yyf‹m©
++;

1999 
	}
}

2007 
	$yyde°ru˘
 (c⁄° *
yymsg
, 
yyty≥
, 
YYSTYPE
 *
yyvÆuï
, *
_yy
)

2009 
	`YYUSE
 (
yyvÆuï
);

2010 
	`YYUSE
 (
_yy
);

2011 i‡(!
yymsg
)

2012 
yymsg
 = "Deleting";

2013 
	`YY_SYMBOL_PRINT
 (
yymsg
, 
yyty≥
, 
yyvÆuï
, 
yyloˇti⁄p
);

2015 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


2016 
	`YYUSE
 (
yyty≥
);

2017 
YY_IGNORE_MAYBE_UNINITIALIZED_END


2018 
	}
}

2024 
	gyych¨
;

2027 
YYSTYPE
 
	gyylvÆ
;

2029 
	gyy√ºs
;

2037 
	$yy∑r£
 (*
_yy
)

2039 
yy°©e
;

2041 
yyîr°©us
;

2051 
yyty≥_öt16
 
yysß
[
YYINITDEPTH
];

2052 
yyty≥_öt16
 *
yyss
;

2053 
yyty≥_öt16
 *
yys•
;

2056 
YYSTYPE
 
yyvß
[
YYINITDEPTH
];

2057 
YYSTYPE
 *
yyvs
;

2058 
YYSTYPE
 *
yyv•
;

2060 
YYSIZE_T
 
yy°acksize
;

2062 
yyn
;

2063 
yyªsu…
;

2065 
yytokí
 = 0;

2068 
YYSTYPE
 
yyvÆ
;

2070 #i‡
YYERROR_VERBOSE


2072 
yymsgbuf
[128];

2073 *
yymsg
 = 
yymsgbuf
;

2074 
YYSIZE_T
 
yymsg_Æloc
 =  
yymsgbuf
;

2077 
	#YYPOPSTACK
(
N
Ë(
yyv•
 -(N), 
yys•
 -(N))

	)

2081 
yyÀn
 = 0;

2083 
yys•
 = 
yyss
 = 
yysß
;

2084 
yyv•
 = 
yyvs
 = 
yyvß
;

2085 
yy°acksize
 = 
YYINITDEPTH
;

2087 
	`YYDPRINTF
 ((
°dîr
, "StartingÖarse\n"));

2089 
yy°©e
 = 0;

2090 
yyîr°©us
 = 0;

2091 
yy√ºs
 = 0;

2092 
yych¨
 = 
YYEMPTY
;

2093 
yy£t°©e
;

2098 
yy√w°©e
:

2101 
yys•
++;

2103 
yy£t°©e
:

2104 *
yys•
 = 
yy°©e
;

2106 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

2109 
YYSIZE_T
 
yysize
 = 
yys•
 - 
yyss
 + 1;

2111 #ifde‡
yyovîÊow


2116 
YYSTYPE
 *
yyvs1
 = 
yyvs
;

2117 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

2123 
	`yyovîÊow
 (
	`YY_
("memoryÉxhausted"),

2124 &
yyss1
, 
yysize
 *  (*
yys•
),

2125 &
yyvs1
, 
yysize
 *  (*
yyv•
),

2126 &
yy°acksize
);

2128 
yyss
 = 
yyss1
;

2129 
yyvs
 = 
yyvs1
;

2132 #i‚de‡
YYSTACK_RELOCATE


2133 
yyexhau°edœb
;

2136 i‡(
YYMAXDEPTH
 <
yy°acksize
)

2137 
yyexhau°edœb
;

2138 
yy°acksize
 *= 2;

2139 i‡(
YYMAXDEPTH
 < 
yy°acksize
)

2140 
yy°acksize
 = 
YYMAXDEPTH
;

2143 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

2144 
yyÆloc
 *
yy±r
 =

2145 (
yyÆloc
 *Ë
	`YYSTACK_ALLOC
 (
	`YYSTACK_BYTES
 (
yy°acksize
));

2146 i‡(! 
yy±r
)

2147 
yyexhau°edœb
;

2148 
	`YYSTACK_RELOCATE
 (
yyss_Æloc
, 
yyss
);

2149 
	`YYSTACK_RELOCATE
 (
yyvs_Æloc
, 
yyvs
);

2150 #unde‡
YYSTACK_RELOCATE


2151 i‡(
yyss1
 !
yysß
)

2152 
	`YYSTACK_FREE
 (
yyss1
);

2157 
yys•
 = 
yyss
 + 
yysize
 - 1;

2158 
yyv•
 = 
yyvs
 + 
yysize
 - 1;

2160 
	`YYDPRINTF
 ((
°dîr
, "Stack size increasedÅo %lu\n",

2161 (Ë
yy°acksize
));

2163 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

2164 
YYABORT
;

2167 
	`YYDPRINTF
 ((
°dîr
, "E¡îög sèã %d\n", 
yy°©e
));

2169 i‡(
yy°©e
 =
YYFINAL
)

2170 
YYACCEPT
;

2172 
yybackup
;

2177 
yybackup
:

2183 
yyn
 = 
yy∑˘
[
yy°©e
];

2184 i‡(
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

2185 
yydeÁu…
;

2190 i‡(
yych¨
 =
YYEMPTY
)

2192 
	`YYDPRINTF
 ((
°dîr
, "ReadingáÅoken: "));

2193 
yych¨
 = 
	`yyÀx
 (
_yy
);

2196 i‡(
yych¨
 <
YYEOF
)

2198 
yych¨
 = 
yytokí
 = 
YYEOF
;

2199 
	`YYDPRINTF
 ((
°dîr
, "NowátÉnd of input.\n"));

2203 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

2204 
	`YY_SYMBOL_PRINT
 ("Nexàtokí is", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

2209 
yyn
 +
yytokí
;

2210 i‡(
yyn
 < 0 || 
YYLAST
 < yy¿|| 
yycheck
[yyn] !
yytokí
)

2211 
yydeÁu…
;

2212 
yyn
 = 
yyèbÀ
[yyn];

2213 i‡(
yyn
 <= 0)

2215 i‡(
	`yyèbÀ_vÆue_is_îr‹
 (
yyn
))

2216 
yyîæab
;

2217 
yyn
 = -yyn;

2218 
yyªdu˚
;

2223 i‡(
yyîr°©us
)

2224 
yyîr°©us
--;

2227 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

2230 
yych¨
 = 
YYEMPTY
;

2232 
yy°©e
 = 
yyn
;

2233 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


2234 *++
yyv•
 = 
yylvÆ
;

2235 
YY_IGNORE_MAYBE_UNINITIALIZED_END


2237 
yy√w°©e
;

2243 
yydeÁu…
:

2244 
yyn
 = 
yydeÁ˘
[
yy°©e
];

2245 i‡(
yyn
 == 0)

2246 
yyîæab
;

2247 
yyªdu˚
;

2253 
yyªdu˚
:

2255 
yyÀn
 = 
yyr2
[
yyn
];

2265 
yyvÆ
 = 
yyv•
[1-
yyÀn
];

2268 
	`YY_REDUCE_PRINT
 (
yyn
);

2269 
yyn
)

2273 { 
	`˛ic⁄_debug
(2,"fûe->moduÀ-°mt"); 
YYACCEPT
; }

2279 { 
	`˛ic⁄_debug
(2,"fûe->submoduÀ-°mt"); 
YYACCEPT
; }

2285 { *
id
; i‡((id=
	`¥efix_id_joö
((
yyv•
[-3].
°rög
), (yyv•[-1].°rög))Ë=
NULL
Ë
	`_YYERROR
("0");

2286 i‡(
	`y•_add
(
_yy
, 
Y_UNKNOWN
, 
id
, 
NULL
Ë=NULLË
	`_YYERROR
("0");

2287 
	`˛ic⁄_debug
(2,"unknown-stmt -> ustring : ustring");

2294 { *
id
; i‡((id=
	`¥efix_id_joö
((
yyv•
[-5].
°rög
), (yyv•[-3].°rög))Ë=
NULL
Ë
	`_YYERROR
("0");

2295 i‡(
	`y•_add
(
_yy
, 
Y_UNKNOWN
, 
id
, (
yyv•
[-1].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("0");

2296 
	`˛ic⁄_debug
(2,"unknown-stmt -> ustring : ustring string");

2303 { i‡((
_YY
->
yy_moduÀ
 = 
	`y•_add_push
(
_yy
, 
Y_MODULE
, (
yyv•
[0].
°rög
))Ë=
NULL
Ë
	`_YYERROR
("1");

2310 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("2");

2311 
	`˛ic⁄_debug
(2,"module_stmt -> id-arg-str { module-substmts }");}

2317 { 
	`˛ic⁄_debug
(2,"module-substmts -> module-substmts module-substm");}

2323 { 
	`˛ic⁄_debug
(2,"module-substmts ->");}

2329 { 
	`˛ic⁄_debug
(2,"module-substmt -> module-header-stmts");}

2335 { 
	`˛ic⁄_debug
(2,"module-substmt ->Üinake-stmts");}

2341 { 
	`˛ic⁄_debug
(2,"module-substmt -> meta-stmts");}

2347 { 
	`˛ic⁄_debug
(2,"module-substmt ->Ñevision-stmts");}

2353 { 
	`˛ic⁄_debug
(2,"module-substmt -> body-stmts");}

2359 { 
	`˛ic⁄_debug
(2,"module-substmt -> unknown-stmt");}

2365 { 
	`˛ic⁄_debug
(2,"module-substmt ->");}

2371 { i‡((
_YY
->
yy_moduÀ
 = 
	`y•_add_push
(
_yy
, 
Y_SUBMODULE
, (
yyv•
[-3].
°rög
))Ë=
NULL
Ë
	`_YYERROR
("3");

2372 
	`˛ic⁄_debug
(2,"submodule -> id-arg-str { submodule-stmts }");

2379 { 
	`˛ic⁄_debug
(2,"submodule-stmts -> submodule-substmts submodule-substmt"); }

2385 { 
	`˛ic⁄_debug
(2,"submodule-stmts -> submodule-substmt"); }

2391 { 
	`˛ic⁄_debug
(2,"submodule-substmt -> submodule-header-stmts"); }

2397 { 
	`˛ic⁄_debug
(2,"submodule-substmt ->Üinake-stmts");}

2403 { 
	`˛ic⁄_debug
(2,"submodule-substmt -> meta-stmts");}

2409 { 
	`˛ic⁄_debug
(2,"submodule-substmt ->Ñevision-stmts");}

2415 { 
	`˛ic⁄_debug
(2,"submodule-stmt -> body-stmts"); }

2421 { 
	`˛ic⁄_debug
(2,"submodule-substmt -> unknown-stmt");}

2427 { 
	`˛ic⁄_debug
(2,"submodule-substmt ->");}

2433 { 
	`˛ic⁄_debug
(2,"module-header-stmts -> module-header-stmts module-header-stmt"); }

2439 { 
	`˛ic⁄_debug
(2,"module-header-stmts -> "); }

2445 { 
	`˛ic⁄_debug
(2,"module-header-stmt -> yang-version-stmt"); }

2451 { 
	`˛ic⁄_debug
(2,"module-header-stmt ->Çamespace-stmt"); }

2457 { 
	`˛ic⁄_debug
(2,"module-header-stmt ->Örefix-stmt"); }

2463 { 
	`˛ic⁄_debug
(2,"submodule-header-stmts -> submodule-header-stmts submodule-header-stmt"); }

2469 { 
	`˛ic⁄_debug
(2,"submodule-header-stmts -> submodule-header-stmt"); }

2475 { 
	`˛ic⁄_debug
(2,"submodule-header-stmt -> yang-version-stmt"); }

2481 { 
	`˛ic⁄_debug
(2,"linkage-stmts ->Üinkage-stmtsÜinkage-stmt"); }

2487 { 
	`˛ic⁄_debug
(2,"linkage-stmts ->Üinkage-stmt"); }

2493 { 
	`˛ic⁄_debug
(2,"linkage-stmt -> import-stmt"); }

2499 { 
	`˛ic⁄_debug
(2,"linkage-stmt -> include-stmt"); }

2505 { 
	`˛ic⁄_debug
(2,"revision-stmts ->Ñevision-stmtsÑevision-stmt"); }

2511 { 
	`˛ic⁄_debug
(2,"revision-stmts -> "); }

2517 { i‡(
	`y•_add
(
_yy
, 
Y_REVISION
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("4");

2518 
	`˛ic⁄_debug
(2,"revision-stmt -> date-arg-str ;"); }

2524 { i‡(
	`y•_add_push
(
_yy
, 
Y_REVISION
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("5"); }

2530 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("6");

2531 
	`˛ic⁄_debug
(2,"revision-stmt -> date-arg-str {Ñevision-substmts }"); }

2537 { 
	`˛ic⁄_debug
(2,"revision-substmts ->Ñevision-substmtsÑevision-substmt }"); }

2543 { 
	`˛ic⁄_debug
(2,"revision-substmts -> }"); }

2549 { 
	`˛ic⁄_debug
(2,"revision-substmt -> description-stmt"); }

2555 { 
	`˛ic⁄_debug
(2,"revision-substmt ->Ñeference-stmt"); }

2561 { 
	`˛ic⁄_debug
(2,"revision-substmt -> unknown-stmt");}

2567 { 
	`˛ic⁄_debug
(2,"revision-substmt -> "); }

2573 { 
	`˛ic⁄_debug
(2,"meta-stmts -> meta-stmts meta-stmt"); }

2579 { 
	`˛ic⁄_debug
(2,"meta-stmts -> meta-stmt"); }

2585 { 
	`˛ic⁄_debug
(2,"meta-stmt -> organization-stmt"); }

2591 { 
	`˛ic⁄_debug
(2,"meta-stmt -> contact-stmt"); }

2597 { 
	`˛ic⁄_debug
(2,"meta-stmt -> description-stmt"); }

2603 { 
	`˛ic⁄_debug
(2,"meta-stmt ->Ñeference-stmt"); }

2609 { 
	`˛ic⁄_debug
(2,"body-stmts -> body-stmts body-stmt"); }

2615 { 
	`˛ic⁄_debug
(2,"body-stmts -> body-stmt");}

2621 { 
	`˛ic⁄_debug
(2,"body-stmt ->Éxtension-stmt");}

2627 { 
	`˛ic⁄_debug
(2,"body-stmt -> feature-stmt");}

2633 { 
	`˛ic⁄_debug
(2,"body-stmt -> identity-stmt");}

2639 { 
	`˛ic⁄_debug
(2,"body-stmt ->Åypedef-stmt");}

2645 { 
	`˛ic⁄_debug
(2,"body-stmt -> grouping-stmt");}

2651 { 
	`˛ic⁄_debug
(2,"body-stmt -> data-def-stmt");}

2657 { 
	`˛ic⁄_debug
(2,"body-stmt ->áugment-stmt");}

2663 { 
	`˛ic⁄_debug
(2,"body-stmt ->Ñpc-stmt");}

2669 { 
	`˛ic⁄_debug
(2,"data-def-stmt -> container-stmt");}

2675 { 
	`˛ic⁄_debug
(2,"data-def-stmt ->Üeaf-stmt");}

2681 { 
	`˛ic⁄_debug
(2,"data-def-stmt ->Üeaf-list-stmt");}

2687 { 
	`˛ic⁄_debug
(2,"data-def-stmt ->Üist-stmt");}

2693 { 
	`˛ic⁄_debug
(2,"data-def-stmt -> choice-stmt");}

2699 { 
	`˛ic⁄_debug
(2,"data-def-stmt ->ányxml-stmt");}

2705 { 
	`˛ic⁄_debug
(2,"data-def-stmt -> uses-stmt");}

2711 { i‡(
	`y•_add
(
_yy
, 
Y_CONTAINER
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("7");

2712 
	`˛ic⁄_debug
(2,"container-stmt -> CONTAINER id-arg-str ;");}

2718 { i‡(
	`y•_add_push
(
_yy
, 
Y_CONTAINER
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("8"); }

2724 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("9");

2725 
	`˛ic⁄_debug
(2,"container-stmt -> CONTAINER id-arg-str { container-substmts }");}

2731 { 
	`˛ic⁄_debug
(2,"container-substmt -> when-stmt"); }

2737 { 
	`˛ic⁄_debug
(2,"container-substmt -> if-feature-stmt"); }

2743 { 
	`˛ic⁄_debug
(2,"container-substmt -> must-stmt"); }

2749 { 
	`˛ic⁄_debug
(2,"container-substmt ->Öresence-stmt"); }

2755 { 
	`˛ic⁄_debug
(2,"container-substmt -> config-stmt"); }

2761 { 
	`˛ic⁄_debug
(2,"container-substmt -> status-stmt"); }

2767 { 
	`˛ic⁄_debug
(2,"container-substmt -> description-stmt");}

2773 { 
	`˛ic⁄_debug
(2,"container-substmt ->Ñeference-stmt"); }

2779 { 
	`˛ic⁄_debug
(2,"container-substmt ->Åypedef-stmt"); }

2785 { 
	`˛ic⁄_debug
(2,"container-substmt -> grouping-stmt"); }

2791 { 
	`˛ic⁄_debug
(2,"container-substmt -> data-def-stmt");}

2797 { 
	`˛ic⁄_debug
(2,"container-substmt -> unknown-stmt");}

2803 { 
	`˛ic⁄_debug
(2,"container-substmt ->");}

2809 { i‡(
	`y•_add
(
_yy
, 
Y_LEAF
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("10");

2810 
	`˛ic⁄_debug
(2,"leaf-stmt -> LEAF id-arg-str ;");}

2816 { i‡(
	`y•_add_push
(
_yy
, 
Y_LEAF
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("11"); }

2822 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("12");

2823 
	`˛ic⁄_debug
(2,"leaf-stmt -> LEAF id-arg-str {Üead-substmts }");}

2829 { 
	`˛ic⁄_debug
(2,"leaf-substmt -> when-stmt"); }

2835 { 
	`˛ic⁄_debug
(2,"leaf-substmt -> if-feature-stmt"); }

2841 { 
	`˛ic⁄_debug
(2,"leaf-substmt ->Åype-stmt"); }

2847 { 
	`˛ic⁄_debug
(2,"leaf-substmt -> units-stmt"); }

2853 { 
	`˛ic⁄_debug
(2,"leaf-substmt -> must-stmt"); }

2859 { 
	`˛ic⁄_debug
(2,"leaf-substmt -> default-stmt"); }

2865 { 
	`˛ic⁄_debug
(2,"leaf-substmt -> config-stmt"); }

2871 { 
	`˛ic⁄_debug
(2,"leaf-substmt -> mandatory-stmt"); }

2877 { 
	`˛ic⁄_debug
(2,"leaf-substmt -> status-stmt"); }

2883 { 
	`˛ic⁄_debug
(2,"leaf-substmt -> description-stmt"); }

2889 { 
	`˛ic⁄_debug
(2,"leaf-substmt ->Ñeference-stmt"); }

2895 { 
	`˛ic⁄_debug
(2,"leaf-substmt -> unknown-stmt");}

2901 { 
	`˛ic⁄_debug
(2,"leaf-substmt ->"); }

2907 { i‡(
	`y•_add
(
_yy
, 
Y_LEAF_LIST
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("13");

2908 
	`˛ic⁄_debug
(2,"leaf-list-stmt -> LEAF id-arg-str ;");}

2914 { i‡(
	`y•_add_push
(
_yy
, 
Y_LEAF_LIST
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("14"); }

2920 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("15");

2921 
	`˛ic⁄_debug
(2,"leaf-list-stmt -> LEAF-LIST id-arg-str {Üead-substmts }");}

2927 { 
	`˛ic⁄_debug
(2,"leaf-list-substmt -> when-stmt"); }

2933 { 
	`˛ic⁄_debug
(2,"leaf-list-substmt -> if-feature-stmt"); }

2939 { 
	`˛ic⁄_debug
(2,"leaf-list-substmt ->Åype-stmt"); }

2945 { 
	`˛ic⁄_debug
(2,"leaf-list-substmt -> units-stmt"); }

2951 { 
	`˛ic⁄_debug
(2,"leaf-list-substmt -> must-stmt"); }

2957 { 
	`˛ic⁄_debug
(2,"leaf-list-substmt -> config-stmt"); }

2963 { 
	`˛ic⁄_debug
(2,"leaf-list-substmt -> min-elements-stmt"); }

2969 { 
	`˛ic⁄_debug
(2,"leaf-list-substmt -> max-elements-stmt"); }

2975 { 
	`˛ic⁄_debug
(2,"leaf-list-substmt -> ordered-by-stmt"); }

2981 { 
	`˛ic⁄_debug
(2,"leaf-list-substmt -> status-stmt"); }

2987 { 
	`˛ic⁄_debug
(2,"leaf-list-substmt -> description-stmt"); }

2993 { 
	`˛ic⁄_debug
(2,"leaf-list-substmt ->Ñeference-stmt"); }

2999 { 
	`˛ic⁄_debug
(2,"leaf-list-substmt -> unknown-stmt");}

3005 { 
	`˛ic⁄_debug
(2,"leaf-list-stmt ->"); }

3011 { i‡(
	`y•_add
(
_yy
, 
Y_LIST
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("16");

3012 
	`˛ic⁄_debug
(2,"list-stmt -> LIST id-arg-str ;"); }

3018 { i‡(
	`y•_add_push
(
_yy
, 
Y_LIST
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("17"); }

3024 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("18");

3025 
	`˛ic⁄_debug
(2,"list-stmt -> LIST id-arg-str {Üist-substmts }"); }

3031 { 
	`˛ic⁄_debug
(2,"list-substmts ->Üist-substmtsÜist-substmt"); }

3037 { 
	`˛ic⁄_debug
(2,"list-substmts ->Üist-substmt"); }

3043 { 
	`˛ic⁄_debug
(2,"list-substmt -> when-stmt"); }

3049 { 
	`˛ic⁄_debug
(2,"list-substmt -> if-feature-stmt"); }

3055 { 
	`˛ic⁄_debug
(2,"list-substmt -> must-stmt"); }

3061 { 
	`˛ic⁄_debug
(2,"list-substmt -> key-stmt"); }

3067 { 
	`˛ic⁄_debug
(2,"list-substmt -> unique-stmt"); }

3073 { 
	`˛ic⁄_debug
(2,"list-substmt -> config-stmt"); }

3079 { 
	`˛ic⁄_debug
(2,"list-substmt -> min-elements-stmt"); }

3085 { 
	`˛ic⁄_debug
(2,"list-substmt -> max-elements-stmt"); }

3091 { 
	`˛ic⁄_debug
(2,"list-substmt -> ordered-by-stmt"); }

3097 { 
	`˛ic⁄_debug
(2,"list-substmt -> status-stmt"); }

3103 { 
	`˛ic⁄_debug
(2,"list-substmt -> description-stmt"); }

3109 { 
	`˛ic⁄_debug
(2,"list-substmt ->Ñeference-stmt"); }

3115 { 
	`˛ic⁄_debug
(2,"list-substmt ->Åypedef-stmt"); }

3121 { 
	`˛ic⁄_debug
(2,"list-substmt -> grouping-stmt"); }

3127 { 
	`˛ic⁄_debug
(2,"list-substmt -> data-def-stmt"); }

3133 { 
	`˛ic⁄_debug
(2,"list-substmt -> unknown-stmt");}

3139 { 
	`˛ic⁄_debug
(2,"list-substmt -> "); }

3145 { i‡(
	`y•_add
(
_yy
, 
Y_CHOICE
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("19");

3146 
	`˛ic⁄_debug
(2,"choice-stmt -> CHOICE id-arg-str ;"); }

3152 { i‡(
	`y•_add_push
(
_yy
, 
Y_CHOICE
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("20"); }

3158 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("21");

3159 
	`˛ic⁄_debug
(2,"choice-stmt -> CHOICE id-arg-str { choice-substmts }"); }

3165 { 
	`˛ic⁄_debug
(2,"choice-substmts -> choice-substmts choice-substmt"); }

3171 { 
	`˛ic⁄_debug
(2,"choice-substmts -> choice-substmt"); }

3177 { 
	`˛ic⁄_debug
(2,"choice-substmt -> when-stmt"); }

3183 { 
	`˛ic⁄_debug
(2,"choice-substmt -> if-feature-stmt"); }

3189 { 
	`˛ic⁄_debug
(2,"choice-substmt -> default-stmt"); }

3195 { 
	`˛ic⁄_debug
(2,"choice-substmt -> config-stmt"); }

3201 { 
	`˛ic⁄_debug
(2,"choice-substmt -> mandatory-stmt"); }

3207 { 
	`˛ic⁄_debug
(2,"choice-substmt -> status-stmt"); }

3213 { 
	`˛ic⁄_debug
(2,"choice-substmt -> description-stmt"); }

3219 { 
	`˛ic⁄_debug
(2,"choice-substmt ->Ñeference-stmt"); }

3225 { 
	`˛ic⁄_debug
(2,"choice-substmt -> short-case-stmt");}

3231 { 
	`˛ic⁄_debug
(2,"choice-substmt -> case-stmt");}

3237 { 
	`˛ic⁄_debug
(2,"choice-substmt -> unknown-stmt");}

3243 { 
	`˛ic⁄_debug
(2,"choice-substmt -> "); }

3249 { 
	`˛ic⁄_debug
(2,"short-case-substmt -> container-stmt"); }

3255 { 
	`˛ic⁄_debug
(2,"short-case-substmt ->Üeaf-stmt"); }

3261 { 
	`˛ic⁄_debug
(2,"short-case-substmt ->Üeaf-list-stmt"); }

3267 { 
	`˛ic⁄_debug
(2,"short-case-substmt ->Üist-stmt"); }

3273 { 
	`˛ic⁄_debug
(2,"short-case-substmt ->ányxml-stmt");}

3279 { i‡(
	`y•_add
(
_yy
, 
Y_CASE
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("22");

3280 
	`˛ic⁄_debug
(2,"case-stmt -> CASE id-arg-str ;"); }

3286 { i‡(
	`y•_add_push
(
_yy
, 
Y_CASE
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("23"); }

3292 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("24");

3293 
	`˛ic⁄_debug
(2,"case-stmt -> CASE id-arg-str { case-substmts }"); }

3299 { 
	`˛ic⁄_debug
(2,"case-substmts -> case-substmts case-substmt"); }

3305 { 
	`˛ic⁄_debug
(2,"case-substmts -> case-substmt"); }

3311 { 
	`˛ic⁄_debug
(2,"case-substmt -> when-stmt"); }

3317 { 
	`˛ic⁄_debug
(2,"case-substmt -> if-feature-stmt"); }

3323 { 
	`˛ic⁄_debug
(2,"case-substmt -> status-stmt"); }

3329 { 
	`˛ic⁄_debug
(2,"case-substmt -> description-stmt"); }

3335 { 
	`˛ic⁄_debug
(2,"case-substmt ->Ñeference-stmt"); }

3341 { 
	`˛ic⁄_debug
(2,"case-substmt -> data-def-stmt");}

3347 { 
	`˛ic⁄_debug
(2,"case-substmt -> unknown-stmt");}

3353 { 
	`˛ic⁄_debug
(2,"case-substmt -> "); }

3359 { i‡(
	`y•_add
(
_yy
, 
Y_ANYXML
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("25");

3360 
	`˛ic⁄_debug
(2,"anyxml-stmt -> ANYXML id-arg-str ;"); }

3366 { i‡(
	`y•_add_push
(
_yy
, 
Y_ANYXML
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("26"); }

3372 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("27");

3373 
	`˛ic⁄_debug
(2,"anyxml-stmt -> ANYXML id-arg-str {ányxml-substmts }"); }

3379 { 
	`˛ic⁄_debug
(2,"anyxml-substmts ->ányxml-substmtsányxml-substmt"); }

3385 { 
	`˛ic⁄_debug
(2,"anyxml-substmts ->ányxml-substmt"); }

3391 { 
	`˛ic⁄_debug
(2,"anyxml-substmt -> when-stmt"); }

3397 { 
	`˛ic⁄_debug
(2,"anyxml-substmt -> if-feature-stmt"); }

3403 { 
	`˛ic⁄_debug
(2,"anyxml-substmt -> must-stmt"); }

3409 { 
	`˛ic⁄_debug
(2,"anyxml-substmt -> config-stmt"); }

3415 { 
	`˛ic⁄_debug
(2,"anyxml-substmt -> mandatory-stmt"); }

3421 { 
	`˛ic⁄_debug
(2,"anyxml-substmt -> status-stmt"); }

3427 { 
	`˛ic⁄_debug
(2,"anyxml-substmt -> description-stmt"); }

3433 { 
	`˛ic⁄_debug
(2,"anyxml-substmt ->Ñeference-stmt"); }

3439 { 
	`‰ì
((
yyv•
[-3].
°rög
)); fªe((yyv•[-1].°rög)); 
	`˛ic⁄_debug
(2,"anyxml-substmt ->ányxmlÉxtension"); }

3445 { i‡(
	`y•_add
(
_yy
, 
Y_USES
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("28");

3446 
	`˛ic⁄_debug
(2,"uses-stmt -> USES id-arg-str ;"); }

3452 { i‡(
	`y•_add_push
(
_yy
, 
Y_USES
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("29"); }

3458 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("30");

3459 
	`˛ic⁄_debug
(2,"uses-stmt -> USES id-arg-str { uses-substmts }"); }

3465 { 
	`˛ic⁄_debug
(2,"uses-substmts -> uses-substmts uses-substmt"); }

3471 { 
	`˛ic⁄_debug
(2,"uses-substmts -> uses-substmt"); }

3477 { 
	`˛ic⁄_debug
(2,"uses-substmt -> when-stmt"); }

3483 { 
	`˛ic⁄_debug
(2,"uses-substmt -> if-feature-stmt"); }

3489 { 
	`˛ic⁄_debug
(2,"uses-substmt -> status-stmt"); }

3495 { 
	`˛ic⁄_debug
(2,"uses-substmt -> description-stmt"); }

3501 { 
	`˛ic⁄_debug
(2,"uses-substmt ->Ñeference-stmt"); }

3507 { 
	`˛ic⁄_debug
(2,"uses-substmt ->Ñefine-stmt"); }

3513 { 
	`˛ic⁄_debug
(2,"uses-substmt -> uses-augment-stmt"); }

3519 { 
	`˛ic⁄_debug
(2,"uses-substmt -> unknown-stmt");}

3525 { 
	`˛ic⁄_debug
(2,"uses-substmt -> "); }

3531 { i‡(
	`y•_add
(
_yy
, 
Y_REFINE
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("31");

3532 
	`˛ic⁄_debug
(2,"refine-stmt -> REFINE id-arg-str ;"); }

3538 { i‡(
	`y•_add_push
(
_yy
, 
Y_REFINE
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("32"); }

3544 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("33");

3545 
	`˛ic⁄_debug
(2,"refine-stmt -> REFINE id-arg-str {Ñefine-substmts }"); }

3551 { 
	`˛ic⁄_debug
(2,"refine-substmts ->Ñefine-substmtsÑefine-substmt"); }

3557 { 
	`˛ic⁄_debug
(2,"refine-substmts ->Ñefine-substmt"); }

3563 { 
	`˛ic⁄_debug
(2,"refine-substmt -> must-stmt"); }

3569 { 
	`˛ic⁄_debug
(2,"refine-substmt -> mandatory-stmt"); }

3575 { 
	`˛ic⁄_debug
(2,"refine-substmt -> default-stmt"); }

3581 { 
	`˛ic⁄_debug
(2,"refine-substmt -> unknown-stmt");}

3587 { 
	`˛ic⁄_debug
(2,"refine-substmt -> "); }

3593 { i‡(
	`y•_add_push
(
_yy
, 
Y_AUGMENT
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("34"); }

3599 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("35");

3600 
	`˛ic⁄_debug
(2,"augment-stmt -> AUGMENT string {áugment-substmts }"); }

3606 { 
	`˛ic⁄_debug
(2,"augment-substmts ->áugment-substmtsáugment-substmt"); }

3612 { 
	`˛ic⁄_debug
(2,"augment-substmts ->áugment-substmt"); }

3618 { 
	`˛ic⁄_debug
(2,"augment-substmt -> when-stmt"); }

3624 { 
	`˛ic⁄_debug
(2,"augment-substmt -> if-feature-stmt"); }

3630 { 
	`˛ic⁄_debug
(2,"augment-substmt -> status-stmt"); }

3636 { 
	`˛ic⁄_debug
(2,"augment-substmt -> description-stmt"); }

3642 { 
	`˛ic⁄_debug
(2,"augment-substmt ->Ñeference-stmt"); }

3648 { 
	`˛ic⁄_debug
(2,"augment-substmt -> data-def-stmt"); }

3654 { 
	`˛ic⁄_debug
(2,"augment-substmt -> case-stmt");}

3660 { 
	`˛ic⁄_debug
(2,"augment-substmt -> "); }

3666 { i‡(
	`y•_add
(
_yy
, 
Y_WHEN
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("36");

3667 
	`˛ic⁄_debug
(2,"when-stmt -> WHEN string ;"); }

3673 { i‡(
	`y•_add_push
(
_yy
, 
Y_WHEN
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("37"); }

3679 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("38");

3680 
	`˛ic⁄_debug
(2,"when-stmt -> WHEN string { when-substmts }"); }

3686 { 
	`˛ic⁄_debug
(2,"when-substmts -> when-substmts when-substmt"); }

3692 { 
	`˛ic⁄_debug
(2,"when-substmts -> when-substmt"); }

3698 { 
	`˛ic⁄_debug
(2,"when-substmt -> description-stmt"); }

3704 { 
	`˛ic⁄_debug
(2,"when-substmt ->Ñeference-stmt"); }

3710 { 
	`˛ic⁄_debug
(2,"when-substmt -> "); }

3716 { i‡(
	`y•_add
(
_yy
, 
Y_RPC
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("39");

3717 
	`˛ic⁄_debug
(2,"rpc-stmt -> RPC id-arg-str ;"); }

3723 { i‡(
	`y•_add_push
(
_yy
, 
Y_RPC
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("40"); }

3729 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("41");

3730 
	`˛ic⁄_debug
(2,"rpc-stmt -> RPC id-arg-str {Ñpc-substmts }"); }

3736 { 
	`˛ic⁄_debug
(2,"rpc-substmts ->Ñpc-substmtsÑpc-substmt"); }

3742 { 
	`˛ic⁄_debug
(2,"rpc-substmts ->Ñpc-substmt"); }

3748 { 
	`˛ic⁄_debug
(2,"rpc-substmt -> if-feature-stmt"); }

3754 { 
	`˛ic⁄_debug
(2,"rpc-substmt -> status-stmt"); }

3760 { 
	`˛ic⁄_debug
(2,"rpc-substmt -> description-stmt"); }

3766 { 
	`˛ic⁄_debug
(2,"rpc-substmt ->Ñeference-stmt"); }

3772 { 
	`˛ic⁄_debug
(2,"rpc-substmt ->Åypedef-stmt"); }

3778 { 
	`˛ic⁄_debug
(2,"rpc-substmt -> grouping-stmt"); }

3784 { 
	`˛ic⁄_debug
(2,"rpc-substmt -> input-stmt"); }

3790 { 
	`˛ic⁄_debug
(2,"rpc-substmt -> output-stmt"); }

3796 { 
	`˛ic⁄_debug
(2,"rpc-substmt -> "); }

3802 { i‡(
	`y•_add_push
(
_yy
, 
Y_INPUT
, 
NULL
Ë=NULLË
	`_YYERROR
("42"); }

3808 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("43");

3809 
	`˛ic⁄_debug
(2,"input-stmt -> INPUT { input-substmts }"); }

3815 { 
	`˛ic⁄_debug
(2,"input-substmts -> input-substmts input-substmt"); }

3821 { 
	`˛ic⁄_debug
(2,"input-substmts -> input-substmt"); }

3827 { 
	`˛ic⁄_debug
(2,"input-substmt ->Åypedef-stmt"); }

3833 { 
	`˛ic⁄_debug
(2,"input-substmt -> grouping-stmt"); }

3839 { 
	`˛ic⁄_debug
(2,"input-substmt -> data-def-stmt"); }

3845 { 
	`˛ic⁄_debug
(2,"input-substmt -> "); }

3851 { i‡(
	`y•_add_push
(
_yy
, 
Y_OUTPUT
, 
NULL
Ë=NULLË
	`_YYERROR
("44"); }

3857 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("45");

3858 
	`˛ic⁄_debug
(2,"output-stmt -> OUTPUT { input-substmts }"); }

3864 { i‡(
	`y•_add_push
(
_yy
, 
Y_TYPEDEF
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("46"); }

3870 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("47");

3871 
	`˛ic⁄_debug
(2,"typedef-stmt -> TYPEDEF id-arg-str {Åypedef-substmts }"); }

3877 { 
	`˛ic⁄_debug
(2,"typedef-substmts ->Åypedef-substmtsÅypedef-substmt"); }

3883 { 
	`˛ic⁄_debug
(2,"typedef-substmts ->Åypedef-substmt"); }

3889 { 
	`˛ic⁄_debug
(2,"typedef-substmt ->Åype-stmt"); }

3895 { 
	`˛ic⁄_debug
(2,"typedef-substmt -> units-stmt"); }

3901 { 
	`˛ic⁄_debug
(2,"typedef-substmt -> default-stmt"); }

3907 { 
	`˛ic⁄_debug
(2,"typedef-substmt -> status-stmt"); }

3913 { 
	`˛ic⁄_debug
(2,"typedef-substmt -> description-stmt"); }

3919 { 
	`˛ic⁄_debug
(2,"typedef-substmt ->Ñeference-stmt"); }

3925 { 
	`˛ic⁄_debug
(2,"typedef-substmt -> unknown-stmt");}

3931 { 
	`˛ic⁄_debug
(2,"typedef-substmt -> "); }

3937 { i‡(
	`y•_add
(
_yy
, 
Y_TYPE
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("48");

3938 
	`˛ic⁄_debug
(2,"type-stmt -> TYPE identifier-ref-arg-str ;");}

3944 { i‡(
	`y•_add_push
(
_yy
, 
Y_TYPE
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("49");

3951 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("50");

3952 
	`˛ic⁄_debug
(2,"type-stmt -> TYPE identifier-ref-arg-str {Åype-body-stmts }");}

3958 { 
	`˛ic⁄_debug
(2,"type-body-stmts ->Åype-body-stmtsÅype-body-stmt"); }

3964 { 
	`˛ic⁄_debug
(2,"type-body-stmts ->Åype-body-stmt"); }

3970 { 
	`˛ic⁄_debug
(2,"type-body-stmt ->Ñange-stmt"); }

3976 { 
	`˛ic⁄_debug
(2,"type-body-stmt -> fraction-digits-stmt"); }

3982 { 
	`˛ic⁄_debug
(2,"type-body-stmt ->Üength-stmt"); }

3988 { 
	`˛ic⁄_debug
(2,"type-body-stmt ->Öattern-stmt"); }

3994 { 
	`˛ic⁄_debug
(2,"type-body-stmt ->Énum-stmt"); }

4000 { 
	`˛ic⁄_debug
(2,"type-body-stmt ->Öath-stmt"); }

4006 { 
	`˛ic⁄_debug
(2,"type-body-stmt ->Ñequire-instance-stmt"); }

4012 { 
	`˛ic⁄_debug
(2,"type-body-stmt -> base-stmt"); }

4018 { 
	`˛ic⁄_debug
(2,"type-body-stmt -> bit-stmt"); }

4024 { 
	`˛ic⁄_debug
(2,"type-body-stmt ->Åype-stmt"); }

4030 { i‡(
	`y•_add_push
(
_yy
, 
Y_GROUPING
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("51"); }

4036 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("52");

4037 
	`˛ic⁄_debug
(2,"grouping-stmt -> GROUPING id-arg-str { grouping-substmts }"); }

4043 { 
	`˛ic⁄_debug
(2,"grouping-substmts -> grouping-substmts grouping-substmt"); }

4049 { 
	`˛ic⁄_debug
(2,"grouping-substmts -> grouping-substmt"); }

4055 { 
	`˛ic⁄_debug
(2,"grouping-substmt -> status-stmt"); }

4061 { 
	`˛ic⁄_debug
(2,"grouping-substmt -> description-stmt"); }

4067 { 
	`˛ic⁄_debug
(2,"grouping-substmt ->Ñeference-stmt"); }

4073 { 
	`˛ic⁄_debug
(2,"grouping-substmt ->Åypedef-stmt"); }

4079 { 
	`˛ic⁄_debug
(2,"grouping-substmt -> grouping-stmt"); }

4085 { 
	`˛ic⁄_debug
(2,"grouping-substmt -> data-def-stmt"); }

4091 { 
	`˛ic⁄_debug
(2,"grouping-substmt -> "); }

4097 { i‡(
	`y•_add
(
_yy
, 
Y_LENGTH
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("53");

4098 
	`˛ic⁄_debug
(2,"length-stmt -> LENGTH string ;"); }

4104 { i‡(
	`y•_add_push
(
_yy
, 
Y_LENGTH
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("54"); }

4110 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("55");

4111 
	`˛ic⁄_debug
(2,"length-stmt -> LENGTH string {Üength-substmts }"); }

4117 { 
	`˛ic⁄_debug
(2,"length-substmts ->Üength-substmtsÜength-substmt"); }

4123 { 
	`˛ic⁄_debug
(2,"length-substmts ->Üength-substmt"); }

4129 { 
	`˛ic⁄_debug
(2,"length-substmt ->Érror-message-stmt");}

4135 { 
	`˛ic⁄_debug
(2,"length-substmt -> description-stmt"); }

4141 { 
	`˛ic⁄_debug
(2,"length-substmt ->Ñeference-stmt"); }

4147 { 
	`˛ic⁄_debug
(2,"length-substmt -> unknown-stmt");}

4153 { 
	`˛ic⁄_debug
(2,"length-substmt -> "); }

4159 { i‡(
	`y•_add
(
_yy
, 
Y_PATTERN
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("56");

4160 
	`˛ic⁄_debug
(2,"pattern-stmt -> PATTERN string ;"); }

4166 { i‡(
	`y•_add_push
(
_yy
, 
Y_PATTERN
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("57"); }

4172 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("58");

4173 
	`˛ic⁄_debug
(2,"pattern-stmt -> PATTERN string {Öattern-substmts }"); }

4179 { 
	`˛ic⁄_debug
(2,"pattern-substmts ->Öattern-substmtsÖattern-substmt"); }

4185 { 
	`˛ic⁄_debug
(2,"pattern-substmts ->Öattern-substmt"); }

4191 { 
	`˛ic⁄_debug
(2,"pattern-substmt ->Ñeference-stmt"); }

4197 { 
	`˛ic⁄_debug
(2,"pattern-substmt ->Érror-message-stmt");}

4203 { 
	`˛ic⁄_debug
(2,"pattern-substmt -> unknown-stmt");}

4209 { 
	`˛ic⁄_debug
(2,"pattern-substmt -> "); }

4215 { i‡(
	`y•_add
(
_yy
, 
Y_EXTENSION
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("59");

4216 
	`˛ic⁄_debug
(2,"extenstion-stmt -> EXTENSION id-arg-str ;"); }

4222 { i‡(
	`y•_add_push
(
_yy
, 
Y_EXTENSION
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("60"); }

4228 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("61");

4229 
	`˛ic⁄_debug
(2,"extension-stmt -> FEATURE id-arg-str {Éxtension-substmts }"); }

4235 { 
	`˛ic⁄_debug
(2,"extension-substmts ->Éxtension-substmtsÉxtension-substmt"); }

4241 { 
	`˛ic⁄_debug
(2,"extension-substmts ->Éxtension-substmt"); }

4247 { 
	`˛ic⁄_debug
(2,"extension-substmt ->árgument-stmt"); }

4253 { 
	`˛ic⁄_debug
(2,"extension-substmt -> status-stmt"); }

4259 { 
	`˛ic⁄_debug
(2,"extension-substmt -> description-stmt"); }

4265 { 
	`˛ic⁄_debug
(2,"extension-substmt ->Ñeference-stmt"); }

4271 { 
	`˛ic⁄_debug
(2,"extension-substmt -> unknown-stmt");}

4277 { 
	`˛ic⁄_debug
(2,"extension-substmt -> "); }

4283 { 
	`‰ì
((
yyv•
[-1].
°rög
)); }

4289 { 
	`‰ì
((
yyv•
[-2].
°rög
)); }

4295 { i‡(
	`y•_add
(
_yy
, 
Y_FEATURE
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("62");

4296 
	`˛ic⁄_debug
(2,"feature-stmt -> FEATURE id-arg-str ;"); }

4302 { i‡(
	`y•_add_push
(
_yy
, 
Y_FEATURE
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("63"); }

4308 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("64");

4309 
	`˛ic⁄_debug
(2,"feature-stmt -> FEATURE id-arg-str { feature-substmts }"); }

4315 { 
	`˛ic⁄_debug
(2,"feature-substmts -> feature-substmts feature-substmt"); }

4321 { 
	`˛ic⁄_debug
(2,"feature-substmts -> feature-substmt"); }

4327 { 
	`˛ic⁄_debug
(2,"feature-substmt -> if-feature-stmt"); }

4333 { 
	`˛ic⁄_debug
(2,"feature-substmt -> status-stmt"); }

4339 { 
	`˛ic⁄_debug
(2,"feature-substmt -> description-stmt"); }

4345 { 
	`˛ic⁄_debug
(2,"feature-substmt ->Ñeference-stmt"); }

4351 { 
	`˛ic⁄_debug
(2,"feature-substmt -> unknown-stmt");}

4357 { 
	`˛ic⁄_debug
(2,"feature-substmt -> "); }

4363 { i‡(
	`y•_add
(
_yy
, 
Y_IDENTITY
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("65");

4364 
	`˛ic⁄_debug
(2,"identity-stmt -> IDENTITY string ;"); }

4370 { i‡(
	`y•_add_push
(
_yy
, 
Y_IDENTITY
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("66"); }

4376 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("67");

4377 
	`˛ic⁄_debug
(2,"identity-stmt -> IDENTITY string { identity-substmts }"); }

4383 { 
	`˛ic⁄_debug
(2,"identity-substmts -> identity-substmts identity-substmt"); }

4389 { 
	`˛ic⁄_debug
(2,"identity-substmts -> identity-substmt"); }

4395 { 
	`˛ic⁄_debug
(2,"identity-substmt -> base-stmt"); }

4401 { 
	`˛ic⁄_debug
(2,"identity-substmt -> status-stmt"); }

4407 { 
	`˛ic⁄_debug
(2,"identity-substmt -> description-stmt"); }

4413 { 
	`˛ic⁄_debug
(2,"identity-substmt ->Ñeference-stmt"); }

4419 { 
	`˛ic⁄_debug
(2,"identity-substmt -> unknown-stmt");}

4425 { 
	`˛ic⁄_debug
(2,"identity-substmt -> "); }

4431 { i‡(
	`y•_add
(
_yy
, 
Y_RANGE
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("68");

4432 
	`˛ic⁄_debug
(2,"range-stmt -> RANGE string ;"); }

4438 { i‡(
	`y•_add_push
(
_yy
, 
Y_RANGE
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("69"); }

4444 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("70");

4445 
	`˛ic⁄_debug
(2,"range-stmt -> RANGE string {Ñange-substmts }"); }

4451 { 
	`˛ic⁄_debug
(2,"range-substmts ->Ñange-substmtsÑange-substmt"); }

4457 { 
	`˛ic⁄_debug
(2,"range-substmts ->Ñange-substmt"); }

4463 { 
	`˛ic⁄_debug
(2,"range-substmt ->Érror-message-stmt");}

4469 { 
	`˛ic⁄_debug
(2,"range-substmt -> description-stmt"); }

4475 { 
	`˛ic⁄_debug
(2,"range-substmt ->Ñeference-stmt"); }

4481 { 
	`˛ic⁄_debug
(2,"range-substmt -> unknown-stmt");}

4487 { 
	`˛ic⁄_debug
(2,"range-substmt -> "); }

4493 { i‡(
	`y•_add
(
_yy
, 
Y_ENUM
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("71");

4494 
	`˛ic⁄_debug
(2,"enum-stmt -> ENUM string ;"); }

4500 { i‡(
	`y•_add_push
(
_yy
, 
Y_ENUM
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("72"); }

4506 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("73");

4507 
	`˛ic⁄_debug
(2,"enum-stmt -> ENUM string {Énum-substmts }"); }

4513 { 
	`˛ic⁄_debug
(2,"enum-substmts ->Énum-substmtsÉnum-substmt"); }

4519 { 
	`˛ic⁄_debug
(2,"enum-substmts ->Énum-substmt"); }

4525 { 
	`˛ic⁄_debug
(2,"enum-substmt -> value-stmt"); }

4531 { 
	`˛ic⁄_debug
(2,"enum-substmt -> status-stmt"); }

4537 { 
	`˛ic⁄_debug
(2,"enum-substmt -> description-stmt"); }

4543 { 
	`˛ic⁄_debug
(2,"enum-substmt ->Ñeference-stmt"); }

4549 { 
	`˛ic⁄_debug
(2,"enum-substmt -> unknown-stmt");}

4555 { 
	`˛ic⁄_debug
(2,"enum-substmt -> "); }

4561 { i‡(
	`y•_add
(
_yy
, 
Y_BIT
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("74");

4562 
	`˛ic⁄_debug
(2,"bit-stmt -> BIT string ;"); }

4568 { i‡(
	`y•_add_push
(
_yy
, 
Y_BIT
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("75"); }

4574 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("76");

4575 
	`˛ic⁄_debug
(2,"bit-stmt -> BIT string { bit-substmts }"); }

4581 { 
	`˛ic⁄_debug
(2,"bit-substmts -> bit-substmts bit-substmt"); }

4587 { 
	`˛ic⁄_debug
(2,"bit-substmts -> bit-substmt"); }

4593 { 
	`˛ic⁄_debug
(2,"bit-substmt ->Öositition-stmt"); }

4599 { 
	`˛ic⁄_debug
(2,"bit-substmt -> status-stmt"); }

4605 { 
	`˛ic⁄_debug
(2,"bit-substmt -> description-stmt"); }

4611 { 
	`˛ic⁄_debug
(2,"bit-substmt ->Ñeference-stmt"); }

4617 { 
	`˛ic⁄_debug
(2,"bit-substmt -> "); }

4623 { i‡(
	`y•_add
(
_yy
, 
Y_MUST
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("77");

4624 
	`˛ic⁄_debug
(2,"must-stmt -> MUST string ;"); }

4630 { i‡(
	`y•_add_push
(
_yy
, 
Y_MUST
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("78"); }

4636 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("79");

4637 
	`˛ic⁄_debug
(2,"must-stmt -> MUST string { must-substmts }"); }

4643 { 
	`˛ic⁄_debug
(2,"must-substmts -> must-substmts must-substmt"); }

4649 { 
	`˛ic⁄_debug
(2,"must-substmts -> must-substmt"); }

4655 { 
	`˛ic⁄_debug
(2,"must-substmt ->Érror-message-stmt"); }

4661 { 
	`˛ic⁄_debug
(2,"must-substmt -> description-stmt"); }

4667 { 
	`˛ic⁄_debug
(2,"must-substmt ->Ñeference-stmt"); }

4673 { 
	`˛ic⁄_debug
(2,"must-substmt -> "); }

4679 { i‡(
	`y•_add
(
_yy
, 
Y_ERROR_MESSAGE
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("80"); }

4685 { i‡(
	`y•_add_push
(
_yy
, 
Y_IMPORT
, (
yyv•
[0].
°rög
)Ë=
NULL
Ë
	`_YYERROR
("81"); }

4691 { i‡(
	`y°ack_p›
(
_yy
Ë< 0Ë
	`_YYERROR
("82");

4692 
	`˛ic⁄_debug
(2,"import-stmt -> IMPORT id-arg-str { import-substmts }");}

4698 { 
	`˛ic⁄_debug
(2,"import-substmts -> import-substmts import-substm");}

4704 { 
	`˛ic⁄_debug
(2,"import-substmts ->");}

4710 { 
	`˛ic⁄_debug
(2,"import-stmt ->Örefix-stmt"); }

4716 { 
	`˛ic⁄_debug
(2,"import-stmt ->Ñevision-date-stmt"); }

4722 { i‡(
	`y•_add
(
_yy
, 
Y_YANG_VERSION
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("83");

4723 
	`˛ic⁄_debug
(2,"yang-version-stmt -> YANG-VERSION string"); }

4729 { i‡(
	`y•_add
(
_yy
, 
Y_FRACTION_DIGITS
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("84");

4730 
	`˛ic⁄_debug
(2,"fraction-digits-stmt -> FRACTION-DIGITS string"); }

4736 { i‡(
	`y•_add
(
_yy
, 
Y_IF_FEATURE
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("85");

4737 
	`˛ic⁄_debug
(2,"if-feature-stmt -> IF-FEATURE identifier-ref-arg-str"); }

4743 { i‡(
	`y•_add
(
_yy
, 
Y_VALUE
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("86");

4744 
	`˛ic⁄_debug
(2,"value-stmt -> VALUE integer-value"); }

4750 { i‡(
	`y•_add
(
_yy
, 
Y_POSITION
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("87");

4751 
	`˛ic⁄_debug
(2,"position-stmt -> POSITION integer-value"); }

4757 { i‡(
	`y•_add
(
_yy
, 
Y_STATUS
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("88");

4758 
	`˛ic⁄_debug
(2,"status-stmt -> STATUS string"); }

4764 { i‡(
	`y•_add
(
_yy
, 
Y_CONFIG
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("89");

4765 
	`˛ic⁄_debug
(2,"config-stmt -> CONFIG config-arg-str"); }

4771 { i‡(
	`y•_add
(
_yy
, 
Y_BASE
, (
yyv•
[-1].
°rög
), 
NULL
)=NULLË
	`_YYERROR
("90");

4772 
	`˛ic⁄_debug
(2,"base-stmt -> BASE identifier-ref-arg-str"); }

4778 { i‡(
	`y•_add
(
_yy
, 
Y_PATH
, (
yyv•
[-1].
°rög
), 
NULL
)=NULLË
	`_YYERROR
("91");

4779 
	`˛ic⁄_debug
(2,"path-stmt -> PATH string"); }

4785 { i‡(
	`y•_add
(
_yy
, 
Y_REQUIRE_INSTANCE
, (
yyv•
[-1].
°rög
), 
NULL
)=NULLË
	`_YYERROR
("92");

4786 
	`˛ic⁄_debug
(2,"require-instance-stmt -> REQUIRE-INSTANCE string"); }

4792 { i‡(
	`y•_add
(
_yy
, 
Y_UNITS
, (
yyv•
[-1].
°rög
), 
NULL
)=NULLË
	`_YYERROR
("93");

4793 
	`˛ic⁄_debug
(2,"units-stmt -> UNITS string"); }

4799 { i‡(
	`y•_add
(
_yy
, 
Y_DEFAULT
, (
yyv•
[-1].
°rög
), 
NULL
)=NULLË
	`_YYERROR
("94");

4800 
	`˛ic⁄_debug
(2,"default-stmt -> DEFAULT string"); }

4806 { i‡(
	`y•_add
(
_yy
, 
Y_CONTACT
, (
yyv•
[-1].
°rög
), 
NULL
)=NULLË
	`_YYERROR
("95");

4807 
	`˛ic⁄_debug
(2,"contact-stmt -> CONTACT string"); }

4813 { i‡(
	`y•_add
(
_yy
, 
Y_REVISION_DATE
, (
yyv•
[-1].
°rög
), 
NULL
Ë=NULLË
	`_YYERROR
("96");

4814 
	`˛ic⁄_debug
(2,"revision-date-stmt -> date;"); }

4820 { i‡(
	`y•_add
(
_yy
, 
Y_INCLUDE
, (
yyv•
[-1].
°rög
), 
NULL
)=NULLË
	`_YYERROR
("97");

4821 
	`˛ic⁄_debug
(2,"include-stmt -> id-arg-str"); }

4827 { i‡(
	`y•_add
(
_yy
, 
Y_INCLUDE
, (
yyv•
[-3].
°rög
), 
NULL
)=NULLË
	`_YYERROR
("98");

4828 
	`˛ic⁄_debug
(2,"include-stmt -> id-arg-str {Ñevision-date-stmt }"); }

4834 { i‡(
	`y•_add
(
_yy
, 
Y_NAMESPACE
, (
yyv•
[-1].
°rög
), 
NULL
)=NULLË
	`_YYERROR
("99");

4835 
	`˛ic⁄_debug
(2,"namespace-stmt -> NAMESPACE string"); }

4841 { i‡(
	`y•_add
(
_yy
, 
Y_PREFIX
, (
yyv•
[-1].
°rög
), 
NULL
)=NULLË
	`_YYERROR
("100");

4842 
	`˛ic⁄_debug
(2,"prefix-stmt -> PREFIX string ;");}

4848 { i‡(
	`y•_add
(
_yy
, 
Y_DESCRIPTION
, (
yyv•
[-1].
°rög
), 
NULL
)=NULLË
	`_YYERROR
("101");

4849 
	`˛ic⁄_debug
(2,"description-stmt -> DESCRIPTION string ;");}

4855 { i‡(
	`y•_add
(
_yy
, 
Y_ORGANIZATION
, (
yyv•
[-1].
°rög
), 
NULL
)=NULLË
	`_YYERROR
("102");

4856 
	`˛ic⁄_debug
(2,"organization-stmt -> ORGANIZATION string ;");}

4862 { i‡(
	`y•_add
(
_yy
, 
Y_MIN_ELEMENTS
, (
yyv•
[-1].
°rög
), 
NULL
)=NULLË
	`_YYERROR
("103");

4863 
	`˛ic⁄_debug
(2,"min-elements-stmt -> MIN-ELEMENTS integer ;");}

4869 { i‡(
	`y•_add
(
_yy
, 
Y_MAX_ELEMENTS
, (
yyv•
[-1].
°rög
), 
NULL
)=NULLË
	`_YYERROR
("104");

4870 
	`˛ic⁄_debug
(2,"max-elements-stmt -> MIN-ELEMENTS integer ;");}

4876 { i‡(
	`y•_add
(
_yy
, 
Y_REFERENCE
, (
yyv•
[-1].
°rög
), 
NULL
)=NULLË
	`_YYERROR
("105");

4877 
	`˛ic⁄_debug
(2,"reference-stmt -> REFERENCE string ;");}

4883 { 
y™g_°mt
 *
ys
;

4884 i‡((
ys
 = 
	`y•_add
(
_yy
, 
Y_MANDATORY
, (
yyv•
[-1].
°rög
), 
NULL
))=NULLË
	`_YYERROR
("106");

4885 
	`˛ic⁄_debug
(2,"mandatory-stmt -> MANDATORY mandatory-arg-str ;");}

4891 { 
y™g_°mt
 *
ys
;

4892 i‡((
ys
 = 
	`y•_add
(
_yy
, 
Y_PRESENCE
, (
yyv•
[-1].
°rög
), 
NULL
))=NULLË
	`_YYERROR
("107");

4893 
	`˛ic⁄_debug
(2,"presence-stmt -> PRESENCE string ;");}

4899 { 
y™g_°mt
 *
ys
;

4900 i‡((
ys
 = 
	`y•_add
(
_yy
, 
Y_ORDERED_BY
, (
yyv•
[-1].
°rög
), 
NULL
))=NULLË
	`_YYERROR
("108");

4901 
	`˛ic⁄_debug
(2,"ordered-by-stmt -> ORDERED-BY ordered-by-arg ;");}

4907 { i‡(
	`y•_add
(
_yy
, 
Y_KEY
, (
yyv•
[-1].
°rög
), 
NULL
)=NULLË
	`_YYERROR
("109");

4908 
	`˛ic⁄_debug
(2,"key-stmt -> KEY id-arg-str ;");}

4914 { i‡(
	`y•_add
(
_yy
, 
Y_UNIQUE
, (
yyv•
[-1].
°rög
), 
NULL
)=NULLË
	`_YYERROR
("110");

4915 
	`˛ic⁄_debug
(2,"key-stmt -> KEY id-arg-str ;");}

4921 { (
yyvÆ
.
°rög
)=(
yyv•
[0].string); }

4927 { (
yyvÆ
.
°rög
)=(
yyv•
[0].string); }

4933 { i‡(((
yyvÆ
.
°rög
)=
	`¥efix_id_joö
(
NULL
, (
yyv•
[0].°rög))Ë=NULLË
	`_YYERROR
("111");

4934 
	`˛ic⁄_debug
(2,"identifier-ref-arg-str -> string"); }

4940 { i‡(((
yyvÆ
.
°rög
)=
	`¥efix_id_joö
((
yyv•
[-2].°rög), (yyv•[0].°rög))Ë=
NULL
Ë
	`_YYERROR
("112");

4941 
	`˛ic⁄_debug
(2,"identifier-ref-arg-str ->Örefix : string"); }

4947 { (
yyvÆ
.
°rög
)=(
yyv•
[0].°rög); 
	`˛ic⁄_debug
(2,"id-arg-str -> string"); }

4953 { (
yyvÆ
.
°rög
)=(
yyv•
[0].°rög); 
	`˛ic⁄_debug
(2,"string -> qstrings (%s)", (yyvsp[0].string)); }

4959 { (
yyvÆ
.
°rög
)=(
yyv•
[0].°rög); 
	`˛ic⁄_debug
(2,"string -> ustring (%s)", (yyvsp[0].string)); }

4966 
Àn
 = 
	`°æí
((
yyv•
[-2].
°rög
));

4967 (
yyvÆ
.
°rög
Ë
	`ªÆloc
((
yyv•
[-2].°rög), 
Àn
 + 
	`°æí
((yyvsp[0].string)) + 1);

4968 
	`•rötf
((
yyvÆ
.
°rög
)+
Àn
, "%s", (
yyv•
[0].string));

4969 
	`‰ì
((
yyv•
[0].
°rög
));

4970 
	`˛ic⁄_debug
(2,"qstrings-> qstrings + qstring");

4977 { (
yyvÆ
.
°rög
)=(
yyv•
[0].°rög); 
	`˛ic⁄_debug
(2,"qstrings-> qstring"); }

4983 { (
yyvÆ
.
°rög
)=(
yyv•
[-1].°rög); 
	`˛ic⁄_debug
(2,"string-> \" ustring \""); }

4990 
Àn
 = 
	`°æí
((
yyv•
[-1].
°rög
));

4991 (
yyvÆ
.
°rög
Ë
	`ªÆloc
((
yyv•
[-1].°rög), 
Àn
+
	`°æí
((yyvsp[0].string)) + 1);

4992 
	`•rötf
((
yyvÆ
.
°rög
)+
Àn
, "%s", (
yyv•
[0].string));

4993 
	`‰ì
((
yyv•
[0].
°rög
));

5000 {(
yyvÆ
.
°rög
)=(
yyv•
[0].string); }

5019 
	`YY_SYMBOL_PRINT
 ("-> $$ =", 
yyr1
[
yyn
], &
yyvÆ
, &
yyloc
);

5021 
	`YYPOPSTACK
 (
yyÀn
);

5022 
yyÀn
 = 0;

5023 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

5025 *++
yyv•
 = 
yyvÆ
;

5031 
yyn
 = 
yyr1
[yyn];

5033 
yy°©e
 = 
yypgŸo
[
yyn
 - 
YYNTOKENS
] + *
yys•
;

5034 i‡(0 <
yy°©e
 && yy°©ê<
YYLAST
 && 
yycheck
[yy°©e] =*
yys•
)

5035 
yy°©e
 = 
yyèbÀ
[yystate];

5037 
yy°©e
 = 
yydefgŸo
[
yyn
 - 
YYNTOKENS
];

5039 
yy√w°©e
;

5045 
yyîæab
:

5048 
yytokí
 = 
yych¨
 =
YYEMPTY
 ? YYEMPTY : 
	`YYTRANSLATE
 (yychar);

5051 i‡(!
yyîr°©us
)

5053 ++
yy√ºs
;

5054 #i‡! 
YYERROR_VERBOSE


5055 
	`yyîr‹
 (
_yy
, 
	`YY_
("syntaxÉrror"));

5057 
	#YYSYNTAX_ERROR
 
	`yysy¡ax_îr‹
 (&
yymsg_Æloc
, &
yymsg
, \

5058 
yys•
, 
yytokí
)

	)

5060 c⁄° *
yymsgp
 = 
	`YY_
("syntaxÉrror");

5061 
yysy¡ax_îr‹_°©us
;

5062 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

5063 i‡(
yysy¡ax_îr‹_°©us
 == 0)

5064 
yymsgp
 = 
yymsg
;

5065 i‡(
yysy¡ax_îr‹_°©us
 == 1)

5067 i‡(
yymsg
 !
yymsgbuf
)

5068 
	`YYSTACK_FREE
 (
yymsg
);

5069 
yymsg
 = (*Ë
	`YYSTACK_ALLOC
 (
yymsg_Æloc
);

5070 i‡(!
yymsg
)

5072 
yymsg
 = 
yymsgbuf
;

5073 
yymsg_Æloc
 =  
yymsgbuf
;

5074 
yysy¡ax_îr‹_°©us
 = 2;

5078 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

5079 
yymsgp
 = 
yymsg
;

5082 
	`yyîr‹
 (
_yy
, 
yymsgp
);

5083 i‡(
yysy¡ax_îr‹_°©us
 == 2)

5084 
yyexhau°edœb
;

5086 #unde‡
YYSYNTAX_ERROR


5092 i‡(
yyîr°©us
 == 3)

5097 i‡(
yych¨
 <
YYEOF
)

5100 i‡(
yych¨
 =
YYEOF
)

5101 
YYABORT
;

5105 
	`yyde°ru˘
 ("Error: discarding",

5106 
yytokí
, &
yylvÆ
, 
_yy
);

5107 
yych¨
 = 
YYEMPTY
;

5113 
yyîæab1
;

5119 
yyîr‹œb
:

5125 
yyîr‹œb
;

5129 
	`YYPOPSTACK
 (
yyÀn
);

5130 
yyÀn
 = 0;

5131 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

5132 
yy°©e
 = *
yys•
;

5133 
yyîæab1
;

5139 
yyîæab1
:

5140 
yyîr°©us
 = 3;

5144 
yyn
 = 
yy∑˘
[
yy°©e
];

5145 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

5147 
yyn
 +
YYTERROR
;

5148 i‡(0 <
yyn
 && yy¿<
YYLAST
 && 
yycheck
[yyn] =
YYTERROR
)

5150 
yyn
 = 
yyèbÀ
[yyn];

5151 i‡(0 < 
yyn
)

5157 i‡(
yys•
 =
yyss
)

5158 
YYABORT
;

5161 
	`yyde°ru˘
 ("Error:Öopping",

5162 
yy°os
[
yy°©e
], 
yyv•
, 
_yy
);

5163 
	`YYPOPSTACK
 (1);

5164 
yy°©e
 = *
yys•
;

5165 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

5168 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


5169 *++
yyv•
 = 
yylvÆ
;

5170 
YY_IGNORE_MAYBE_UNINITIALIZED_END


5174 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yy°os
[
yyn
], 
yyv•
, 
yyl•
);

5176 
yy°©e
 = 
yyn
;

5177 
yy√w°©e
;

5183 
yyac˚±œb
:

5184 
yyªsu…
 = 0;

5185 
yyªtu∫
;

5190 
yyab‹éab
:

5191 
yyªsu…
 = 1;

5192 
yyªtu∫
;

5194 #i‡!
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


5198 
yyexhau°edœb
:

5199 
	`yyîr‹
 (
_yy
, 
	`YY_
("memoryÉxhausted"));

5200 
yyªsu…
 = 2;

5204 
yyªtu∫
:

5205 i‡(
yych¨
 !
YYEMPTY
)

5209 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

5210 
	`yyde°ru˘
 ("Cleanup: discardingÜookahead",

5211 
yytokí
, &
yylvÆ
, 
_yy
);

5215 
	`YYPOPSTACK
 (
yyÀn
);

5216 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

5217 
yys•
 !
yyss
)

5219 
	`yyde°ru˘
 ("Cleanup:Öopping",

5220 
yy°os
[*
yys•
], 
yyv•
, 
_yy
);

5221 
	`YYPOPSTACK
 (1);

5223 #i‚de‡
yyovîÊow


5224 i‡(
yyss
 !
yysß
)

5225 
	`YYSTACK_FREE
 (
yyss
);

5227 #i‡
YYERROR_VERBOSE


5228 i‡(
yymsg
 !
yymsgbuf
)

5229 
	`YYSTACK_FREE
 (
yymsg
);

5231  
yyªsu…
;

5232 
	}
}

	@clixon-master/lib/src/clixon_yang_parse.tab.h

33 #i‚de‡
YY_CLIXON_YANG_PARSE_Y_TAB_H_INCLUDED


34 
	#YY_CLIXON_YANG_PARSE_Y_TAB_H_INCLUDED


	)

36 #i‚de‡
YYDEBUG


37 
	#YYDEBUG
 0

	)

39 #i‡
YYDEBUG


40 
˛ix⁄_y™g_∑r£debug
;

44 #i‚de‡
YYTOKENTYPE


45 
	#YYTOKENTYPE


	)

46 
	eyytokíty≥


48 
	mMY_EOF
 = 258,

49 
	mDQ
 = 259,

50 
	mCHAR
 = 260,

51 
	mK_ANYXML
 = 261,

52 
	mK_ARGUMENT
 = 262,

53 
	mK_AUGMENT
 = 263,

54 
	mK_BASE
 = 264,

55 
	mK_BELONGS_TO
 = 265,

56 
	mK_BIT
 = 266,

57 
	mK_CASE
 = 267,

58 
	mK_CHOICE
 = 268,

59 
	mK_CONFIG
 = 269,

60 
	mK_CONTACT
 = 270,

61 
	mK_CONTAINER
 = 271,

62 
	mK_DEFAULT
 = 272,

63 
	mK_DESCRIPTION
 = 273,

64 
	mK_DEVIATE
 = 274,

65 
	mK_DEVIATION
 = 275,

66 
	mK_ENUM
 = 276,

67 
	mK_ERROR_APP_TAG
 = 277,

68 
	mK_ERROR_MESSAGE
 = 278,

69 
	mK_EXTENSION
 = 279,

70 
	mK_FEATURE
 = 280,

71 
	mK_FRACTION_DIGITS
 = 281,

72 
	mK_GROUPING
 = 282,

73 
	mK_IDENTITY
 = 283,

74 
	mK_IF_FEATURE
 = 284,

75 
	mK_IMPORT
 = 285,

76 
	mK_INCLUDE
 = 286,

77 
	mK_INPUT
 = 287,

78 
	mK_KEY
 = 288,

79 
	mK_LEAF
 = 289,

80 
	mK_LEAF_LIST
 = 290,

81 
	mK_LENGTH
 = 291,

82 
	mK_LIST
 = 292,

83 
	mK_MANDATORY
 = 293,

84 
	mK_MAX_ELEMENTS
 = 294,

85 
	mK_MIN_ELEMENTS
 = 295,

86 
	mK_MODULE
 = 296,

87 
	mK_MUST
 = 297,

88 
	mK_NAMESPACE
 = 298,

89 
	mK_NOTIFICATION
 = 299,

90 
	mK_ORDERED_BY
 = 300,

91 
	mK_ORGANIZATION
 = 301,

92 
	mK_OUTPUT
 = 302,

93 
	mK_PATH
 = 303,

94 
	mK_PATTERN
 = 304,

95 
	mK_POSITION
 = 305,

96 
	mK_PREFIX
 = 306,

97 
	mK_PRESENCE
 = 307,

98 
	mK_RANGE
 = 308,

99 
	mK_REFERENCE
 = 309,

100 
	mK_REFINE
 = 310,

101 
	mK_REQUIRE_INSTANCE
 = 311,

102 
	mK_REVISION
 = 312,

103 
	mK_REVISION_DATE
 = 313,

104 
	mK_RPC
 = 314,

105 
	mK_STATUS
 = 315,

106 
	mK_SUBMODULE
 = 316,

107 
	mK_TYPE
 = 317,

108 
	mK_TYPEDEF
 = 318,

109 
	mK_UNIQUE
 = 319,

110 
	mK_UNITS
 = 320,

111 
	mK_USES
 = 321,

112 
	mK_VALUE
 = 322,

113 
	mK_WHEN
 = 323,

114 
	mK_YANG_VERSION
 = 324,

115 
	mK_YIN_ELEMENT
 = 325

119 
	#MY_EOF
 258

	)

120 
	#DQ
 259

	)

121 
	#CHAR
 260

	)

122 
	#K_ANYXML
 261

	)

123 
	#K_ARGUMENT
 262

	)

124 
	#K_AUGMENT
 263

	)

125 
	#K_BASE
 264

	)

126 
	#K_BELONGS_TO
 265

	)

127 
	#K_BIT
 266

	)

128 
	#K_CASE
 267

	)

129 
	#K_CHOICE
 268

	)

130 
	#K_CONFIG
 269

	)

131 
	#K_CONTACT
 270

	)

132 
	#K_CONTAINER
 271

	)

133 
	#K_DEFAULT
 272

	)

134 
	#K_DESCRIPTION
 273

	)

135 
	#K_DEVIATE
 274

	)

136 
	#K_DEVIATION
 275

	)

137 
	#K_ENUM
 276

	)

138 
	#K_ERROR_APP_TAG
 277

	)

139 
	#K_ERROR_MESSAGE
 278

	)

140 
	#K_EXTENSION
 279

	)

141 
	#K_FEATURE
 280

	)

142 
	#K_FRACTION_DIGITS
 281

	)

143 
	#K_GROUPING
 282

	)

144 
	#K_IDENTITY
 283

	)

145 
	#K_IF_FEATURE
 284

	)

146 
	#K_IMPORT
 285

	)

147 
	#K_INCLUDE
 286

	)

148 
	#K_INPUT
 287

	)

149 
	#K_KEY
 288

	)

150 
	#K_LEAF
 289

	)

151 
	#K_LEAF_LIST
 290

	)

152 
	#K_LENGTH
 291

	)

153 
	#K_LIST
 292

	)

154 
	#K_MANDATORY
 293

	)

155 
	#K_MAX_ELEMENTS
 294

	)

156 
	#K_MIN_ELEMENTS
 295

	)

157 
	#K_MODULE
 296

	)

158 
	#K_MUST
 297

	)

159 
	#K_NAMESPACE
 298

	)

160 
	#K_NOTIFICATION
 299

	)

161 
	#K_ORDERED_BY
 300

	)

162 
	#K_ORGANIZATION
 301

	)

163 
	#K_OUTPUT
 302

	)

164 
	#K_PATH
 303

	)

165 
	#K_PATTERN
 304

	)

166 
	#K_POSITION
 305

	)

167 
	#K_PREFIX
 306

	)

168 
	#K_PRESENCE
 307

	)

169 
	#K_RANGE
 308

	)

170 
	#K_REFERENCE
 309

	)

171 
	#K_REFINE
 310

	)

172 
	#K_REQUIRE_INSTANCE
 311

	)

173 
	#K_REVISION
 312

	)

174 
	#K_REVISION_DATE
 313

	)

175 
	#K_RPC
 314

	)

176 
	#K_STATUS
 315

	)

177 
	#K_SUBMODULE
 316

	)

178 
	#K_TYPE
 317

	)

179 
	#K_TYPEDEF
 318

	)

180 
	#K_UNIQUE
 319

	)

181 
	#K_UNITS
 320

	)

182 
	#K_USES
 321

	)

183 
	#K_VALUE
 322

	)

184 
	#K_WHEN
 323

	)

185 
	#K_YANG_VERSION
 324

	)

186 
	#K_YIN_ELEMENT
 325

	)

189 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


191 
	uYYSTYPE


195 
	mötvÆ
;

196 *
	m°rög
;

201 
YYSTYPE
 
	tYYSTYPE
;

202 
	#YYSTYPE_IS_TRIVIAL
 1

	)

203 
	#YYSTYPE_IS_DECLARED
 1

	)

207 
YYSTYPE
 
˛ix⁄_y™g_∑r£lvÆ
;

209 
˛ix⁄_y™g_∑r£∑r£
 (*
_yy
);

	@clixon-master/lib/src/clixon_yang_type.c

37 #ifde‡
HAVE_CONFIG_H


38 
	~"˛ix⁄_c⁄fig.h
"

41 
	~<°dio.h
>

42 
	~<°dlib.h
>

43 
	~<î∫o.h
>

44 
	~<limôs.h
>

45 
	~<˘y≥.h
>

46 
	#__USE_GNU


	)

47 
	~<°rög.h
>

48 
	~<¨∑/öë.h
>

49 
	~<ªgex.h
>

50 
	~<sy¶og.h
>

51 
	~<as£π.h
>

52 
	~<√töë/ö.h
>

55 
	~<˛igí/˛igí.h
>

58 
	~"˛ix⁄_log.h
"

59 
	~"˛ix⁄_îr.h
"

60 
	~"˛ix⁄_°rög.h
"

61 
	~"˛ix⁄_queue.h
"

62 
	~"˛ix⁄_hash.h
"

63 
	~"˛ix⁄_h™dÀ.h
"

64 
	~"˛ix⁄_y™g.h
"

65 
	~"˛ix⁄_hash.h
"

66 
	~"˛ix⁄_xml.h
"

67 
	~"˛ix⁄_∂ugö.h
"

68 
	~"˛ix⁄_›ti⁄s.h
"

69 
	~"˛ix⁄_y™g.h
"

70 
	~"˛ix⁄_y™g_ty≥.h
"

78 c⁄° 
m≠_°r2öt
 
	gytm≠
[] = {

79 {"öt32", 
CGV_INT32
},

80 {"°rög", 
CGV_STRING
},

81 {"°rög", 
CGV_REST
},

82 {"bö¨y", 
CGV_STRING
},

83 {"bôs", 
CGV_STRING
},

84 {"boﬁón", 
CGV_BOOL
},

85 {"decimÆ64", 
CGV_DEC64
},

86 {"em±y", 
CGV_VOID
},

87 {"íumî©i⁄", 
CGV_STRING
},

88 {"idítôyªf", 
CGV_STRING
},

89 {"ö°™˚-idítifõr", 
CGV_STRING
},

90 {"öt8", 
CGV_INT8
},

91 {"öt16", 
CGV_INT16
},

92 {"öt64", 
CGV_INT64
},

93 {"Àa‰ef", 
CGV_STRING
},

94 {"uöt8", 
CGV_UINT8
},

95 {"uöt16", 
CGV_UINT16
},

96 {"uöt32", 
CGV_UINT32
},

97 {"uöt64", 
CGV_UINT64
},

98 {"uni⁄", 
CGV_REST
},

99 {
NULL
, -1}

104 
	$y™g_buûtö
(*
ty≥
)

106 i‡(
	`˛ic⁄_°r2öt
(
ytm≠
, 
ty≥
) != -1)

109 
	}
}

114 
	$y™g_ty≥_ˇche_£t
(
y™g_ty≥_ˇche
 **
yˇche0
,

115 
y™g_°mt
 *
ªsﬁved
,

116 
›ti⁄s
,

117 
cg_v¨
 *
möcv
,

118 
cg_v¨
 *
maxcv
,

119 *
∑âîn
,

120 
uöt8_t
 
‰a˘i⁄
)

122 
ªtvÆ
 = -1;

123 
y™g_ty≥_ˇche
 *
yˇche
 = *
yˇche0
;

125 
	`as£π
 (
yˇche
 =
NULL
);

126 i‡((
yˇche
 = (
y™g_ty≥_ˇche
 *)
	`mÆloc
((*yˇche))Ë=
NULL
){

127 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "malloc");

128 
d⁄e
;

130 
	`mem£t
(
yˇche
, 0, (*ycache));

131 *
yˇche0
 = 
yˇche
;

132 
yˇche
->
yc_ªsﬁved
 = 
ªsﬁved
;

133 
yˇche
->
yc_›ti⁄s
 = 
›ti⁄s
;

134 i‡(
möcv
 && (
yˇche
->
yc_möcv
 = 
	`cv_dup
(möcv)Ë=
NULL
){

135 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "cv_dup");

136 
d⁄e
;

138 i‡(
maxcv
 && (
yˇche
->
yc_maxcv
 = 
	`cv_dup
(maxcv)Ë=
NULL
){

139 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "cv_dup");

140 
d⁄e
;

142 i‡(
∑âîn
 && (
yˇche
->
yc_∑âîn
 = 
	`°rdup
’©ã∫)Ë=
NULL
){

143 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "strdup");

144 
d⁄e
;

146 
yˇche
->
yc_‰a˘i⁄
 = 
‰a˘i⁄
;

147 
ªtvÆ
 = 0;

148 
d⁄e
:

149  
ªtvÆ
;

150 
	}
}

154 
	$y™g_ty≥_ˇche_gë
(
y™g_ty≥_ˇche
 *
yˇche
,

155 
y™g_°mt
 **
ªsﬁved
,

156 *
›ti⁄s
,

157 
cg_v¨
 **
möcv
,

158 
cg_v¨
 **
maxcv
,

159 **
∑âîn
,

160 
uöt8_t
 *
‰a˘i⁄
)

162 i‡(
ªsﬁved
)

163 *
ªsﬁved
 = 
yˇche
->
yc_ªsﬁved
;

164 i‡(
›ti⁄s
)

165 *
›ti⁄s
 = 
yˇche
->
yc_›ti⁄s
;

166 i‡(
möcv
)

167 *
möcv
 = 
yˇche
->
yc_möcv
;

168 i‡(
maxcv
)

169 *
maxcv
 = 
yˇche
->
yc_maxcv
;

170 i‡(
∑âîn
)

171 *
∑âîn
 = 
yˇche
->
yc_∑âîn
;

172 i‡(
‰a˘i⁄
)

173 *
‰a˘i⁄
 = 
yˇche
->
yc_‰a˘i⁄
;

175 
	}
}

178 
	$y™g_ty≥_ˇche_˝
(
y™g_ty≥_ˇche
 **
y˙ew
,

179 
y™g_ty≥_ˇche
 *
ycﬁd
)

181 
ªtvÆ
 = -1;

182 
›ti⁄s
;

183 
cg_v¨
 *
möcv
;

184 
cg_v¨
 *
maxcv
;

185 *
∑âîn
;

186 
uöt8_t
 
‰a˘i⁄
;

187 
y™g_°mt
 *
ªsﬁved
;

189 
	`y™g_ty≥_ˇche_gë
(
ycﬁd
, &
ªsﬁved
, &
›ti⁄s
, &
möcv
, &
maxcv
, &
∑âîn
, &
‰a˘i⁄
);

190 i‡(
	`y™g_ty≥_ˇche_£t
(
y˙ew
, 
ªsﬁved
, 
›ti⁄s
, 
möcv
, 
maxcv
, 
∑âîn
, 
‰a˘i⁄
) < 0)

191 
d⁄e
;

192 
ªtvÆ
 = 0;

193 
d⁄e
:

194  
ªtvÆ
;

195 
	}
}

198 
	$y™g_ty≥_ˇche_‰ì
(
y™g_ty≥_ˇche
 *
yˇche
)

200 i‡(
yˇche
->
yc_möcv
)

201 
	`cv_‰ì
(
yˇche
->
yc_möcv
);

202 i‡(
yˇche
->
yc_maxcv
)

203 
	`cv_‰ì
(
yˇche
->
yc_maxcv
);

204 i‡(
yˇche
->
yc_∑âîn
)

205 
	`‰ì
(
yˇche
->
yc_∑âîn
);

206 
	`‰ì
(
yˇche
);

208 
	}
}

217 
	$ys_ªsﬁve_ty≥
(
y™g_°mt
 *
ys
,

218 *
¨g
)

220 
ªtvÆ
 = -1;

221 
›ti⁄s
 = 0x0;

222 
cg_v¨
 *
möcv
 = 
NULL
;

223 
cg_v¨
 *
maxcv
 = 
NULL
;

224 *
∑âîn
 = 
NULL
;

225 
uöt8_t
 
‰a˘i⁄
 = 0;

226 
y™g_°mt
 *
ªsﬁved
 = 
NULL
;

228 
	`as£π
(
ys
->
ys_keyw‹d
 =
Y_TYPE
);

229 i‡(
	`y™g_ty≥_ªsﬁve
((
y™g_°mt
*)
ys
->
ys_∑ª¡
, ys, &
ªsﬁved
,

230 &
›ti⁄s
, &
möcv
, &
maxcv
, &
∑âîn
, &
‰a˘i⁄
) < 0)

231 
d⁄e
;

233 i‡(
ªsﬁved
 && 
	`°rcmp
‘esﬁved->
ys_¨gumít
, "union")==0)

239 i‡(
	`y™g_ty≥_ˇche_£t
(&
ys
->
ys_ty≥ˇche
,

240 
ªsﬁved
, 
›ti⁄s
, 
möcv
, 
maxcv
, 
∑âîn
, 
‰a˘i⁄
) < 0)

241 
d⁄e
;

242 
ªtvÆ
 = 0;

243 
d⁄e
:

244  
ªtvÆ
;

245 
	}
}

256 
	$y™g2cv_ty≥
(*
yty≥
,

257 
cv_ty≥
 *cv_type)

259 
ªt
;

261 *
cv_ty≥
 = 
CGV_ERR
;

263 i‡((
ªt
 = 
	`˛ic⁄_°r2öt
(
ytm≠
, 
yty≥
)) != -1){

264 *
cv_ty≥
 = 
ªt
;

268 i‡(
	`°rcmp
("ùv4-addªss", 
yty≥
) == 0){

269 *
cv_ty≥
 = 
CGV_IPV4ADDR
;

272 i‡(
	`°rcmp
("ùv6-addªss", 
yty≥
) == 0){

273 *
cv_ty≥
 = 
CGV_IPV6ADDR
;

276 i‡(
	`°rcmp
("ùv4-¥efix", 
yty≥
) == 0){

277 *
cv_ty≥
 = 
CGV_IPV4PFX
;

280 i‡(
	`°rcmp
("ùv6-¥efix", 
yty≥
) == 0){

281 *
cv_ty≥
 = 
CGV_IPV6PFX
;

284 i‡(
	`°rcmp
("d©e-™d-time", 
yty≥
) == 0){

285 *
cv_ty≥
 = 
CGV_TIME
;

288 i‡(
	`°rcmp
("mac-addªss", 
yty≥
) == 0){

289 *
cv_ty≥
 = 
CGV_MACADDR
;

292 i‡(
	`°rcmp
("uuid", 
yty≥
) == 0){

293 *
cv_ty≥
 = 
CGV_UUID
;

297 
	}
}

302 
	$cv2y™g_ty≥
(
cv_ty≥
 cv_type)

304 *
yty≥
;

305 c⁄° *
°r
;

307 
yty≥
 = "empty";

309 i‡((
°r
 = 
	`˛ic⁄_öt2°r
(
ytm≠
, 
cv_ty≥
)Ë!
NULL
)

310  (*)
°r
;

313 i‡(
cv_ty≥
 =
CGV_IPV4ADDR
)

316 i‡(
cv_ty≥
 =
CGV_IPV6ADDR
)

319 i‡(
cv_ty≥
 =
CGV_IPV4PFX
)

322 i‡(
cv_ty≥
 =
CGV_IPV6PFX
)

325 i‡(
cv_ty≥
 =
CGV_TIME
)

328 i‡(
cv_ty≥
 =
CGV_MACADDR
)

331 i‡(
cv_ty≥
 =
CGV_UUID
)

334  
yty≥
;

335 
	}
}

347 
	$˛ic⁄_ty≥2cv
(*
‹igty≥
,

348 *
ª°y≥
,

349 
cv_ty≥
 *
cvty≥
)

351 
ªtvÆ
 = -1;

353 *
cvty≥
 = 
CGV_ERR
;

354 i‡(
ª°y≥
 !
NULL
){

355 
	`y™g2cv_ty≥
(
ª°y≥
, 
cvty≥
);

356 i‡(*
cvty≥
 =
CGV_ERR
){

357 
	`˛ic⁄_îr
(
OE_DB
, 0, "%s: \"%s\"Åy≥ÇŸÅøn¶©ed", 
__FUNCTION__
, 
ª°y≥
);

358 
d⁄e
;

366 
	`y™g2cv_ty≥
(
‹igty≥
, 
cvty≥
);

367 i‡(*
cvty≥
 =
CGV_ERR
){

368 
	`˛ic⁄_îr
(
OE_DB
, 0, "%s: \"%s\":Åy≥ÇŸÑesﬁved", 
__FUNCTION__
, 
‹igty≥
);

369 
d⁄e
;

372 
ªtvÆ
 = 0;

373 
d⁄e
:

374  
ªtvÆ
;

375 
	}
}

378 
	#ønge_check
(
i
, 
rmö
, 
rmax
, 
ty≥
) \

379 ((
rmö
 && (
i
Ë< 
cv_
##
ty≥
##
	`_gë
(rmin)) || \

380 (
rmax
 && (
i
Ë> 
cv_
##
ty≥
##
	`_gë
‘max)))

	)

389 
	$cv_vÆid©e1
(
cg_v¨
 *
cv
,

390 
cv_ty≥
 
cvty≥
,

391 
›ti⁄s
,

392 
cg_v¨
 *
ønge_mö
,

393 
cg_v¨
 *
ønge_max
,

394 *
∑âîn
,

395 
y™g_°mt
 *
yª°y≥
,

396 *
ª°y≥
,

397 **
ªas⁄
)

399 
ªtvÆ
 = 1;

400 
ªtvÆ2
;

401 
y™g_°mt
 *
yi
 = 
NULL
;

402 
uöt64_t
 
u
 = 0;

403 
öt64_t
 
i
 = 0;

404 *
°r
;

406 i‡(
ªas⁄
 && *reason){

407 
	`‰ì
(*
ªas⁄
);

408 *
ªas⁄
 = 
NULL
;

410 
cvty≥
){

411 
CGV_INT8
:

412 i‡((
›ti⁄s
 & 
YANG_OPTIONS_RANGE
) != 0){

413 
i
 = 
	`cv_öt8_gë
(
cv
);

414 i‡(
	`ønge_check
(
i
, 
ønge_mö
, 
ønge_max
, 
öt8
)){

415 i‡(
ªas⁄
)

416 *
ªas⁄
 = 
	`˛igí_ªas⁄
("Numbî ouào‡ønge: %ld", 
i
);

417 
ªtvÆ
 = 0;

422 
CGV_INT16
:

423 i‡((
›ti⁄s
 & 
YANG_OPTIONS_RANGE
) != 0){

424 
i
 = 
	`cv_öt16_gë
(
cv
);

425 i‡(
	`ønge_check
(
i
, 
ønge_mö
, 
ønge_max
, 
öt16
)){

426 i‡(
ªas⁄
)

427 *
ªas⁄
 = 
	`˛igí_ªas⁄
("Numbî ouào‡ønge: %ld", 
i
);

428 
ªtvÆ
 = 0;

433 
CGV_INT32
:

434 i‡((
›ti⁄s
 & 
YANG_OPTIONS_RANGE
) != 0){

435 
i
 = 
	`cv_öt32_gë
(
cv
);

436 i‡(
	`ønge_check
(
i
, 
ønge_mö
, 
ønge_max
, 
öt32
)){

437 i‡(
ªas⁄
)

438 *
ªas⁄
 = 
	`˛igí_ªas⁄
("Numbî ouào‡ønge: %ld", 
i
);

439 
ªtvÆ
 = 0;

444 
CGV_INT64
:

445 i‡((
›ti⁄s
 & 
YANG_OPTIONS_RANGE
) != 0){

446 
i
 = 
	`cv_öt64_gë
(
cv
);

447 i‡(
	`ønge_check
(
i
, 
ønge_mö
, 
ønge_max
, 
öt64
)){

448 i‡(
ªas⁄
)

449 *
ªas⁄
 = 
	`˛igí_ªas⁄
("Numbî ouào‡ønge: %ld", 
i
);

450 
ªtvÆ
 = 0;

455 
CGV_UINT8
:

456 i‡((
›ti⁄s
 & 
YANG_OPTIONS_RANGE
) != 0){

457 
u
 = 
	`cv_uöt8_gë
(
cv
);

458 i‡(
	`ønge_check
(
u
, 
ønge_mö
, 
ønge_max
, 
uöt8
)){

459 i‡(
ªas⁄
)

460 *
ªas⁄
 = 
	`˛igí_ªas⁄
("Numbî ouào‡ønge: %lu", 
u
);

461 
ªtvÆ
 = 0;

466 
CGV_UINT16
:

467 i‡((
›ti⁄s
 & 
YANG_OPTIONS_RANGE
) != 0){

468 
u
 = 
	`cv_uöt16_gë
(
cv
);

469 i‡(
	`ønge_check
(
u
, 
ønge_mö
, 
ønge_max
, 
uöt16
)){

470 i‡(
ªas⁄
)

471 *
ªas⁄
 = 
	`˛igí_ªas⁄
("Numbî ouào‡ønge: %lu", 
u
);

472 
ªtvÆ
 = 0;

477 
CGV_UINT32
:

478 i‡((
›ti⁄s
 & 
YANG_OPTIONS_RANGE
) != 0){

479 
u
 = 
	`cv_uöt32_gë
(
cv
);

480 i‡(
	`ønge_check
(
u
, 
ønge_mö
, 
ønge_max
, 
uöt32
)){

481 i‡(
ªas⁄
)

482 *
ªas⁄
 = 
	`˛igí_ªas⁄
("Numbî ouào‡ønge: %lu", 
u
);

483 
ªtvÆ
 = 0;

488 
CGV_UINT64
:

489 i‡((
›ti⁄s
 & 
YANG_OPTIONS_RANGE
) != 0){

490 
u
 = 
	`cv_uöt64_gë
(
cv
);

491 i‡(
	`ønge_check
(
u
, 
ønge_mö
, 
ønge_max
, 
uöt64
)){

492 i‡(
ªas⁄
)

493 *
ªas⁄
 = 
	`˛igí_ªas⁄
("Numbî ouào‡ønge: %lu", 
u
);

494 
ªtvÆ
 = 0;

499 
CGV_DEC64
:

500 i‡((
›ti⁄s
 & 
YANG_OPTIONS_RANGE
) != 0){

501 
i
 = 
	`cv_öt64_gë
(
cv
);

502 i‡(
	`ønge_check
(
i
, 
ønge_mö
, 
ønge_max
, 
öt64
)){

503 i‡(
ªas⁄
)

504 *
ªas⁄
 = 
	`˛igí_ªas⁄
("Numbî ouào‡ønge: %ld", 
i
);

505 
ªtvÆ
 = 0;

510 
CGV_STRING
:

511 
CGV_REST
:

512 
°r
 = 
	`cv_°rög_gë
(
cv
);

513 i‡(
ª°y≥
 &&

514 (
	`°rcmp
(
ª°y≥
, "enumeration") == 0 || strcmp(restype, "bits") == 0)){

515 
found
 = 0;

516 (
yi
 = 
	`yn_óch
((
y™g_node
*)
yª°y≥
, yi)Ë!
NULL
){

517 i‡(
yi
->
ys_keyw‹d
 !
Y_ENUM
 && yi->ys_keyw‹d !
Y_BIT
)

519 i‡(
	`°rcmp
(
yi
->
ys_¨gumít
, 
°r
) == 0){

520 
found
++;

524 i‡(!
found
){

525 i‡(
ªas⁄
)

526 *
ªas⁄
 = 
	`˛igí_ªas⁄
("'%s' d€†nŸ m©chÉnumî©i⁄", 
°r
);

527 
ªtvÆ
 = 0;

531 i‡((
›ti⁄s
 & 
YANG_OPTIONS_LENGTH
) != 0){

532 
u
 = 
	`°æí
(
°r
);

533 i‡(
	`ønge_check
(
u
, 
ønge_mö
, 
ønge_max
, 
uöt64
)){

534 i‡(
ªas⁄
)

535 *
ªas⁄
 = 
	`˛igí_ªas⁄
("°rögÜígth ouào‡ønge: %lu", 
u
);

536 
ªtvÆ
 = 0;

540 i‡((
›ti⁄s
 & 
YANG_OPTIONS_PATTERN
) != 0){

541 i‡((
ªtvÆ2
 = 
	`m©ch_ªgexp
(
°r
, 
∑âîn
)) < 0){

542 
	`˛ic⁄_îr
(
OE_DB
, 0, "m©ch_ªgexp: %s", 
∑âîn
);

545 i‡(
ªtvÆ2
 == 0){

546 i‡(
ªas⁄
)

547 *
ªas⁄
 = 
	`˛igí_ªas⁄
("regexp match fail: \"%s\" doesÇot match %s",

548 
°r
, 
∑âîn
);

549 
ªtvÆ
 = 0;

554 
CGV_ERR
:

555 
CGV_VOID
:

556 
ªtvÆ
 = 0;

557 i‡(
ªas⁄
)

558 *
ªas⁄
 = 
	`˛igí_ªas⁄
("Invalid cv");

559 
ªtvÆ
 = 0;

561 
CGV_BOOL
:

562 
CGV_INTERFACE
:

563 
CGV_IPV4ADDR
:

564 
CGV_IPV6ADDR
:

565 
CGV_IPV4PFX
:

566 
CGV_IPV6PFX
:

567 
CGV_MACADDR
:

568 
CGV_URL
:

569 
CGV_UUID
:

570 
CGV_TIME
:

571 
CGV_EMPTY
:

575 i‡(
ªas⁄
 && *reason)

576 
	`as£π
(
ªtvÆ
 == 0);

577  
ªtvÆ
;

578 
	}
}

581 
ys_cv_vÆid©e_uni⁄
(
y™g_°mt
 *
ys
, **
ªas⁄
, y™g_°mà*
yª°y≥
,

582 *
ty≥
, *
vÆ
);

590 
	$ys_cv_vÆid©e_uni⁄_⁄e
(
y™g_°mt
 *
ys
,

591 **
ªas⁄
,

592 
y™g_°mt
 *
yt
,

593 *
ty≥
,

594 *
vÆ
)

596 
ªtvÆ
 = -1;

597 
y™g_°mt
 *
yπ
;

598 
›ti⁄s
 = 0;

599 
cg_v¨
 *
ønge_mö
 = 
NULL
;

600 
cg_v¨
 *
ønge_max
 = 
NULL
;

601 *
∑âîn
 = 
NULL
;

602 
uöt8_t
 
‰a˘i⁄
 = 0;

603 *
ª°y≥
;

604 
cv_ty≥
 
cvty≥
;

605 
cg_v¨
 *
cvt
=
NULL
;

607 i‡(
	`y™g_ty≥_ªsﬁve
(
ys
, 
yt
, &
yπ
,

608 &
›ti⁄s
, &
ønge_mö
, &
ønge_max
, &
∑âîn
,

609 &
‰a˘i⁄
) < 0)

610 
d⁄e
;

611 
ª°y≥
 = 
yπ
?yπ->
ys_¨gumít
:
NULL
;

612 i‡(
ª°y≥
 && 
	`°rcmp
(restype, "union") == 0){

613 i‡((
ªtvÆ
 = 
	`ys_cv_vÆid©e_uni⁄
(
ys
, 
ªas⁄
, 
yπ
, 
ty≥
, 
vÆ
)) < 0)

614 
d⁄e
;

617 i‡(
	`˛ic⁄_ty≥2cv
(
ty≥
, 
ª°y≥
, &
cvty≥
) < 0)

618 
d⁄e
;

620 i‡((
cvt
 = 
	`cv_√w
(
cvty≥
)Ë=
NULL
){

621 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "cv_new");

622 
d⁄e
;

624 i‡(
	`cv_∑r£
(
vÆ
, 
cvt
) <0){

625 
	`˛ic⁄_îr
(
OE_UNIX
, 
î∫o
, "cv_parse");

626 
d⁄e
;

628 i‡((
ªtvÆ
 = 
	`cv_vÆid©e1
(
cvt
, 
cvty≥
, 
›ti⁄s
, 
ønge_mö
, 
ønge_max
,

629 
∑âîn
, 
yπ
, 
ª°y≥
, 
ªas⁄
)) < 0)

630 
d⁄e
;

632 
d⁄e
:

633 i‡(
cvt
)

634 
	`cv_‰ì
(
cvt
);

635  
ªtvÆ
;

636 
	}
}

644 
	$ys_cv_vÆid©e_uni⁄
(
y™g_°mt
 *
ys
,

645 **
ªas⁄
,

646 
y™g_°mt
 *
yª°y≥
,

647 *
ty≥
,

648 *
vÆ
)

650 
ªtvÆ
 = 1;

651 
y™g_°mt
 *
yt
 = 
NULL
;

653 (
yt
 = 
	`yn_óch
((
y™g_node
*)
yª°y≥
, yt)Ë!
NULL
){

654 i‡(
yt
->
ys_keyw‹d
 !
Y_TYPE
)

656 i‡((
ªtvÆ
 = 
	`ys_cv_vÆid©e_uni⁄_⁄e
(
ys
, 
ªas⁄
, 
yt
, 
ty≥
, 
vÆ
)) < 0)

657 
d⁄e
;

658 i‡(
ªtvÆ
 == 1)

661 
d⁄e
:

662  
ªtvÆ
;

663 
	}
}

677 
	$ys_cv_vÆid©e
(
cg_v¨
 *
cv
,

678 
y™g_°mt
 *
ys
,

679 **
ªas⁄
)

681 
ªtvÆ
 = -1;

682 
cg_v¨
 *
ycv
;

683 
›ti⁄s
 = 0;

684 
cg_v¨
 *
ønge_mö
 = 
NULL
;

685 
cg_v¨
 *
ønge_max
 = 
NULL
;

686 *
∑âîn
 = 
NULL
;

687 
cv_ty≥
 
cvty≥
;

688 *
ty≥
;

689 
y™g_°mt
 *
yª°y≥
;

690 *
ª°y≥
;

691 
uöt8_t
 
‰a˘i⁄
 = 0;

692 
ªtvÆ2
;

693 *
vÆ
;

694 
cg_v¨
 *
cvt
=
NULL
;

696 i‡(
ªas⁄
)

697 *
ªas⁄
=
NULL
;

698 i‡(
ys
->
ys_keyw‹d
 !
Y_LEAF
 && ys->ys_keyw‹d !
Y_LEAF_LIST
){

699 
ªtvÆ
 = 1;

700 
d⁄e
;

702 
ycv
 = 
ys
->
ys_cv
;

703 i‡(
	`y™g_ty≥_gë
(
ys
, &
ty≥
, &
yª°y≥
,

704 &
›ti⁄s
, &
ønge_mö
, &
ønge_max
, &
∑âîn
,

705 &
‰a˘i⁄
) < 0)

706 
d⁄e
;

707 
ª°y≥
 = 
yª°y≥
?yª°y≥->
ys_¨gumít
:
NULL
;

708 i‡(
	`˛ic⁄_ty≥2cv
(
ty≥
, 
ª°y≥
, &
cvty≥
) < 0)

709 
d⁄e
;

711 i‡(
	`cv_ty≥_gë
(
ycv
Ë!
cvty≥
){

713 i‡(
cvty≥
 =
CGV_STRING
 && 
	`cv_ty≥_gë
(
ycv
Ë=
CGV_REST
)

716 
	`˛ic⁄_îr
(
OE_DB
, 0, "%s: Type mismatch data:%s != yang:%s",

717 
__FUNCTION__
, 
	`cv_ty≥2°r
(
cvty≥
), cv_ty≥2°r(
	`cv_ty≥_gë
(
ycv
)));

718 
d⁄e
;

722 i‡(
ª°y≥
 && 
	`°rcmp
(restype, "union") == 0){

723 
	`as£π
(
cvty≥
 =
CGV_REST
);

724 
vÆ
 = 
	`cv_°rög_gë
(
cv
);

725 i‡((
ªtvÆ2
 = 
	`ys_cv_vÆid©e_uni⁄
(
ys
, 
ªas⁄
, 
yª°y≥
, 
ty≥
, 
vÆ
)) < 0)

726 
d⁄e
;

727 
ªtvÆ
 = 
ªtvÆ2
;

730 i‡((
ªtvÆ
 = 
	`cv_vÆid©e1
(
cv
, 
cvty≥
, 
›ti⁄s
, 
ønge_mö
, 
ønge_max
, 
∑âîn
,

731 
yª°y≥
, 
ª°y≥
, 
ªas⁄
)) < 0)

732 
d⁄e
;

733 
d⁄e
:

734 i‡(
cvt
)

735 
	`cv_‰ì
(
cvt
);

736  
ªtvÆ
;

737 
	}
}

743 
ölöe
 

744 
	$ys_ty≥def
(
y™g_°mt
 *
ys
)

746  
ys
->
ys_keyw‹d
 =
Y_MODULE
 || ys->ys_keyw‹d =
Y_SUBMODULE
 ||

747 
ys
->
ys_keyw‹d
 =
Y_CONTAINER
 || ys->ys_keyw‹d =
Y_LIST
;

748 
	}
}

751 
y™g_°mt
 *

752 
	$ys_ty≥def_up
(
y™g_°mt
 *
ys
)

754 
y™g_node
 *
yn
;

756 
ys
 !
NULL
 && !
	`ys_ty≥def
(ys)){

757 
yn
 = 
ys
->
ys_∑ª¡
;

759 i‡(
yn
 && yn->
yn_keyw‹d
 =
Y_SPEC
)

760 
yn
 = 
NULL
;

761 
ys
 = (
y™g_°mt
*)
yn
;

764  (
y™g_°mt
*)
ys
;

765 
	}
}

788 
y™g_°mt
 *

789 
	$y™g_föd_idítôy
(
y™g_°mt
 *
ys
,

790 *
idítôy
)

792 *
id
;

793 *
¥efix
 = 
NULL
;

794 
y™g_°mt
 *
ymoduÀ
;

795 
y™g_°mt
 *
yid
 = 
NULL
;

796 
y™g_node
 *
yn
;

798 i‡((
id
 = 
	`°rchr
(
idítôy
, ':')Ë=
NULL
)

799 
id
 = 
idítôy
;

801 
¥efix
 = 
	`°rdup
(
idítôy
);

802 
¥efix
[
id
-
idítôy
] = '\0';

803 
id
++;

806 i‡(
¥efix
){

807 i‡((
ymoduÀ
 = 
	`y™g_föd_moduÀ_by_¥efix
(
ys
, 
¥efix
)Ë=
NULL
)

808 
d⁄e
;

809 
yid
 = 
	`y™g_föd
((
y™g_node
*)
ymoduÀ
, 
Y_IDENTITY
, 
id
);

814 i‡((
ys
 = 
	`ys_ty≥def_up
(ys)Ë=
NULL
)

817 i‡((
yid
 = 
	`y™g_föd
((
y™g_node
*)
ys
, 
Y_IDENTITY
, 
id
)Ë!
NULL
)

820 
yn
 = 
ys
->
ys_∑ª¡
;

821 i‡(
yn
 && yn->
yn_keyw‹d
 =
Y_SPEC
)

822 
yn
 = 
NULL
;

823 
ys
 = (
y™g_°mt
*)
yn
;

826 
d⁄e
:

827 i‡(
¥efix
)

828 
	`‰ì
(
¥efix
);

829  
yid
;

830 
	}
}

835 
	$ªsﬁve_ª°ri˘i⁄s
(
y™g_°mt
 *
yønge
,

836 
y™g_°mt
 *
yÀngth
,

837 
y™g_°mt
 *
y∑âîn
,

838 
y™g_°mt
 *
y‰a˘i⁄
,

839 *
›ti⁄s
,

840 
cg_v¨
 **
möcv
,

841 
cg_v¨
 **
maxcv
,

842 **
∑âîn
,

843 
uöt8_t
 *
‰a˘i⁄
)

845 i‡(
›ti⁄s
 && 
möcv
 && 
maxcv
 && 
yønge
 !
NULL
){

846 *
möcv
 = 
	`cvec_föd
(
yønge
->
ys_cvec
, "range_min");

847 *
maxcv
 = 
	`cvec_föd
(
yønge
->
ys_cvec
, "range_max");

848 *
›ti⁄s
 |
YANG_OPTIONS_RANGE
;

850 i‡(
›ti⁄s
 && 
möcv
 && 
maxcv
 && 
yÀngth
 !
NULL
){

851 *
möcv
 = 
	`cvec_föd
(
yÀngth
->
ys_cvec
, "range_min");

852 *
maxcv
 = 
	`cvec_föd
(
yÀngth
->
ys_cvec
, "range_max");

853 *
›ti⁄s
 |
YANG_OPTIONS_LENGTH
;

855 i‡(
›ti⁄s
 && 
∑âîn
 && 
y∑âîn
 !
NULL
){

856 *
∑âîn
 = 
y∑âîn
->
ys_¨gumít
;

857 *
›ti⁄s
 |
YANG_OPTIONS_PATTERN
;

859 i‡(
›ti⁄s
 && 
‰a˘i⁄
 && 
y‰a˘i⁄
 !
NULL
){

860 *
‰a˘i⁄
 = 
	`cv_uöt8_gë
(
y‰a˘i⁄
->
ys_cv
);

861 *
›ti⁄s
 |
YANG_OPTIONS_FRACTION_DIGITS
;

864 
	}
}

885 
	$y™g_ty≥_ªsﬁve
(
y™g_°mt
 *
ys
,

886 
y™g_°mt
 *
yty≥
,

887 
y™g_°mt
 **
yª°y≥
,

888 *
›ti⁄s
,

889 
cg_v¨
 **
möcv
,

890 
cg_v¨
 **
maxcv
,

891 **
∑âîn
,

892 
uöt8_t
 *
‰a˘i⁄
)

894 
y™g_°mt
 *
ryty≥def
 = 
NULL
;

895 
y™g_°mt
 *
ryty≥
;

896 
y™g_°mt
 *
yønge
;

897 
y™g_°mt
 *
yÀngth
;

898 
y™g_°mt
 *
y∑âîn
;

899 
y™g_°mt
 *
y‰a˘i⁄
;

900 *
ty≥
;

901 *
¥efix
 = 
NULL
;

902 
ªtvÆ
 = -1;

903 
y™g_node
 *
yn
;

904 
y™g_°mt
 *
ymod
;

906 i‡(
›ti⁄s
)

907 *
›ti⁄s
 = 0x0;

908 *
yª°y≥
 = 
NULL
;

909 
ty≥
 = 
	`y¨g_id
(
yty≥
);

910 
¥efix
 = 
	`y¨g_¥efix
(
yty≥
);

912 i‡(!
	`y™g_buûtö
(
ty≥
Ë&& 
yty≥
->
ys_ty≥ˇche
 !
NULL
){

913 i‡(
	`y™g_ty≥_ˇche_gë
(
yty≥
->
ys_ty≥ˇche
,

914 
yª°y≥
, 
›ti⁄s
, 
möcv
, 
maxcv
, 
∑âîn
, 
‰a˘i⁄
) < 0)

915 
d⁄e
;

916 
ok
;

918 
yønge
 = 
	`y™g_föd
((
y™g_node
*)
yty≥
, 
Y_RANGE
, 
NULL
);

919 
yÀngth
 = 
	`y™g_föd
((
y™g_node
*)
yty≥
, 
Y_LENGTH
, 
NULL
);

920 
y∑âîn
 = 
	`y™g_föd
((
y™g_node
*)
yty≥
, 
Y_PATTERN
, 
NULL
);

921 
y‰a˘i⁄
 = 
	`y™g_föd
((
y™g_node
*)
yty≥
, 
Y_FRACTION_DIGITS
, 
NULL
);

924 i‡(
¥efix
 =
NULL
 && 
	`y™g_buûtö
(
ty≥
)){

925 *
yª°y≥
 = 
yty≥
;

926 
	`ªsﬁve_ª°ri˘i⁄s
(
yønge
, 
yÀngth
, 
y∑âîn
, 
y‰a˘i⁄
, 
›ti⁄s
,

927 
möcv
, 
maxcv
, 
∑âîn
, 
‰a˘i⁄
);

928 
ok
;

932 i‡(
¥efix
){

933 i‡((
ymod
 = 
	`y™g_föd_moduÀ_by_¥efix
(
ys
, 
¥efix
)Ë=
NULL
){

934 
	`˛ic⁄_îr
(
OE_DB
, 0, "Ty≥ÇŸÑesﬁved: %s:%s", 
¥efix
, 
ty≥
);

935 
d⁄e
;

937 i‡((
ryty≥def
 = 
	`y™g_föd
((
y™g_node
*)
ymod
, 
Y_TYPEDEF
, 
ty≥
)Ë=
NULL
)

938 
ok
;

943 i‡((
ys
 = 
	`ys_ty≥def_up
(ys)Ë=
NULL
){

944 *
yª°y≥
 = 
NULL
;

948 i‡((
ryty≥def
 = 
	`y™g_föd
((
y™g_node
*)
ys
, 
Y_TYPEDEF
, 
ty≥
)Ë!
NULL
)

951 
yn
 = 
ys
->
ys_∑ª¡
;

952 i‡(
yn
 && yn->
yn_keyw‹d
 =
Y_SPEC
)

953 
yn
 = 
NULL
;

954 
ys
 = (
y™g_°mt
*)
yn
;

956 i‡(
ryty≥def
 !
NULL
){

958 i‡((
ryty≥
 = 
	`y™g_föd
((
y™g_node
*)
ryty≥def
, 
Y_TYPE
, 
NULL
)) == NULL){

959 
	`˛ic⁄_îr
(
OE_DB
, 0, "%s: m™d©‹yÅy≥ obje˘ i†nŸ found", 
__FUNCTION__
);

960 
d⁄e
;

963 i‡(
	`y™g_ty≥_ªsﬁve
(
ys
, 
ryty≥
, 
yª°y≥
,

964 
›ti⁄s
, 
möcv
, 
maxcv
, 
∑âîn
, 
‰a˘i⁄
) < 0)

965 
d⁄e
;

967 
	`ªsﬁve_ª°ri˘i⁄s
(
yønge
, 
yÀngth
, 
y∑âîn
, 
y‰a˘i⁄
,

968 
›ti⁄s
, 
möcv
, 
maxcv
, 
∑âîn
, 
‰a˘i⁄
);

971 
ok
:

972 
ªtvÆ
 = 0;

973 
d⁄e
:

974 i‡(
¥efix
)

975 
	`‰ì
(
¥efix
);

976  
ªtvÆ
;

977 
	}
}

1016 
	$y™g_ty≥_gë
(
y™g_°mt
 *
ys
,

1017 **
‹igty≥
,

1018 
y™g_°mt
 **
yª°y≥
,

1019 *
›ti⁄s
,

1020 
cg_v¨
 **
möcv
,

1021 
cg_v¨
 **
maxcv
,

1022 **
∑âîn
,

1023 
uöt8_t
 *
‰a˘i⁄


1026 
ªtvÆ
 = -1;

1027 
y™g_°mt
 *
yty≥
;

1028 *
ty≥
;

1030 i‡(
›ti⁄s
)

1031 *
›ti⁄s
 = 0x0;

1033 i‡((
yty≥
 = 
	`y™g_föd
((
y™g_node
*)
ys
, 
Y_TYPE
, 
NULL
)) == NULL){

1034 
	`˛ic⁄_îr
(
OE_DB
, 0, "%s: m™d©‹yÅy≥ obje˘ i†nŸ found", 
__FUNCTION__
);

1035 
d⁄e
;

1038 
ty≥
 = 
	`y¨g_id
(
yty≥
);

1039 i‡(
‹igty≥
)

1040 *
‹igty≥
 = 
ty≥
;

1041 i‡(
	`y™g_ty≥_ªsﬁve
(
ys
, 
yty≥
, 
yª°y≥
,

1042 
›ti⁄s
, 
möcv
, 
maxcv
, 
∑âîn
, 
‰a˘i⁄
) < 0)

1043 
d⁄e
;

1044 
	`˛ic⁄_debug
(3, "%s: %†%s->%s", 
__FUNCTION__
, 
ys
->
ys_¨gumít
, 
ty≥
,

1045 *
yª°y≥
?(*yª°y≥)->
ys_¨gumít
:"null");

1046 
ªtvÆ
 = 0;

1047 
d⁄e
:

1048  
ªtvÆ
;

1049 
	}
}

	@clixon-master/lib/src/json_xpath.c

6 
	~<°dio.h
>

7 
	~<°rög.h
>

8 
	~<°dlib.h
>

9 
	~<uni°d.h
>

12 
	~<˛igí/˛igí.h
>

15 
	~<˛ix⁄/˛ix⁄.h
>

18 
	$ußge
(*
¨gv0
)

20 
	`Ârötf
(
°dîr
, "usage:%s <xpath> # XML/JSONÉxpected on stdin\n"

24 
¨gv0
);

25 
	`exô
(0);

26 
	}
}

29 
	$maö
(
¨gc
, **
¨gv
)

31 
i
;

32 
cxobj
 **
xv
;

33 
cxobj
 *
x
;

34 
cxobj
 *
xn
;

35 
cxobj
 *
xb
;

36 *
x∑th
;

37 
body
 = 0;

38 
js⁄
 = 0;

39 
size_t
 
xÀn
 = 0;

40 
size_t
 
Àn
;

41 
size_t
 
buÊí
 = 128;

42 *
buf
;

43 *
p
;

44 
ªtvÆ
;

45 
c
;

47 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "?hbj")) != -1)

48 
c
) {

51 
	`ußge
(
¨gv
[0]);

54 
body
++;

57 
js⁄
++;

60 
	`ußge
(
¨gv
[0]);

62 i‡(
›töd
 >
¨gc
)

63 
	`ußge
(
¨gv
[0]);

64 
x∑th
=
¨gv
[
›töd
];

66 
	`˛ic⁄_log_öô
("x∑th", 0, 
CLICON_LOG_STDERR
);

67 i‡((
buf
 = 
	`mÆloc
(
buÊí
)Ë=
NULL
){

68 
	`≥º‹
("malloc");

74 
p
 = 
buf
;

75 
	`mem£t
(
p
, 0, 
buÊí
);

77 i‡((
ªtvÆ
 = 
	`ªad
(0, 
p
, 
buÊí
-’-
buf
))) < 0){

78 
	`≥º‹
("read");

81 i‡(
ªtvÆ
 == 0)

83 
p
 +
ªtvÆ
;

84 
Àn
 = 
p
-
buf
;

86 i‡(
buf
+
buÊí
-
p
 < 10){

87 
buÊí
 *= 2;

88 i‡((
buf
 = 
	`ªÆloc
(buf, 
buÊí
)Ë=
NULL
){

89 
	`≥º‹
("realloc");

92 
p
 = 
buf
+
Àn
;

93 
	`mem£t
(
p
, 0, (
buf
+
buÊí
)-p);

96 i‡(
js⁄
){

97 i‡(
	`js⁄_∑r£_°r
(
buf
, &
x
) < 0)

101 i‡(
	`xml_∑r£_°rög
(
buf
, &
x
) < 0)

104 i‡(
	`x∑th_vec
(
x
, 
x∑th
, &
xv
, &
xÀn
) < 0)

106 i‡(
xv
){

107 
i
=0; i<
xÀn
; i++){

108 
xn
 = 
xv
[
i
];

109 i‡(
body
)

110 
xb
 = 
	`xml_föd
(
xn
, "body");

112 
xb
 = 
xn
;

113 i‡(
xb
){

115 
	`˛ic⁄_xml2fûe
(
°dout
, 
xb
, 0, 0);

116 
	`Ârötf
(
°dout
,"\n");

119 
	`‰ì
(
xv
);

121 i‡(
x
)

122 
	`xml_‰ì
(
x
);

123 i‡(
buf
)

124 
	`‰ì
(
buf
);

126 
	}
}

	@clixon-master/lib/src/lex.clixon_json_parse.c

4 
	#YY_INT_ALIGNED
 

	)

8 
	#yy_¸óã_buf„r
 
˛ix⁄_js⁄_∑r£_¸óã_buf„r


	)

9 
	#yy_dñëe_buf„r
 
˛ix⁄_js⁄_∑r£_dñëe_buf„r


	)

10 
	#yy_Êex_debug
 
˛ix⁄_js⁄_∑r£_Êex_debug


	)

11 
	#yy_öô_buf„r
 
˛ix⁄_js⁄_∑r£_öô_buf„r


	)

12 
	#yy_Êush_buf„r
 
˛ix⁄_js⁄_∑r£_Êush_buf„r


	)

13 
	#yy_lﬂd_buf„r_°©e
 
˛ix⁄_js⁄_∑r£_lﬂd_buf„r_°©e


	)

14 
	#yy_swôch_to_buf„r
 
˛ix⁄_js⁄_∑r£_swôch_to_buf„r


	)

15 
	#yyö
 
˛ix⁄_js⁄_∑r£ö


	)

16 
	#yyÀng
 
˛ix⁄_js⁄_∑r£Àng


	)

17 
	#yyÀx
 
˛ix⁄_js⁄_∑r£Àx


	)

18 
	#yylöío
 
˛ix⁄_js⁄_∑r£löío


	)

19 
	#yyout
 
˛ix⁄_js⁄_∑r£out


	)

20 
	#yyª°¨t
 
˛ix⁄_js⁄_∑r£ª°¨t


	)

21 
	#yyãxt
 
˛ix⁄_js⁄_∑r£ãxt


	)

22 
	#yywøp
 
˛ix⁄_js⁄_∑r£wøp


	)

23 
	#yyÆloc
 
˛ix⁄_js⁄_∑r£Æloc


	)

24 
	#yyªÆloc
 
˛ix⁄_js⁄_∑r£ªÆloc


	)

25 
	#yy‰ì
 
˛ix⁄_js⁄_∑r£‰ì


	)

27 
	#FLEX_SCANNER


	)

28 
	#YY_FLEX_MAJOR_VERSION
 2

	)

29 
	#YY_FLEX_MINOR_VERSION
 6

	)

30 
	#YY_FLEX_SUBMINOR_VERSION
 0

	)

31 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

32 
	#FLEX_BETA


	)

38 
	~<°dio.h
>

39 
	~<°rög.h
>

40 
	~<î∫o.h
>

41 
	~<°dlib.h
>

47 #i‚de‡
FLEXINT_H


48 
	#FLEXINT_H


	)

52 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

57 #i‚de‡
__STDC_LIMIT_MACROS


58 
	#__STDC_LIMIT_MACROS
 1

	)

61 
	~<öây≥s.h
>

62 
öt8_t
 
	tÊex_öt8_t
;

63 
uöt8_t
 
	tÊex_uöt8_t
;

64 
öt16_t
 
	tÊex_öt16_t
;

65 
uöt16_t
 
	tÊex_uöt16_t
;

66 
öt32_t
 
	tÊex_öt32_t
;

67 
uöt32_t
 
	tÊex_uöt32_t
;

69 sig√d 
	tÊex_öt8_t
;

70 
	tÊex_öt16_t
;

71 
	tÊex_öt32_t
;

72 
	tÊex_uöt8_t
;

73 
	tÊex_uöt16_t
;

74 
	tÊex_uöt32_t
;

77 #i‚de‡
INT8_MIN


78 
	#INT8_MIN
 (-128)

	)

80 #i‚de‡
INT16_MIN


81 
	#INT16_MIN
 (-32767-1)

	)

83 #i‚de‡
INT32_MIN


84 
	#INT32_MIN
 (-2147483647-1)

	)

86 #i‚de‡
INT8_MAX


87 
	#INT8_MAX
 (127)

	)

89 #i‚de‡
INT16_MAX


90 
	#INT16_MAX
 (32767)

	)

92 #i‚de‡
INT32_MAX


93 
	#INT32_MAX
 (2147483647)

	)

95 #i‚de‡
UINT8_MAX


96 
	#UINT8_MAX
 (255U)

	)

98 #i‚de‡
UINT16_MAX


99 
	#UINT16_MAX
 (65535U)

	)

101 #i‚de‡
UINT32_MAX


102 
	#UINT32_MAX
 (4294967295U)

	)

109 #ifde‡
__˝lu•lus


112 
	#YY_USE_CONST


	)

117 #i‡
deföed
 (
__STDC__
)

119 
	#YY_USE_CONST


	)

124 #ifde‡
YY_USE_CONST


125 
	#yyc⁄°
 c⁄°

	)

127 
	#yyc⁄°


	)

131 
	#YY_NULL
 0

	)

138 
	#YY_SC_TO_UI
(
c
Ë((Ë(Ëc)

	)

144 
	#BEGIN
 (
yy_°¨t
Ë1 + 2 *

	)

150 
	#YY_START
 (((
yy_°¨t
Ë- 1Ë/ 2)

	)

151 
	#YYSTATE
 
YY_START


	)

154 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

157 
	#YY_NEW_FILE
 
	`˛ix⁄_js⁄_∑r£ª°¨t
(
˛ix⁄_js⁄_∑r£ö
 )

	)

159 
	#YY_END_OF_BUFFER_CHAR
 0

	)

162 #i‚de‡
YY_BUF_SIZE


163 #ifde‡
__ü64__


168 
	#YY_BUF_SIZE
 32768

	)

170 
	#YY_BUF_SIZE
 16384

	)

176 
	#YY_STATE_BUF_SIZE
 ((
YY_BUF_SIZE
 + 2Ë* (
yy_°©e_ty≥
))

	)

178 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


179 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

180 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

183 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


184 
	#YY_TYPEDEF_YY_SIZE_T


	)

185 
size_t
 
	tyy_size_t
;

188 
yy_size_t
 
˛ix⁄_js⁄_∑r£Àng
;

190 
FILE
 *
˛ix⁄_js⁄_∑r£ö
, *
˛ix⁄_js⁄_∑r£out
;

192 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

193 
	#EOB_ACT_END_OF_FILE
 1

	)

194 
	#EOB_ACT_LAST_MATCH
 2

	)

196 
	#YY_LESS_LINENO
(
n
)

	)

197 
	#YY_LINENO_REWIND_TO
(
±r
)

	)

200 
	#yyÀss
(
n
) \

204 
yyÀss_ma¸o_¨g
 = (
n
); \

205 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

206 *
yy_˝
 = (
yy_hﬁd_ch¨
); \

207 
YY_RESTORE_YY_MORE_OFFSET
 \

208 (
yy_c_buf_p
Ë
yy_˝
 = 
yy_bp
 + 
yyÀss_ma¸o_¨g
 - 
YY_MORE_ADJ
; \

209 
YY_DO_BEFORE_ACTION
; \

211  0 )

	)

213 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, (
yyãxt_±r
Ë)

	)

215 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


216 
	#YY_STRUCT_YY_BUFFER_STATE


	)

217 
	syy_buf„r_°©e


219 
FILE
 *
	myy_öput_fûe
;

221 *
	myy_ch_buf
;

222 *
	myy_buf_pos
;

227 
yy_size_t
 
	myy_buf_size
;

232 
	myy_n_ch¨s
;

238 
	myy_is_our_buf„r
;

245 
	myy_is_öãø˘ive
;

251 
	myy_©_bﬁ
;

253 
	myy_bs_löío
;

254 
	myy_bs_cﬁumn
;

259 
	myy_fûl_buf„r
;

261 
	myy_buf„r_°©us
;

263 
	#YY_BUFFER_NEW
 0

	)

264 
	#YY_BUFFER_NORMAL
 1

	)

275 
	#YY_BUFFER_EOF_PENDING
 2

	)

281 
size_t
 
	gyy_buf„r_°ack_t›
 = 0;

282 
size_t
 
	gyy_buf„r_°ack_max
 = 0;

283 
YY_BUFFER_STATE
 * 
	gyy_buf„r_°ack
 = 0;

291 
	#YY_CURRENT_BUFFER
 ( (
yy_buf„r_°ack
) \

292 ? (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)] \

293 : 
NULL
)

	)

298 
	#YY_CURRENT_BUFFER_LVALUE
 (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)]

	)

301 
	gyy_hﬁd_ch¨
;

302 
	gyy_n_ch¨s
;

303 
yy_size_t
 
	g˛ix⁄_js⁄_∑r£Àng
;

306 *
	gyy_c_buf_p
 = (*) 0;

307 
	gyy_öô
 = 0;

308 
	gyy_°¨t
 = 0;

313 
	gyy_did_buf„r_swôch_⁄_eof
;

315 
˛ix⁄_js⁄_∑r£ª°¨t
 (
FILE
 *
öput_fûe
 );

316 
˛ix⁄_js⁄_∑r£_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

317 
YY_BUFFER_STATE
 
˛ix⁄_js⁄_∑r£_¸óã_buf„r
 (
FILE
 *
fûe
,
size
 );

318 
˛ix⁄_js⁄_∑r£_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 );

319 
˛ix⁄_js⁄_∑r£_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 );

320 
˛ix⁄_js⁄_∑r£push_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

321 
˛ix⁄_js⁄_∑r£p›_buf„r_°©e
 ();

323 
˛ix⁄_js⁄_∑r£ísuª_buf„r_°ack
 ();

324 
˛ix⁄_js⁄_∑r£_lﬂd_buf„r_°©e
 ();

325 
˛ix⁄_js⁄_∑r£_öô_buf„r
 (
YY_BUFFER_STATE
 
b
,
FILE
 *
fûe
 );

327 
	#YY_FLUSH_BUFFER
 
	`˛ix⁄_js⁄_∑r£_Êush_buf„r
(
YY_CURRENT_BUFFER
 )

	)

329 
YY_BUFFER_STATE
 
˛ix⁄_js⁄_∑r£_sˇn_buf„r
 (*
ba£
,
yy_size_t
 
size
 );

330 
YY_BUFFER_STATE
 
˛ix⁄_js⁄_∑r£_sˇn_°rög
 (
yyc⁄°
 *
yy_°r
 );

331 
YY_BUFFER_STATE
 
˛ix⁄_js⁄_∑r£_sˇn_byãs
 (
yyc⁄°
 *
byãs
,
yy_size_t
 
Àn
 );

333 *
˛ix⁄_js⁄_∑r£Æloc
 (
yy_size_t
 );

334 *
˛ix⁄_js⁄_∑r£ªÆloc
 (*,
yy_size_t
 );

335 
˛ix⁄_js⁄_∑r£‰ì
 (* );

337 
	#yy_√w_buf„r
 
˛ix⁄_js⁄_∑r£_¸óã_buf„r


	)

339 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

341 i‡–! 
YY_CURRENT_BUFFER
 ){ \

342 
	`˛ix⁄_js⁄_∑r£ísuª_buf„r_°ack
 (); \

343 
YY_CURRENT_BUFFER_LVALUE
 = \

344 
	`˛ix⁄_js⁄_∑r£_¸óã_buf„r
(
˛ix⁄_js⁄_∑r£ö
,
YY_BUF_SIZE
 ); \

346 
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

347 }

	)

349 
	#yy_£t_bﬁ
(
©_bﬁ
) \

351 i‡–! 
YY_CURRENT_BUFFER
 ){\

352 
	`˛ix⁄_js⁄_∑r£ísuª_buf„r_°ack
 (); \

353 
YY_CURRENT_BUFFER_LVALUE
 = \

354 
	`˛ix⁄_js⁄_∑r£_¸óã_buf„r
(
˛ix⁄_js⁄_∑r£ö
,
YY_BUF_SIZE
 ); \

356 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = 
©_bﬁ
; \

357 }

	)

359 
	#YY_AT_BOL
(Ë(
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
)

	)

363 
	tYY_CHAR
;

365 
FILE
 *
	g˛ix⁄_js⁄_∑r£ö
 = (FILE *Ë0, *
	g˛ix⁄_js⁄_∑r£out
 = (FILE *) 0;

367 
	tyy_°©e_ty≥
;

369 
˛ix⁄_js⁄_∑r£löío
;

371 
	g˛ix⁄_js⁄_∑r£löío
 = 1;

373 *
˛ix⁄_js⁄_∑r£ãxt
;

374 #ifde‡
yyãxt_±r


375 #unde‡
yyãxt_±r


377 
	#yyãxt_±r
 
˛ix⁄_js⁄_∑r£ãxt


	)

379 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 ();

380 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 (yy_°©e_ty≥ 
cuºít_°©e
 );

381 
yy_gë_√xt_buf„r
 ();

382 #i‡
deföed
(
__GNUC__
) && __GNUC__ >= 3

383 
__©åibuã__
((
__n‹ëu∫__
))

385 
yy_Áèl_îr‹
 (
yyc⁄°
 
msg
[] );

390 
	#YY_DO_BEFORE_ACTION
 \

391 (
yyãxt_±r
Ë
yy_bp
; \

392 
˛ix⁄_js⁄_∑r£Àng
 = (
size_t
Ë(
yy_˝
 - 
yy_bp
); \

393 (
yy_hﬁd_ch¨
Ë*
yy_˝
; \

394 *
yy_˝
 = '\0'; \

395 (
yy_c_buf_p
Ë
yy_˝
;

	)

397 
	#YY_NUM_RULES
 21

	)

398 
	#YY_END_OF_BUFFER
 22

	)

401 
	syy_å™s_öfo


403 
Êex_öt32_t
 
	myy_vîify
;

404 
Êex_öt32_t
 
	myy_nxt
;

406 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ac˚±
[52] =

416 
yyc⁄°
 
YY_CHAR
 
	gyy_ec
[256] =

448 
yyc⁄°
 
YY_CHAR
 
	gyy_mëa
[27] =

455 
yyc⁄°
 
Êex_uöt16_t
 
	gyy_ba£
[55] =

465 
yyc⁄°
 
Êex_öt16_t
 
	gyy_def
[55] =

475 
yyc⁄°
 
Êex_uöt16_t
 
	gyy_nxt
[97] =

490 
yyc⁄°
 
Êex_öt16_t
 
	gyy_chk
[97] =

505 
yy_°©e_ty≥
 
	gyy_œ°_ac˚±ög_°©e
;

506 *
	gyy_œ°_ac˚±ög_˝os
;

508 
˛ix⁄_js⁄_∑r£_Êex_debug
;

509 
	g˛ix⁄_js⁄_∑r£_Êex_debug
 = 0;

514 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

515 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

516 
	#YY_MORE_ADJ
 0

	)

517 
	#YY_RESTORE_YY_MORE_OFFSET


	)

518 *
	g˛ix⁄_js⁄_∑r£ãxt
;

556 
	~"˛ix⁄_c⁄fig.h
"

558 
	~<°dio.h
>

559 
	~<°rög.h
>

560 
	~<°döt.h
>

561 
	~<î∫o.h
>

562 
	~<√töë/ö.h
>

564 
	~"˛ix⁄_js⁄_∑r£.èb.h
"

566 
	~<˛igí/˛igí.h
>

568 
	~"˛ix⁄_queue.h
"

569 
	~"˛ix⁄_hash.h
"

570 
	~"˛ix⁄_h™dÀ.h
"

571 
	~"˛ix⁄_y™g.h
"

572 
	~"˛ix⁄_log.h
"

573 
	~"˛ix⁄_xml.h
"

574 
	~"˛ix⁄_js⁄_∑r£.h
"

577 
	#YY_DECL
 
	`˛ix⁄_js⁄_∑r£Àx
(*
_yy
)

	)

580 
	#YY_NO_INPUT


	)

583 
	#_JY
 ((
˛ic⁄_js⁄_yacc_¨g
 *)
_yy
)

	)

585 
	#MAXBUF
 4*4*64*1024

	)

587 #unde‡
˛ix⁄_js⁄_∑r£wøp


589 
	$˛ix⁄_js⁄_∑r£wøp
()

592 
	}
}

601 
	#INITIAL
 0

	)

602 
	#START
 1

	)

603 
	#STRING
 2

	)

604 
	#ESCAPE
 3

	)

606 #i‚de‡
YY_NO_UNISTD_H


611 
	~<uni°d.h
>

614 #i‚de‡
YY_EXTRA_TYPE


615 
	#YY_EXTRA_TYPE
 *

	)

618 
yy_öô_globÆs
 ();

623 
˛ix⁄_js⁄_∑r£Àx_de°roy
 ();

625 
˛ix⁄_js⁄_∑r£gë_debug
 ();

627 
˛ix⁄_js⁄_∑r££t_debug
 (
debug_Êag
 );

629 
YY_EXTRA_TYPE
 
˛ix⁄_js⁄_∑r£gë_exåa
 ();

631 
˛ix⁄_js⁄_∑r££t_exåa
 (
YY_EXTRA_TYPE
 
u£r_deföed
 );

633 
FILE
 *
˛ix⁄_js⁄_∑r£gë_ö
 ();

635 
˛ix⁄_js⁄_∑r££t_ö
 (
FILE
 * 
_ö_°r
 );

637 
FILE
 *
˛ix⁄_js⁄_∑r£gë_out
 ();

639 
˛ix⁄_js⁄_∑r££t_out
 (
FILE
 * 
_out_°r
 );

641 
yy_size_t
 
˛ix⁄_js⁄_∑r£gë_Àng
 ();

643 *
˛ix⁄_js⁄_∑r£gë_ãxt
 ();

645 
˛ix⁄_js⁄_∑r£gë_löío
 ();

647 
˛ix⁄_js⁄_∑r££t_löío
 (
_löe_numbî
 );

653 #i‚de‡
YY_SKIP_YYWRAP


654 #ifde‡
__˝lu•lus


655 "C" 
˛ix⁄_js⁄_∑r£wøp
 ();

657 
˛ix⁄_js⁄_∑r£wøp
 ();

661 #i‚de‡
YY_NO_UNPUT


663 
yyu≈ut
 (
c
,*
buf_±r
 );

667 #i‚de‡
yyãxt_±r


668 
yy_Êex_°∫˝y
 (*,
yyc⁄°
 *,);

671 #ifde‡
YY_NEED_STRLEN


672 
yy_Êex_°æí
 (
yyc⁄°
 * );

675 #i‚de‡
YY_NO_INPUT


677 #ifde‡
__˝lu•lus


678 
yyöput
 ();

680 
öput
 ();

686 #i‚de‡
YY_READ_BUF_SIZE


687 #ifde‡
__ü64__


689 
	#YY_READ_BUF_SIZE
 16384

	)

691 
	#YY_READ_BUF_SIZE
 8192

	)

696 #i‚de‡
ECHO


700 
	#ECHO
 dÿ{ i‡(
	`fwrôe
–
˛ix⁄_js⁄_∑r£ãxt
, 
˛ix⁄_js⁄_∑r£Àng
, 1, 
˛ix⁄_js⁄_∑r£out
 )Ë{} } 0)

	)

706 #i‚de‡
YY_INPUT


707 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

708 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 ) \

710 
c
 = '*'; \

711 
size_t
 
n
; \

712  
n
 = 0;Ç < 
max_size
 && \

713 (
c
 = 
	`gëc
–
˛ix⁄_js⁄_∑r£ö
 )Ë!
EOF
 && c !'\n'; ++
n
 ) \

714 
buf
[
n
] = (Ë
c
; \

715 i‡–
c
 == '\n' ) \

716 
buf
[
n
++] = (Ë
c
; \

717 i‡–
c
 =
EOF
 && 
	`„º‹
–
˛ix⁄_js⁄_∑r£ö
 ) ) \

718 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

719 
ªsu…
 = 
n
; \

723 
î∫o
=0; \

724  (
ªsu…
 = 
	`‰ód
(
buf
, 1, 
max_size
, 
˛ix⁄_js⁄_∑r£ö
))==0 && 
	`„º‹
(clixon_json_parsein)) \

726 if–
î∫o
 !
EINTR
) \

728 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

731 
î∫o
=0; \

732 
	`˛óªº
(
˛ix⁄_js⁄_∑r£ö
); \

736 

	)

743 #i‚de‡
yyãrmö©e


744 
	#yyãrmö©e
(Ë 
YY_NULL


	)

748 #i‚de‡
YY_START_STACK_INCR


749 
	#YY_START_STACK_INCR
 25

	)

753 #i‚de‡
YY_FATAL_ERROR


754 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

762 #i‚de‡
YY_DECL


763 
	#YY_DECL_IS_OURS
 1

	)

765 
˛ix⁄_js⁄_∑r£Àx
 ();

767 
	#YY_DECL
 
	`˛ix⁄_js⁄_∑r£Àx
 ()

	)

773 #i‚de‡
YY_USER_ACTION


774 
	#YY_USER_ACTION


	)

778 #i‚de‡
YY_BREAK


779 
	#YY_BREAK
 ;

	)

782 
	#YY_RULE_SETUP
 \

783 
YY_USER_ACTION


	)

787 
	gYY_DECL


789 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

790 *
	gyy_˝
, *
	gyy_bp
;

791 
	gyy_a˘
;

793 i‡–!(
	gyy_öô
) )

795 (
	gyy_öô
) = 1;

797 #ifde‡
YY_USER_INIT


798 
	gYY_USER_INIT
;

801 i‡–! (
	gyy_°¨t
) )

802 (
	gyy_°¨t
) = 1;

804 i‡–! 
	g˛ix⁄_js⁄_∑r£ö
 )

805 
	g˛ix⁄_js⁄_∑r£ö
 = 
°dö
;

807 i‡–! 
	g˛ix⁄_js⁄_∑r£out
 )

808 
	g˛ix⁄_js⁄_∑r£out
 = 
°dout
;

810 i‡–! 
	gYY_CURRENT_BUFFER
 ) {

811 
˛ix⁄_js⁄_∑r£ísuª_buf„r_°ack
 ();

812 
	gYY_CURRENT_BUFFER_LVALUE
 =

813 
˛ix⁄_js⁄_∑r£_¸óã_buf„r
(
˛ix⁄_js⁄_∑r£ö
,
YY_BUF_SIZE
 );

816 
˛ix⁄_js⁄_∑r£_lﬂd_buf„r_°©e
( );

826 
	gyy_˝
 = (
yy_c_buf_p
);

829 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

834 
	gyy_bp
 = 
yy_˝
;

836 
	gyy_cuºít_°©e
 = (
yy_°¨t
);

837 
	gyy_m©ch
:

840 
YY_CHAR
 
yy_c
 = 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)] ;

841 i‡–
	gyy_ac˚±
[
yy_cuºít_°©e
] )

843 (
	gyy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

844 (
	gyy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

846  
	gyy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
	gyy_c
] != yy_current_state )

848 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

849 i‡–
	gyy_cuºít_°©e
 >= 52 )

850 
yy_c
 = 
yy_mëa
[() yy_c];

852 
	gyy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[
yy_cuºít_°©e
] + (Ë
yy_c
];

853 ++
	gyy_˝
;

855  
	gyy_ba£
[
yy_cuºít_°©e
] != 70 );

857 
	gyy_föd_a˘i⁄
:

858 
yy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

859 i‡–
	gyy_a˘
 == 0 )

861 
yy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

862 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

863 
	gyy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

866 
	gYY_DO_BEFORE_ACTION
;

868 
	gdo_a˘i⁄
:

870  
yy_a˘
 )

874 *
yy_˝
 = (
yy_hﬁd_ch¨
);

875 
	gyy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

876 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

877 
	gyy_föd_a˘i⁄
;

880 
YY_RULE_SETUP


883 
YY_BREAK


886 
YY_RULE_SETUP


888 { 
_JY
->
jy_löíum
++; }

889 
YY_BREAK


891 
YY_RULE_SETUP


894 
YY_BREAK


895 
YY_STATE_EOF
(
START
):

897 {  
J_EOF
; }

898 
YY_BREAK


900 
YY_RULE_SETUP


902 {  *
˛ix⁄_js⁄_∑r£ãxt
; }

903 
YY_BREAK


905 
YY_RULE_SETUP


907 {  *
˛ix⁄_js⁄_∑r£ãxt
; }

908 
YY_BREAK


910 
YY_RULE_SETUP


912 {  *
˛ix⁄_js⁄_∑r£ãxt
; }

913 
YY_BREAK


915 
YY_RULE_SETUP


917 {  *
˛ix⁄_js⁄_∑r£ãxt
; }

918 
YY_BREAK


920 
YY_RULE_SETUP


922 {  *
˛ix⁄_js⁄_∑r£ãxt
; }

923 
YY_BREAK


925 
YY_RULE_SETUP


927 {  *
˛ix⁄_js⁄_∑r£ãxt
; }

928 
YY_BREAK


930 
YY_RULE_SETUP


932 { 
BEGIN
(
STRING
);  
	gJ_DQ
; }

933 
YY_BREAK


935 
YY_RULE_SETUP


937 {  
J_NULL
; }

938 
YY_BREAK


940 
YY_RULE_SETUP


942 {  
J_FALSE
; }

943 
YY_BREAK


945 
YY_RULE_SETUP


947 {  
J_TRUE
; }

948 
YY_BREAK


950 
YY_RULE_SETUP


952 { 
˛ix⁄_js⁄_∑r£lvÆ
.
°rög
 = 
°rdup
(
˛ix⁄_js⁄_∑r£ãxt
);  
	gJ_NUMBER
;}

953 
YY_BREAK


955 
YY_RULE_SETUP


958 
YY_BREAK


960 
YY_RULE_SETUP


962 { 
BEGIN
(
START
);  
	gJ_DQ
; }

963 
YY_BREAK


965 
YY_RULE_SETUP


967 { 
BEGIN
(
ESCAPE
); }

968 
YY_BREAK


971 
YY_RULE_SETUP


973 { 
_JY
->
jy_löíum
++;

974 
	g˛ix⁄_js⁄_∑r£lvÆ
.
	g°rög
 = 
°rdup
(
˛ix⁄_js⁄_∑r£ãxt
);

975  
	gJ_CHAR
;}

976 
YY_BREAK


978 
YY_RULE_SETUP


980 { 
˛ix⁄_js⁄_∑r£lvÆ
.
°rög
 = 
°rdup
(
˛ix⁄_js⁄_∑r£ãxt
);

981  
	gJ_CHAR
;}

982 
YY_BREAK


984 
YY_RULE_SETUP


986 { 
BEGIN
(
STRING
);

987 
	g˛ix⁄_js⁄_∑r£lvÆ
.
	g°rög
 = 
°rdup
(
˛ix⁄_js⁄_∑r£ãxt
);

988  
	gJ_CHAR
; }

989 
YY_BREAK


991 
YY_RULE_SETUP


993 
ECHO
;

994 
	gYY_BREAK


996 
YY_STATE_EOF
(
INITIAL
):

997 
YY_STATE_EOF
(
STRING
):

998 
YY_STATE_EOF
(
ESCAPE
):

999 
yyãrmö©e
();

1001 
	gYY_END_OF_BUFFER
:

1004 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - (
yyãxt_±r
)) - 1;

1007 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

1008 
YY_RESTORE_YY_MORE_OFFSET


1010 i‡–
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

1021 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1022 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_öput_fûe
 = 
˛ix⁄_js⁄_∑r£ö
;

1023 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

1033 i‡–(
	gyy_c_buf_p
Ë<&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1035 
yy_°©e_ty≥
 
yy_√xt_°©e
;

1037 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1039 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1050 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

1052 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1054 i‡–
	gyy_√xt_°©e
 )

1057 
	gyy_˝
 = ++(
yy_c_buf_p
);

1058 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

1059 
	gyy_m©ch
;

1064 
	gyy_˝
 = (
yy_c_buf_p
);

1065 
	gyy_föd_a˘i⁄
;

1069  
yy_gë_√xt_buf„r
( ) )

1071 
	gEOB_ACT_END_OF_FILE
:

1073 (
yy_did_buf„r_swôch_⁄_eof
) = 0;

1075 i‡–
˛ix⁄_js⁄_∑r£wøp
( ) )

1086 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1088 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

1089 
	gdo_a˘i⁄
;

1094 i‡–! (
	gyy_did_buf„r_swôch_⁄_eof
) )

1095 
	gYY_NEW_FILE
;

1100 
	gEOB_ACT_CONTINUE_SCAN
:

1101 (
yy_c_buf_p
) =

1102 (
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1104 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1106 
	gyy_˝
 = (
yy_c_buf_p
);

1107 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1108 
	gyy_m©ch
;

1110 
	gEOB_ACT_LAST_MATCH
:

1111 (
yy_c_buf_p
) =

1112 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)];

1114 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1116 
	gyy_˝
 = (
yy_c_buf_p
);

1117 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1118 
	gyy_föd_a˘i⁄
;

1124 
YY_FATAL_ERROR
(

1138 
	$yy_gë_√xt_buf„r
 ()

1140 *
de°
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
;

1141 *
sour˚
 = (
yyãxt_±r
);

1142 
yy_size_t
 
numbî_to_move
, 
i
;

1143 
ªt_vÆ
;

1145 i‡–(
yy_c_buf_p
Ë> &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
) + 1] )

1146 
	`YY_FATAL_ERROR
(

1149 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_fûl_buf„r
 == 0 )

1151 i‡–(
yy_c_buf_p
Ë- (
yyãxt_±r
Ë- 
YY_MORE_ADJ
 == 1 )

1156  
EOB_ACT_END_OF_FILE
;

1164  
EOB_ACT_LAST_MATCH
;

1171 
numbî_to_move
 = (
yy_size_t
Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
)) - 1;

1173  
i
 = 0; i < 
numbî_to_move
; ++i )

1174 *(
de°
++Ë*(
sour˚
++);

1176 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

1180 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars) = 0;

1184 
yy_size_t
 
num_to_ªad
 =

1185 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 - 
numbî_to_move
 - 1;

1187  
num_to_ªad
 <= 0 )

1191 
YY_BUFFER_STATE
 
b
 = 
YY_CURRENT_BUFFER_LVALUE
;

1193 
yy_c_buf_p_off£t
 =

1194 (Ë((
yy_c_buf_p
Ë- 
b
->
yy_ch_buf
);

1196 i‡–
b
->
yy_is_our_buf„r
 )

1198 
yy_size_t
 
√w_size
 = 
b
->
yy_buf_size
 * 2;

1200 i‡–
√w_size
 <= 0 )

1201 
b
->
yy_buf_size
 += b->yy_buf_size / 8;

1203 
b
->
yy_buf_size
 *= 2;

1205 
b
->
yy_ch_buf
 = (*)

1207 
	`˛ix⁄_js⁄_∑r£ªÆloc
((*Ë
b
->
yy_ch_buf
,b->
yy_buf_size
 + 2 );

1211 
b
->
yy_ch_buf
 = 0;

1213 i‡–! 
b
->
yy_ch_buf
 )

1214 
	`YY_FATAL_ERROR
(

1217 (
yy_c_buf_p
Ë&
b
->
yy_ch_buf
[
yy_c_buf_p_off£t
];

1219 
num_to_ªad
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 -

1220 
numbî_to_move
 - 1;

1224 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

1225 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

1228 
	`YY_INPUT
–(&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
]),

1229 (
yy_n_ch¨s
), 
num_to_ªad
 );

1231 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1234 i‡–(
yy_n_ch¨s
) == 0 )

1236 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

1238 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

1239 
	`˛ix⁄_js⁄_∑r£ª°¨t
(
˛ix⁄_js⁄_∑r£ö
 );

1244 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

1245 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =

1246 
YY_BUFFER_EOF_PENDING
;

1251 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

1253 i‡((Ë((
yy_n_ch¨s
Ë+ 
numbî_to_move
Ë> 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
) {

1255 
√w_size
 = (
yy_n_ch¨s
Ë+ 
numbî_to_move
 + ((yy_n_chars) >> 1);

1256 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 = (*Ë
	`˛ix⁄_js⁄_∑r£ªÆloc
((*ËYY_CURRENT_BUFFER_LVALUE->yy_ch_buf,
√w_size
 );

1257 i‡–! 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1258 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_get_next_buffer()" );

1261 (
yy_n_ch¨s
Ë+
numbî_to_move
;

1262 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] = 
YY_END_OF_BUFFER_CHAR
;

1263 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
Ë+ 1] = 
YY_END_OF_BUFFER_CHAR
;

1265 (
yyãxt_±r
Ë&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[0];

1267  
ªt_vÆ
;

1268 
	}
}

1272 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
 ()

1274 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

1275 *
yy_˝
;

1277 
yy_cuºít_°©e
 = (
yy_°¨t
);

1279  
yy_˝
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
; yy_˝ < (
yy_c_buf_p
); ++yy_cp )

1281 
YY_CHAR
 
yy_c
 = (*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1);

1282 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1284 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1285 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1287  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1289 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1290 i‡–
yy_cuºít_°©e
 >= 52 )

1291 
yy_c
 = 
yy_mëa
[() yy_c];

1293 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1296  
yy_cuºít_°©e
;

1297 
	}
}

1304 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
 (
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

1306 
yy_is_jam
;

1307 *
yy_˝
 = (
yy_c_buf_p
);

1309 
YY_CHAR
 
yy_c
 = 1;

1310 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1312 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1313 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1315  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1317 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1318 i‡–
yy_cuºít_°©e
 >= 52 )

1319 
yy_c
 = 
yy_mëa
[() yy_c];

1321 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1322 
yy_is_jam
 = (
yy_cuºít_°©e
 == 51);

1324  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

1325 
	}
}

1327 #i‚de‡
YY_NO_UNPUT


1329 
	$yyu≈ut
 (
c
, * 
yy_bp
 )

1331 *
yy_˝
;

1333 
yy_˝
 = (
yy_c_buf_p
);

1336 *
yy_˝
 = (
yy_hﬁd_ch¨
);

1338 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

1341 
yy_size_t
 
numbî_to_move
 = (
yy_n_ch¨s
) + 2;

1342 *
de°
 = &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[

1343 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 + 2];

1344 *
sour˚
 =

1345 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
];

1347  
sour˚
 > 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1348 *--
de°
 = *--
sour˚
;

1350 
yy_˝
 +(Ë(
de°
 - 
sour˚
);

1351 
yy_bp
 +(Ë(
de°
 - 
sour˚
);

1352 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 =

1353 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
;

1355 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

1356 
	`YY_FATAL_ERROR
( "flex scannerÖush-back overflow" );

1359 *--
yy_˝
 = (Ë
c
;

1361 (
yyãxt_±r
Ë
yy_bp
;

1362 (
yy_hﬁd_ch¨
Ë*
yy_˝
;

1363 (
yy_c_buf_p
Ë
yy_˝
;

1364 
	}
}

1368 #i‚de‡
YY_NO_INPUT


1369 #ifde‡
__˝lu•lus


1370 
	$yyöput
 ()

1372 
	$öput
 ()

1376 
c
;

1378 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1380 i‡–*(
yy_c_buf_p
Ë=
YY_END_OF_BUFFER_CHAR
 )

1386 i‡–(
yy_c_buf_p
Ë< &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1388 *(
yy_c_buf_p
) = '\0';

1392 
yy_size_t
 
off£t
 = (
yy_c_buf_p
Ë- (
yyãxt_±r
);

1393 ++(
yy_c_buf_p
);

1395  
	`yy_gë_√xt_buf„r
( ) )

1397 
EOB_ACT_LAST_MATCH
:

1409 
	`˛ix⁄_js⁄_∑r£ª°¨t
(
˛ix⁄_js⁄_∑r£ö
 );

1413 
EOB_ACT_END_OF_FILE
:

1415 i‡–
	`˛ix⁄_js⁄_∑r£wøp
( ) )

1416  
EOF
;

1418 i‡–! (
yy_did_buf„r_swôch_⁄_eof
) )

1419 
YY_NEW_FILE
;

1420 #ifde‡
__˝lu•lus


1421  
	`yyöput
();

1423  
	`öput
();

1427 
EOB_ACT_CONTINUE_SCAN
:

1428 (
yy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
off£t
;

1434 
c
 = *(*Ë(
yy_c_buf_p
);

1435 *(
yy_c_buf_p
) = '\0';

1436 (
yy_hﬁd_ch¨
Ë*++(
yy_c_buf_p
);

1438  
c
;

1439 
	}
}

1447 
	$˛ix⁄_js⁄_∑r£ª°¨t
 (
FILE
 * 
öput_fûe
 )

1450 i‡–! 
YY_CURRENT_BUFFER
 ){

1451 
	`˛ix⁄_js⁄_∑r£ísuª_buf„r_°ack
 ();

1452 
YY_CURRENT_BUFFER_LVALUE
 =

1453 
	`˛ix⁄_js⁄_∑r£_¸óã_buf„r
(
˛ix⁄_js⁄_∑r£ö
,
YY_BUF_SIZE
 );

1456 
	`˛ix⁄_js⁄_∑r£_öô_buf„r
(
YY_CURRENT_BUFFER
,
öput_fûe
 );

1457 
	`˛ix⁄_js⁄_∑r£_lﬂd_buf„r_°©e
( );

1458 
	}
}

1464 
	$˛ix⁄_js⁄_∑r£_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1472 
	`˛ix⁄_js⁄_∑r£ísuª_buf„r_°ack
 ();

1473 i‡–
YY_CURRENT_BUFFER
 =
√w_buf„r
 )

1476 i‡–
YY_CURRENT_BUFFER
 )

1479 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1480 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1481 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1484 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1485 
	`˛ix⁄_js⁄_∑r£_lﬂd_buf„r_°©e
( );

1492 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1493 
	}
}

1495 
	$˛ix⁄_js⁄_∑r£_lﬂd_buf„r_°©e
 ()

1497 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1498 (
yyãxt_±r
Ë(
yy_c_buf_p
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
;

1499 
˛ix⁄_js⁄_∑r£ö
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_öput_fûe
;

1500 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
);

1501 
	}
}

1509 
YY_BUFFER_STATE
 
	$˛ix⁄_js⁄_∑r£_¸óã_buf„r
 (
FILE
 * 
fûe
, 
size
 )

1511 
YY_BUFFER_STATE
 
b
;

1513 
b
 = (
YY_BUFFER_STATE
Ë
	`˛ix⁄_js⁄_∑r£Æloc
(–
yy_buf„r_°©e
 ) );

1514 i‡–! 
b
 )

1515 
	`YY_FATAL_ERROR
( "out of dynamic memory in clixon_json_parse_create_buffer()" );

1517 
b
->
yy_buf_size
 = (
yy_size_t
)
size
;

1522 
b
->
yy_ch_buf
 = (*Ë
	`˛ix⁄_js⁄_∑r£Æloc
(b->
yy_buf_size
 + 2 );

1523 i‡–! 
b
->
yy_ch_buf
 )

1524 
	`YY_FATAL_ERROR
( "out of dynamic memory in clixon_json_parse_create_buffer()" );

1526 
b
->
yy_is_our_buf„r
 = 1;

1528 
	`˛ix⁄_js⁄_∑r£_öô_buf„r
(
b
,
fûe
 );

1530  
b
;

1531 
	}
}

1537 
	$˛ix⁄_js⁄_∑r£_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1540 i‡–! 
b
 )

1543 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1544 
YY_CURRENT_BUFFER_LVALUE
 = (
YY_BUFFER_STATE
) 0;

1546 i‡–
b
->
yy_is_our_buf„r
 )

1547 
	`˛ix⁄_js⁄_∑r£‰ì
((*Ë
b
->
yy_ch_buf
 );

1549 
	`˛ix⁄_js⁄_∑r£‰ì
((*Ë
b
 );

1550 
	}
}

1556 
	$˛ix⁄_js⁄_∑r£_öô_buf„r
 (
YY_BUFFER_STATE
 
b
, 
FILE
 * 
fûe
 )

1559 
€ºno
 = 
î∫o
;

1561 
	`˛ix⁄_js⁄_∑r£_Êush_buf„r
(
b
 );

1563 
b
->
yy_öput_fûe
 = 
fûe
;

1564 
b
->
yy_fûl_buf„r
 = 1;

1570 i‡(
b
 !
YY_CURRENT_BUFFER
){

1571 
b
->
yy_bs_löío
 = 1;

1572 
b
->
yy_bs_cﬁumn
 = 0;

1575 
b
->
yy_is_öãø˘ive
 = 
fûe
 ? (
	`ißây
–
	`fûío
(file) ) > 0) : 0;

1577 
î∫o
 = 
€ºno
;

1578 
	}
}

1584 
	$˛ix⁄_js⁄_∑r£_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1586 i‡–! 
b
 )

1589 
b
->
yy_n_ch¨s
 = 0;

1595 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

1596 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

1598 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

1600 
b
->
yy_©_bﬁ
 = 1;

1601 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1603 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1604 
	`˛ix⁄_js⁄_∑r£_lﬂd_buf„r_°©e
( );

1605 
	}
}

1613 
	$˛ix⁄_js⁄_∑r£push_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1615 i‡(
√w_buf„r
 =
NULL
)

1618 
	`˛ix⁄_js⁄_∑r£ísuª_buf„r_°ack
();

1621 i‡–
YY_CURRENT_BUFFER
 )

1624 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1625 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1626 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1630 i‡(
YY_CURRENT_BUFFER
)

1631 (
yy_buf„r_°ack_t›
)++;

1632 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1635 
	`˛ix⁄_js⁄_∑r£_lﬂd_buf„r_°©e
( );

1636 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1637 
	}
}

1643 
	$˛ix⁄_js⁄_∑r£p›_buf„r_°©e
 ()

1645 i‡(!
YY_CURRENT_BUFFER
)

1648 
	`˛ix⁄_js⁄_∑r£_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

1649 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

1650 i‡((
yy_buf„r_°ack_t›
) > 0)

1651 --(
yy_buf„r_°ack_t›
);

1653 i‡(
YY_CURRENT_BUFFER
) {

1654 
	`˛ix⁄_js⁄_∑r£_lﬂd_buf„r_°©e
( );

1655 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1657 
	}
}

1662 
	$˛ix⁄_js⁄_∑r£ísuª_buf„r_°ack
 ()

1664 
yy_size_t
 
num_to_Æloc
;

1666 i‡(!(
yy_buf„r_°ack
)) {

1672 
num_to_Æloc
 = 1;

1673 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
˛ix⁄_js⁄_∑r£Æloc


1674 (
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1676 i‡–! (
yy_buf„r_°ack
) )

1677 
	`YY_FATAL_ERROR
( "out of dynamic memory in clixon_json_parseensure_buffer_stack()" );

1679 
	`mem£t
((
yy_buf„r_°ack
), 0, 
num_to_Æloc
 * (
yy_buf„r_°©e
*));

1681 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1682 (
yy_buf„r_°ack_t›
) = 0;

1686 i‡((
yy_buf„r_°ack_t›
Ë>((
yy_buf„r_°ack_max
)) - 1){

1689 
yy_size_t
 
grow_size
 = 8 ;

1691 
num_to_Æloc
 = (
yy_buf„r_°ack_max
Ë+ 
grow_size
;

1692 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
˛ix⁄_js⁄_∑r£ªÆloc


1693 ((
yy_buf„r_°ack
),

1694 
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1696 i‡–! (
yy_buf„r_°ack
) )

1697 
	`YY_FATAL_ERROR
( "out of dynamic memory in clixon_json_parseensure_buffer_stack()" );

1700 
	`mem£t
((
yy_buf„r_°ack
Ë+ (
yy_buf„r_°ack_max
), 0, 
grow_size
 * (
yy_buf„r_°©e
*));

1701 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1703 
	}
}

1711 
YY_BUFFER_STATE
 
	$˛ix⁄_js⁄_∑r£_sˇn_buf„r
 (* 
ba£
, 
yy_size_t
 
size
 )

1713 
YY_BUFFER_STATE
 
b
;

1715 i‡–
size
 < 2 ||

1716 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

1717 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

1721 
b
 = (
YY_BUFFER_STATE
Ë
	`˛ix⁄_js⁄_∑r£Æloc
(–
yy_buf„r_°©e
 ) );

1722 i‡–! 
b
 )

1723 
	`YY_FATAL_ERROR
( "out of dynamic memory in clixon_json_parse_scan_buffer()" );

1725 
b
->
yy_buf_size
 = 
size
 - 2;

1726 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

1727 
b
->
yy_is_our_buf„r
 = 0;

1728 
b
->
yy_öput_fûe
 = 0;

1729 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

1730 
b
->
yy_is_öãø˘ive
 = 0;

1731 
b
->
yy_©_bﬁ
 = 1;

1732 
b
->
yy_fûl_buf„r
 = 0;

1733 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1735 
	`˛ix⁄_js⁄_∑r£_swôch_to_buf„r
(
b
 );

1737  
b
;

1738 
	}
}

1748 
YY_BUFFER_STATE
 
	$˛ix⁄_js⁄_∑r£_sˇn_°rög
 (
yyc⁄°
 * 
yy°r
 )

1751  
	`˛ix⁄_js⁄_∑r£_sˇn_byãs
(
yy°r
,
	`°æí
(yystr) );

1752 
	}
}

1761 
YY_BUFFER_STATE
 
	$˛ix⁄_js⁄_∑r£_sˇn_byãs
 (
yyc⁄°
 * 
yybyãs
, 
yy_size_t
 
_yybyãs_Àn
 )

1763 
YY_BUFFER_STATE
 
b
;

1764 *
buf
;

1765 
yy_size_t
 
n
;

1766 
yy_size_t
 
i
;

1769 
n
 = 
_yybyãs_Àn
 + 2;

1770 
buf
 = (*Ë
	`˛ix⁄_js⁄_∑r£Æloc
(
n
 );

1771 i‡–! 
buf
 )

1772 
	`YY_FATAL_ERROR
( "out of dynamic memory in clixon_json_parse_scan_bytes()" );

1774  
i
 = 0; i < 
_yybyãs_Àn
; ++i )

1775 
buf
[
i
] = 
yybyãs
[i];

1777 
buf
[
_yybyãs_Àn
] = buf[_yybyãs_Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

1779 
b
 = 
	`˛ix⁄_js⁄_∑r£_sˇn_buf„r
(
buf
,
n
 );

1780 i‡–! 
b
 )

1781 
	`YY_FATAL_ERROR
( "bad buffer in clixon_json_parse_scan_bytes()" );

1786 
b
->
yy_is_our_buf„r
 = 1;

1788  
b
;

1789 
	}
}

1791 #i‚de‡
YY_EXIT_FAILURE


1792 
	#YY_EXIT_FAILURE
 2

	)

1795 
	$yy_Áèl_îr‹
 (
yyc⁄°
 * 
msg
 )

1797 (Ë
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

1798 
	`exô
–
YY_EXIT_FAILURE
 );

1799 
	}
}

1803 #unde‡
yyÀss


1804 
	#yyÀss
(
n
) \

1808 
yyÀss_ma¸o_¨g
 = (
n
); \

1809 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

1810 
˛ix⁄_js⁄_∑r£ãxt
[
˛ix⁄_js⁄_∑r£Àng
] = (
yy_hﬁd_ch¨
); \

1811 (
yy_c_buf_p
Ë
˛ix⁄_js⁄_∑r£ãxt
 + 
yyÀss_ma¸o_¨g
; \

1812 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
); \

1813 *(
yy_c_buf_p
) = '\0'; \

1814 
˛ix⁄_js⁄_∑r£Àng
 = 
yyÀss_ma¸o_¨g
; \

1816  0 )

	)

1823 
	$˛ix⁄_js⁄_∑r£gë_löío
 ()

1826  
˛ix⁄_js⁄_∑r£löío
;

1827 
	}
}

1832 
FILE
 *
	$˛ix⁄_js⁄_∑r£gë_ö
 ()

1834  
˛ix⁄_js⁄_∑r£ö
;

1835 
	}
}

1840 
FILE
 *
	$˛ix⁄_js⁄_∑r£gë_out
 ()

1842  
˛ix⁄_js⁄_∑r£out
;

1843 
	}
}

1848 
yy_size_t
 
	$˛ix⁄_js⁄_∑r£gë_Àng
 ()

1850  
˛ix⁄_js⁄_∑r£Àng
;

1851 
	}
}

1857 *
	$˛ix⁄_js⁄_∑r£gë_ãxt
 ()

1859  
˛ix⁄_js⁄_∑r£ãxt
;

1860 
	}
}

1866 
	$˛ix⁄_js⁄_∑r££t_löío
 (
_löe_numbî
 )

1869 
˛ix⁄_js⁄_∑r£löío
 = 
_löe_numbî
;

1870 
	}
}

1878 
	$˛ix⁄_js⁄_∑r££t_ö
 (
FILE
 * 
_ö_°r
 )

1880 
˛ix⁄_js⁄_∑r£ö
 = 
_ö_°r
 ;

1881 
	}
}

1883 
	$˛ix⁄_js⁄_∑r££t_out
 (
FILE
 * 
_out_°r
 )

1885 
˛ix⁄_js⁄_∑r£out
 = 
_out_°r
 ;

1886 
	}
}

1888 
	$˛ix⁄_js⁄_∑r£gë_debug
 ()

1890  
˛ix⁄_js⁄_∑r£_Êex_debug
;

1891 
	}
}

1893 
	$˛ix⁄_js⁄_∑r££t_debug
 (
_bdebug
 )

1895 
˛ix⁄_js⁄_∑r£_Êex_debug
 = 
_bdebug
 ;

1896 
	}
}

1898 
	$yy_öô_globÆs
 ()

1904 (
yy_buf„r_°ack
) = 0;

1905 (
yy_buf„r_°ack_t›
) = 0;

1906 (
yy_buf„r_°ack_max
) = 0;

1907 (
yy_c_buf_p
) = (*) 0;

1908 (
yy_öô
) = 0;

1909 (
yy_°¨t
) = 0;

1912 #ifde‡
YY_STDINIT


1913 
˛ix⁄_js⁄_∑r£ö
 = 
°dö
;

1914 
˛ix⁄_js⁄_∑r£out
 = 
°dout
;

1916 
˛ix⁄_js⁄_∑r£ö
 = (
FILE
 *) 0;

1917 
˛ix⁄_js⁄_∑r£out
 = (
FILE
 *) 0;

1924 
	}
}

1927 
	$˛ix⁄_js⁄_∑r£Àx_de°roy
 ()

1931 
YY_CURRENT_BUFFER
){

1932 
	`˛ix⁄_js⁄_∑r£_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

1933 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

1934 
	`˛ix⁄_js⁄_∑r£p›_buf„r_°©e
();

1938 
	`˛ix⁄_js⁄_∑r£‰ì
((
yy_buf„r_°ack
) );

1939 (
yy_buf„r_°ack
Ë
NULL
;

1943 
	`yy_öô_globÆs
( );

1946 
	}
}

1952 #i‚de‡
yyãxt_±r


1953 
	$yy_Êex_°∫˝y
 (* 
s1
, 
yyc⁄°
 * 
s2
, 
n
 )

1956 
i
;

1957  
i
 = 0; i < 
n
; ++i )

1958 
s1
[
i
] = 
s2
[i];

1959 
	}
}

1962 #ifde‡
YY_NEED_STRLEN


1963 
	$yy_Êex_°æí
 (
yyc⁄°
 * 
s
 )

1965 
n
;

1966  
n
 = 0; 
s
[n]; ++n )

1969  
n
;

1970 
	}
}

1973 *
	$˛ix⁄_js⁄_∑r£Æloc
 (
yy_size_t
 
size
 )

1975  (*Ë
	`mÆloc
–
size
 );

1976 
	}
}

1978 *
	$˛ix⁄_js⁄_∑r£ªÆloc
 (* 
±r
, 
yy_size_t
 
size
 )

1988  (*Ë
	`ªÆloc
–(*Ë
±r
, 
size
 );

1989 
	}
}

1991 
	$˛ix⁄_js⁄_∑r£‰ì
 (* 
±r
 )

1993 
	`‰ì
–(*Ë
±r
 );

1994 
	}
}

1996 
	#YYTABLES_NAME
 "yyèbÀs"

	)

2006 
	$js⁄_sˇn_öô
(
˛ic⁄_js⁄_yacc_¨g
 *
jy
)

2008 
	`BEGIN
(
START
);

2009 
jy
->
jy_Àxbuf
 = 
	`˛ix⁄_js⁄_∑r£_sˇn_°rög
 (jy->
jy_∑r£_°rög
);

2012 
	`yyu≈ut
(0, "");

2016 
	}
}

2023 
	$js⁄_sˇn_exô
(
˛ic⁄_js⁄_yacc_¨g
 *
jy
)

2025 
	`˛ix⁄_js⁄_∑r£_dñëe_buf„r
(
jy
->
jy_Àxbuf
);

2026 
	`˛ix⁄_js⁄_∑r£Àx_de°roy
();

2028 
	}
}

	@clixon-master/lib/src/lex.clixon_xml_parse.c

4 
	#YY_INT_ALIGNED
 

	)

8 
	#yy_¸óã_buf„r
 
˛ix⁄_xml_∑r£_¸óã_buf„r


	)

9 
	#yy_dñëe_buf„r
 
˛ix⁄_xml_∑r£_dñëe_buf„r


	)

10 
	#yy_Êex_debug
 
˛ix⁄_xml_∑r£_Êex_debug


	)

11 
	#yy_öô_buf„r
 
˛ix⁄_xml_∑r£_öô_buf„r


	)

12 
	#yy_Êush_buf„r
 
˛ix⁄_xml_∑r£_Êush_buf„r


	)

13 
	#yy_lﬂd_buf„r_°©e
 
˛ix⁄_xml_∑r£_lﬂd_buf„r_°©e


	)

14 
	#yy_swôch_to_buf„r
 
˛ix⁄_xml_∑r£_swôch_to_buf„r


	)

15 
	#yyö
 
˛ix⁄_xml_∑r£ö


	)

16 
	#yyÀng
 
˛ix⁄_xml_∑r£Àng


	)

17 
	#yyÀx
 
˛ix⁄_xml_∑r£Àx


	)

18 
	#yylöío
 
˛ix⁄_xml_∑r£löío


	)

19 
	#yyout
 
˛ix⁄_xml_∑r£out


	)

20 
	#yyª°¨t
 
˛ix⁄_xml_∑r£ª°¨t


	)

21 
	#yyãxt
 
˛ix⁄_xml_∑r£ãxt


	)

22 
	#yywøp
 
˛ix⁄_xml_∑r£wøp


	)

23 
	#yyÆloc
 
˛ix⁄_xml_∑r£Æloc


	)

24 
	#yyªÆloc
 
˛ix⁄_xml_∑r£ªÆloc


	)

25 
	#yy‰ì
 
˛ix⁄_xml_∑r£‰ì


	)

27 
	#FLEX_SCANNER


	)

28 
	#YY_FLEX_MAJOR_VERSION
 2

	)

29 
	#YY_FLEX_MINOR_VERSION
 6

	)

30 
	#YY_FLEX_SUBMINOR_VERSION
 0

	)

31 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

32 
	#FLEX_BETA


	)

38 
	~<°dio.h
>

39 
	~<°rög.h
>

40 
	~<î∫o.h
>

41 
	~<°dlib.h
>

47 #i‚de‡
FLEXINT_H


48 
	#FLEXINT_H


	)

52 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

57 #i‚de‡
__STDC_LIMIT_MACROS


58 
	#__STDC_LIMIT_MACROS
 1

	)

61 
	~<öây≥s.h
>

62 
öt8_t
 
	tÊex_öt8_t
;

63 
uöt8_t
 
	tÊex_uöt8_t
;

64 
öt16_t
 
	tÊex_öt16_t
;

65 
uöt16_t
 
	tÊex_uöt16_t
;

66 
öt32_t
 
	tÊex_öt32_t
;

67 
uöt32_t
 
	tÊex_uöt32_t
;

69 sig√d 
	tÊex_öt8_t
;

70 
	tÊex_öt16_t
;

71 
	tÊex_öt32_t
;

72 
	tÊex_uöt8_t
;

73 
	tÊex_uöt16_t
;

74 
	tÊex_uöt32_t
;

77 #i‚de‡
INT8_MIN


78 
	#INT8_MIN
 (-128)

	)

80 #i‚de‡
INT16_MIN


81 
	#INT16_MIN
 (-32767-1)

	)

83 #i‚de‡
INT32_MIN


84 
	#INT32_MIN
 (-2147483647-1)

	)

86 #i‚de‡
INT8_MAX


87 
	#INT8_MAX
 (127)

	)

89 #i‚de‡
INT16_MAX


90 
	#INT16_MAX
 (32767)

	)

92 #i‚de‡
INT32_MAX


93 
	#INT32_MAX
 (2147483647)

	)

95 #i‚de‡
UINT8_MAX


96 
	#UINT8_MAX
 (255U)

	)

98 #i‚de‡
UINT16_MAX


99 
	#UINT16_MAX
 (65535U)

	)

101 #i‚de‡
UINT32_MAX


102 
	#UINT32_MAX
 (4294967295U)

	)

109 #ifde‡
__˝lu•lus


112 
	#YY_USE_CONST


	)

117 #i‡
deföed
 (
__STDC__
)

119 
	#YY_USE_CONST


	)

124 #ifde‡
YY_USE_CONST


125 
	#yyc⁄°
 c⁄°

	)

127 
	#yyc⁄°


	)

131 
	#YY_NULL
 0

	)

138 
	#YY_SC_TO_UI
(
c
Ë((Ë(Ëc)

	)

144 
	#BEGIN
 (
yy_°¨t
Ë1 + 2 *

	)

150 
	#YY_START
 (((
yy_°¨t
Ë- 1Ë/ 2)

	)

151 
	#YYSTATE
 
YY_START


	)

154 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

157 
	#YY_NEW_FILE
 
	`˛ix⁄_xml_∑r£ª°¨t
(
˛ix⁄_xml_∑r£ö
 )

	)

159 
	#YY_END_OF_BUFFER_CHAR
 0

	)

162 #i‚de‡
YY_BUF_SIZE


163 #ifde‡
__ü64__


168 
	#YY_BUF_SIZE
 32768

	)

170 
	#YY_BUF_SIZE
 16384

	)

176 
	#YY_STATE_BUF_SIZE
 ((
YY_BUF_SIZE
 + 2Ë* (
yy_°©e_ty≥
))

	)

178 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


179 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

180 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

183 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


184 
	#YY_TYPEDEF_YY_SIZE_T


	)

185 
size_t
 
	tyy_size_t
;

188 
yy_size_t
 
˛ix⁄_xml_∑r£Àng
;

190 
FILE
 *
˛ix⁄_xml_∑r£ö
, *
˛ix⁄_xml_∑r£out
;

192 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

193 
	#EOB_ACT_END_OF_FILE
 1

	)

194 
	#EOB_ACT_LAST_MATCH
 2

	)

196 
	#YY_LESS_LINENO
(
n
)

	)

197 
	#YY_LINENO_REWIND_TO
(
±r
)

	)

200 
	#yyÀss
(
n
) \

204 
yyÀss_ma¸o_¨g
 = (
n
); \

205 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

206 *
yy_˝
 = (
yy_hﬁd_ch¨
); \

207 
YY_RESTORE_YY_MORE_OFFSET
 \

208 (
yy_c_buf_p
Ë
yy_˝
 = 
yy_bp
 + 
yyÀss_ma¸o_¨g
 - 
YY_MORE_ADJ
; \

209 
YY_DO_BEFORE_ACTION
; \

211  0 )

	)

213 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, (
yyãxt_±r
Ë)

	)

215 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


216 
	#YY_STRUCT_YY_BUFFER_STATE


	)

217 
	syy_buf„r_°©e


219 
FILE
 *
	myy_öput_fûe
;

221 *
	myy_ch_buf
;

222 *
	myy_buf_pos
;

227 
yy_size_t
 
	myy_buf_size
;

232 
	myy_n_ch¨s
;

238 
	myy_is_our_buf„r
;

245 
	myy_is_öãø˘ive
;

251 
	myy_©_bﬁ
;

253 
	myy_bs_löío
;

254 
	myy_bs_cﬁumn
;

259 
	myy_fûl_buf„r
;

261 
	myy_buf„r_°©us
;

263 
	#YY_BUFFER_NEW
 0

	)

264 
	#YY_BUFFER_NORMAL
 1

	)

275 
	#YY_BUFFER_EOF_PENDING
 2

	)

281 
size_t
 
	gyy_buf„r_°ack_t›
 = 0;

282 
size_t
 
	gyy_buf„r_°ack_max
 = 0;

283 
YY_BUFFER_STATE
 * 
	gyy_buf„r_°ack
 = 0;

291 
	#YY_CURRENT_BUFFER
 ( (
yy_buf„r_°ack
) \

292 ? (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)] \

293 : 
NULL
)

	)

298 
	#YY_CURRENT_BUFFER_LVALUE
 (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)]

	)

301 
	gyy_hﬁd_ch¨
;

302 
	gyy_n_ch¨s
;

303 
yy_size_t
 
	g˛ix⁄_xml_∑r£Àng
;

306 *
	gyy_c_buf_p
 = (*) 0;

307 
	gyy_öô
 = 0;

308 
	gyy_°¨t
 = 0;

313 
	gyy_did_buf„r_swôch_⁄_eof
;

315 
˛ix⁄_xml_∑r£ª°¨t
 (
FILE
 *
öput_fûe
 );

316 
˛ix⁄_xml_∑r£_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

317 
YY_BUFFER_STATE
 
˛ix⁄_xml_∑r£_¸óã_buf„r
 (
FILE
 *
fûe
,
size
 );

318 
˛ix⁄_xml_∑r£_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 );

319 
˛ix⁄_xml_∑r£_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 );

320 
˛ix⁄_xml_∑r£push_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

321 
˛ix⁄_xml_∑r£p›_buf„r_°©e
 ();

323 
˛ix⁄_xml_∑r£ísuª_buf„r_°ack
 ();

324 
˛ix⁄_xml_∑r£_lﬂd_buf„r_°©e
 ();

325 
˛ix⁄_xml_∑r£_öô_buf„r
 (
YY_BUFFER_STATE
 
b
,
FILE
 *
fûe
 );

327 
	#YY_FLUSH_BUFFER
 
	`˛ix⁄_xml_∑r£_Êush_buf„r
(
YY_CURRENT_BUFFER
 )

	)

329 
YY_BUFFER_STATE
 
˛ix⁄_xml_∑r£_sˇn_buf„r
 (*
ba£
,
yy_size_t
 
size
 );

330 
YY_BUFFER_STATE
 
˛ix⁄_xml_∑r£_sˇn_°rög
 (
yyc⁄°
 *
yy_°r
 );

331 
YY_BUFFER_STATE
 
˛ix⁄_xml_∑r£_sˇn_byãs
 (
yyc⁄°
 *
byãs
,
yy_size_t
 
Àn
 );

333 *
˛ix⁄_xml_∑r£Æloc
 (
yy_size_t
 );

334 *
˛ix⁄_xml_∑r£ªÆloc
 (*,
yy_size_t
 );

335 
˛ix⁄_xml_∑r£‰ì
 (* );

337 
	#yy_√w_buf„r
 
˛ix⁄_xml_∑r£_¸óã_buf„r


	)

339 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

341 i‡–! 
YY_CURRENT_BUFFER
 ){ \

342 
	`˛ix⁄_xml_∑r£ísuª_buf„r_°ack
 (); \

343 
YY_CURRENT_BUFFER_LVALUE
 = \

344 
	`˛ix⁄_xml_∑r£_¸óã_buf„r
(
˛ix⁄_xml_∑r£ö
,
YY_BUF_SIZE
 ); \

346 
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

347 }

	)

349 
	#yy_£t_bﬁ
(
©_bﬁ
) \

351 i‡–! 
YY_CURRENT_BUFFER
 ){\

352 
	`˛ix⁄_xml_∑r£ísuª_buf„r_°ack
 (); \

353 
YY_CURRENT_BUFFER_LVALUE
 = \

354 
	`˛ix⁄_xml_∑r£_¸óã_buf„r
(
˛ix⁄_xml_∑r£ö
,
YY_BUF_SIZE
 ); \

356 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = 
©_bﬁ
; \

357 }

	)

359 
	#YY_AT_BOL
(Ë(
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
)

	)

363 
	tYY_CHAR
;

365 
FILE
 *
	g˛ix⁄_xml_∑r£ö
 = (FILE *Ë0, *
	g˛ix⁄_xml_∑r£out
 = (FILE *) 0;

367 
	tyy_°©e_ty≥
;

369 
˛ix⁄_xml_∑r£löío
;

371 
	g˛ix⁄_xml_∑r£löío
 = 1;

373 *
˛ix⁄_xml_∑r£ãxt
;

374 #ifde‡
yyãxt_±r


375 #unde‡
yyãxt_±r


377 
	#yyãxt_±r
 
˛ix⁄_xml_∑r£ãxt


	)

379 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 ();

380 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 (yy_°©e_ty≥ 
cuºít_°©e
 );

381 
yy_gë_√xt_buf„r
 ();

382 #i‡
deföed
(
__GNUC__
) && __GNUC__ >= 3

383 
__©åibuã__
((
__n‹ëu∫__
))

385 
yy_Áèl_îr‹
 (
yyc⁄°
 
msg
[] );

390 
	#YY_DO_BEFORE_ACTION
 \

391 (
yyãxt_±r
Ë
yy_bp
; \

392 
˛ix⁄_xml_∑r£Àng
 = (
size_t
Ë(
yy_˝
 - 
yy_bp
); \

393 (
yy_hﬁd_ch¨
Ë*
yy_˝
; \

394 *
yy_˝
 = '\0'; \

395 (
yy_c_buf_p
Ë
yy_˝
;

	)

397 
	#YY_NUM_RULES
 42

	)

398 
	#YY_END_OF_BUFFER
 43

	)

401 
	syy_å™s_öfo


403 
Êex_öt32_t
 
	myy_vîify
;

404 
Êex_öt32_t
 
	myy_nxt
;

406 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ac˚±
[115] =

423 
yyc⁄°
 
YY_CHAR
 
	gyy_ec
[256] =

455 
yyc⁄°
 
YY_CHAR
 
	gyy_mëa
[39] =

463 
yyc⁄°
 
Êex_uöt16_t
 
	gyy_ba£
[125] =

481 
yyc⁄°
 
Êex_öt16_t
 
	gyy_def
[125] =

499 
yyc⁄°
 
Êex_uöt16_t
 
	gyy_nxt
[215] =

527 
yyc⁄°
 
Êex_öt16_t
 
	gyy_chk
[215] =

555 
yy_°©e_ty≥
 
	gyy_œ°_ac˚±ög_°©e
;

556 *
	gyy_œ°_ac˚±ög_˝os
;

558 
˛ix⁄_xml_∑r£_Êex_debug
;

559 
	g˛ix⁄_xml_∑r£_Êex_debug
 = 0;

564 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

565 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

566 
	#YY_MORE_ADJ
 0

	)

567 
	#YY_RESTORE_YY_MORE_OFFSET


	)

568 *
	g˛ix⁄_xml_∑r£ãxt
;

609 
	~"˛ix⁄_c⁄fig.h
"

611 
	~<°dio.h
>

612 
	~<°rög.h
>

613 
	~<°döt.h
>

615 
	~"˛ix⁄_xml_∑r£.èb.h
"

618 
	~<˛igí/˛igí.h
>

621 
	~"˛ix⁄_queue.h
"

622 
	~"˛ix⁄_hash.h
"

623 
	~"˛ix⁄_h™dÀ.h
"

624 
	~"˛ix⁄_y™g.h
"

625 
	~"˛ix⁄_xml.h
"

626 
	~"˛ix⁄_xml_∑r£.h
"

629 
	#YY_DECL
 
	`˛ix⁄_xml_∑r£Àx
(*
_ya
)

	)

632 
	#YY_NO_INPUT


	)

635 
	#_YA
 ((
xml_∑r£_yacc_¨g
 *)
_ya
)

	)

637 #unde‡
˛ix⁄_xml_∑r£wøp


638 
	$˛ix⁄_xml_∑r£wøp
()

641 
	}
}

653 
	#INITIAL
 0

	)

654 
	#START
 1

	)

655 
	#STATEA
 2

	)

656 
	#AMPERSAND
 3

	)

657 
	#CMNT
 4

	)

658 
	#STR
 5

	)

659 
	#TEXTDECL
 6

	)

660 
	#STRDQ
 7

	)

661 
	#STRSQ
 8

	)

663 #i‚de‡
YY_NO_UNISTD_H


668 
	~<uni°d.h
>

671 #i‚de‡
YY_EXTRA_TYPE


672 
	#YY_EXTRA_TYPE
 *

	)

675 
yy_öô_globÆs
 ();

680 
˛ix⁄_xml_∑r£Àx_de°roy
 ();

682 
˛ix⁄_xml_∑r£gë_debug
 ();

684 
˛ix⁄_xml_∑r££t_debug
 (
debug_Êag
 );

686 
YY_EXTRA_TYPE
 
˛ix⁄_xml_∑r£gë_exåa
 ();

688 
˛ix⁄_xml_∑r££t_exåa
 (
YY_EXTRA_TYPE
 
u£r_deföed
 );

690 
FILE
 *
˛ix⁄_xml_∑r£gë_ö
 ();

692 
˛ix⁄_xml_∑r££t_ö
 (
FILE
 * 
_ö_°r
 );

694 
FILE
 *
˛ix⁄_xml_∑r£gë_out
 ();

696 
˛ix⁄_xml_∑r££t_out
 (
FILE
 * 
_out_°r
 );

698 
yy_size_t
 
˛ix⁄_xml_∑r£gë_Àng
 ();

700 *
˛ix⁄_xml_∑r£gë_ãxt
 ();

702 
˛ix⁄_xml_∑r£gë_löío
 ();

704 
˛ix⁄_xml_∑r££t_löío
 (
_löe_numbî
 );

710 #i‚de‡
YY_SKIP_YYWRAP


711 #ifde‡
__˝lu•lus


712 "C" 
˛ix⁄_xml_∑r£wøp
 ();

714 
˛ix⁄_xml_∑r£wøp
 ();

718 #i‚de‡
YY_NO_UNPUT


720 
yyu≈ut
 (
c
,*
buf_±r
 );

724 #i‚de‡
yyãxt_±r


725 
yy_Êex_°∫˝y
 (*,
yyc⁄°
 *,);

728 #ifde‡
YY_NEED_STRLEN


729 
yy_Êex_°æí
 (
yyc⁄°
 * );

732 #i‚de‡
YY_NO_INPUT


734 #ifde‡
__˝lu•lus


735 
yyöput
 ();

737 
öput
 ();

743 #i‚de‡
YY_READ_BUF_SIZE


744 #ifde‡
__ü64__


746 
	#YY_READ_BUF_SIZE
 16384

	)

748 
	#YY_READ_BUF_SIZE
 8192

	)

753 #i‚de‡
ECHO


757 
	#ECHO
 dÿ{ i‡(
	`fwrôe
–
˛ix⁄_xml_∑r£ãxt
, 
˛ix⁄_xml_∑r£Àng
, 1, 
˛ix⁄_xml_∑r£out
 )Ë{} } 0)

	)

763 #i‚de‡
YY_INPUT


764 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

765 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 ) \

767 
c
 = '*'; \

768 
size_t
 
n
; \

769  
n
 = 0;Ç < 
max_size
 && \

770 (
c
 = 
	`gëc
–
˛ix⁄_xml_∑r£ö
 )Ë!
EOF
 && c !'\n'; ++
n
 ) \

771 
buf
[
n
] = (Ë
c
; \

772 i‡–
c
 == '\n' ) \

773 
buf
[
n
++] = (Ë
c
; \

774 i‡–
c
 =
EOF
 && 
	`„º‹
–
˛ix⁄_xml_∑r£ö
 ) ) \

775 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

776 
ªsu…
 = 
n
; \

780 
î∫o
=0; \

781  (
ªsu…
 = 
	`‰ód
(
buf
, 1, 
max_size
, 
˛ix⁄_xml_∑r£ö
))==0 && 
	`„º‹
(clixon_xml_parsein)) \

783 if–
î∫o
 !
EINTR
) \

785 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

788 
î∫o
=0; \

789 
	`˛óªº
(
˛ix⁄_xml_∑r£ö
); \

793 

	)

800 #i‚de‡
yyãrmö©e


801 
	#yyãrmö©e
(Ë 
YY_NULL


	)

805 #i‚de‡
YY_START_STACK_INCR


806 
	#YY_START_STACK_INCR
 25

	)

810 #i‚de‡
YY_FATAL_ERROR


811 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

819 #i‚de‡
YY_DECL


820 
	#YY_DECL_IS_OURS
 1

	)

822 
˛ix⁄_xml_∑r£Àx
 ();

824 
	#YY_DECL
 
	`˛ix⁄_xml_∑r£Àx
 ()

	)

830 #i‚de‡
YY_USER_ACTION


831 
	#YY_USER_ACTION


	)

835 #i‚de‡
YY_BREAK


836 
	#YY_BREAK
 ;

	)

839 
	#YY_RULE_SETUP
 \

840 
YY_USER_ACTION


	)

844 
	gYY_DECL


846 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

847 *
	gyy_˝
, *
	gyy_bp
;

848 
	gyy_a˘
;

850 i‡–!(
	gyy_öô
) )

852 (
	gyy_öô
) = 1;

854 #ifde‡
YY_USER_INIT


855 
	gYY_USER_INIT
;

858 i‡–! (
	gyy_°¨t
) )

859 (
	gyy_°¨t
) = 1;

861 i‡–! 
	g˛ix⁄_xml_∑r£ö
 )

862 
	g˛ix⁄_xml_∑r£ö
 = 
°dö
;

864 i‡–! 
	g˛ix⁄_xml_∑r£out
 )

865 
	g˛ix⁄_xml_∑r£out
 = 
°dout
;

867 i‡–! 
	gYY_CURRENT_BUFFER
 ) {

868 
˛ix⁄_xml_∑r£ísuª_buf„r_°ack
 ();

869 
	gYY_CURRENT_BUFFER_LVALUE
 =

870 
˛ix⁄_xml_∑r£_¸óã_buf„r
(
˛ix⁄_xml_∑r£ö
,
YY_BUF_SIZE
 );

873 
˛ix⁄_xml_∑r£_lﬂd_buf„r_°©e
( );

883 
	gyy_˝
 = (
yy_c_buf_p
);

886 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

891 
	gyy_bp
 = 
yy_˝
;

893 
	gyy_cuºít_°©e
 = (
yy_°¨t
);

894 
	gyy_m©ch
:

897 
YY_CHAR
 
yy_c
 = 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)] ;

898 i‡–
	gyy_ac˚±
[
yy_cuºít_°©e
] )

900 (
	gyy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

901 (
	gyy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

903  
	gyy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
	gyy_c
] != yy_current_state )

905 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

906 i‡–
	gyy_cuºít_°©e
 >= 115 )

907 
yy_c
 = 
yy_mëa
[() yy_c];

909 
	gyy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[
yy_cuºít_°©e
] + (Ë
yy_c
];

910 ++
	gyy_˝
;

912  
	gyy_ba£
[
yy_cuºít_°©e
] != 176 );

914 
	gyy_föd_a˘i⁄
:

915 
yy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

916 i‡–
	gyy_a˘
 == 0 )

918 
yy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

919 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

920 
	gyy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

923 
	gYY_DO_BEFORE_ACTION
;

925 
	gdo_a˘i⁄
:

927  
yy_a˘
 )

931 *
yy_˝
 = (
yy_hﬁd_ch¨
);

932 
	gyy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

933 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

934 
	gyy_föd_a˘i⁄
;

937 
YY_RULE_SETUP


939 { 
˛ix⁄_xml_∑r£lvÆ
.
°rög
 = 
°rdup
(
˛ix⁄_xml_∑r£ãxt
);

940  
	gNAME
;

942 
YY_BREAK


944 
YY_RULE_SETUP


947 
YY_BREAK


949 
YY_RULE_SETUP


951  *
˛ix⁄_xml_∑r£ãxt
;

952 
YY_BREAK


955 
YY_RULE_SETUP


957 { 
_YA
->
ya_löíum
++;}

958 
YY_BREAK


960 
YY_RULE_SETUP


962 { 
BEGIN
(
TEXTDECL
);  
	gBTEXT
;}

963 
YY_BREAK


965 
YY_RULE_SETUP


967 { 
BEGIN
(
STATEA
);  
	gESLASH
; }

968 
YY_BREAK


970 
YY_RULE_SETUP


972 { 
BEGIN
(
CMNT
);  
	gBCOMMENT
; }

973 
YY_BREAK


975 
YY_RULE_SETUP


977  
BSLASH
;

978 
YY_BREAK


980 
YY_RULE_SETUP


982  *
˛ix⁄_xml_∑r£ãxt
;

983 
YY_BREAK


985 
YY_RULE_SETUP


987  *
˛ix⁄_xml_∑r£ãxt
;

988 
YY_BREAK


990 
YY_RULE_SETUP


992 { 
BEGIN
(
STATEA
);  *
	g˛ix⁄_xml_∑r£ãxt
; }

993 
YY_BREAK


995 
YY_RULE_SETUP


997 { 
BEGIN
(
STR
);  *
	g˛ix⁄_xml_∑r£ãxt
; }

998 
YY_BREAK


1000 
YY_RULE_SETUP


1002 { 
˛ix⁄_xml_∑r£lvÆ
.
°rög
 = 
˛ix⁄_xml_∑r£ãxt
;  
	gCHARDATA
; }

1003 
YY_BREAK


1005 
YY_RULE_SETUP


1007 { 
BEGIN
(
START
);  
	gBSLASH
; }

1008 
YY_BREAK


1010 
YY_RULE_SETUP


1012 { 
BEGIN
(
CMNT
);  
	gBCOMMENT
; }

1013 
YY_BREAK


1015 
YY_RULE_SETUP


1017 { 
BEGIN
(
START
);  *
	g˛ix⁄_xml_∑r£ãxt
; }

1018 
YY_BREAK


1020 
YY_RULE_SETUP


1022 { 
_YA
->
ya_Àx_°©e
 =
STATEA
;
BEGIN
(
AMPERSAND
);}

1023 
YY_BREAK


1026 
YY_RULE_SETUP


1028 { 
˛ix⁄_xml_∑r£lvÆ
.
°rög
 = 
˛ix⁄_xml_∑r£ãxt
;
	g_YA
->
	gya_löíum
++;  (
	gCHARDATA
);}

1029 
YY_BREAK


1031 
YY_RULE_SETUP


1033 { 
˛ix⁄_xml_∑r£lvÆ
.
°rög
 = 
˛ix⁄_xml_∑r£ãxt
;  
	gCHARDATA
; }

1034 
YY_BREAK


1037 
YY_RULE_SETUP


1039 {
BEGIN
(
_YA
->
ya_Àx_°©e
); 
	g˛ix⁄_xml_∑r£lvÆ
.
	g°rög
 = "&";  
	gCHARDATA
;}

1040 
YY_BREAK


1042 
YY_RULE_SETUP


1044 {
BEGIN
(
_YA
->
ya_Àx_°©e
); 
	g˛ix⁄_xml_∑r£lvÆ
.
	g°rög
 = "<";  
	gCHARDATA
;}

1045 
YY_BREAK


1047 
YY_RULE_SETUP


1049 {
BEGIN
(
_YA
->
ya_Àx_°©e
); 
	g˛ix⁄_xml_∑r£lvÆ
.
	g°rög
 = ">";  
	gCHARDATA
;}

1050 
YY_BREAK


1052 
YY_RULE_SETUP


1054 {
BEGIN
(
_YA
->
ya_Àx_°©e
); 
	g˛ix⁄_xml_∑r£lvÆ
.
	g°rög
 = "'";  
	gCHARDATA
;}

1055 
YY_BREAK


1057 
YY_RULE_SETUP


1059 {
BEGIN
(
_YA
->
ya_Àx_°©e
); 
	g˛ix⁄_xml_∑r£lvÆ
.
	g°rög
 = "'";  
	gCHARDATA
;}

1060 
YY_BREAK


1062 
YY_RULE_SETUP


1064 { 
BEGIN
(
START
);  
	gECOMMENT
; }

1065 
YY_BREAK


1068 
YY_RULE_SETUP


1070 
_YA
->
ya_löíum
++;

1071 
YY_BREAK


1073 
YY_RULE_SETUP


1076 
YY_BREAK


1078 
YY_RULE_SETUP


1080  
ENC
;

1081 
YY_BREAK


1083 
YY_RULE_SETUP


1085  
VER
;

1086 
YY_BREAK


1088 
YY_RULE_SETUP


1090  *
˛ix⁄_xml_∑r£ãxt
;

1091 
YY_BREAK


1093 
YY_RULE_SETUP


1095 { 
BEGIN
(
START
); 
	gETEXT
;}

1096 
YY_BREAK


1098 
YY_RULE_SETUP


1100 { 
BEGIN
(
STRDQ
);  *
	g˛ix⁄_xml_∑r£ãxt
; }

1101 
YY_BREAK


1103 
YY_RULE_SETUP


1105 { 
BEGIN
(
STRSQ
);  *
	g˛ix⁄_xml_∑r£ãxt
; }

1106 
YY_BREAK


1109 
YY_RULE_SETUP


1111 { 
˛ix⁄_xml_∑r£lvÆ
.
°rög
 = 
°rdup
(
˛ix⁄_xml_∑r£ãxt
);  
	gCHARDATA
; }

1112 
YY_BREAK


1114 
YY_RULE_SETUP


1116 { 
BEGIN
(
START
);  *
	g˛ix⁄_xml_∑r£ãxt
; }

1117 
YY_BREAK


1119 
YY_RULE_SETUP


1121 { 
˛ix⁄_xml_∑r£lvÆ
.
°rög
 = 
°rdup
(
˛ix⁄_xml_∑r£ãxt
);  
	gCHARDATA
; }

1122 
YY_BREAK


1125 
YY_RULE_SETUP


1127 { 
˛ix⁄_xml_∑r£lvÆ
.
°rög
 = 
°rdup
(
˛ix⁄_xml_∑r£ãxt
);  
	gCHARDATA
; }

1128 
YY_BREAK


1130 
YY_RULE_SETUP


1132 { 
BEGIN
(
TEXTDECL
);  *
	g˛ix⁄_xml_∑r£ãxt
; }

1133 
YY_BREAK


1135 
YY_RULE_SETUP


1137 { 
˛ix⁄_xml_∑r£lvÆ
.
°rög
 = 
°rdup
(
˛ix⁄_xml_∑r£ãxt
);  
	gCHARDATA
; }

1138 
YY_BREAK


1141 
YY_RULE_SETUP


1143 { 
˛ix⁄_xml_∑r£lvÆ
.
°rög
 = 
°rdup
(
˛ix⁄_xml_∑r£ãxt
);  
	gCHARDATA
; }

1144 
YY_BREAK


1146 
YY_RULE_SETUP


1148 { 
BEGIN
(
TEXTDECL
);  *
	g˛ix⁄_xml_∑r£ãxt
; }

1149 
YY_BREAK


1151 
YY_RULE_SETUP


1153 
ECHO
;

1154 
	gYY_BREAK


1156 
YY_STATE_EOF
(
INITIAL
):

1157 
YY_STATE_EOF
(
START
):

1158 
YY_STATE_EOF
(
STATEA
):

1159 
YY_STATE_EOF
(
AMPERSAND
):

1160 
YY_STATE_EOF
(
CMNT
):

1161 
YY_STATE_EOF
(
STR
):

1162 
YY_STATE_EOF
(
TEXTDECL
):

1163 
YY_STATE_EOF
(
STRDQ
):

1164 
YY_STATE_EOF
(
STRSQ
):

1165 
yyãrmö©e
();

1167 
	gYY_END_OF_BUFFER
:

1170 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - (
yyãxt_±r
)) - 1;

1173 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

1174 
YY_RESTORE_YY_MORE_OFFSET


1176 i‡–
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

1187 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1188 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_öput_fûe
 = 
˛ix⁄_xml_∑r£ö
;

1189 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

1199 i‡–(
	gyy_c_buf_p
Ë<&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1201 
yy_°©e_ty≥
 
yy_√xt_°©e
;

1203 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1205 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1216 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

1218 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1220 i‡–
	gyy_√xt_°©e
 )

1223 
	gyy_˝
 = ++(
yy_c_buf_p
);

1224 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

1225 
	gyy_m©ch
;

1230 
	gyy_˝
 = (
yy_c_buf_p
);

1231 
	gyy_föd_a˘i⁄
;

1235  
yy_gë_√xt_buf„r
( ) )

1237 
	gEOB_ACT_END_OF_FILE
:

1239 (
yy_did_buf„r_swôch_⁄_eof
) = 0;

1241 i‡–
˛ix⁄_xml_∑r£wøp
( ) )

1252 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1254 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

1255 
	gdo_a˘i⁄
;

1260 i‡–! (
	gyy_did_buf„r_swôch_⁄_eof
) )

1261 
	gYY_NEW_FILE
;

1266 
	gEOB_ACT_CONTINUE_SCAN
:

1267 (
yy_c_buf_p
) =

1268 (
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1270 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1272 
	gyy_˝
 = (
yy_c_buf_p
);

1273 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1274 
	gyy_m©ch
;

1276 
	gEOB_ACT_LAST_MATCH
:

1277 (
yy_c_buf_p
) =

1278 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)];

1280 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1282 
	gyy_˝
 = (
yy_c_buf_p
);

1283 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1284 
	gyy_föd_a˘i⁄
;

1290 
YY_FATAL_ERROR
(

1304 
	$yy_gë_√xt_buf„r
 ()

1306 *
de°
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
;

1307 *
sour˚
 = (
yyãxt_±r
);

1308 
yy_size_t
 
numbî_to_move
, 
i
;

1309 
ªt_vÆ
;

1311 i‡–(
yy_c_buf_p
Ë> &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
) + 1] )

1312 
	`YY_FATAL_ERROR
(

1315 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_fûl_buf„r
 == 0 )

1317 i‡–(
yy_c_buf_p
Ë- (
yyãxt_±r
Ë- 
YY_MORE_ADJ
 == 1 )

1322  
EOB_ACT_END_OF_FILE
;

1330  
EOB_ACT_LAST_MATCH
;

1337 
numbî_to_move
 = (
yy_size_t
Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
)) - 1;

1339  
i
 = 0; i < 
numbî_to_move
; ++i )

1340 *(
de°
++Ë*(
sour˚
++);

1342 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

1346 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars) = 0;

1350 
yy_size_t
 
num_to_ªad
 =

1351 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 - 
numbî_to_move
 - 1;

1353  
num_to_ªad
 <= 0 )

1357 
YY_BUFFER_STATE
 
b
 = 
YY_CURRENT_BUFFER_LVALUE
;

1359 
yy_c_buf_p_off£t
 =

1360 (Ë((
yy_c_buf_p
Ë- 
b
->
yy_ch_buf
);

1362 i‡–
b
->
yy_is_our_buf„r
 )

1364 
yy_size_t
 
√w_size
 = 
b
->
yy_buf_size
 * 2;

1366 i‡–
√w_size
 <= 0 )

1367 
b
->
yy_buf_size
 += b->yy_buf_size / 8;

1369 
b
->
yy_buf_size
 *= 2;

1371 
b
->
yy_ch_buf
 = (*)

1373 
	`˛ix⁄_xml_∑r£ªÆloc
((*Ë
b
->
yy_ch_buf
,b->
yy_buf_size
 + 2 );

1377 
b
->
yy_ch_buf
 = 0;

1379 i‡–! 
b
->
yy_ch_buf
 )

1380 
	`YY_FATAL_ERROR
(

1383 (
yy_c_buf_p
Ë&
b
->
yy_ch_buf
[
yy_c_buf_p_off£t
];

1385 
num_to_ªad
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 -

1386 
numbî_to_move
 - 1;

1390 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

1391 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

1394 
	`YY_INPUT
–(&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
]),

1395 (
yy_n_ch¨s
), 
num_to_ªad
 );

1397 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1400 i‡–(
yy_n_ch¨s
) == 0 )

1402 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

1404 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

1405 
	`˛ix⁄_xml_∑r£ª°¨t
(
˛ix⁄_xml_∑r£ö
 );

1410 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

1411 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =

1412 
YY_BUFFER_EOF_PENDING
;

1417 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

1419 i‡((Ë((
yy_n_ch¨s
Ë+ 
numbî_to_move
Ë> 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
) {

1421 
√w_size
 = (
yy_n_ch¨s
Ë+ 
numbî_to_move
 + ((yy_n_chars) >> 1);

1422 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 = (*Ë
	`˛ix⁄_xml_∑r£ªÆloc
((*ËYY_CURRENT_BUFFER_LVALUE->yy_ch_buf,
√w_size
 );

1423 i‡–! 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1424 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_get_next_buffer()" );

1427 (
yy_n_ch¨s
Ë+
numbî_to_move
;

1428 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] = 
YY_END_OF_BUFFER_CHAR
;

1429 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
Ë+ 1] = 
YY_END_OF_BUFFER_CHAR
;

1431 (
yyãxt_±r
Ë&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[0];

1433  
ªt_vÆ
;

1434 
	}
}

1438 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
 ()

1440 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

1441 *
yy_˝
;

1443 
yy_cuºít_°©e
 = (
yy_°¨t
);

1445  
yy_˝
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
; yy_˝ < (
yy_c_buf_p
); ++yy_cp )

1447 
YY_CHAR
 
yy_c
 = (*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1);

1448 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1450 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1451 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1453  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1455 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1456 i‡–
yy_cuºít_°©e
 >= 115 )

1457 
yy_c
 = 
yy_mëa
[() yy_c];

1459 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1462  
yy_cuºít_°©e
;

1463 
	}
}

1470 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
 (
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

1472 
yy_is_jam
;

1473 *
yy_˝
 = (
yy_c_buf_p
);

1475 
YY_CHAR
 
yy_c
 = 1;

1476 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1478 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1479 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1481  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1483 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1484 i‡–
yy_cuºít_°©e
 >= 115 )

1485 
yy_c
 = 
yy_mëa
[() yy_c];

1487 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1488 
yy_is_jam
 = (
yy_cuºít_°©e
 == 114);

1490  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

1491 
	}
}

1493 #i‚de‡
YY_NO_UNPUT


1495 
	$yyu≈ut
 (
c
, * 
yy_bp
 )

1497 *
yy_˝
;

1499 
yy_˝
 = (
yy_c_buf_p
);

1502 *
yy_˝
 = (
yy_hﬁd_ch¨
);

1504 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

1507 
yy_size_t
 
numbî_to_move
 = (
yy_n_ch¨s
) + 2;

1508 *
de°
 = &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[

1509 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 + 2];

1510 *
sour˚
 =

1511 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
];

1513  
sour˚
 > 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1514 *--
de°
 = *--
sour˚
;

1516 
yy_˝
 +(Ë(
de°
 - 
sour˚
);

1517 
yy_bp
 +(Ë(
de°
 - 
sour˚
);

1518 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 =

1519 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
;

1521 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

1522 
	`YY_FATAL_ERROR
( "flex scannerÖush-back overflow" );

1525 *--
yy_˝
 = (Ë
c
;

1527 (
yyãxt_±r
Ë
yy_bp
;

1528 (
yy_hﬁd_ch¨
Ë*
yy_˝
;

1529 (
yy_c_buf_p
Ë
yy_˝
;

1530 
	}
}

1534 #i‚de‡
YY_NO_INPUT


1535 #ifde‡
__˝lu•lus


1536 
	$yyöput
 ()

1538 
	$öput
 ()

1542 
c
;

1544 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1546 i‡–*(
yy_c_buf_p
Ë=
YY_END_OF_BUFFER_CHAR
 )

1552 i‡–(
yy_c_buf_p
Ë< &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1554 *(
yy_c_buf_p
) = '\0';

1558 
yy_size_t
 
off£t
 = (
yy_c_buf_p
Ë- (
yyãxt_±r
);

1559 ++(
yy_c_buf_p
);

1561  
	`yy_gë_√xt_buf„r
( ) )

1563 
EOB_ACT_LAST_MATCH
:

1575 
	`˛ix⁄_xml_∑r£ª°¨t
(
˛ix⁄_xml_∑r£ö
 );

1579 
EOB_ACT_END_OF_FILE
:

1581 i‡–
	`˛ix⁄_xml_∑r£wøp
( ) )

1582  
EOF
;

1584 i‡–! (
yy_did_buf„r_swôch_⁄_eof
) )

1585 
YY_NEW_FILE
;

1586 #ifde‡
__˝lu•lus


1587  
	`yyöput
();

1589  
	`öput
();

1593 
EOB_ACT_CONTINUE_SCAN
:

1594 (
yy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
off£t
;

1600 
c
 = *(*Ë(
yy_c_buf_p
);

1601 *(
yy_c_buf_p
) = '\0';

1602 (
yy_hﬁd_ch¨
Ë*++(
yy_c_buf_p
);

1604  
c
;

1605 
	}
}

1613 
	$˛ix⁄_xml_∑r£ª°¨t
 (
FILE
 * 
öput_fûe
 )

1616 i‡–! 
YY_CURRENT_BUFFER
 ){

1617 
	`˛ix⁄_xml_∑r£ísuª_buf„r_°ack
 ();

1618 
YY_CURRENT_BUFFER_LVALUE
 =

1619 
	`˛ix⁄_xml_∑r£_¸óã_buf„r
(
˛ix⁄_xml_∑r£ö
,
YY_BUF_SIZE
 );

1622 
	`˛ix⁄_xml_∑r£_öô_buf„r
(
YY_CURRENT_BUFFER
,
öput_fûe
 );

1623 
	`˛ix⁄_xml_∑r£_lﬂd_buf„r_°©e
( );

1624 
	}
}

1630 
	$˛ix⁄_xml_∑r£_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1638 
	`˛ix⁄_xml_∑r£ísuª_buf„r_°ack
 ();

1639 i‡–
YY_CURRENT_BUFFER
 =
√w_buf„r
 )

1642 i‡–
YY_CURRENT_BUFFER
 )

1645 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1646 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1647 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1650 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1651 
	`˛ix⁄_xml_∑r£_lﬂd_buf„r_°©e
( );

1658 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1659 
	}
}

1661 
	$˛ix⁄_xml_∑r£_lﬂd_buf„r_°©e
 ()

1663 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1664 (
yyãxt_±r
Ë(
yy_c_buf_p
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
;

1665 
˛ix⁄_xml_∑r£ö
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_öput_fûe
;

1666 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
);

1667 
	}
}

1675 
YY_BUFFER_STATE
 
	$˛ix⁄_xml_∑r£_¸óã_buf„r
 (
FILE
 * 
fûe
, 
size
 )

1677 
YY_BUFFER_STATE
 
b
;

1679 
b
 = (
YY_BUFFER_STATE
Ë
	`˛ix⁄_xml_∑r£Æloc
(–
yy_buf„r_°©e
 ) );

1680 i‡–! 
b
 )

1681 
	`YY_FATAL_ERROR
( "out of dynamic memory in clixon_xml_parse_create_buffer()" );

1683 
b
->
yy_buf_size
 = (
yy_size_t
)
size
;

1688 
b
->
yy_ch_buf
 = (*Ë
	`˛ix⁄_xml_∑r£Æloc
(b->
yy_buf_size
 + 2 );

1689 i‡–! 
b
->
yy_ch_buf
 )

1690 
	`YY_FATAL_ERROR
( "out of dynamic memory in clixon_xml_parse_create_buffer()" );

1692 
b
->
yy_is_our_buf„r
 = 1;

1694 
	`˛ix⁄_xml_∑r£_öô_buf„r
(
b
,
fûe
 );

1696  
b
;

1697 
	}
}

1703 
	$˛ix⁄_xml_∑r£_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1706 i‡–! 
b
 )

1709 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1710 
YY_CURRENT_BUFFER_LVALUE
 = (
YY_BUFFER_STATE
) 0;

1712 i‡–
b
->
yy_is_our_buf„r
 )

1713 
	`˛ix⁄_xml_∑r£‰ì
((*Ë
b
->
yy_ch_buf
 );

1715 
	`˛ix⁄_xml_∑r£‰ì
((*Ë
b
 );

1716 
	}
}

1722 
	$˛ix⁄_xml_∑r£_öô_buf„r
 (
YY_BUFFER_STATE
 
b
, 
FILE
 * 
fûe
 )

1725 
€ºno
 = 
î∫o
;

1727 
	`˛ix⁄_xml_∑r£_Êush_buf„r
(
b
 );

1729 
b
->
yy_öput_fûe
 = 
fûe
;

1730 
b
->
yy_fûl_buf„r
 = 1;

1736 i‡(
b
 !
YY_CURRENT_BUFFER
){

1737 
b
->
yy_bs_löío
 = 1;

1738 
b
->
yy_bs_cﬁumn
 = 0;

1741 
b
->
yy_is_öãø˘ive
 = 
fûe
 ? (
	`ißây
–
	`fûío
(file) ) > 0) : 0;

1743 
î∫o
 = 
€ºno
;

1744 
	}
}

1750 
	$˛ix⁄_xml_∑r£_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1752 i‡–! 
b
 )

1755 
b
->
yy_n_ch¨s
 = 0;

1761 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

1762 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

1764 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

1766 
b
->
yy_©_bﬁ
 = 1;

1767 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1769 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1770 
	`˛ix⁄_xml_∑r£_lﬂd_buf„r_°©e
( );

1771 
	}
}

1779 
	$˛ix⁄_xml_∑r£push_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1781 i‡(
√w_buf„r
 =
NULL
)

1784 
	`˛ix⁄_xml_∑r£ísuª_buf„r_°ack
();

1787 i‡–
YY_CURRENT_BUFFER
 )

1790 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1791 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1792 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1796 i‡(
YY_CURRENT_BUFFER
)

1797 (
yy_buf„r_°ack_t›
)++;

1798 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1801 
	`˛ix⁄_xml_∑r£_lﬂd_buf„r_°©e
( );

1802 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1803 
	}
}

1809 
	$˛ix⁄_xml_∑r£p›_buf„r_°©e
 ()

1811 i‡(!
YY_CURRENT_BUFFER
)

1814 
	`˛ix⁄_xml_∑r£_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

1815 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

1816 i‡((
yy_buf„r_°ack_t›
) > 0)

1817 --(
yy_buf„r_°ack_t›
);

1819 i‡(
YY_CURRENT_BUFFER
) {

1820 
	`˛ix⁄_xml_∑r£_lﬂd_buf„r_°©e
( );

1821 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1823 
	}
}

1828 
	$˛ix⁄_xml_∑r£ísuª_buf„r_°ack
 ()

1830 
yy_size_t
 
num_to_Æloc
;

1832 i‡(!(
yy_buf„r_°ack
)) {

1838 
num_to_Æloc
 = 1;

1839 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
˛ix⁄_xml_∑r£Æloc


1840 (
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1842 i‡–! (
yy_buf„r_°ack
) )

1843 
	`YY_FATAL_ERROR
( "out of dynamic memory in clixon_xml_parseensure_buffer_stack()" );

1845 
	`mem£t
((
yy_buf„r_°ack
), 0, 
num_to_Æloc
 * (
yy_buf„r_°©e
*));

1847 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1848 (
yy_buf„r_°ack_t›
) = 0;

1852 i‡((
yy_buf„r_°ack_t›
Ë>((
yy_buf„r_°ack_max
)) - 1){

1855 
yy_size_t
 
grow_size
 = 8 ;

1857 
num_to_Æloc
 = (
yy_buf„r_°ack_max
Ë+ 
grow_size
;

1858 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
˛ix⁄_xml_∑r£ªÆloc


1859 ((
yy_buf„r_°ack
),

1860 
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1862 i‡–! (
yy_buf„r_°ack
) )

1863 
	`YY_FATAL_ERROR
( "out of dynamic memory in clixon_xml_parseensure_buffer_stack()" );

1866 
	`mem£t
((
yy_buf„r_°ack
Ë+ (
yy_buf„r_°ack_max
), 0, 
grow_size
 * (
yy_buf„r_°©e
*));

1867 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1869 
	}
}

1877 
YY_BUFFER_STATE
 
	$˛ix⁄_xml_∑r£_sˇn_buf„r
 (* 
ba£
, 
yy_size_t
 
size
 )

1879 
YY_BUFFER_STATE
 
b
;

1881 i‡–
size
 < 2 ||

1882 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

1883 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

1887 
b
 = (
YY_BUFFER_STATE
Ë
	`˛ix⁄_xml_∑r£Æloc
(–
yy_buf„r_°©e
 ) );

1888 i‡–! 
b
 )

1889 
	`YY_FATAL_ERROR
( "out of dynamic memory in clixon_xml_parse_scan_buffer()" );

1891 
b
->
yy_buf_size
 = 
size
 - 2;

1892 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

1893 
b
->
yy_is_our_buf„r
 = 0;

1894 
b
->
yy_öput_fûe
 = 0;

1895 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

1896 
b
->
yy_is_öãø˘ive
 = 0;

1897 
b
->
yy_©_bﬁ
 = 1;

1898 
b
->
yy_fûl_buf„r
 = 0;

1899 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1901 
	`˛ix⁄_xml_∑r£_swôch_to_buf„r
(
b
 );

1903  
b
;

1904 
	}
}

1914 
YY_BUFFER_STATE
 
	$˛ix⁄_xml_∑r£_sˇn_°rög
 (
yyc⁄°
 * 
yy°r
 )

1917  
	`˛ix⁄_xml_∑r£_sˇn_byãs
(
yy°r
,
	`°æí
(yystr) );

1918 
	}
}

1927 
YY_BUFFER_STATE
 
	$˛ix⁄_xml_∑r£_sˇn_byãs
 (
yyc⁄°
 * 
yybyãs
, 
yy_size_t
 
_yybyãs_Àn
 )

1929 
YY_BUFFER_STATE
 
b
;

1930 *
buf
;

1931 
yy_size_t
 
n
;

1932 
yy_size_t
 
i
;

1935 
n
 = 
_yybyãs_Àn
 + 2;

1936 
buf
 = (*Ë
	`˛ix⁄_xml_∑r£Æloc
(
n
 );

1937 i‡–! 
buf
 )

1938 
	`YY_FATAL_ERROR
( "out of dynamic memory in clixon_xml_parse_scan_bytes()" );

1940  
i
 = 0; i < 
_yybyãs_Àn
; ++i )

1941 
buf
[
i
] = 
yybyãs
[i];

1943 
buf
[
_yybyãs_Àn
] = buf[_yybyãs_Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

1945 
b
 = 
	`˛ix⁄_xml_∑r£_sˇn_buf„r
(
buf
,
n
 );

1946 i‡–! 
b
 )

1947 
	`YY_FATAL_ERROR
( "bad buffer in clixon_xml_parse_scan_bytes()" );

1952 
b
->
yy_is_our_buf„r
 = 1;

1954  
b
;

1955 
	}
}

1957 #i‚de‡
YY_EXIT_FAILURE


1958 
	#YY_EXIT_FAILURE
 2

	)

1961 
	$yy_Áèl_îr‹
 (
yyc⁄°
 * 
msg
 )

1963 (Ë
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

1964 
	`exô
–
YY_EXIT_FAILURE
 );

1965 
	}
}

1969 #unde‡
yyÀss


1970 
	#yyÀss
(
n
) \

1974 
yyÀss_ma¸o_¨g
 = (
n
); \

1975 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

1976 
˛ix⁄_xml_∑r£ãxt
[
˛ix⁄_xml_∑r£Àng
] = (
yy_hﬁd_ch¨
); \

1977 (
yy_c_buf_p
Ë
˛ix⁄_xml_∑r£ãxt
 + 
yyÀss_ma¸o_¨g
; \

1978 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
); \

1979 *(
yy_c_buf_p
) = '\0'; \

1980 
˛ix⁄_xml_∑r£Àng
 = 
yyÀss_ma¸o_¨g
; \

1982  0 )

	)

1989 
	$˛ix⁄_xml_∑r£gë_löío
 ()

1992  
˛ix⁄_xml_∑r£löío
;

1993 
	}
}

1998 
FILE
 *
	$˛ix⁄_xml_∑r£gë_ö
 ()

2000  
˛ix⁄_xml_∑r£ö
;

2001 
	}
}

2006 
FILE
 *
	$˛ix⁄_xml_∑r£gë_out
 ()

2008  
˛ix⁄_xml_∑r£out
;

2009 
	}
}

2014 
yy_size_t
 
	$˛ix⁄_xml_∑r£gë_Àng
 ()

2016  
˛ix⁄_xml_∑r£Àng
;

2017 
	}
}

2023 *
	$˛ix⁄_xml_∑r£gë_ãxt
 ()

2025  
˛ix⁄_xml_∑r£ãxt
;

2026 
	}
}

2032 
	$˛ix⁄_xml_∑r££t_löío
 (
_löe_numbî
 )

2035 
˛ix⁄_xml_∑r£löío
 = 
_löe_numbî
;

2036 
	}
}

2044 
	$˛ix⁄_xml_∑r££t_ö
 (
FILE
 * 
_ö_°r
 )

2046 
˛ix⁄_xml_∑r£ö
 = 
_ö_°r
 ;

2047 
	}
}

2049 
	$˛ix⁄_xml_∑r££t_out
 (
FILE
 * 
_out_°r
 )

2051 
˛ix⁄_xml_∑r£out
 = 
_out_°r
 ;

2052 
	}
}

2054 
	$˛ix⁄_xml_∑r£gë_debug
 ()

2056  
˛ix⁄_xml_∑r£_Êex_debug
;

2057 
	}
}

2059 
	$˛ix⁄_xml_∑r££t_debug
 (
_bdebug
 )

2061 
˛ix⁄_xml_∑r£_Êex_debug
 = 
_bdebug
 ;

2062 
	}
}

2064 
	$yy_öô_globÆs
 ()

2070 (
yy_buf„r_°ack
) = 0;

2071 (
yy_buf„r_°ack_t›
) = 0;

2072 (
yy_buf„r_°ack_max
) = 0;

2073 (
yy_c_buf_p
) = (*) 0;

2074 (
yy_öô
) = 0;

2075 (
yy_°¨t
) = 0;

2078 #ifde‡
YY_STDINIT


2079 
˛ix⁄_xml_∑r£ö
 = 
°dö
;

2080 
˛ix⁄_xml_∑r£out
 = 
°dout
;

2082 
˛ix⁄_xml_∑r£ö
 = (
FILE
 *) 0;

2083 
˛ix⁄_xml_∑r£out
 = (
FILE
 *) 0;

2090 
	}
}

2093 
	$˛ix⁄_xml_∑r£Àx_de°roy
 ()

2097 
YY_CURRENT_BUFFER
){

2098 
	`˛ix⁄_xml_∑r£_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

2099 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

2100 
	`˛ix⁄_xml_∑r£p›_buf„r_°©e
();

2104 
	`˛ix⁄_xml_∑r£‰ì
((
yy_buf„r_°ack
) );

2105 (
yy_buf„r_°ack
Ë
NULL
;

2109 
	`yy_öô_globÆs
( );

2112 
	}
}

2118 #i‚de‡
yyãxt_±r


2119 
	$yy_Êex_°∫˝y
 (* 
s1
, 
yyc⁄°
 * 
s2
, 
n
 )

2122 
i
;

2123  
i
 = 0; i < 
n
; ++i )

2124 
s1
[
i
] = 
s2
[i];

2125 
	}
}

2128 #ifde‡
YY_NEED_STRLEN


2129 
	$yy_Êex_°æí
 (
yyc⁄°
 * 
s
 )

2131 
n
;

2132  
n
 = 0; 
s
[n]; ++n )

2135  
n
;

2136 
	}
}

2139 *
	$˛ix⁄_xml_∑r£Æloc
 (
yy_size_t
 
size
 )

2141  (*Ë
	`mÆloc
–
size
 );

2142 
	}
}

2144 *
	$˛ix⁄_xml_∑r£ªÆloc
 (* 
±r
, 
yy_size_t
 
size
 )

2154  (*Ë
	`ªÆloc
–(*Ë
±r
, 
size
 );

2155 
	}
}

2157 
	$˛ix⁄_xml_∑r£‰ì
 (* 
±r
 )

2159 
	`‰ì
–(*Ë
±r
 );

2160 
	}
}

2162 
	#YYTABLES_NAME
 "yyèbÀs"

	)

2171 
	$˛ix⁄_xml_∑r£l_öô
(
xml_∑r£_yacc_¨g
 *
ya
)

2173 
	`BEGIN
(
START
);

2174 
ya
->
ya_Àxbuf
 = 
	`˛ix⁄_xml_∑r£_sˇn_°rög
 (ya->
ya_∑r£_°rög
);

2176 
	`yyu≈ut
(0, "");

2178 
	}
}

2182 
	$˛ix⁄_xml_∑r£l_exô
(
xml_∑r£_yacc_¨g
 *
ya
)

2184 
	`˛ix⁄_xml_∑r£_dñëe_buf„r
(
ya
->
ya_Àxbuf
);

2185 
	`˛ix⁄_xml_∑r£Àx_de°roy
();

2188 
	}
}

	@clixon-master/lib/src/lex.clixon_yang_parse.c

4 
	#YY_INT_ALIGNED
 

	)

8 
	#yy_¸óã_buf„r
 
˛ix⁄_y™g_∑r£_¸óã_buf„r


	)

9 
	#yy_dñëe_buf„r
 
˛ix⁄_y™g_∑r£_dñëe_buf„r


	)

10 
	#yy_Êex_debug
 
˛ix⁄_y™g_∑r£_Êex_debug


	)

11 
	#yy_öô_buf„r
 
˛ix⁄_y™g_∑r£_öô_buf„r


	)

12 
	#yy_Êush_buf„r
 
˛ix⁄_y™g_∑r£_Êush_buf„r


	)

13 
	#yy_lﬂd_buf„r_°©e
 
˛ix⁄_y™g_∑r£_lﬂd_buf„r_°©e


	)

14 
	#yy_swôch_to_buf„r
 
˛ix⁄_y™g_∑r£_swôch_to_buf„r


	)

15 
	#yyö
 
˛ix⁄_y™g_∑r£ö


	)

16 
	#yyÀng
 
˛ix⁄_y™g_∑r£Àng


	)

17 
	#yyÀx
 
˛ix⁄_y™g_∑r£Àx


	)

18 
	#yylöío
 
˛ix⁄_y™g_∑r£löío


	)

19 
	#yyout
 
˛ix⁄_y™g_∑r£out


	)

20 
	#yyª°¨t
 
˛ix⁄_y™g_∑r£ª°¨t


	)

21 
	#yyãxt
 
˛ix⁄_y™g_∑r£ãxt


	)

22 
	#yywøp
 
˛ix⁄_y™g_∑r£wøp


	)

23 
	#yyÆloc
 
˛ix⁄_y™g_∑r£Æloc


	)

24 
	#yyªÆloc
 
˛ix⁄_y™g_∑r£ªÆloc


	)

25 
	#yy‰ì
 
˛ix⁄_y™g_∑r£‰ì


	)

27 
	#FLEX_SCANNER


	)

28 
	#YY_FLEX_MAJOR_VERSION
 2

	)

29 
	#YY_FLEX_MINOR_VERSION
 6

	)

30 
	#YY_FLEX_SUBMINOR_VERSION
 0

	)

31 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

32 
	#FLEX_BETA


	)

38 
	~<°dio.h
>

39 
	~<°rög.h
>

40 
	~<î∫o.h
>

41 
	~<°dlib.h
>

47 #i‚de‡
FLEXINT_H


48 
	#FLEXINT_H


	)

52 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

57 #i‚de‡
__STDC_LIMIT_MACROS


58 
	#__STDC_LIMIT_MACROS
 1

	)

61 
	~<öây≥s.h
>

62 
öt8_t
 
	tÊex_öt8_t
;

63 
uöt8_t
 
	tÊex_uöt8_t
;

64 
öt16_t
 
	tÊex_öt16_t
;

65 
uöt16_t
 
	tÊex_uöt16_t
;

66 
öt32_t
 
	tÊex_öt32_t
;

67 
uöt32_t
 
	tÊex_uöt32_t
;

69 sig√d 
	tÊex_öt8_t
;

70 
	tÊex_öt16_t
;

71 
	tÊex_öt32_t
;

72 
	tÊex_uöt8_t
;

73 
	tÊex_uöt16_t
;

74 
	tÊex_uöt32_t
;

77 #i‚de‡
INT8_MIN


78 
	#INT8_MIN
 (-128)

	)

80 #i‚de‡
INT16_MIN


81 
	#INT16_MIN
 (-32767-1)

	)

83 #i‚de‡
INT32_MIN


84 
	#INT32_MIN
 (-2147483647-1)

	)

86 #i‚de‡
INT8_MAX


87 
	#INT8_MAX
 (127)

	)

89 #i‚de‡
INT16_MAX


90 
	#INT16_MAX
 (32767)

	)

92 #i‚de‡
INT32_MAX


93 
	#INT32_MAX
 (2147483647)

	)

95 #i‚de‡
UINT8_MAX


96 
	#UINT8_MAX
 (255U)

	)

98 #i‚de‡
UINT16_MAX


99 
	#UINT16_MAX
 (65535U)

	)

101 #i‚de‡
UINT32_MAX


102 
	#UINT32_MAX
 (4294967295U)

	)

109 #ifde‡
__˝lu•lus


112 
	#YY_USE_CONST


	)

117 #i‡
deföed
 (
__STDC__
)

119 
	#YY_USE_CONST


	)

124 #ifde‡
YY_USE_CONST


125 
	#yyc⁄°
 c⁄°

	)

127 
	#yyc⁄°


	)

131 
	#YY_NULL
 0

	)

138 
	#YY_SC_TO_UI
(
c
Ë((Ë(Ëc)

	)

144 
	#BEGIN
 (
yy_°¨t
Ë1 + 2 *

	)

150 
	#YY_START
 (((
yy_°¨t
Ë- 1Ë/ 2)

	)

151 
	#YYSTATE
 
YY_START


	)

154 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

157 
	#YY_NEW_FILE
 
	`˛ix⁄_y™g_∑r£ª°¨t
(
˛ix⁄_y™g_∑r£ö
 )

	)

159 
	#YY_END_OF_BUFFER_CHAR
 0

	)

162 #i‚de‡
YY_BUF_SIZE


163 #ifde‡
__ü64__


168 
	#YY_BUF_SIZE
 32768

	)

170 
	#YY_BUF_SIZE
 16384

	)

176 
	#YY_STATE_BUF_SIZE
 ((
YY_BUF_SIZE
 + 2Ë* (
yy_°©e_ty≥
))

	)

178 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


179 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

180 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

183 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


184 
	#YY_TYPEDEF_YY_SIZE_T


	)

185 
size_t
 
	tyy_size_t
;

188 
yy_size_t
 
˛ix⁄_y™g_∑r£Àng
;

190 
FILE
 *
˛ix⁄_y™g_∑r£ö
, *
˛ix⁄_y™g_∑r£out
;

192 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

193 
	#EOB_ACT_END_OF_FILE
 1

	)

194 
	#EOB_ACT_LAST_MATCH
 2

	)

196 
	#YY_LESS_LINENO
(
n
)

	)

197 
	#YY_LINENO_REWIND_TO
(
±r
)

	)

200 
	#yyÀss
(
n
) \

204 
yyÀss_ma¸o_¨g
 = (
n
); \

205 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

206 *
yy_˝
 = (
yy_hﬁd_ch¨
); \

207 
YY_RESTORE_YY_MORE_OFFSET
 \

208 (
yy_c_buf_p
Ë
yy_˝
 = 
yy_bp
 + 
yyÀss_ma¸o_¨g
 - 
YY_MORE_ADJ
; \

209 
YY_DO_BEFORE_ACTION
; \

211  0 )

	)

213 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, (
yyãxt_±r
Ë)

	)

215 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


216 
	#YY_STRUCT_YY_BUFFER_STATE


	)

217 
	syy_buf„r_°©e


219 
FILE
 *
	myy_öput_fûe
;

221 *
	myy_ch_buf
;

222 *
	myy_buf_pos
;

227 
yy_size_t
 
	myy_buf_size
;

232 
	myy_n_ch¨s
;

238 
	myy_is_our_buf„r
;

245 
	myy_is_öãø˘ive
;

251 
	myy_©_bﬁ
;

253 
	myy_bs_löío
;

254 
	myy_bs_cﬁumn
;

259 
	myy_fûl_buf„r
;

261 
	myy_buf„r_°©us
;

263 
	#YY_BUFFER_NEW
 0

	)

264 
	#YY_BUFFER_NORMAL
 1

	)

275 
	#YY_BUFFER_EOF_PENDING
 2

	)

281 
size_t
 
	gyy_buf„r_°ack_t›
 = 0;

282 
size_t
 
	gyy_buf„r_°ack_max
 = 0;

283 
YY_BUFFER_STATE
 * 
	gyy_buf„r_°ack
 = 0;

291 
	#YY_CURRENT_BUFFER
 ( (
yy_buf„r_°ack
) \

292 ? (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)] \

293 : 
NULL
)

	)

298 
	#YY_CURRENT_BUFFER_LVALUE
 (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)]

	)

301 
	gyy_hﬁd_ch¨
;

302 
	gyy_n_ch¨s
;

303 
yy_size_t
 
	g˛ix⁄_y™g_∑r£Àng
;

306 *
	gyy_c_buf_p
 = (*) 0;

307 
	gyy_öô
 = 0;

308 
	gyy_°¨t
 = 0;

313 
	gyy_did_buf„r_swôch_⁄_eof
;

315 
˛ix⁄_y™g_∑r£ª°¨t
 (
FILE
 *
öput_fûe
 );

316 
˛ix⁄_y™g_∑r£_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

317 
YY_BUFFER_STATE
 
˛ix⁄_y™g_∑r£_¸óã_buf„r
 (
FILE
 *
fûe
,
size
 );

318 
˛ix⁄_y™g_∑r£_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 );

319 
˛ix⁄_y™g_∑r£_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 );

320 
˛ix⁄_y™g_∑r£push_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

321 
˛ix⁄_y™g_∑r£p›_buf„r_°©e
 ();

323 
˛ix⁄_y™g_∑r£ísuª_buf„r_°ack
 ();

324 
˛ix⁄_y™g_∑r£_lﬂd_buf„r_°©e
 ();

325 
˛ix⁄_y™g_∑r£_öô_buf„r
 (
YY_BUFFER_STATE
 
b
,
FILE
 *
fûe
 );

327 
	#YY_FLUSH_BUFFER
 
	`˛ix⁄_y™g_∑r£_Êush_buf„r
(
YY_CURRENT_BUFFER
 )

	)

329 
YY_BUFFER_STATE
 
˛ix⁄_y™g_∑r£_sˇn_buf„r
 (*
ba£
,
yy_size_t
 
size
 );

330 
YY_BUFFER_STATE
 
˛ix⁄_y™g_∑r£_sˇn_°rög
 (
yyc⁄°
 *
yy_°r
 );

331 
YY_BUFFER_STATE
 
˛ix⁄_y™g_∑r£_sˇn_byãs
 (
yyc⁄°
 *
byãs
,
yy_size_t
 
Àn
 );

333 *
˛ix⁄_y™g_∑r£Æloc
 (
yy_size_t
 );

334 *
˛ix⁄_y™g_∑r£ªÆloc
 (*,
yy_size_t
 );

335 
˛ix⁄_y™g_∑r£‰ì
 (* );

337 
	#yy_√w_buf„r
 
˛ix⁄_y™g_∑r£_¸óã_buf„r


	)

339 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

341 i‡–! 
YY_CURRENT_BUFFER
 ){ \

342 
	`˛ix⁄_y™g_∑r£ísuª_buf„r_°ack
 (); \

343 
YY_CURRENT_BUFFER_LVALUE
 = \

344 
	`˛ix⁄_y™g_∑r£_¸óã_buf„r
(
˛ix⁄_y™g_∑r£ö
,
YY_BUF_SIZE
 ); \

346 
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

347 }

	)

349 
	#yy_£t_bﬁ
(
©_bﬁ
) \

351 i‡–! 
YY_CURRENT_BUFFER
 ){\

352 
	`˛ix⁄_y™g_∑r£ísuª_buf„r_°ack
 (); \

353 
YY_CURRENT_BUFFER_LVALUE
 = \

354 
	`˛ix⁄_y™g_∑r£_¸óã_buf„r
(
˛ix⁄_y™g_∑r£ö
,
YY_BUF_SIZE
 ); \

356 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = 
©_bﬁ
; \

357 }

	)

359 
	#YY_AT_BOL
(Ë(
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
)

	)

363 
	tYY_CHAR
;

365 
FILE
 *
	g˛ix⁄_y™g_∑r£ö
 = (FILE *Ë0, *
	g˛ix⁄_y™g_∑r£out
 = (FILE *) 0;

367 
	tyy_°©e_ty≥
;

369 
˛ix⁄_y™g_∑r£löío
;

371 
	g˛ix⁄_y™g_∑r£löío
 = 1;

373 *
˛ix⁄_y™g_∑r£ãxt
;

374 #ifde‡
yyãxt_±r


375 #unde‡
yyãxt_±r


377 
	#yyãxt_±r
 
˛ix⁄_y™g_∑r£ãxt


	)

379 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 ();

380 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 (yy_°©e_ty≥ 
cuºít_°©e
 );

381 
yy_gë_√xt_buf„r
 ();

382 #i‡
deföed
(
__GNUC__
) && __GNUC__ >= 3

383 
__©åibuã__
((
__n‹ëu∫__
))

385 
yy_Áèl_îr‹
 (
yyc⁄°
 
msg
[] );

390 
	#YY_DO_BEFORE_ACTION
 \

391 (
yyãxt_±r
Ë
yy_bp
; \

392 
˛ix⁄_y™g_∑r£Àng
 = (
size_t
Ë(
yy_˝
 - 
yy_bp
); \

393 (
yy_hﬁd_ch¨
Ë*
yy_˝
; \

394 *
yy_˝
 = '\0'; \

395 (
yy_c_buf_p
Ë
yy_˝
;

	)

397 
	#YY_NUM_RULES
 104

	)

398 
	#YY_END_OF_BUFFER
 105

	)

401 
	syy_å™s_öfo


403 
Êex_öt32_t
 
	myy_vîify
;

404 
Êex_öt32_t
 
	myy_nxt
;

406 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ac˚±
[475] =

462 
yyc⁄°
 
YY_CHAR
 
	gyy_ec
[256] =

494 
yyc⁄°
 
YY_CHAR
 
	gyy_mëa
[40] =

502 
yyc⁄°
 
Êex_uöt16_t
 
	gyy_ba£
[487] =

559 
yyc⁄°
 
Êex_öt16_t
 
	gyy_def
[487] =

616 
yyc⁄°
 
Êex_uöt16_t
 
	gyy_nxt
[568] =

682 
yyc⁄°
 
Êex_öt16_t
 
	gyy_chk
[568] =

748 
yy_°©e_ty≥
 
	gyy_œ°_ac˚±ög_°©e
;

749 *
	gyy_œ°_ac˚±ög_˝os
;

751 
˛ix⁄_y™g_∑r£_Êex_debug
;

752 
	g˛ix⁄_y™g_∑r£_Êex_debug
 = 0;

757 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

758 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

759 
	#YY_MORE_ADJ
 0

	)

760 
	#YY_RESTORE_YY_MORE_OFFSET


	)

761 *
	g˛ix⁄_y™g_∑r£ãxt
;

801 
	~"˛ix⁄_c⁄fig.h
"

803 
	~<°dio.h
>

804 
	~<°rög.h
>

805 
	~<°döt.h
>

806 
	~<î∫o.h
>

807 
	~<√töë/ö.h
>

809 
	~"˛ix⁄_y™g_∑r£.èb.h
"

811 
	~<˛igí/˛igí.h
>

813 
	~"˛ix⁄_queue.h
"

814 
	~"˛ix⁄_hash.h
"

815 
	~"˛ix⁄_h™dÀ.h
"

816 
	~"˛ix⁄_y™g.h
"

817 
	~"˛ix⁄_y™g_∑r£.h
"

820 
	#YY_DECL
 
	`˛ix⁄_y™g_∑r£Àx
(*
_yy
)

	)

823 
	#YY_NO_INPUT


	)

826 
	#_YY
 ((
˛ic⁄_y™g_yacc_¨g
 *)
_yy
)

	)

828 
	#MAXBUF
 4*4*64*1024

	)

830 
	#MAX
(
x
,
y
Ë((x)>(y)?(x):(y))

	)

831 
	#MIN
(
x
,
y
Ë((x)<(y)?(x):(y))

	)

833 #unde‡
˛ix⁄_y™g_∑r£wøp


835 
	$˛ix⁄_y™g_∑r£wøp
()

838 
	}
}

863 
	#INITIAL
 0

	)

864 
	#KEYWORD
 1

	)

865 
	#ARGUMENT
 2

	)

866 
	#STRING0
 3

	)

867 
	#STRING1
 4

	)

868 
	#STRING2
 5

	)

869 
	#ESCAPE
 6

	)

870 
	#COMMENT1
 7

	)

871 
	#COMMENT2
 8

	)

872 
	#UNKNOWN
 9

	)

874 #i‚de‡
YY_NO_UNISTD_H


879 
	~<uni°d.h
>

882 #i‚de‡
YY_EXTRA_TYPE


883 
	#YY_EXTRA_TYPE
 *

	)

886 
yy_öô_globÆs
 ();

891 
˛ix⁄_y™g_∑r£Àx_de°roy
 ();

893 
˛ix⁄_y™g_∑r£gë_debug
 ();

895 
˛ix⁄_y™g_∑r££t_debug
 (
debug_Êag
 );

897 
YY_EXTRA_TYPE
 
˛ix⁄_y™g_∑r£gë_exåa
 ();

899 
˛ix⁄_y™g_∑r££t_exåa
 (
YY_EXTRA_TYPE
 
u£r_deföed
 );

901 
FILE
 *
˛ix⁄_y™g_∑r£gë_ö
 ();

903 
˛ix⁄_y™g_∑r££t_ö
 (
FILE
 * 
_ö_°r
 );

905 
FILE
 *
˛ix⁄_y™g_∑r£gë_out
 ();

907 
˛ix⁄_y™g_∑r££t_out
 (
FILE
 * 
_out_°r
 );

909 
yy_size_t
 
˛ix⁄_y™g_∑r£gë_Àng
 ();

911 *
˛ix⁄_y™g_∑r£gë_ãxt
 ();

913 
˛ix⁄_y™g_∑r£gë_löío
 ();

915 
˛ix⁄_y™g_∑r££t_löío
 (
_löe_numbî
 );

921 #i‚de‡
YY_SKIP_YYWRAP


922 #ifde‡
__˝lu•lus


923 "C" 
˛ix⁄_y™g_∑r£wøp
 ();

925 
˛ix⁄_y™g_∑r£wøp
 ();

929 #i‚de‡
YY_NO_UNPUT


931 
yyu≈ut
 (
c
,*
buf_±r
 );

935 #i‚de‡
yyãxt_±r


936 
yy_Êex_°∫˝y
 (*,
yyc⁄°
 *,);

939 #ifde‡
YY_NEED_STRLEN


940 
yy_Êex_°æí
 (
yyc⁄°
 * );

943 #i‚de‡
YY_NO_INPUT


945 #ifde‡
__˝lu•lus


946 
yyöput
 ();

948 
öput
 ();

954 #i‚de‡
YY_READ_BUF_SIZE


955 #ifde‡
__ü64__


957 
	#YY_READ_BUF_SIZE
 16384

	)

959 
	#YY_READ_BUF_SIZE
 8192

	)

964 #i‚de‡
ECHO


968 
	#ECHO
 dÿ{ i‡(
	`fwrôe
–
˛ix⁄_y™g_∑r£ãxt
, 
˛ix⁄_y™g_∑r£Àng
, 1, 
˛ix⁄_y™g_∑r£out
 )Ë{} } 0)

	)

974 #i‚de‡
YY_INPUT


975 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

976 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 ) \

978 
c
 = '*'; \

979 
size_t
 
n
; \

980  
n
 = 0;Ç < 
max_size
 && \

981 (
c
 = 
	`gëc
–
˛ix⁄_y™g_∑r£ö
 )Ë!
EOF
 && c !'\n'; ++
n
 ) \

982 
buf
[
n
] = (Ë
c
; \

983 i‡–
c
 == '\n' ) \

984 
buf
[
n
++] = (Ë
c
; \

985 i‡–
c
 =
EOF
 && 
	`„º‹
–
˛ix⁄_y™g_∑r£ö
 ) ) \

986 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

987 
ªsu…
 = 
n
; \

991 
î∫o
=0; \

992  (
ªsu…
 = 
	`‰ód
(
buf
, 1, 
max_size
, 
˛ix⁄_y™g_∑r£ö
))==0 && 
	`„º‹
(clixon_yang_parsein)) \

994 if–
î∫o
 !
EINTR
) \

996 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

999 
î∫o
=0; \

1000 
	`˛óªº
(
˛ix⁄_y™g_∑r£ö
); \

1004 

	)

1011 #i‚de‡
yyãrmö©e


1012 
	#yyãrmö©e
(Ë 
YY_NULL


	)

1016 #i‚de‡
YY_START_STACK_INCR


1017 
	#YY_START_STACK_INCR
 25

	)

1021 #i‚de‡
YY_FATAL_ERROR


1022 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

1030 #i‚de‡
YY_DECL


1031 
	#YY_DECL_IS_OURS
 1

	)

1033 
˛ix⁄_y™g_∑r£Àx
 ();

1035 
	#YY_DECL
 
	`˛ix⁄_y™g_∑r£Àx
 ()

	)

1041 #i‚de‡
YY_USER_ACTION


1042 
	#YY_USER_ACTION


	)

1046 #i‚de‡
YY_BREAK


1047 
	#YY_BREAK
 ;

	)

1050 
	#YY_RULE_SETUP
 \

1051 
YY_USER_ACTION


	)

1055 
	gYY_DECL


1057 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

1058 *
	gyy_˝
, *
	gyy_bp
;

1059 
	gyy_a˘
;

1061 i‡–!(
	gyy_öô
) )

1063 (
	gyy_öô
) = 1;

1065 #ifde‡
YY_USER_INIT


1066 
	gYY_USER_INIT
;

1069 i‡–! (
	gyy_°¨t
) )

1070 (
	gyy_°¨t
) = 1;

1072 i‡–! 
	g˛ix⁄_y™g_∑r£ö
 )

1073 
	g˛ix⁄_y™g_∑r£ö
 = 
°dö
;

1075 i‡–! 
	g˛ix⁄_y™g_∑r£out
 )

1076 
	g˛ix⁄_y™g_∑r£out
 = 
°dout
;

1078 i‡–! 
	gYY_CURRENT_BUFFER
 ) {

1079 
˛ix⁄_y™g_∑r£ísuª_buf„r_°ack
 ();

1080 
	gYY_CURRENT_BUFFER_LVALUE
 =

1081 
˛ix⁄_y™g_∑r£_¸óã_buf„r
(
˛ix⁄_y™g_∑r£ö
,
YY_BUF_SIZE
 );

1084 
˛ix⁄_y™g_∑r£_lﬂd_buf„r_°©e
( );

1095 
	gyy_˝
 = (
yy_c_buf_p
);

1098 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

1103 
	gyy_bp
 = 
yy_˝
;

1105 
	gyy_cuºít_°©e
 = (
yy_°¨t
);

1106 
	gyy_m©ch
:

1109 
YY_CHAR
 
yy_c
 = 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)] ;

1110 i‡–
	gyy_ac˚±
[
yy_cuºít_°©e
] )

1112 (
	gyy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1113 (
	gyy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1115  
	gyy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
	gyy_c
] != yy_current_state )

1117 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1118 i‡–
	gyy_cuºít_°©e
 >= 475 )

1119 
yy_c
 = 
yy_mëa
[() yy_c];

1121 
	gyy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[
yy_cuºít_°©e
] + (Ë
yy_c
];

1122 ++
	gyy_˝
;

1124  
	gyy_ba£
[
yy_cuºít_°©e
] != 528 );

1126 
	gyy_föd_a˘i⁄
:

1127 
yy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

1128 i‡–
	gyy_a˘
 == 0 )

1130 
yy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

1131 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

1132 
	gyy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

1135 
	gYY_DO_BEFORE_ACTION
;

1137 
	gdo_a˘i⁄
:

1139  
yy_a˘
 )

1143 *
yy_˝
 = (
yy_hﬁd_ch¨
);

1144 
	gyy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

1145 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

1146 
	gyy_föd_a˘i⁄
;

1149 
YY_RULE_SETUP


1152 
YY_BREAK


1153 
YY_STATE_EOF
(
KEYWORD
):

1154 
YY_STATE_EOF
(
ARGUMENT
):

1155 
YY_STATE_EOF
(
STRING0
):

1156 
YY_STATE_EOF
(
UNKNOWN
):

1158 {  
MY_EOF
; }

1159 
YY_BREAK


1162 
YY_RULE_SETUP


1164 { 
_YY
->
yy_löíum
++; }

1165 
YY_BREAK


1167 
YY_RULE_SETUP


1169 { 
_YY
->
yy_Àx_°©e
 = 
YYSTATE
; 
BEGIN
(
COMMENT1
); }

1170 
YY_BREAK


1172 
YY_RULE_SETUP


1174 { 
_YY
->
yy_Àx_°©e
 = 
YYSTATE
; 
BEGIN
(
COMMENT2
); }

1175 
YY_BREAK


1177 
YY_RULE_SETUP


1179 {  *
˛ix⁄_y™g_∑r£ãxt
; }

1180 
YY_BREAK


1183 
YY_RULE_SETUP


1185 { 
BEGIN
(
ARGUMENT
);  
	gK_ANYXML
; }

1186 
YY_BREAK


1188 
YY_RULE_SETUP


1190 { 
BEGIN
(
ARGUMENT
);  
	gK_ARGUMENT
; }

1191 
YY_BREAK


1193 
YY_RULE_SETUP


1195 { 
BEGIN
(
ARGUMENT
);  
	gK_AUGMENT
; }

1196 
YY_BREAK


1198 
YY_RULE_SETUP


1200 { 
BEGIN
(
ARGUMENT
);  
	gK_BASE
; }

1201 
YY_BREAK


1203 
YY_RULE_SETUP


1205 { 
BEGIN
(
ARGUMENT
);  
	gK_BELONGS_TO
; }

1206 
YY_BREAK


1208 
YY_RULE_SETUP


1210 { 
BEGIN
(
ARGUMENT
);  
	gK_BIT
; }

1211 
YY_BREAK


1213 
YY_RULE_SETUP


1215 { 
BEGIN
(
ARGUMENT
);  
	gK_CASE
; }

1216 
YY_BREAK


1218 
YY_RULE_SETUP


1220 { 
BEGIN
(
ARGUMENT
);  
	gK_CHOICE
; }

1221 
YY_BREAK


1223 
YY_RULE_SETUP


1225 { 
BEGIN
(
ARGUMENT
);  
	gK_CONFIG
; }

1226 
YY_BREAK


1228 
YY_RULE_SETUP


1230 { 
BEGIN
(
STRING0
);  
	gK_CONTACT
; }

1231 
YY_BREAK


1233 
YY_RULE_SETUP


1235 { 
BEGIN
(
ARGUMENT
);  
	gK_CONTAINER
; }

1236 
YY_BREAK


1238 
YY_RULE_SETUP


1240 { 
BEGIN
(
STRING0
);  
	gK_DEFAULT
; }

1241 
YY_BREAK


1243 
YY_RULE_SETUP


1245 { 
BEGIN
(
STRING0
);  
	gK_DESCRIPTION
; }

1246 
YY_BREAK


1248 
YY_RULE_SETUP


1250 { 
BEGIN
(
ARGUMENT
);  
	gK_DEVIATE
; }

1251 
YY_BREAK


1253 
YY_RULE_SETUP


1255 { 
BEGIN
(
ARGUMENT
);  
	gK_DEVIATION
; }

1256 
YY_BREAK


1258 
YY_RULE_SETUP


1260 { 
BEGIN
(
STRING0
);  
	gK_ENUM
; }

1261 
YY_BREAK


1263 
YY_RULE_SETUP


1265 { 
BEGIN
(
STRING0
);  
	gK_ERROR_APP_TAG
; }

1266 
YY_BREAK


1268 
YY_RULE_SETUP


1270 { 
BEGIN
(
STRING0
);  
	gK_ERROR_MESSAGE
; }

1271 
YY_BREAK


1273 
YY_RULE_SETUP


1275 { 
BEGIN
(
ARGUMENT
);  
	gK_EXTENSION
; }

1276 
YY_BREAK


1278 
YY_RULE_SETUP


1280 { 
BEGIN
(
ARGUMENT
);  
	gK_FEATURE
; }

1281 
YY_BREAK


1283 
YY_RULE_SETUP


1285 { 
BEGIN
(
ARGUMENT
);  
	gK_FRACTION_DIGITS
; }

1286 
YY_BREAK


1288 
YY_RULE_SETUP


1290 { 
BEGIN
(
ARGUMENT
);  
	gK_GROUPING
; }

1291 
YY_BREAK


1293 
YY_RULE_SETUP


1295 { 
BEGIN
(
ARGUMENT
);  
	gK_IDENTITY
; }

1296 
YY_BREAK


1298 
YY_RULE_SETUP


1300 { 
BEGIN
(
ARGUMENT
);  
	gK_IF_FEATURE
; }

1301 
YY_BREAK


1303 
YY_RULE_SETUP


1305 { 
BEGIN
(
ARGUMENT
);  
	gK_IMPORT
; }

1306 
YY_BREAK


1308 
YY_RULE_SETUP


1310 { 
BEGIN
(
ARGUMENT
);  
	gK_INCLUDE
; }

1311 
YY_BREAK


1313 
YY_RULE_SETUP


1315 { 
BEGIN
(
ARGUMENT
);  
	gK_INPUT
; }

1316 
YY_BREAK


1318 
YY_RULE_SETUP


1320 { 
BEGIN
(
ARGUMENT
);  
	gK_KEY
; }

1321 
YY_BREAK


1323 
YY_RULE_SETUP


1325 { 
BEGIN
(
ARGUMENT
);  
	gK_LEAF
; }

1326 
YY_BREAK


1328 
YY_RULE_SETUP


1330 { 
BEGIN
(
ARGUMENT
);  
	gK_LEAF_LIST
; }

1331 
YY_BREAK


1333 
YY_RULE_SETUP


1335 { 
BEGIN
(
ARGUMENT
);  
	gK_LENGTH
; }

1336 
YY_BREAK


1338 
YY_RULE_SETUP


1340 { 
BEGIN
(
ARGUMENT
);  
	gK_LIST
; }

1341 
YY_BREAK


1343 
YY_RULE_SETUP


1345 { 
BEGIN
(
ARGUMENT
);  
	gK_MANDATORY
; }

1346 
YY_BREAK


1348 
YY_RULE_SETUP


1350 { 
BEGIN
(
ARGUMENT
);  
	gK_MAX_ELEMENTS
; }

1351 
YY_BREAK


1353 
YY_RULE_SETUP


1355 { 
BEGIN
(
ARGUMENT
);  
	gK_MIN_ELEMENTS
; }

1356 
YY_BREAK


1358 
YY_RULE_SETUP


1360 { 
BEGIN
(
ARGUMENT
);  
	gK_MODULE
; }

1361 
YY_BREAK


1363 
YY_RULE_SETUP


1365 { 
BEGIN
(
STRING0
);  
	gK_MUST
; }

1366 
YY_BREAK


1368 
YY_RULE_SETUP


1370 { 
BEGIN
(
ARGUMENT
);  
	gK_NAMESPACE
; }

1371 
YY_BREAK


1373 
YY_RULE_SETUP


1375 { 
BEGIN
(
ARGUMENT
);  
	gK_NOTIFICATION
; }

1376 
YY_BREAK


1378 
YY_RULE_SETUP


1380 { 
BEGIN
(
ARGUMENT
);  
	gK_ORDERED_BY
; }

1381 
YY_BREAK


1383 
YY_RULE_SETUP


1385 { 
BEGIN
(
STRING0
);  
	gK_ORGANIZATION
; }

1386 
YY_BREAK


1388 
YY_RULE_SETUP


1390 { 
BEGIN
(
ARGUMENT
);  
	gK_OUTPUT
; }

1391 
YY_BREAK


1393 
YY_RULE_SETUP


1395 { 
BEGIN
(
ARGUMENT
);  
	gK_PATH
; }

1396 
YY_BREAK


1398 
YY_RULE_SETUP


1400 { 
BEGIN
(
STRING0
);  
	gK_PATTERN
; }

1401 
YY_BREAK


1403 
YY_RULE_SETUP


1405 { 
BEGIN
(
ARGUMENT
);  
	gK_POSITION
; }

1406 
YY_BREAK


1408 
YY_RULE_SETUP


1410 { 
BEGIN
(
ARGUMENT
);  
	gK_PREFIX
; }

1411 
YY_BREAK


1413 
YY_RULE_SETUP


1415 { 
BEGIN
(
STRING0
);  
	gK_PRESENCE
; }

1416 
YY_BREAK


1418 
YY_RULE_SETUP


1420 { 
BEGIN
(
ARGUMENT
);  
	gK_RANGE
; }

1421 
YY_BREAK


1423 
YY_RULE_SETUP


1425 { 
BEGIN
(
STRING0
);  
	gK_REFERENCE
; }

1426 
YY_BREAK


1428 
YY_RULE_SETUP


1430 { 
BEGIN
(
ARGUMENT
);  
	gK_REFINE
; }

1431 
YY_BREAK


1433 
YY_RULE_SETUP


1435 { 
BEGIN
(
ARGUMENT
);  
	gK_REQUIRE_INSTANCE
; }

1436 
YY_BREAK


1438 
YY_RULE_SETUP


1440 { 
BEGIN
(
ARGUMENT
);  
	gK_REVISION
; }

1441 
YY_BREAK


1443 
YY_RULE_SETUP


1445 { 
BEGIN
(
ARGUMENT
);  
	gK_REVISION_DATE
; }

1446 
YY_BREAK


1448 
YY_RULE_SETUP


1450 { 
BEGIN
(
ARGUMENT
);  
	gK_RPC
; }

1451 
YY_BREAK


1453 
YY_RULE_SETUP


1455 { 
BEGIN
(
ARGUMENT
);  
	gK_STATUS
; }

1456 
YY_BREAK


1458 
YY_RULE_SETUP


1460 { 
BEGIN
(
ARGUMENT
);  
	gK_SUBMODULE
; }

1461 
YY_BREAK


1463 
YY_RULE_SETUP


1465 { 
BEGIN
(
ARGUMENT
);  
	gK_TYPE
; }

1466 
YY_BREAK


1468 
YY_RULE_SETUP


1470 { 
BEGIN
(
ARGUMENT
);  
	gK_TYPEDEF
; }

1471 
YY_BREAK


1473 
YY_RULE_SETUP


1475 { 
BEGIN
(
ARGUMENT
);  
	gK_UNIQUE
; }

1476 
YY_BREAK


1478 
YY_RULE_SETUP


1480 { 
BEGIN
(
STRING0
);  
	gK_UNITS
; }

1481 
YY_BREAK


1483 
YY_RULE_SETUP


1485 { 
BEGIN
(
ARGUMENT
);  
	gK_USES
; }

1486 
YY_BREAK


1488 
YY_RULE_SETUP


1490 { 
BEGIN
(
ARGUMENT
);  
	gK_VALUE
; }

1491 
YY_BREAK


1493 
YY_RULE_SETUP


1495 { 
BEGIN
(
STRING0
);  
	gK_WHEN
; }

1496 
YY_BREAK


1498 
YY_RULE_SETUP


1500 { 
BEGIN
(
ARGUMENT
);  
	gK_YANG_VERSION
; }

1501 
YY_BREAK


1503 
YY_RULE_SETUP


1505 { 
BEGIN
(
ARGUMENT
);  
	gK_YIN_ELEMENT
; }

1506 
YY_BREAK


1508 
YY_RULE_SETUP


1510 {  *
˛ix⁄_y™g_∑r£ãxt
; }

1511 
YY_BREAK


1513 
YY_RULE_SETUP


1515 {  *
˛ix⁄_y™g_∑r£ãxt
; }

1516 
YY_BREAK


1518 
YY_RULE_SETUP


1520 { 
˛ix⁄_y™g_∑r£lvÆ
.
°rög
 = 
°rdup
(
˛ix⁄_y™g_∑r£ãxt
);

1521 
BEGIN
(
UNKNOWN
);  
	gCHAR
; }

1522 
YY_BREAK


1524 
YY_RULE_SETUP


1526 {  *
˛ix⁄_y™g_∑r£ãxt
; }

1527 
YY_BREAK


1529 
YY_RULE_SETUP


1531 { 
BEGIN
(
KEYWORD
);  *
	g˛ix⁄_y™g_∑r£ãxt
; }

1532 
YY_BREAK


1534 
YY_RULE_SETUP


1537 
YY_BREAK


1539 
YY_RULE_SETUP


1541 { 
˛ix⁄_y™g_∑r£lvÆ
.
°rög
 = 
°rdup
(
˛ix⁄_y™g_∑r£ãxt
);

1542  
	gCHAR
; }

1543 
YY_BREAK


1545 
YY_RULE_SETUP


1547 { 
BEGIN
(
KEYWORD
);  *
	g˛ix⁄_y™g_∑r£ãxt
; }

1548 
YY_BREAK


1550 
YY_RULE_SETUP


1552 { 
BEGIN
(
KEYWORD
);  *
	g˛ix⁄_y™g_∑r£ãxt
; }

1553 
YY_BREAK


1555 
YY_RULE_SETUP


1557 { 
_YY
->
yy_Àx_°rög_°©e
 =
ARGUMENT
; 
BEGIN
(
STRING1
);  
	gDQ
; }

1558 
YY_BREAK


1560 
YY_RULE_SETUP


1562 { 
_YY
->
yy_Àx_°rög_°©e
 =
ARGUMENT
; 
BEGIN
(
STRING2
);  
	gDQ
; }

1563 
YY_BREAK


1565 
YY_RULE_SETUP


1567 {  *
˛ix⁄_y™g_∑r£ãxt
; }

1568 
YY_BREAK


1570 
YY_RULE_SETUP


1572 {  *
˛ix⁄_y™g_∑r£ãxt
; }

1573 
YY_BREAK


1575 
YY_RULE_SETUP


1577 { 
˛ix⁄_y™g_∑r£lvÆ
.
°rög
 = 
°rdup
(
˛ix⁄_y™g_∑r£ãxt
);

1578  
	gCHAR
;}

1579 
YY_BREAK


1581 
YY_RULE_SETUP


1583 { 
BEGIN
(
KEYWORD
);  *
	g˛ix⁄_y™g_∑r£ãxt
; }

1584 
YY_BREAK


1586 
YY_RULE_SETUP


1588 { 
BEGIN
(
KEYWORD
);  *
	g˛ix⁄_y™g_∑r£ãxt
; }

1589 
YY_BREAK


1591 
YY_RULE_SETUP


1593 { 
_YY
->
yy_Àx_°rög_°©e
 =
STRING0
; 
BEGIN
(
STRING1
);  
	gDQ
; }

1594 
YY_BREAK


1596 
YY_RULE_SETUP


1598 { 
_YY
->
yy_Àx_°rög_°©e
 =
STRING0
; 
BEGIN
(
STRING2
);  
	gDQ
; }

1599 
YY_BREAK


1601 
YY_RULE_SETUP


1603 {  *
˛ix⁄_y™g_∑r£ãxt
; }

1604 
YY_BREAK


1606 
YY_RULE_SETUP


1608 { 
˛ix⁄_y™g_∑r£lvÆ
.
°rög
 = 
°rdup
(
˛ix⁄_y™g_∑r£ãxt
);

1609  
	gCHAR
;}

1610 
YY_BREAK


1612 
YY_RULE_SETUP


1614 { 
_YY
->
yy_Àx_°©e
 = 
STRING1
; 
BEGIN
(
ESCAPE
); }

1615 
YY_BREAK


1617 
YY_RULE_SETUP


1619 { 
BEGIN
(
_YY
->
yy_Àx_°rög_°©e
);  
	gDQ
; }

1620 
YY_BREAK


1623 
YY_RULE_SETUP


1625 { 
_YY
->
yy_löíum
++; 
	g˛ix⁄_y™g_∑r£lvÆ
.
	g°rög
 = 
°rdup
(
˛ix⁄_y™g_∑r£ãxt
);  
	gCHAR
;}

1626 
YY_BREAK


1628 
YY_RULE_SETUP


1630 { 
˛ix⁄_y™g_∑r£lvÆ
.
°rög
 = 
°rdup
(
˛ix⁄_y™g_∑r£ãxt
);

1631  
	gCHAR
;}

1632 
YY_BREAK


1634 
YY_RULE_SETUP


1636 { 
BEGIN
(
_YY
->
yy_Àx_°rög_°©e
);  
	gDQ
; }

1637 
YY_BREAK


1640 
YY_RULE_SETUP


1642 { 
_YY
->
yy_löíum
++; 
	g˛ix⁄_y™g_∑r£lvÆ
.
	g°rög
 = 
°rdup
(
˛ix⁄_y™g_∑r£ãxt
);  
	gCHAR
;}

1643 
YY_BREAK


1645 
YY_RULE_SETUP


1647 { 
˛ix⁄_y™g_∑r£lvÆ
.
°rög
 = 
°rdup
(
˛ix⁄_y™g_∑r£ãxt
);

1648  
	gCHAR
;}

1649 
YY_BREAK


1651 
YY_RULE_SETUP


1653 { 
BEGIN
(
_YY
->
yy_Àx_°©e
);

1654 
	g˛ix⁄_y™g_∑r£lvÆ
.
	g°rög
 = 
°rdup
(
˛ix⁄_y™g_∑r£ãxt
);

1655  
	gCHAR
; }

1656 
YY_BREAK


1658 
YY_RULE_SETUP


1661 
YY_BREAK


1663 
YY_RULE_SETUP


1666 
YY_BREAK


1668 
YY_RULE_SETUP


1670 
BEGIN
(
_YY
->
yy_Àx_°©e
);

1671 
YY_BREAK


1673 
YY_RULE_SETUP


1676 
YY_BREAK


1679 
YY_RULE_SETUP


1681 { 
_YY
->
yy_löíum
++; 
BEGIN
(_YY->
yy_Àx_°©e
); }

1682 
YY_BREAK


1684 
YY_RULE_SETUP


1686 
ECHO
;

1687 
	gYY_BREAK


1689 
YY_STATE_EOF
(
INITIAL
):

1690 
YY_STATE_EOF
(
STRING1
):

1691 
YY_STATE_EOF
(
STRING2
):

1692 
YY_STATE_EOF
(
ESCAPE
):

1693 
YY_STATE_EOF
(
COMMENT1
):

1694 
YY_STATE_EOF
(
COMMENT2
):

1695 
yyãrmö©e
();

1697 
	gYY_END_OF_BUFFER
:

1700 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - (
yyãxt_±r
)) - 1;

1703 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

1704 
YY_RESTORE_YY_MORE_OFFSET


1706 i‡–
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

1717 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1718 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_öput_fûe
 = 
˛ix⁄_y™g_∑r£ö
;

1719 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

1729 i‡–(
	gyy_c_buf_p
Ë<&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1731 
yy_°©e_ty≥
 
yy_√xt_°©e
;

1733 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1735 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1746 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

1748 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1750 i‡–
	gyy_√xt_°©e
 )

1753 
	gyy_˝
 = ++(
yy_c_buf_p
);

1754 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

1755 
	gyy_m©ch
;

1760 
	gyy_˝
 = (
yy_c_buf_p
);

1761 
	gyy_föd_a˘i⁄
;

1765  
yy_gë_√xt_buf„r
( ) )

1767 
	gEOB_ACT_END_OF_FILE
:

1769 (
yy_did_buf„r_swôch_⁄_eof
) = 0;

1771 i‡–
˛ix⁄_y™g_∑r£wøp
( ) )

1782 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1784 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

1785 
	gdo_a˘i⁄
;

1790 i‡–! (
	gyy_did_buf„r_swôch_⁄_eof
) )

1791 
	gYY_NEW_FILE
;

1796 
	gEOB_ACT_CONTINUE_SCAN
:

1797 (
yy_c_buf_p
) =

1798 (
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1800 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1802 
	gyy_˝
 = (
yy_c_buf_p
);

1803 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1804 
	gyy_m©ch
;

1806 
	gEOB_ACT_LAST_MATCH
:

1807 (
yy_c_buf_p
) =

1808 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)];

1810 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1812 
	gyy_˝
 = (
yy_c_buf_p
);

1813 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1814 
	gyy_föd_a˘i⁄
;

1820 
YY_FATAL_ERROR
(

1834 
	$yy_gë_√xt_buf„r
 ()

1836 *
de°
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
;

1837 *
sour˚
 = (
yyãxt_±r
);

1838 
yy_size_t
 
numbî_to_move
, 
i
;

1839 
ªt_vÆ
;

1841 i‡–(
yy_c_buf_p
Ë> &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
) + 1] )

1842 
	`YY_FATAL_ERROR
(

1845 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_fûl_buf„r
 == 0 )

1847 i‡–(
yy_c_buf_p
Ë- (
yyãxt_±r
Ë- 
YY_MORE_ADJ
 == 1 )

1852  
EOB_ACT_END_OF_FILE
;

1860  
EOB_ACT_LAST_MATCH
;

1867 
numbî_to_move
 = (
yy_size_t
Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
)) - 1;

1869  
i
 = 0; i < 
numbî_to_move
; ++i )

1870 *(
de°
++Ë*(
sour˚
++);

1872 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

1876 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars) = 0;

1880 
yy_size_t
 
num_to_ªad
 =

1881 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 - 
numbî_to_move
 - 1;

1883  
num_to_ªad
 <= 0 )

1887 
YY_BUFFER_STATE
 
b
 = 
YY_CURRENT_BUFFER_LVALUE
;

1889 
yy_c_buf_p_off£t
 =

1890 (Ë((
yy_c_buf_p
Ë- 
b
->
yy_ch_buf
);

1892 i‡–
b
->
yy_is_our_buf„r
 )

1894 
yy_size_t
 
√w_size
 = 
b
->
yy_buf_size
 * 2;

1896 i‡–
√w_size
 <= 0 )

1897 
b
->
yy_buf_size
 += b->yy_buf_size / 8;

1899 
b
->
yy_buf_size
 *= 2;

1901 
b
->
yy_ch_buf
 = (*)

1903 
	`˛ix⁄_y™g_∑r£ªÆloc
((*Ë
b
->
yy_ch_buf
,b->
yy_buf_size
 + 2 );

1907 
b
->
yy_ch_buf
 = 0;

1909 i‡–! 
b
->
yy_ch_buf
 )

1910 
	`YY_FATAL_ERROR
(

1913 (
yy_c_buf_p
Ë&
b
->
yy_ch_buf
[
yy_c_buf_p_off£t
];

1915 
num_to_ªad
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 -

1916 
numbî_to_move
 - 1;

1920 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

1921 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

1924 
	`YY_INPUT
–(&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
]),

1925 (
yy_n_ch¨s
), 
num_to_ªad
 );

1927 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1930 i‡–(
yy_n_ch¨s
) == 0 )

1932 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

1934 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

1935 
	`˛ix⁄_y™g_∑r£ª°¨t
(
˛ix⁄_y™g_∑r£ö
 );

1940 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

1941 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =

1942 
YY_BUFFER_EOF_PENDING
;

1947 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

1949 i‡((Ë((
yy_n_ch¨s
Ë+ 
numbî_to_move
Ë> 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
) {

1951 
√w_size
 = (
yy_n_ch¨s
Ë+ 
numbî_to_move
 + ((yy_n_chars) >> 1);

1952 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 = (*Ë
	`˛ix⁄_y™g_∑r£ªÆloc
((*ËYY_CURRENT_BUFFER_LVALUE->yy_ch_buf,
√w_size
 );

1953 i‡–! 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1954 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_get_next_buffer()" );

1957 (
yy_n_ch¨s
Ë+
numbî_to_move
;

1958 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] = 
YY_END_OF_BUFFER_CHAR
;

1959 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
Ë+ 1] = 
YY_END_OF_BUFFER_CHAR
;

1961 (
yyãxt_±r
Ë&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[0];

1963  
ªt_vÆ
;

1964 
	}
}

1968 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
 ()

1970 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

1971 *
yy_˝
;

1973 
yy_cuºít_°©e
 = (
yy_°¨t
);

1975  
yy_˝
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
; yy_˝ < (
yy_c_buf_p
); ++yy_cp )

1977 
YY_CHAR
 
yy_c
 = (*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1);

1978 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1980 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1981 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1983  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1985 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1986 i‡–
yy_cuºít_°©e
 >= 475 )

1987 
yy_c
 = 
yy_mëa
[() yy_c];

1989 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1992  
yy_cuºít_°©e
;

1993 
	}
}

2000 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
 (
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

2002 
yy_is_jam
;

2003 *
yy_˝
 = (
yy_c_buf_p
);

2005 
YY_CHAR
 
yy_c
 = 1;

2006 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

2008 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

2009 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

2011  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

2013 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

2014 i‡–
yy_cuºít_°©e
 >= 475 )

2015 
yy_c
 = 
yy_mëa
[() yy_c];

2017 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

2018 
yy_is_jam
 = (
yy_cuºít_°©e
 == 474);

2020  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

2021 
	}
}

2023 #i‚de‡
YY_NO_UNPUT


2025 
	$yyu≈ut
 (
c
, * 
yy_bp
 )

2027 *
yy_˝
;

2029 
yy_˝
 = (
yy_c_buf_p
);

2032 *
yy_˝
 = (
yy_hﬁd_ch¨
);

2034 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

2037 
yy_size_t
 
numbî_to_move
 = (
yy_n_ch¨s
) + 2;

2038 *
de°
 = &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[

2039 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 + 2];

2040 *
sour˚
 =

2041 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
];

2043  
sour˚
 > 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

2044 *--
de°
 = *--
sour˚
;

2046 
yy_˝
 +(Ë(
de°
 - 
sour˚
);

2047 
yy_bp
 +(Ë(
de°
 - 
sour˚
);

2048 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 =

2049 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
;

2051 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

2052 
	`YY_FATAL_ERROR
( "flex scannerÖush-back overflow" );

2055 *--
yy_˝
 = (Ë
c
;

2057 (
yyãxt_±r
Ë
yy_bp
;

2058 (
yy_hﬁd_ch¨
Ë*
yy_˝
;

2059 (
yy_c_buf_p
Ë
yy_˝
;

2060 
	}
}

2064 #i‚de‡
YY_NO_INPUT


2065 #ifde‡
__˝lu•lus


2066 
	$yyöput
 ()

2068 
	$öput
 ()

2072 
c
;

2074 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

2076 i‡–*(
yy_c_buf_p
Ë=
YY_END_OF_BUFFER_CHAR
 )

2082 i‡–(
yy_c_buf_p
Ë< &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

2084 *(
yy_c_buf_p
) = '\0';

2088 
yy_size_t
 
off£t
 = (
yy_c_buf_p
Ë- (
yyãxt_±r
);

2089 ++(
yy_c_buf_p
);

2091  
	`yy_gë_√xt_buf„r
( ) )

2093 
EOB_ACT_LAST_MATCH
:

2105 
	`˛ix⁄_y™g_∑r£ª°¨t
(
˛ix⁄_y™g_∑r£ö
 );

2109 
EOB_ACT_END_OF_FILE
:

2111 i‡–
	`˛ix⁄_y™g_∑r£wøp
( ) )

2112  
EOF
;

2114 i‡–! (
yy_did_buf„r_swôch_⁄_eof
) )

2115 
YY_NEW_FILE
;

2116 #ifde‡
__˝lu•lus


2117  
	`yyöput
();

2119  
	`öput
();

2123 
EOB_ACT_CONTINUE_SCAN
:

2124 (
yy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
off£t
;

2130 
c
 = *(*Ë(
yy_c_buf_p
);

2131 *(
yy_c_buf_p
) = '\0';

2132 (
yy_hﬁd_ch¨
Ë*++(
yy_c_buf_p
);

2134  
c
;

2135 
	}
}

2143 
	$˛ix⁄_y™g_∑r£ª°¨t
 (
FILE
 * 
öput_fûe
 )

2146 i‡–! 
YY_CURRENT_BUFFER
 ){

2147 
	`˛ix⁄_y™g_∑r£ísuª_buf„r_°ack
 ();

2148 
YY_CURRENT_BUFFER_LVALUE
 =

2149 
	`˛ix⁄_y™g_∑r£_¸óã_buf„r
(
˛ix⁄_y™g_∑r£ö
,
YY_BUF_SIZE
 );

2152 
	`˛ix⁄_y™g_∑r£_öô_buf„r
(
YY_CURRENT_BUFFER
,
öput_fûe
 );

2153 
	`˛ix⁄_y™g_∑r£_lﬂd_buf„r_°©e
( );

2154 
	}
}

2160 
	$˛ix⁄_y™g_∑r£_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

2168 
	`˛ix⁄_y™g_∑r£ísuª_buf„r_°ack
 ();

2169 i‡–
YY_CURRENT_BUFFER
 =
√w_buf„r
 )

2172 i‡–
YY_CURRENT_BUFFER
 )

2175 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

2176 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

2177 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

2180 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

2181 
	`˛ix⁄_y™g_∑r£_lﬂd_buf„r_°©e
( );

2188 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

2189 
	}
}

2191 
	$˛ix⁄_y™g_∑r£_lﬂd_buf„r_°©e
 ()

2193 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

2194 (
yyãxt_±r
Ë(
yy_c_buf_p
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
;

2195 
˛ix⁄_y™g_∑r£ö
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_öput_fûe
;

2196 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
);

2197 
	}
}

2205 
YY_BUFFER_STATE
 
	$˛ix⁄_y™g_∑r£_¸óã_buf„r
 (
FILE
 * 
fûe
, 
size
 )

2207 
YY_BUFFER_STATE
 
b
;

2209 
b
 = (
YY_BUFFER_STATE
Ë
	`˛ix⁄_y™g_∑r£Æloc
(–
yy_buf„r_°©e
 ) );

2210 i‡–! 
b
 )

2211 
	`YY_FATAL_ERROR
( "out of dynamic memory in clixon_yang_parse_create_buffer()" );

2213 
b
->
yy_buf_size
 = (
yy_size_t
)
size
;

2218 
b
->
yy_ch_buf
 = (*Ë
	`˛ix⁄_y™g_∑r£Æloc
(b->
yy_buf_size
 + 2 );

2219 i‡–! 
b
->
yy_ch_buf
 )

2220 
	`YY_FATAL_ERROR
( "out of dynamic memory in clixon_yang_parse_create_buffer()" );

2222 
b
->
yy_is_our_buf„r
 = 1;

2224 
	`˛ix⁄_y™g_∑r£_öô_buf„r
(
b
,
fûe
 );

2226  
b
;

2227 
	}
}

2233 
	$˛ix⁄_y™g_∑r£_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 )

2236 i‡–! 
b
 )

2239 i‡–
b
 =
YY_CURRENT_BUFFER
 )

2240 
YY_CURRENT_BUFFER_LVALUE
 = (
YY_BUFFER_STATE
) 0;

2242 i‡–
b
->
yy_is_our_buf„r
 )

2243 
	`˛ix⁄_y™g_∑r£‰ì
((*Ë
b
->
yy_ch_buf
 );

2245 
	`˛ix⁄_y™g_∑r£‰ì
((*Ë
b
 );

2246 
	}
}

2252 
	$˛ix⁄_y™g_∑r£_öô_buf„r
 (
YY_BUFFER_STATE
 
b
, 
FILE
 * 
fûe
 )

2255 
€ºno
 = 
î∫o
;

2257 
	`˛ix⁄_y™g_∑r£_Êush_buf„r
(
b
 );

2259 
b
->
yy_öput_fûe
 = 
fûe
;

2260 
b
->
yy_fûl_buf„r
 = 1;

2266 i‡(
b
 !
YY_CURRENT_BUFFER
){

2267 
b
->
yy_bs_löío
 = 1;

2268 
b
->
yy_bs_cﬁumn
 = 0;

2271 
b
->
yy_is_öãø˘ive
 = 
fûe
 ? (
	`ißây
–
	`fûío
(file) ) > 0) : 0;

2273 
î∫o
 = 
€ºno
;

2274 
	}
}

2280 
	$˛ix⁄_y™g_∑r£_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 )

2282 i‡–! 
b
 )

2285 
b
->
yy_n_ch¨s
 = 0;

2291 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

2292 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

2294 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

2296 
b
->
yy_©_bﬁ
 = 1;

2297 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

2299 i‡–
b
 =
YY_CURRENT_BUFFER
 )

2300 
	`˛ix⁄_y™g_∑r£_lﬂd_buf„r_°©e
( );

2301 
	}
}

2309 
	$˛ix⁄_y™g_∑r£push_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

2311 i‡(
√w_buf„r
 =
NULL
)

2314 
	`˛ix⁄_y™g_∑r£ísuª_buf„r_°ack
();

2317 i‡–
YY_CURRENT_BUFFER
 )

2320 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

2321 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

2322 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

2326 i‡(
YY_CURRENT_BUFFER
)

2327 (
yy_buf„r_°ack_t›
)++;

2328 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

2331 
	`˛ix⁄_y™g_∑r£_lﬂd_buf„r_°©e
( );

2332 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

2333 
	}
}

2339 
	$˛ix⁄_y™g_∑r£p›_buf„r_°©e
 ()

2341 i‡(!
YY_CURRENT_BUFFER
)

2344 
	`˛ix⁄_y™g_∑r£_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

2345 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

2346 i‡((
yy_buf„r_°ack_t›
) > 0)

2347 --(
yy_buf„r_°ack_t›
);

2349 i‡(
YY_CURRENT_BUFFER
) {

2350 
	`˛ix⁄_y™g_∑r£_lﬂd_buf„r_°©e
( );

2351 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

2353 
	}
}

2358 
	$˛ix⁄_y™g_∑r£ísuª_buf„r_°ack
 ()

2360 
yy_size_t
 
num_to_Æloc
;

2362 i‡(!(
yy_buf„r_°ack
)) {

2368 
num_to_Æloc
 = 1;

2369 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
˛ix⁄_y™g_∑r£Æloc


2370 (
num_to_Æloc
 * (
yy_buf„r_°©e
*)

2372 i‡–! (
yy_buf„r_°ack
) )

2373 
	`YY_FATAL_ERROR
( "out of dynamic memory in clixon_yang_parseensure_buffer_stack()" );

2375 
	`mem£t
((
yy_buf„r_°ack
), 0, 
num_to_Æloc
 * (
yy_buf„r_°©e
*));

2377 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

2378 (
yy_buf„r_°ack_t›
) = 0;

2382 i‡((
yy_buf„r_°ack_t›
Ë>((
yy_buf„r_°ack_max
)) - 1){

2385 
yy_size_t
 
grow_size
 = 8 ;

2387 
num_to_Æloc
 = (
yy_buf„r_°ack_max
Ë+ 
grow_size
;

2388 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
˛ix⁄_y™g_∑r£ªÆloc


2389 ((
yy_buf„r_°ack
),

2390 
num_to_Æloc
 * (
yy_buf„r_°©e
*)

2392 i‡–! (
yy_buf„r_°ack
) )

2393 
	`YY_FATAL_ERROR
( "out of dynamic memory in clixon_yang_parseensure_buffer_stack()" );

2396 
	`mem£t
((
yy_buf„r_°ack
Ë+ (
yy_buf„r_°ack_max
), 0, 
grow_size
 * (
yy_buf„r_°©e
*));

2397 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

2399 
	}
}

2407 
YY_BUFFER_STATE
 
	$˛ix⁄_y™g_∑r£_sˇn_buf„r
 (* 
ba£
, 
yy_size_t
 
size
 )

2409 
YY_BUFFER_STATE
 
b
;

2411 i‡–
size
 < 2 ||

2412 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

2413 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

2417 
b
 = (
YY_BUFFER_STATE
Ë
	`˛ix⁄_y™g_∑r£Æloc
(–
yy_buf„r_°©e
 ) );

2418 i‡–! 
b
 )

2419 
	`YY_FATAL_ERROR
( "out of dynamic memory in clixon_yang_parse_scan_buffer()" );

2421 
b
->
yy_buf_size
 = 
size
 - 2;

2422 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

2423 
b
->
yy_is_our_buf„r
 = 0;

2424 
b
->
yy_öput_fûe
 = 0;

2425 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

2426 
b
->
yy_is_öãø˘ive
 = 0;

2427 
b
->
yy_©_bﬁ
 = 1;

2428 
b
->
yy_fûl_buf„r
 = 0;

2429 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

2431 
	`˛ix⁄_y™g_∑r£_swôch_to_buf„r
(
b
 );

2433  
b
;

2434 
	}
}

2444 
YY_BUFFER_STATE
 
	$˛ix⁄_y™g_∑r£_sˇn_°rög
 (
yyc⁄°
 * 
yy°r
 )

2447  
	`˛ix⁄_y™g_∑r£_sˇn_byãs
(
yy°r
,
	`°æí
(yystr) );

2448 
	}
}

2457 
YY_BUFFER_STATE
 
	$˛ix⁄_y™g_∑r£_sˇn_byãs
 (
yyc⁄°
 * 
yybyãs
, 
yy_size_t
 
_yybyãs_Àn
 )

2459 
YY_BUFFER_STATE
 
b
;

2460 *
buf
;

2461 
yy_size_t
 
n
;

2462 
yy_size_t
 
i
;

2465 
n
 = 
_yybyãs_Àn
 + 2;

2466 
buf
 = (*Ë
	`˛ix⁄_y™g_∑r£Æloc
(
n
 );

2467 i‡–! 
buf
 )

2468 
	`YY_FATAL_ERROR
( "out of dynamic memory in clixon_yang_parse_scan_bytes()" );

2470  
i
 = 0; i < 
_yybyãs_Àn
; ++i )

2471 
buf
[
i
] = 
yybyãs
[i];

2473 
buf
[
_yybyãs_Àn
] = buf[_yybyãs_Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

2475 
b
 = 
	`˛ix⁄_y™g_∑r£_sˇn_buf„r
(
buf
,
n
 );

2476 i‡–! 
b
 )

2477 
	`YY_FATAL_ERROR
( "bad buffer in clixon_yang_parse_scan_bytes()" );

2482 
b
->
yy_is_our_buf„r
 = 1;

2484  
b
;

2485 
	}
}

2487 #i‚de‡
YY_EXIT_FAILURE


2488 
	#YY_EXIT_FAILURE
 2

	)

2491 
	$yy_Áèl_îr‹
 (
yyc⁄°
 * 
msg
 )

2493 (Ë
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

2494 
	`exô
–
YY_EXIT_FAILURE
 );

2495 
	}
}

2499 #unde‡
yyÀss


2500 
	#yyÀss
(
n
) \

2504 
yyÀss_ma¸o_¨g
 = (
n
); \

2505 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

2506 
˛ix⁄_y™g_∑r£ãxt
[
˛ix⁄_y™g_∑r£Àng
] = (
yy_hﬁd_ch¨
); \

2507 (
yy_c_buf_p
Ë
˛ix⁄_y™g_∑r£ãxt
 + 
yyÀss_ma¸o_¨g
; \

2508 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
); \

2509 *(
yy_c_buf_p
) = '\0'; \

2510 
˛ix⁄_y™g_∑r£Àng
 = 
yyÀss_ma¸o_¨g
; \

2512  0 )

	)

2519 
	$˛ix⁄_y™g_∑r£gë_löío
 ()

2522  
˛ix⁄_y™g_∑r£löío
;

2523 
	}
}

2528 
FILE
 *
	$˛ix⁄_y™g_∑r£gë_ö
 ()

2530  
˛ix⁄_y™g_∑r£ö
;

2531 
	}
}

2536 
FILE
 *
	$˛ix⁄_y™g_∑r£gë_out
 ()

2538  
˛ix⁄_y™g_∑r£out
;

2539 
	}
}

2544 
yy_size_t
 
	$˛ix⁄_y™g_∑r£gë_Àng
 ()

2546  
˛ix⁄_y™g_∑r£Àng
;

2547 
	}
}

2553 *
	$˛ix⁄_y™g_∑r£gë_ãxt
 ()

2555  
˛ix⁄_y™g_∑r£ãxt
;

2556 
	}
}

2562 
	$˛ix⁄_y™g_∑r££t_löío
 (
_löe_numbî
 )

2565 
˛ix⁄_y™g_∑r£löío
 = 
_löe_numbî
;

2566 
	}
}

2574 
	$˛ix⁄_y™g_∑r££t_ö
 (
FILE
 * 
_ö_°r
 )

2576 
˛ix⁄_y™g_∑r£ö
 = 
_ö_°r
 ;

2577 
	}
}

2579 
	$˛ix⁄_y™g_∑r££t_out
 (
FILE
 * 
_out_°r
 )

2581 
˛ix⁄_y™g_∑r£out
 = 
_out_°r
 ;

2582 
	}
}

2584 
	$˛ix⁄_y™g_∑r£gë_debug
 ()

2586  
˛ix⁄_y™g_∑r£_Êex_debug
;

2587 
	}
}

2589 
	$˛ix⁄_y™g_∑r££t_debug
 (
_bdebug
 )

2591 
˛ix⁄_y™g_∑r£_Êex_debug
 = 
_bdebug
 ;

2592 
	}
}

2594 
	$yy_öô_globÆs
 ()

2600 (
yy_buf„r_°ack
) = 0;

2601 (
yy_buf„r_°ack_t›
) = 0;

2602 (
yy_buf„r_°ack_max
) = 0;

2603 (
yy_c_buf_p
) = (*) 0;

2604 (
yy_öô
) = 0;

2605 (
yy_°¨t
) = 0;

2608 #ifde‡
YY_STDINIT


2609 
˛ix⁄_y™g_∑r£ö
 = 
°dö
;

2610 
˛ix⁄_y™g_∑r£out
 = 
°dout
;

2612 
˛ix⁄_y™g_∑r£ö
 = (
FILE
 *) 0;

2613 
˛ix⁄_y™g_∑r£out
 = (
FILE
 *) 0;

2620 
	}
}

2623 
	$˛ix⁄_y™g_∑r£Àx_de°roy
 ()

2627 
YY_CURRENT_BUFFER
){

2628 
	`˛ix⁄_y™g_∑r£_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

2629 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

2630 
	`˛ix⁄_y™g_∑r£p›_buf„r_°©e
();

2634 
	`˛ix⁄_y™g_∑r£‰ì
((
yy_buf„r_°ack
) );

2635 (
yy_buf„r_°ack
Ë
NULL
;

2639 
	`yy_öô_globÆs
( );

2642 
	}
}

2648 #i‚de‡
yyãxt_±r


2649 
	$yy_Êex_°∫˝y
 (* 
s1
, 
yyc⁄°
 * 
s2
, 
n
 )

2652 
i
;

2653  
i
 = 0; i < 
n
; ++i )

2654 
s1
[
i
] = 
s2
[i];

2655 
	}
}

2658 #ifde‡
YY_NEED_STRLEN


2659 
	$yy_Êex_°æí
 (
yyc⁄°
 * 
s
 )

2661 
n
;

2662  
n
 = 0; 
s
[n]; ++n )

2665  
n
;

2666 
	}
}

2669 *
	$˛ix⁄_y™g_∑r£Æloc
 (
yy_size_t
 
size
 )

2671  (*Ë
	`mÆloc
–
size
 );

2672 
	}
}

2674 *
	$˛ix⁄_y™g_∑r£ªÆloc
 (* 
±r
, 
yy_size_t
 
size
 )

2684  (*Ë
	`ªÆloc
–(*Ë
±r
, 
size
 );

2685 
	}
}

2687 
	$˛ix⁄_y™g_∑r£‰ì
 (* 
±r
 )

2689 
	`‰ì
–(*Ë
±r
 );

2690 
	}
}

2692 
	#YYTABLES_NAME
 "yyèbÀs"

	)

2703 
	$y™g_sˇn_öô
(
˛ic⁄_y™g_yacc_¨g
 *
yy
)

2705 
	`BEGIN
(
KEYWORD
);

2706 
yy
->
yy_Àxbuf
 = 
	`˛ix⁄_y™g_∑r£_sˇn_°rög
 (yy->
yy_∑r£_°rög
);

2709 
	`yyu≈ut
(0, "");

2713 
	}
}

2721 
	$y™g_sˇn_exô
(
˛ic⁄_y™g_yacc_¨g
 *
yy
)

2723 
	`˛ix⁄_y™g_∑r£_dñëe_buf„r
(
yy
->
yy_Àxbuf
);

2724 
	`˛ix⁄_y™g_∑r£Àx_de°roy
();

2726 
	}
}

	@clixon-master/test/all.sh

1 #!/
bö
/
bash


3 #ö˛udê
îr
(Ë
™d
 
√w
(Ë
fun˘i⁄s


4 . ./
	glib
.
sh


6 
ã°
 
ö
 
	gã°
*.
	gsh
; do

7 
	gecho
 "Running $test"

8 ./
$ã°


9 
	gîrcode
=
$
?

10 [ 
$îrcode
 -
√
 0 ]; 
thí


11 
	gecho
 "Error in $testÉrrcode=$errcode"

12 
exô
 
$îrcode


13 
fi


14 
d⁄e


15 
echo
 
	gOK


	@clixon-master/test/lib.sh

1 #!/
bö
/
bash


2 #Deföê
ã°
 
fun˘i⁄s
.

3 #Cª©ê
w‹kög
 
dú
 
as
 
v¨übÀ
 "dir"

5 
	gã°ƒ
=0

6 
ã°«me
=

8 #F‹ 
memcheck


10 
˛ix⁄_˛i
=clixon_cli

12 #F‹ 
memcheck
 / 
≥rf‹m™˚


15 
˛ix⁄_√tc⁄f
=clixon_netconf

17 #How 
to
 
run
 
ª°c⁄f
 
°™d
-
Æ⁄e
 
™d
 
usög
 
vÆgröd


18 #sudÿ
su
 -
c
 "/www-d©a/˛ix⁄_ª°c⁄‡-‡$cfg -D" -
s
 /
bö
/
sh
 
www
-
d©a


19 #sudÿ
su
 -
c
 "vÆgröd --Àak-check=fuŒ --show-Àak-köds˜Œ /www-d©a/˛ix⁄_ª°c⁄‡-‡$cfg -D" -
s
 /
bö
/
sh
 
www
-
d©a


22 
˛ix⁄_backíd
=clixon_backend

24 
dú
=/
v¨
/
tmp
/
$0


25 [ ! -
d
 
$dú
 ]; 
thí


26 
mkdú
 
$dú


27 
fi


28 
	grm
 -
rf
 
	g$dú


	@clixon-master/test/plot_perf.sh

1 #!/
bö
/
bash


2 #Tønß˘i⁄†
≥r
 
£c⁄d
 
œrge
 
li°s
 
ªad
/
wrôe
 
∂Ÿãr
 
usög
 
gnu∂Ÿ


3 #WORK 
IN
 
PROGRESS


4 . ./
	glib
.
sh


5 
	gmax
=2000 #N∏
of
 
db
 
íåõs


6 
°ï
=200

7 
ªqs
=500

8 
cfg
=
$dú
/
∂Ÿ
-
c⁄f
.
xml


9 
fy™g
=
$dú
/
∂Ÿ
.
y™g


10 
fc⁄fig
=
$dú
/
c⁄fig


12 #F‹ 
memcheck


15 
˛ix⁄_√tc⁄f
=clixon_netconf

17 
ˇt
 <<
EOF
 > 
$fy™g


18 
moduÀ
 
õtf
-
ù
{

19 
c⁄èöî
 
x
 {

20 
li°
 
y
 {

21 
key
 "a";

22 
Àaf
 
	ga
 {

23 
ty≥
 
	g°rög
;

25 
Àaf
 
	gb
 {

26 
ty≥
 
	g°rög
;

29 
	gÀaf
-
li°
 
	gc
 {

30 
ty≥
 
	g°rög
;

34 
EOF


36 
	gˇt
 <<
	gEOF
 > 
	g$cfg


37 <
	gc⁄fig
>

38 <
	gCLICON_CONFIGFILE
>
	g$cfg
</CLICON_CONFIGFILE>

39 <
	gCLICON_YANG_DIR
>
	g$fy™g
</CLICON_YANG_DIR>

40 <
	gCLICON_YANG_MODULE_MAIN
>
	gõtf
-
	gù
</CLICON_YANG_MODULE_MAIN>

41 <
	gCLICON_SOCK
>/
	gu§
/
	gloˇl
/
	gv¨
/
	groutög
/routög.
	gsock
</CLICON_SOCK>

42 <
	gCLICON_BACKEND_PIDFILE
>/
	gu§
/
	gloˇl
/
	gv¨
/
	groutög
/routög.
	gpidfûe
</CLICON_BACKEND_PIDFILE>

43 <
	gCLICON_RESTCONF_PRETTY
>
	gÁl£
</CLICON_RESTCONF_PRETTY>

44 <
	gCLICON_XMLDB_DIR
>/
	gu§
/
	gloˇl
/
	gv¨
/
	groutög
</CLICON_XMLDB_DIR>

45 <
	gCLICON_XMLDB_PLUGIN
>/
	gu§
/
	gloˇl
/
	glib
/
	gxmldb
/
	gãxt
.
	gso
</CLICON_XMLDB_PLUGIN>

46 </
	gc⁄fig
>

47 
EOF


49 
	$run
(){

50 
ƒ
=
$1
 #Numbî 
of
 
íåõs
 
ö
 
DB


51 
ªqs
=
$2


52 
mode
=
$3


54 
echo
 -
n
 "<Ωc><edô-c⁄fig><èrgë><ˇndid©e/></èrgë><deÁu…-›î©i⁄>ª∂a˚</deÁu…-›î©i⁄><c⁄fig><x>" > 
$fc⁄fig


55 –
i
=0; i<
$ƒ
; i++ )); do

56 
$mode
 
ö


57 
ªadli°
|
wrôñi°
|
ª°ªadli°
|
ª°wrôñi°
)

58 
echo
 -
n
 "<y><a>$i</a><b>$i</b></y>" >> 
$fc⁄fig


60 
wrôñóÊi°
)

61 
echo
 -
n
 "<c>$i</c>" >> 
$fc⁄fig


63 
eßc


64 
d⁄e


66 
echo
 "</x></c⁄fig></edô-c⁄fig></Ωc>]]>]]>" >> 
$fc⁄fig


68 
ex≥˘eof_fûe
 "$clixon_netconf -qf $cfg -y $fyang" "$fconfig" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

70 
$mode
 
ö


71 
ªadli°
)

72 
time
 -
p
 –
i
=0; i<
$ªqs
; i++ )); do

73 
∫d
=
	`$
(––
RANDOM
 % 
$ƒ
 ) ))

74 
echo
 "<rpc><get-config><source><candidate/></source><filterÅype=\"xpath\" select=\"/x/y[a=$rnd][b=$rnd]\" /></get-config></rpc>]]>]]>"

75 
d⁄e
 | 
$˛ix⁄_√tc⁄f
 -
qf
 
$cfg
 -
y
 
$fy™g
 > /
dev
/
nuŒ


77 
wrôñi°
)

78 
time
 -
p
 –
i
=0; i<
$ªqs
; i++ )); do

79 
∫d
=
	`$
(––
RANDOM
 % 
$ƒ
 ) ))

80 
echo
 "<rpc><edit-config><target><candidate/></target><config><x><y><a>$rnd</a><b>$rnd</b></y></x></config></edit-config></rpc>]]>]]>"

81 
d⁄e
 | 
$˛ix⁄_√tc⁄f
 -
qf
 
$cfg
 -
y
 
$fy™g
 > /
dev
/
nuŒ


83 
ª°ªadli°
)

84 
time
 -
p
 –
i
=0; i<
$ªqs
; i++ )); do

85 
∫d
=
	`$
(––
RANDOM
 % 
$ƒ
 ) ))

86 
cuæ
 -
sSG
 
hâp
:

87 
d⁄e


89 
wrôñóÊi°
)

90 
time
 -
p
 –
i
=0; i<
$ªqs
; i++ )); do

91 
∫d
=
	`$
(––
RANDOM
 % 
$ƒ
 ) ))

92 
echo
 "<rpc><edit-config><target><candidate/></target><config><x><c>$rnd</c></x></config></edit-config></rpc>]]>]]>"

93 
d⁄e
 | 
$˛ix⁄_√tc⁄f
 -
qf
 
$cfg
 -
y
 
$fy™g
 > /
dev
/
nuŒ


95 
eßc


96 
ex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><discard-changes/></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

98 
	}
}

100 
	$°ï
(){

101 
i
=
$1


102 
mode
=
$2


103 
echo
 -
n
 "" > 
$fc⁄fig


104 
t
=
	`$
(
TEST
=%
e
 
run
 
$i
 
$ªqs
 
$mode
 2>&1 | 
awk
 '/real/ {print $2}')

105 #TEST=%
e
 
run
 
$i
 
$ªqs
 
$mode
 2>&1

106 #à
is
 
time
 
ö
 
£cs
 
of
 
$ªqs
 -> 
å™ß˘i⁄s
 
≥r
 
£c⁄d
. $reqs

107 
p
=
	`$
(
echo
 "$ªqs/$t" | 
bc
 -
lq
)

108 #∞
is
 
å™ß˘i⁄s
 
≥r
 
£c⁄d
.

109 
echo
 "$ò$p" >> 
$dú
/
$mode


111 
	}
}

113 
	$⁄˚
(){

114 #kû»
ﬁd
 
	`backíd
 (
™y
)

115 
sudo
 
˛ix⁄_backíd
 -
zf
 
$cfg
 -
y
 
$fy™g


116 [ 
$
? -
√
 0 ]; 
thí


117 
îr


118 
fi


120 #°¨à
√w
 
backíd


121 
sudo
 
˛ix⁄_backíd
 -
s
 
öô
 -
f
 
$cfg
 -
y
 
$fy™g


122 [ 
$
? -
√
 0 ]; 
thí


123 
îr


124 
fi


126 #Alway†
as
 
a
 
°¨t


127 –
i
=10; i<=
$°ï
; i=i+10 )); do

128 
°ï
 
$i
 
ªadli°


129 
°ï
 
$i
 
wrôñi°


130 
°ï
 
$i
 
ª°ªadli°


131 
°ï
 
$i
 
wrôñóÊi°


132 
d⁄e


133 #A˘uÆ 
°ïs


134 –
i
=
$°ï
; i<=
$max
; i=i+$step )); do

135 
°ï
 
$i
 
ªadli°


136 
°ï
 
$i
 
wrôñi°


137 
°ï
 
$i
 
ª°ªadli°


138 
°ï
 
$i
 
wrôñóÊi°


139 
d⁄e


141 #Check 
°ûl
 
Æive


142 
pid
=`
pgªp
 
˛ix⁄_backíd
`

143 [ -
z
 "$pid" ]; 
thí


144 
îr
 "backendálready dead"

145 
fi


146 #kû»
backíd


147 
sudo
 
˛ix⁄_backíd
 -
zf
 
$cfg


148 [ 
$
? -
√
 0 ]; 
thí


149 
îr
 "kill backend"

150 
fi


151 
	}
}

153 
⁄˚


155 
	ggnu∂Ÿ
 -
	g≥rsi°
 <<
EOF


156 
£t
 
	gtôÀ
 "Clix⁄Åønß˘i⁄†≥∏£c⁄dÑ/wÜ¨gêli°s" 
	gf⁄t
 ",14" 
ãxtcﬁ‹
 
	grgbcﬁ‹
 "royalblue"

157 
£t
 
	gxœbñ
 "entries"

158 
£t
 
	gyœbñ
 "transactionsÖer second"

159 
£t
 
ãrmöÆ
 
wxt
 
íh™˚d
 
	gtôÀ
 "Clix⁄Åønß˘i⁄†" 
≥rsi°
 
øi£


160 
	g∂Ÿ
 "$dú/ªadli°" 
wôh
 
löe•oöts
 
	gtôÀ
 "readÜist", "$dir/writelist" withÜinespointsÅitle "writeÜist", "$dir/writeleaflist" withÜinespointsÅitle "writeÜeaf-list" , "$dir/restreadlist" withÜinespointsÅitle "rest getÜist"

161 
EOF


163 
	grm
 -
rf
 
	g$dú


	@clixon-master/test/test_auth.sh

1 #!/
bö
/
bash


2 #Authítiˇti⁄ 
™d
 
auth‹iz©i⁄
ánd 
IETF
 
NACM


3 #Sì 
RFC
 8321 
A
.2

4 #Buà
ª∂a˚d
 
õtf
-
√tc⁄f
-
m⁄ô‹ög
 
wôh
 *

6 
	gAPPNAME
=
exam∂e


7 #ö˛udê
îr
(Ë
™d
 
√w
(Ë
fun˘i⁄s
ánd 
¸óãs
 
$dú


8 . ./
lib
.
sh


10 
cfg
=
$dú
/
c⁄f_y™g
.
xml


11 
fy™g
=
$dú
/
ã°
.
y™g


12 
fy™gîr
=
$dú
/
îr
.
y™g


14 
ˇt
 <<
EOF
 > 
$cfg


15 <
c⁄fig
>

16 <
CLICON_CONFIGFILE
>
$cfg
</CLICON_CONFIGFILE>

17 <
CLICON_YANG_DIR
>/
u§
/
loˇl
/
sh¨e
/
$APPNAME
/
y™g
</CLICON_YANG_DIR>

18 <
CLICON_YANG_MODULE_MAIN
>
$fy™g
</CLICON_YANG_MODULE_MAIN>

19 <
CLICON_CLISPEC_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
˛i•ec
</CLICON_CLISPEC_DIR>

20 <
CLICON_RESTCONF_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
ª°c⁄f
</CLICON_RESTCONF_DIR>

21 <
CLICON_CLI_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
˛i
</CLICON_CLI_DIR>

22 <
CLICON_CLI_MODE
>
$APPNAME
</CLICON_CLI_MODE>

23 <
CLICON_SOCK
>/
u§
/
loˇl
/
v¨
/
$APPNAME
/$APPNAME.
sock
</CLICON_SOCK>

24 <
CLICON_BACKEND_PIDFILE
>/
u§
/
loˇl
/
v¨
/
$APPNAME
/$APPNAME.
pidfûe
</CLICON_BACKEND_PIDFILE>

25 <
CLICON_CLI_GENMODEL_COMPLETION
>1</CLICON_CLI_GENMODEL_COMPLETION>

26 <
CLICON_XMLDB_DIR
>/
u§
/
loˇl
/
v¨
/
$APPNAME
</CLICON_XMLDB_DIR>

27 <
CLICON_XMLDB_PLUGIN
>/
u§
/
loˇl
/
lib
/
xmldb
/
ãxt
.
so
</CLICON_XMLDB_PLUGIN>

28 <
CLICON_RESTCONF_PRETTY
>
Ál£
</CLICON_RESTCONF_PRETTY>

29 <
CLICON_NACM_MODE
>
öã∫Æ
</CLICON_NACM_MODE>

30 </
c⁄fig
>

31 
EOF


33 
ˇt
 <<
EOF
 > 
$fy™g


34 
moduÀ
 
$APPNAME
{

35 
¥efix
 
ex
;

36 
imp‹t
 
	gõtf
-
	g√tc⁄f
-
	gacm
 {

37 
¥efix
 
	g«cm
;

39 
Àaf
 
	gx
{

40 
ty≥
 
	göt32
;

41 
	gdes¸ùti⁄
 "somethingÅoÉdit";

44 
EOF


46 
	gRULES
=
$
(
ˇt
 <<
EOF


47 <
«cm
>

48 <
íabÀ
-
«cm
>
Ál£
</enable-nacm>

49 <
ªad
->
díy
</read->

50 <
wrôe
->
díy
</write->

51 <
exec
->
díy
</exec->

52 <
groups
>

53 <
group
>

54 <
«me
>
admö
</name>

55 <
u£r
-
«me
>
admö
</user-name>

56 <
u£r
-
«me
>
adm1
</user-name>

57 <
u£r
-
«me
>
ﬁof
</user-name>

58 </
group
>

59 <
group
>

60 <
«me
>
limôed
</name>

61 <
u£r
-
«me
>
wûma
</user-name>

62 <
u£r
-
«me
>
bam
-bam</user-name>

63 </
group
>

64 <
group
>

65 <
«me
>
gue°
</name>

66 <
u£r
-
«me
>
gue°
</user-name>

67 <
u£r
-
«me
>
gue°
@
exam∂e
.
com
</user-name>

68 </
group
>

69 </
groups
>

70 <
ruÀ
-
li°
>

71 <
«me
>
gue°
-
a˛
</name>

72 <
group
>
gue°
</group>

73 <
ruÀ
>

74 <
«me
>
díy
-
ncm
</name>

75 <
moduÀ
-
«me
>*</module-name>

76 <
ac˚ss
-
›î©i⁄s
>*</access-operations>

77 <
a˘i⁄
>
díy
</action>

78 <
commít
>

79 
Do
 
nŸ
 
Ælow
 
gue°s
 
™y
 
ac˚ss
 
to
ány 
öf‹m©i⁄
.

80 </
commít
>

81 </
ruÀ
>

82 </
ruÀ
-
li°
>

83 <
ruÀ
-
li°
>

84 <
«me
>
limôed
-
a˛
</name>

85 <
group
>
limôed
</group>

86 <
ruÀ
>

87 <
«me
>
≥rmô
-
gë
</name>

88 <
Ωc
-
«me
>
gë
</rpc-name>

89 <
moduÀ
-
«me
>*</module-name>

90 <
ac˚ss
-
›î©i⁄s
>
exec
</access-operations>

91 <
a˘i⁄
>
≥rmô
</action>

92 <
commít
>

93 
AŒow
 
gë


94 </
commít
>

95 </
ruÀ
>

96 <
ruÀ
>

97 <
«me
>
≥rmô
-
gë
-
c⁄fig
</name>

98 <
Ωc
-
«me
>
gë
-
c⁄fig
</rpc-name>

99 <
moduÀ
-
«me
>*</module-name>

100 <
ac˚ss
-
›î©i⁄s
>
exec
</access-operations>

101 <
a˘i⁄
>
≥rmô
</action>

102 <
commít
>

103 
AŒow
 
gë
-
c⁄fig


104 </
commít
>

105 </
ruÀ
>

106 </
ruÀ
-
li°
>

107 <
ruÀ
-
li°
>

108 <
«me
>
admö
-
a˛
</name>

109 <
group
>
admö
</group>

110 <
ruÀ
>

111 <
«me
>
≥rmô
-
Æl
</name>

112 <
moduÀ
-
«me
>*</module-name>

113 <
ac˚ss
-
›î©i⁄s
>*</access-operations>

114 <
a˘i⁄
>
≥rmô
</action>

115 <
commít
>

116 
AŒow
 
the
 'admö' 
group
 
com∂ëe
 
ac˚ss
 
to
 
Æl
 
›î©i⁄s
 
™d
 
d©a
.

117 </
commít
>

118 </
ruÀ
>

119 </
ruÀ
-
li°
>

120 </
«cm
>

121 <
x
>0</x>

122 
EOF


125 #kû»
ﬁd
 
backíd
 (
™y
)

126 
√w
 "kill old backend"

127 
sudo
 
˛ix⁄_backíd
 -
zf
 
$cfg
 -
y
 
$fy™g


128 [ 
$
? -
√
 0 ]; 
thí


129 
îr


130 
fi


132 
	g√w
 "start backend -s init -f $cfg -y $fyang"

133 #°¨à
√w
 
backíd


134 
sudo
 
	g˛ix⁄_backíd
 -
s
 
	göô
 -
f
 
	g$cfg
 -
y
 
$fy™g


135 [ 
$
? -
√
 0 ]; 
thí


136 
îr


137 
fi


139 
	g√w
 "kill oldÑestconf daemon"

140 
sudo
 
	gpkûl
 -
u
 
	gwww
-
d©a
 
˛ix⁄_ª°c⁄f


141 
	g¶ìp
 1

142 
	g√w
 "startÑestconf daemon (-a isÉnable basicáuthentication)"

143 
sudo
 
	g°¨t
-
	g°›
-
	gd´m⁄
 -
	gS
 -
	gq
 -
	go
 -
	gb
 -
	gx
 /
	gwww
-
	gd©a
/
	g˛ix⁄_ª°c⁄f
 -
	gd
 /www-d©®-
c
 www-d©®-- -
f
 
	g$cfg
 -
y
 
	g$fy™g
 -- -
a


145 
	g¶ìp
 1

147 
	g√w
 "restconf DELETE whole datastore"

148 
	gex≥˘eq
 "$(curl -uádm1:bar -sS -X DELETE http://localhost/restconf/data)" ""

150 
	g√w2
 "auth get"

151 
	gex≥˘eq
 "$(curl -uádm1:bar -sS -X GET http://localhost/restconf/data)" '{"data":Çull}

154 
	g√w
 "auth setáuthentication config"

155 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config>$RULES</config></edit-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

157 
	g√w
 "commit it"

158 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><commit/></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

160 
	g√w2
 "auth get (no user:áccess denied)"

161 
	gex≥˘eq
 "$(curl -sS -X GET -H \"Accept:\ápplication/yang-data+json\" http://localhost/restconf/data)" '{"ietf-restconf:errors" : {"error": {"error-tag": "access-denied","error-type": "protocol","error-severity": "error","error-message": "TheÑequested URL was unauthorized"}}}'

163 
	g√w2
 "auth get (wrongÖasswd:áccess denied)"

164 
	gex≥˘eq
 "$(curl -uádm1:foo -sS -X GET http://localhost/restconf/data)" '{"ietf-restconf:errors" : {"error": {"error-tag": "access-denied","error-type": "protocol","error-severity": "error","error-message": "TheÑequested URL was unauthorized"}}}'

166 
	g√w2
 "auth get (access)"

167 
	gex≥˘eq
 "$(curl -uádm1:bar -sS -X GET http://localhost/restconf/data/x)" '{"x": 0}

170 #----------------
E«bÀ
 
NACM


172 
	g√w
 "enableÇacm"

173 
	gex≥˘eq
 "$(cuæ -uádm1:b¨ -sS -X PUT -d '{"
	gíabÀ
-
	g«cm
":Årue}' http://localhost/restconf/data/nacm/enable-nacm)" ""

175 
	g√w2
 "admin getÇacm"

176 
	gex≥˘eq
 "$(curl -uádm1:bar -sS -X GET http://localhost/restconf/data/x)" '{"x": 0}

179 
	g√w2
 "limited getÇacm"

180 
	gex≥˘eq
 "$(curl -u wilma:bar -sS -X GET http://localhost/restconf/data/x)" '{"x": 0}

183 
	g√w2
 "guest getÇacm"

184 
	gex≥˘eq
 "$(curl -u guest:bar -sS -X GET http://localhost/restconf/data/x)" '{"ietf-restconf:errors" : {"error": {"error-tag": "access-denied","error-type": "protocol","error-severity": "error","error-message": "TheÑequested URL was unauthorized"}}}'

186 
	g√w
 "adminÉditÇacm"

187 
	gex≥˘eq
 "$(cuæ -uádm1:b¨ -sS -X PUT -d '{"
	gx
": 1}' http://localhost/restconf/data/x)" ""

189 
	g√w2
 "limitedÉditÇacm"

190 
	gex≥˘eq
 "$(cuæ -u wûma:b¨ -sS -X PUT -d '{"
	gx
": 2}' http://localhost/restconf/data/x)" '{"ietf-restconf:errors" : {"error": {"error-tag": "access-denied","error-type": "protocol","error-severity": "error","error-message": "default deny"}}}'

192 
	g√w2
 "guestÉditÇacm"

193 
	gex≥˘eq
 "$(cuæ -u gue°:b¨ -sS -X PUT -d '{"
	gx
": 3}' http://localhost/restconf/data/x)" '{"ietf-restconf:errors" : {"error": {"error-tag": "access-denied","error-type": "protocol","error-severity": "error","error-message": "TheÑequested URL was unauthorized"}}}'

195 
	g√w
 "KillÑestconf daemon"

196 
sudo
 
	gpkûl
 -
u
 
	gwww
-
d©a
 
˛ix⁄_ª°c⁄f


198 
	gpid
=`
pgªp
 
˛ix⁄_backíd
`

199 [ -
z
 "$pid" ]; 
thí


200 
	gîr
 "backendálready dead"

201 
	gfi


202 #kû»
backíd


203 
sudo
 
	g˛ix⁄_backíd
 -
zf
 
$cfg


204 [ 
$
? -
√
 0 ]; 
thí


205 
	gîr
 "kill backend"

206 
fi


208 
	grm
 -
rf
 
	g$dú


	@clixon-master/test/test_auth_ext.sh

1 #!/
bö
/
bash


2 #Authítiˇti⁄ 
™d
 
auth‹iz©i⁄
ánd 
IETF
 
NACM


3 #Exã∫Æ 
NACM
 
fûe


4 #Sì 
RFC
 8321 
A
.2

5 #Buà
ª∂a˚d
 
õtf
-
√tc⁄f
-
m⁄ô‹ög
 
wôh
 *

7 
	gAPPNAME
=
exam∂e


8 #ö˛udê
îr
(Ë
™d
 
√w
(Ë
fun˘i⁄s
ánd 
¸óãs
 
$dú


9 . ./
lib
.
sh


11 
cfg
=
$dú
/
c⁄f_y™g
.
xml


12 
fy™g
=
$dú
/
ã°
.
y™g


13 
fy™gîr
=
$dú
/
îr
.
y™g


14 
«cmfûe
=
$dú
/nacmfile

16 
ˇt
 <<
EOF
 > 
$cfg


17 <
c⁄fig
>

18 <
CLICON_CONFIGFILE
>
$cfg
</CLICON_CONFIGFILE>

19 <
CLICON_YANG_DIR
>/
u§
/
loˇl
/
sh¨e
/
$APPNAME
/
y™g
</CLICON_YANG_DIR>

20 <
CLICON_YANG_MODULE_MAIN
>
$fy™g
</CLICON_YANG_MODULE_MAIN>

21 <
CLICON_CLISPEC_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
˛i•ec
</CLICON_CLISPEC_DIR>

22 <
CLICON_RESTCONF_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
ª°c⁄f
</CLICON_RESTCONF_DIR>

23 <
CLICON_CLI_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
˛i
</CLICON_CLI_DIR>

24 <
CLICON_CLI_MODE
>
$APPNAME
</CLICON_CLI_MODE>

25 <
CLICON_SOCK
>/
u§
/
loˇl
/
v¨
/
$APPNAME
/$APPNAME.
sock
</CLICON_SOCK>

26 <
CLICON_BACKEND_PIDFILE
>/
u§
/
loˇl
/
v¨
/
$APPNAME
/$APPNAME.
pidfûe
</CLICON_BACKEND_PIDFILE>

27 <
CLICON_CLI_GENMODEL_COMPLETION
>1</CLICON_CLI_GENMODEL_COMPLETION>

28 <
CLICON_XMLDB_DIR
>/
u§
/
loˇl
/
v¨
/
$APPNAME
</CLICON_XMLDB_DIR>

29 <
CLICON_XMLDB_PLUGIN
>/
u§
/
loˇl
/
lib
/
xmldb
/
ãxt
.
so
</CLICON_XMLDB_PLUGIN>

30 <
CLICON_RESTCONF_PRETTY
>
Ál£
</CLICON_RESTCONF_PRETTY>

31 <
CLICON_NACM_MODE
>
exã∫Æ
</CLICON_NACM_MODE>

32 <
CLICON_NACM_FILE
>
$«cmfûe
</CLICON_NACM_FILE>

33 </
c⁄fig
>

34 
EOF


36 
ˇt
 <<
EOF
 > 
$fy™g


37 
moduÀ
 
$APPNAME
{

38 
¥efix
 
ex
;

39 
c⁄èöî
 
	gauthítiˇti⁄
 {

40 
	gdes¸ùti⁄
 "Example code forÉnabling www basicáuthánd someÉxample

41 
	gu£rs
";

42 
Àaf
 
	gbasic_auth
{

43 
	gdes¸ùti⁄
 "Basic user /Öasswordáuthenticationás in HTTP basicáuth";

44 
ty≥
 
	gboﬁón
;

45  
	gåue
;

47 
li°
 
	gauth
 {

48 
	gdes¸ùti⁄
 "user /ÖasswordÉntries. Valid if basic_auth=true";

49 
key
 
	gu£r
;

50 
Àaf
 
	gu£r
{

51 
	gdes¸ùti⁄
 "UserÇame";

52 
ty≥
 
	g°rög
;

54 
Àaf
 
	g∑ssw‹d
{

55 
	gdes¸ùti⁄
 "Password";

56 
ty≥
 
	g°rög
;

60 
Àaf
 
	gx
{

61 
ty≥
 
	göt32
;

62 
	gdes¸ùti⁄
 "somethingÅoÉdit";

65 
EOF


67 
	gˇt
 <<
	gEOF
 > 
	g$«cmfûe


68 <
	g«cm
>

69 <
	gíabÀ
-
	g«cm
>
	gåue
</enable-nacm>

70 <
	gªad
->
	gdíy
</read->

71 <
	gwrôe
->
	gdíy
</write->

72 <
	gexec
->
	gdíy
</exec->

73 <
	ggroups
>

74 <
	ggroup
>

75 <
	g«me
>
	gadmö
</name>

76 <
	gu£r
-
	g«me
>
	gadmö
</user-name>

77 <
	gu£r
-
	g«me
>
	gadm1
</user-name>

78 <
	gu£r
-
	g«me
>
	gﬁof
</user-name>

79 </
	ggroup
>

80 <
	ggroup
>

81 <
	g«me
>
	glimôed
</name>

82 <
	gu£r
-
	g«me
>
	gwûma
</user-name>

83 <
	gu£r
-
	g«me
>
	gbam
-bam</user-name>

84 </
	ggroup
>

85 <
	ggroup
>

86 <
	g«me
>
	ggue°
</name>

87 <
	gu£r
-
	g«me
>
	ggue°
</user-name>

88 <
	gu£r
-
	g«me
>
	ggue°
@
	gexam∂e
.
	gcom
</user-name>

89 </
	ggroup
>

90 </
	ggroups
>

91 <
	gruÀ
-
	gli°
>

92 <
	g«me
>
	ggue°
-
	ga˛
</name>

93 <
	ggroup
>
	ggue°
</group>

94 <
	gruÀ
>

95 <
	g«me
>
	gdíy
-
	gncm
</name>

96 <
	gmoduÀ
-
	g«me
>*</module-name>

97 <
	gac˚ss
-
	g›î©i⁄s
>*</access-operations>

98 <
	ga˘i⁄
>
	gdíy
</action>

99 <
	gcommít
>

100 
Do
 
nŸ
 
Ælow
 
gue°s
 
™y
 
ac˚ss
 
to
ány 
	göf‹m©i⁄
.

101 </
	gcommít
>

102 </
	gruÀ
>

103 </
	gruÀ
-
	gli°
>

104 <
	gruÀ
-
	gli°
>

105 <
	g«me
>
	glimôed
-
	ga˛
</name>

106 <
	ggroup
>
	glimôed
</group>

107 <
	gruÀ
>

108 <
	g«me
>
	g≥rmô
-
	ggë
</name>

109 <
	gΩc
-
	g«me
>
	ggë
</rpc-name>

110 <
	gmoduÀ
-
	g«me
>*</module-name>

111 <
	gac˚ss
-
	g›î©i⁄s
>
	gexec
</access-operations>

112 <
	ga˘i⁄
>
	g≥rmô
</action>

113 <
	gcommít
>

114 
AŒow
 
	ggë


115 </
	gcommít
>

116 </
	gruÀ
>

117 <
	gruÀ
>

118 <
	g«me
>
	g≥rmô
-
	ggë
-
	gc⁄fig
</name>

119 <
	gΩc
-
	g«me
>
	ggë
-
	gc⁄fig
</rpc-name>

120 <
	gmoduÀ
-
	g«me
>*</module-name>

121 <
	gac˚ss
-
	g›î©i⁄s
>
	gexec
</access-operations>

122 <
	ga˘i⁄
>
	g≥rmô
</action>

123 <
	gcommít
>

124 
AŒow
 
	ggë
-
	gc⁄fig


125 </
	gcommít
>

126 </
	gruÀ
>

127 </
	gruÀ
-
	gli°
>

128 <
	gruÀ
-
	gli°
>

129 <
	g«me
>
	gadmö
-
	ga˛
</name>

130 <
	ggroup
>
	gadmö
</group>

131 <
	gruÀ
>

132 <
	g«me
>
	g≥rmô
-
	gÆl
</name>

133 <
	gmoduÀ
-
	g«me
>*</module-name>

134 <
	gac˚ss
-
	g›î©i⁄s
>*</access-operations>

135 <
	ga˘i⁄
>
	g≥rmô
</action>

136 <
	gcommít
>

137 
AŒow
 
	gthe
 'admö' 
group
 
com∂ëe
 
ac˚ss
 
to
 
Æl
 
›î©i⁄s
 
™d
 
	gd©a
.

138 </
	gcommít
>

139 </
	gruÀ
>

140 </
	gruÀ
-
	gli°
>

141 </
	g«cm
>

142 
	gEOF


144 #kû»
ﬁd
 
backíd
 (
™y
)

145 
	g√w
 "kill old backend -zf $cfg -y $fyang"

146 
sudo
 
	g˛ix⁄_backíd
 -
zf
 
	g$cfg
 -
y
 
$fy™g


147 [ 
$
? -
√
 0 ]; 
thí


148 
îr


149 
fi


151 
	g√w
 "start backend -s init -f $cfg -y $fyang"

152 #°¨à
√w
 
backíd


153 
sudo
 
	g˛ix⁄_backíd
 -
s
 
	göô
 -
f
 
	g$cfg
 -
y
 
$fy™g


154 [ 
$
? -
√
 0 ]; 
thí


155 
îr


156 
fi


158 
	g√w
 "kill oldÑestconf daemon"

159 
sudo
 
	gpkûl
 -
u
 
	gwww
-
d©a
 
˛ix⁄_ª°c⁄f


160 
	g¶ìp
 1

161 
	g√w
 "startÑestconf daemon (-a isÉnable http basicáuth)"

162 
sudo
 
	g°¨t
-
	g°›
-
	gd´m⁄
 -
	gS
 -
	gq
 -
	go
 -
	gb
 -
	gx
 /
	gwww
-
	gd©a
/
	g˛ix⁄_ª°c⁄f
 -
	gd
 /www-d©®-
c
 www-d©®-- -
f
 
	g$cfg
 -
y
 
	g$fy™g
 -- -
a


164 
	g¶ìp
 1

166 
	g√w
 "restconf DELETE whole datastore"

167 
	gex≥˘eq
 "$(curl -uádm1:bar -sS -X DELETE http://localhost/restconf/data)" ""

169 
	g√w2
 "auth get"

170 
	gex≥˘eq
 "$(curl -uádm1:bar -sS -X GET http://localhost/restconf/data)" '{"data":Çull}

173 
	g√w
 "Set xÅo 0"

174 
	gex≥˘eq
 "$(cuæ -uádm1:b¨ -sS -X PUT -d '{"
	gx
": 0}' http://localhost/restconf/data/x)" ""

176 
	g√w2
 "auth get (no user:áccess denied)"

177 
	gex≥˘eq
 "$(curl -sS -X GET -H \"Accept:\ápplication/yang-data+json\" http://localhost/restconf/data)" '{"ietf-restconf:errors" : {"error": {"error-tag": "access-denied","error-type": "protocol","error-severity": "error","error-message": "TheÑequested URL was unauthorized"}}}'

179 
	g√w2
 "auth get (wrongÖasswd:áccess denied)"

180 
	gex≥˘eq
 "$(curl -uádm1:foo -sS -X GET http://localhost/restconf/data)" '{"ietf-restconf:errors" : {"error": {"error-tag": "access-denied","error-type": "protocol","error-severity": "error","error-message": "TheÑequested URL was unauthorized"}}}'

182 
	g√w2
 "auth get (access)"

183 
	gex≥˘eq
 "$(curl -uádm1:bar -sS -X GET http://localhost/restconf/data/x)" '{"x": 0}

186 
	g√w2
 "admin getÇacm"

187 
	gex≥˘eq
 "$(curl -uádm1:bar -sS -X GET http://localhost/restconf/data/x)" '{"x": 0}

190 
	g√w2
 "limited getÇacm"

191 
	gex≥˘eq
 "$(curl -u wilma:bar -sS -X GET http://localhost/restconf/data/x)" '{"x": 0}

194 
	g√w2
 "guest getÇacm"

195 
	gex≥˘eq
 "$(curl -u guest:bar -sS -X GET http://localhost/restconf/data/x)" '{"ietf-restconf:errors" : {"error": {"error-tag": "access-denied","error-type": "protocol","error-severity": "error","error-message": "TheÑequested URL was unauthorized"}}}'

197 
	g√w
 "adminÉditÇacm"

198 
	gex≥˘eq
 "$(cuæ -uádm1:b¨ -sS -X PUT -d '{"
	gx
": 1}' http://localhost/restconf/data/x)" ""

200 
	g√w2
 "limitedÉditÇacm"

201 
	gex≥˘eq
 "$(cuæ -u wûma:b¨ -sS -X PUT -d '{"
	gx
": 2}' http://localhost/restconf/data/x)" '{"ietf-restconf:errors" : {"error": {"error-tag": "access-denied","error-type": "protocol","error-severity": "error","error-message": "default deny"}}}'

203 
	g√w2
 "guestÉditÇacm"

204 
	gex≥˘eq
 "$(cuæ -u gue°:b¨ -sS -X PUT -d '{"
	gx
": 3}' http://localhost/restconf/data/x)" '{"ietf-restconf:errors" : {"error": {"error-tag": "access-denied","error-type": "protocol","error-severity": "error","error-message": "TheÑequested URL was unauthorized"}}}'

206 
	g√w
 "KillÑestconf daemon"

207 
sudo
 
	gpkûl
 -
u
 
	gwww
-
d©a
 
˛ix⁄_ª°c⁄f


209 
	gpid
=`
pgªp
 
˛ix⁄_backíd
`

210 [ -
z
 "$pid" ]; 
thí


211 
	gîr
 "backendálready dead"

212 
	gfi


213 #kû»
backíd


214 
sudo
 
	g˛ix⁄_backíd
 -
zf
 
$cfg


215 [ 
$
? -
√
 0 ]; 
thí


216 
	gîr
 "kill backend"

217 
fi


219 
	grm
 -
rf
 
	g$dú


	@clixon-master/test/test_cli.sh

1 #!/
bö
/
bash


3 #Te°1: 
backíd
 
™d
 
˛i
 
basic
 
fun˘i⁄Æôy


4 #Sèπ 
backíd
 
£rvî


5 #Add 
™
 
ëhî√t
 
öãrÁ˚
 
™d
á¿
addªss


6 #Show 
c⁄figuøti⁄


7 #VÆid©ê
wôhout
 
a
 
m™d©‹y
 
ty≥


8 #Së 
the
 
m™d©‹y
 
ty≥


11 
	gAPPNAME
=
exam∂e


12 #ö˛udê
îr
(Ë
™d
 
√w
(Ë
fun˘i⁄s
ánd 
¸óãs
 
$dú


13 . ./
lib
.
sh


14 
cfg
=
$dú
/
c⁄f_y™g
.
xml


16 
ˇt
 <<
EOF
 > 
$cfg


17 <
c⁄fig
>

18 <
CLICON_CONFIGFILE
>
$cfg
</CLICON_CONFIGFILE>

19 <
CLICON_YANG_DIR
>/
u§
/
loˇl
/
sh¨e
/
$APPNAME
/
y™g
</CLICON_YANG_DIR>

20 <
CLICON_YANG_MODULE_MAIN
>
$APPNAME
</CLICON_YANG_MODULE_MAIN>

21 <
CLICON_CLISPEC_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
˛i•ec
</CLICON_CLISPEC_DIR>

22 <
CLICON_CLI_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
˛i
</CLICON_CLI_DIR>

23 <
CLICON_CLI_MODE
>
$APPNAME
</CLICON_CLI_MODE>

24 <
CLICON_SOCK
>/
u§
/
loˇl
/
v¨
/
$APPNAME
/$APPNAME.
sock
</CLICON_SOCK>

25 <
CLICON_BACKEND_PIDFILE
>/
u§
/
loˇl
/
v¨
/
$APPNAME
/$APPNAME.
pidfûe
</CLICON_BACKEND_PIDFILE>

26 <
CLICON_CLI_GENMODEL_COMPLETION
>1</CLICON_CLI_GENMODEL_COMPLETION>

27 <
CLICON_XMLDB_DIR
>/
u§
/
loˇl
/
v¨
/
$APPNAME
</CLICON_XMLDB_DIR>

28 <
CLICON_XMLDB_PLUGIN
>/
u§
/
loˇl
/
lib
/
xmldb
/
ãxt
.
so
</CLICON_XMLDB_PLUGIN>

29 </
c⁄fig
>

30 
EOF


32 #kû»
ﬁd
 
backíd
 (
™y
)

33 
√w
 "kill old backend"

34 
sudo
 
˛ix⁄_backíd
 -
z
 -
f
 
$cfg


35 [ 
$
? -
√
 0 ]; 
thí


36 
îr


37 
fi


38 
	g√w
 "start backend -s init -f $cfg"

39 
sudo
 
	g$˛ix⁄_backíd
 -
s
 
	göô
 -
f
 
$cfg


40 [ 
$
? -
√
 0 ]; 
thí


41 
îr


42 
fi


43 
	g√w
 "cliÅests"

45 
	g√w
 "cli configureÅop"

46 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg set interfaces" "^$"

48 
	g√w
 "cli show configurationÅop (noÖresence)"

49 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg show conf cli" "^$"

51 
	g√w
 "cli configure deleteÅop"

52 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg delete interfaces" "^$"

54 
	g√w
 "cli show configuration deleteÅop"

55 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg show conf cli" "^$"

57 
	g√w
 "cli configure"

58 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg set interfaces interfaceÉth/0/0" "^$"

60 
	g√w
 "cli show configuration"

61 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg show conf cli" "^interfaces interfaceÉth/0/0ÉnabledÅrue"

63 
	g√w
 "cli configure usingÉncoded chars data <&"

64 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg set interfaces interfaceÉth/0/0 description \"foo<&bar\"" ""

65 
	g√w
 "cli configure usingÉncoded charsÇame <&"

66 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg set interfaces interface fddi&<ÅypeÉth" ""

68 
	g√w
 "cli failed validate"

69 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg -l o validate" "Missing mandatory variable"

71 
	g√w
 "cli configure more"

72 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg set interfaces interfaceÉth/0/0 ipv4áddress 1.2.3.4Örefix-length 24" "^$"

73 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg set interfaces interfaceÉth/0/0 description mydesc" "^$"

74 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg set interfaces interfaceÉth/0/0Åype bgp" "^$"

76 
	g√w
 "cli show xpath description"

77 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg -l o show xpath /interfaces/interface/description" "<description>mydesc</description>"

79 
	g√w
 "cli delete description"

80 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg -l o delete interfaces interfaceÉth/0/0 description mydesc"

82 
	g√w
 "cli show xpathÇo description"

83 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg -l o show xpath /interfaces/interface/description" "^$"

85 
	g√w
 "cli copy interface"

86 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg copy interfaceÉth/0/0ÅoÉth99" "^$"

88 
	g√w
 "cli success validate"

89 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg -l o validate" "^$"

91 
	g√w
 "cli commit"

92 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg -l o commit" "^$"

94 
	g√w
 "cli save"

95 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg -l o save /tmp/foo" "^$"

97 
	g√w
 "cli deleteáll"

98 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg -l o deleteáll" "^$"

100 
	g√w
 "cliÜoad"

101 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg -l oÜoad /tmp/foo" "^$"

103 
	g√w
 "cli checkÜoad"

104 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg -l o show conf cli" "^interfaces interfaceÇameÉth/0/0Åype bgp

105 
öãrÁ˚s
 
öãrÁ˚
 
	gëh
/0/0 
ùv4
 
íabÀd
 
	gåue
"

107 
	g√w
 "cli debug"

108 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg -l o debugÜevel 1" "^$"

109 #How 
to
 
ã°
 
this
?

110 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg -l o debugÜevel 0" "^$"

112 
	g√w
 "cliÑpc"

113 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg -l oÑpc ipv4" "^<rpc-reply>"

115 
	g√w
 "Kill backend"

116 #Check 
°ûl
 
Æive


117 
	gpid
=`
pgªp
 
˛ix⁄_backíd
`

118 [ -
z
 "$pid" ]; 
thí


119 
	gîr
 "backendálready dead"

120 
	gfi


121 #kû»
backíd


122 
sudo
 
	g˛ix⁄_backíd
 -
	gz
 -
f
 
$cfg


123 [ 
$
? -
√
 0 ]; 
thí


124 
	gîr
 "kill backend"

125 
fi


127 
	grm
 -
rf
 
	g$dú


	@clixon-master/test/test_datastore.sh

1 #!/
bö
/
bash


2 #Te°5: 
d©a°‹e
 
ã°s
.

3 #Ju° 
run
 
a
 
bö¨y
 
dúe˘
 
to
 
d©a°‹e
. 
No
 
˛ix⁄
.

5 #ö˛udê
îr
(Ë
™d
 
√w
(Ë
fun˘i⁄s
ánd 
¸óãs
 
$dú


6 . ./
	glib
.
sh


7 
	gfy™g
=
$dú
/
õtf
-
ù
.
y™g


9 
d©a°‹e
=
d©a°‹e_˛õ¡


11 
ˇt
 <<
EOF
 > 
$fy™g


12 
moduÀ
 
õtf
-
ù
{

13 
c⁄èöî
 
x
 {

14 
li°
 
y
 {

15 
key
 "a b";

16 
Àaf
 
	ga
 {

17 
ty≥
 
	g°rög
;

19 
Àaf
 
	gb
 {

20 
ty≥
 
	g°rög
;

22 
Àaf
 
	gc
 {

23 
ty≥
 
	g°rög
;

26 
Àaf
 
	gd
 {

27 
ty≥
 
	gem±y
;

29 
c⁄èöî
 
	gf
 {

30 
	gÀaf
-
li°
 
	ge
 {

31 
ty≥
 
	g°rög
;

34 
Àaf
 
	gg
 {

35 
ty≥
 
	g°rög
;

37 
c⁄èöî
 
	gh
 {

38 
Àaf
 
	gj
 {

39 
ty≥
 
	g°rög
;

44 
EOF


46 
	gdb
='<config><x><y><a>1</a><b>2</b><c>first-entry</c></y><y><a>1</a><b>3</b><c>second-entry</c></y><y><a>2</a><b>3</b><c>third-entry</c></y><d/><f><e>a</e><e>b</e><e>c</e></f><g>astring</g></x></config>'

48 
	$run
(){

49 
«me
=
$1


50 
mydú
=
$dú
/
$«me


52 [ ! -
d
 
$mydú
 ]; 
thí


53 
mkdú
 
$mydú


54 
fi


55 
rm
 -
rf
 
$mydú


	@clixon-master/test/test_install.sh

1 #!/
bö
/
bash


2 #In°Æ»
ã°


4 #ö˛udê
îr
(Ë
™d
 
√w
(Ë
fun˘i⁄s
ánd 
¸óãs
 
$dú


5 . ./
	glib
.
sh


7 
	g√w
 "Set up installdir $dir"

9 
	g√w
 "Make DESTDIR install"

10 (
	gcd
 ..; 
make
 
	gDESTDIR
=
$dú
 
ö°Æl
)

11 [ 
$
? -
√
 0 ]; 
thí


12 
îr


13 
fi


15 
	g√w
 "Check installed files"

16 [ ! -
d
 
$dú
/
u§
 ]; 
thí


17 
îr
 
	g$dú
/
u§


18 
fi


19 [ ! -
d
 
$dú
/
www
-
d©a
 ]; 
thí


20 
îr
 
	g$dú
/
	gwww
-
d©a


21 
fi


22 [ ! -
f
 
$dú
/
u§
/
loˇl
/
sh¨e
/
˛ix⁄
/˛ix⁄.
mk
 ]; 
thí


23 
îr
 
	g$dú
/
	gu§
/
	gloˇl
/
	gsh¨e
/
	g˛ix⁄
/˛ix⁄.
mk


24 
fi


25 [ ! -
f
 
$dú
/
u§
/
loˇl
/
sh¨e
/
˛ix⁄
/˛ix⁄-
c⁄fig
* ]; 
thí


26 
îr
 
	g$dú
/
	gu§
/
	gloˇl
/
	gsh¨e
/
	g˛ix⁄
/˛ix⁄-
c⁄fig
*

27 
fi


28 [ ! -
h
 
$dú
/
u§
/
loˇl
/
lib
/
lib˛ix⁄
.
so
 ]; 
thí


29 
îr
 
	g$dú
/
	gu§
/
	gloˇl
/
	glib
/
	glib˛ix⁄
.
so


30 
fi


31 [ ! -
h
 
$dú
/
u§
/
loˇl
/
lib
/
lib˛ix⁄_backíd
.
so
 ]; 
thí


32 
îr
 
	g$dú
/
	gu§
/
	gloˇl
/
	glib
/
	glib˛ix⁄_backíd
.
so


33 
fi


35 
	g√w
 "Make DESTDIR install include"

36 (
	gcd
 ..; 
make
 
	gDESTDIR
=
$dú
 
ö°Æl
-
ö˛ude
)

37 [ 
$
? -
√
 0 ]; 
thí


38 
îr


39 
fi


40 
	g√w
 "Check installed includes"

41 [ ! -
f
 
$dú
/
u§
/
loˇl
/
ö˛ude
/
˛ix⁄
/˛ix⁄.
h
 ]; 
thí


42 
îr
 
	g$dú
/
	gu§
/
	gloˇl
/
	gö˛ude
/
	g˛ix⁄
/˛ix⁄.
h


43 
fi


44 
	g√w
 "Make DESTDIR uninstall"

45 (
	gcd
 ..; 
make
 
	gDESTDIR
=
$dú
 
unö°Æl
)

46 [ 
$
? -
√
 0 ]; 
thí


47 
îr


48 
fi


50 
	g√w
 "CheckÑemaining files"

51 
	gf
=
$
(
föd
 
$dú
 -
ty≥
 
f
)

52 [ -
n
 "$f" ]; 
thí


53 
	gîr
 "$f"

54 
fi


56 
	g√w
 "CheckÑemaining symlinks"

57 
	gl
=
$
(
föd
 
$dú
 -
ty≥
 
l
)

58 [ -
n
 "$l" ]; 
thí


59 
	gîr
 "$l"

60 
	gfi


	@clixon-master/test/test_leafref.sh

1 #!/
bö
/
bash


2 #Te°7: 
Y™g
 
•ecifics
: 
Àa‰ef


3 
	gAPPNAME
=
exam∂e


4 #ö˛udê
îr
(Ë
™d
 
√w
(Ë
fun˘i⁄s
ánd 
¸óãs
 
$dú


5 . ./
lib
.
sh


6 
cfg
=
$dú
/
c⁄f_y™g
.
xml


7 
fy™g
=
$dú
/
Àa‰ef
.
y™g


9 
ˇt
 <<
EOF
 > 
$cfg


10 <
c⁄fig
>

11 <
CLICON_CONFIGFILE
>
$cfg
</CLICON_CONFIGFILE>

12 <
CLICON_YANG_DIR
>/
u§
/
loˇl
/
sh¨e
/
$APPNAME
/
y™g
</CLICON_YANG_DIR>

13 <
CLICON_YANG_MODULE_MAIN
>
exam∂e
</CLICON_YANG_MODULE_MAIN>

14 <
CLICON_CLISPEC_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
˛i•ec
</CLICON_CLISPEC_DIR>

15 <
CLICON_CLI_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
˛i
</CLICON_CLI_DIR>

16 <
CLICON_CLI_MODE
>
$APPNAME
</CLICON_CLI_MODE>

17 <
CLICON_SOCK
>/
u§
/
loˇl
/
v¨
/
$APPNAME
/$APPNAME.
sock
</CLICON_SOCK>

18 <
CLICON_BACKEND_PIDFILE
>/
u§
/
loˇl
/
v¨
/
$APPNAME
/$APPNAME.
pidfûe
</CLICON_BACKEND_PIDFILE>

19 <
CLICON_CLI_GENMODEL_COMPLETION
>1</CLICON_CLI_GENMODEL_COMPLETION>

20 <
CLICON_XMLDB_DIR
>/
u§
/
loˇl
/
v¨
/
$APPNAME
</CLICON_XMLDB_DIR>

21 <
CLICON_XMLDB_PLUGIN
>/
u§
/
loˇl
/
lib
/
xmldb
/
ãxt
.
so
</CLICON_XMLDB_PLUGIN>

22 </
c⁄fig
>

23 
EOF


25 
ˇt
 <<
EOF
 > 
$fy™g


26 
moduÀ
 
exam∂e
{

27 
imp‹t
 
õtf
-
ù
 {

28 
¥efix
 
ù
;

30 
c⁄èöî
 -
	gaddªss
 {

31 
Àaf
 
	gab¢ame
 {

32 
ty≥
 
	gÀa‰ef
 {

33 
	g∑th
 "/ip:interfaces/ip:interface/ip:name";

36 
Àaf
 
	gª ame
 {

37 
ty≥
 
	gÀa‰ef
 {

38 
	g∑th
 "../../interfaces/interface/name";

41 
Àaf
 
	gaddªss
 {

42 
ty≥
 
	gÀa‰ef
 {

43 
	g∑th
 "../../interfaces/interface[name = current()/../relname]"

48 
li°
 
	g£ndî
{

49 
key
 
	g«me
;

50 
Àaf
 
	g«me
{

51 
ty≥
 
	g°rög
;

53 
Àaf
 
	gãm∂©e
{

54 
ty≥
 
	gÀa‰ef
{

55 
	g∑th
 "/sender/name";

60 
	gEOF


62 #kû»
ﬁd
 
backíd
 (
™y
)

63 
	g√w
 "kill old backend"

64 
sudo
 
	g˛ix⁄_backíd
 -
zf
 
	g$cfg
 -
y
 
$fy™g


65 [ 
$
? -
√
 0 ]; 
thí


66 
îr


67 
fi


69 
	g√w
 "start backend -s init -f $cfg -y $fyang"

70 #°¨à
√w
 
backíd


71 
sudo
 
	g˛ix⁄_backíd
 -
s
 
	göô
 -
f
 
	g$cfg
 -
y
 
$fy™g


72 [ 
$
? -
√
 0 ]; 
thí


73 
îr


74 
fi


76 
	g√w
 "leafref base config"

77 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><interfaces>

78 <
	göãrÁ˚
><
	g«me
>
	gëh0
</«me> <
	gty≥
>
	gëh
</ty≥> <
	gùv4
><
	gaddªss
><
	gù
>192.0.2.1</ip></address><address><ip>192.0.2.2</ip></address></ipv4></interface>

79 <
	göãrÁ˚
><
	g«me
>
	glo
</«me><
	gty≥
>lo</ty≥><
	gùv4
><
	gaddªss
><
	gù
>127.0.0.1</ip></address></ipv4></interface>

80 </
	göãrÁ˚s
></
	gc⁄fig
></
	gedô
-c⁄fig></
	gΩc
>]]>]]>" "^<Ωc-
	gª∂y
><
	gok
/></Ωc-ª∂y>]]>]]>
	g$
"

82 
	g√w
 "leafref get config"

83 
	gex≥˘eof
 "$clixon_netconf -qf $cfg" '<rpc><get-config><source><candidate/></source></get-config></rpc>]]>]]>' '^<rpc-reply><data><interfaces><interface><name>eth0</name>'

85 
	g√w
 "leafref base commit"

86 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><commit/></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

88 
	g√w
 "leafrefádd wrongÑef"

89 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><default-address><absname>eth3</absname><address>10.0.4.6</address></default-address></config></edit-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

91 
	g√w
 "leafref validate XXX shouldntÑeally be operation-failed, more work in validate code"

92 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><validate><source><candidate/></source></validate></rpc>]]>]]>" "^<rpc-reply><rpc-error><error-tag>operation-failed</error-tag>"

94 
	g√w
 "leafref discard-changes"

95 
	gex≥˘eof
 "$clixon_netconf -qf $cfg" "<rpc><discard-changes/></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

97 
	g√w
 "leafrefádd correctábsref"

98 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><default-address><absname>eth0</absname></default-address></config></edit-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

100 
	g√w
 "leafrefádd correctÑelref"

101 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><default-address><relname>eth0</relname></default-address></config></edit-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

103 #XXX 
add
 
addªss


105 
	g√w
 "leafref validate (ok)"

106 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><validate><source><candidate/></source></validate></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>"

108 
	g√w
 "leafref deleteÜeaf"

109 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><interfaces><interface operation=\"delete\"><name>eth0</name></interface></interfaces></config></edit-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>"

111 
	g√w
 "leafref validate (should fail)"

112 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><validate><source><candidate/></source></validate></rpc>]]>]]>" "^<rpc-reply><rpc-error><error-tag>operation-failed</error-tag>"

114 
	g√w
 "leafref discard-changes"

115 
	gex≥˘eof
 "$clixon_netconf -qf $cfg" "<rpc><discard-changes/></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

117 
	g√w
 "cliÜeafrefÜo"

118 
	gex≥˘‚
 "$clixon_cli -1f $cfg -y $fyang -l o set default-addressábsnameÜo" "^$"

120 
	g√w
 "cliÜeafref validate"

121 
	gex≥˘‚
 "$clixon_cli -1f $cfg -y $fyang -l o validate" "^$"

123 
	g√w
 "cli sender"

124 
	gex≥˘‚
 "$clixon_cli -1f $cfg -y $fyang -l o set senderá" "^$"

126 
	g√w
 "cli senderÅemplate"

127 
	gex≥˘‚
 "$clixon_cli -1f $cfg -y $fyang -l o set sender bÅemplateá" "^$"

129 
	g√w
 "Kill backend"

130 #Check 
°ûl
 
Æive


131 
	gpid
=`
pgªp
 
˛ix⁄_backíd
`

132 [ -
z
 "$pid" ]; 
thí


133 
	gîr
 "backendálready dead"

134 
	gfi


135 #kû»
backíd


136 
sudo
 
	g˛ix⁄_backíd
 -
zf
 
$cfg


137 [ 
$
? -
√
 0 ]; 
thí


138 
	gîr
 "kill backend"

139 
fi


141 
	grm
 -
rf
 
	g$dú


	@clixon-master/test/test_netconf.sh

1 #!/
bö
/
bash


2 #Te°2: 
backíd
 
™d
 
√tc⁄f
 
basic
 
fun˘i⁄Æôy


3 
	gAPPNAME
=
exam∂e


4 #ö˛udê
îr
(Ë
™d
 
√w
(Ë
fun˘i⁄s
ánd 
¸óãs
 
$dú


5 . ./
lib
.
sh


7 
cfg
=
$dú
/
c⁄f_y™g
.
xml


8 
fy™g
=
$dú
/
√tc⁄f
.
y™g


10 
ˇt
 <<
EOF
 > 
$cfg


11 <
c⁄fig
>

12 <
CLICON_CONFIGFILE
>
$cfg
</CLICON_CONFIGFILE>

13 <
CLICON_YANG_DIR
>/
u§
/
loˇl
/
sh¨e
/
$APPNAME
/
y™g
</CLICON_YANG_DIR>

14 <
CLICON_YANG_MODULE_MAIN
>
$fy™g
</CLICON_YANG_MODULE_MAIN>

15 <
CLICON_CLISPEC_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
˛i•ec
</CLICON_CLISPEC_DIR>

16 <
CLICON_BACKEND_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
backíd
</CLICON_BACKEND_DIR>

17 <
CLICON_BACKEND_REGEXP
>
exam∂e_backíd
.
so$
</CLICON_BACKEND_REGEXP>

18 <
CLICON_NETCONF_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
√tc⁄f
</CLICON_NETCONF_DIR>

19 <
CLICON_RESTCONF_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
ª°c⁄f
</CLICON_RESTCONF_DIR>

20 <
CLICON_CLI_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
˛i
</CLICON_CLI_DIR>

21 <
CLICON_CLI_MODE
>
$APPNAME
</CLICON_CLI_MODE>

22 <
CLICON_SOCK
>/
u§
/
loˇl
/
v¨
/
$APPNAME
/$APPNAME.
sock
</CLICON_SOCK>

23 <
CLICON_BACKEND_PIDFILE
>/
u§
/
loˇl
/
v¨
/
$APPNAME
/$APPNAME.
pidfûe
</CLICON_BACKEND_PIDFILE>

24 <
CLICON_CLI_GENMODEL_COMPLETION
>1</CLICON_CLI_GENMODEL_COMPLETION>

25 <
CLICON_XMLDB_DIR
>/
u§
/
loˇl
/
v¨
/
$APPNAME
</CLICON_XMLDB_DIR>

26 <
CLICON_XMLDB_PLUGIN
>/
u§
/
loˇl
/
lib
/
xmldb
/
ãxt
.
so
</CLICON_XMLDB_PLUGIN>

27 </
c⁄fig
>

28 
EOF


30 
ˇt
 <<
EOF
 > 
$fy™g


31 
moduÀ
 
exam∂e
{

32 
¥efix
 
ex
;

33 
imp‹t
 
	gõtf
-
	gù
 {

34 
¥efix
 
	gù
;

36 
imp‹t
 
	gõtf
-
	groutög
 {

37 
¥efix
 
	gπ
;

39 
imp‹t
 
	gõtf
-
	göë
-
	gty≥s
 {

40 
	g¥efix
 "inet";

41 
	gªvisi⁄
-
	gd©e
 "2013-07-15";

43 
Ωc
 
	gem±y
 {

45 
Ωc
 
	g˛õ¡
-
	gΩc
 {

46 
	gdes¸ùti⁄
 "ExampleÜocal client-side RPCÅhat isÖrocessed byÅhe

47 
the
 
	g√tc⁄f
/
ª°c⁄f
 
™d
 
nŸ
 
£¡
 
to
Åhê
	gbackíd
.

48 
This
 
is
 
a
 
˛ix⁄
 
im∂emíèti⁄
 
	gdëaû
: 
some
 
Ωc
:
s


49 
¨e
 
bëãr
 
¥o˚s£d
 
by
 
the
 
˛õ¡
 
API
 
‹
 
≥rf
 
ªas⁄s
";

50 
öput
 {

51 
Àaf
 
ªque°
 {

52 
ty≥
 
°rög
;

55 
	gouçut
 {

56 
Àaf
 
	gªsu…
{

57 
ty≥
 
	g°rög
;

62 
	gEOF


64 #kû»
ﬁd
 
backíd
 (
™y
)

65 
	g√w
 "kill old backend"

66 
sudo
 
	g˛ix⁄_backíd
 -
zf
 
$cfg


67 [ 
$
? -
√
 0 ]; 
thí


68 
îr


69 
fi


70 
	g√w
 "start backend -s init -f $cfg -y $fyang"

71 #°¨à
√w
 
backíd


72 
sudo
 
	g˛ix⁄_backíd
 -
s
 
	göô
 -
f
 
	g$cfg
 -
y
 
	g$fy™g
 #-
	gD
 1

73 [ 
$
? -
√
 0 ]; 
thí


74 
îr


75 
fi


77 
	g√w
 "netconf get-config"

78 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" '<rpc message-id="101"><get-config><source><candidate/></source></get-config></rpc>]]>]]>' '^<rpc-reply message-id="101"><data/></rpc-reply>]]>]]>$'

80 
	g√w
 "Add subtreeÉth/0/0 usingÇone which shouldÇot changeánything"

81 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><default-operation>none</default-operation><target><candidate/></target><config><interfaces><interface><name>eth/0/0</name></interface></interfaces></config></edit-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

83 
	g√w
 "CheckÇothingádded"

84 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" '<rpc message-id="101"><get-config><source><candidate/></source></get-config></rpc>]]>]]>' '^<rpc-reply message-id="101"><data/></rpc-reply>]]>]]>$'

86 
	g√w
 "Add subtreeÉth/0/0 usingÇoneánd create which shouldáddÉth/0/0"

87 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" '<rpc><edit-config><target><candidate/></target><config><interfaces><interface operation="create"><name>eth/0/0</name><type>eth</type></interface></interfaces></config><default-operation>none</default-operation> </edit-config></rpc>]]>]]>' "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

89 
	g√w
 "CheckÉth/0/0ádded using xpath"

90 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" '<rpc><get-config><source><candidate/></source><filterÅype="xpath" select="/interfaces/interface[name=eth/0/0]"/></get-config></rpc>]]>]]>' "^<rpc-reply><data><interfaces><interface><name>eth/0/0</name><type>eth</type><enabled>true</enabled></interface></interfaces></data></rpc-reply>]]>]]>$"

92 
	g√w
 "Re-create sameÉth/0/0 which should generateÉrror"

93 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" '<rpc><edit-config><target><candidate/></target><config><interfaces><interface operation="create"><name>eth/0/0</name><type>eth</type></interface></interfaces></config><default-operation>none</default-operation> </edit-config></rpc>]]>]]>' "^<rpc-reply><rpc-error>"

95 
	g√w
 "DeleteÉth/0/0 usingÇone config"

96 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" '<rpc><edit-config><target><candidate/></target><config><interfaces><interface operation="delete"><name>eth/0/0</name><type>eth</type></interface></interfaces></config><default-operation>none</default-operation> </edit-config></rpc>]]>]]>' "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

98 
	g√w
 "Check deletedÉth/0/0 (non-presence container)"

99 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" '<rpc message-id="101"><get-config><source><candidate/></source></get-config></rpc>]]>]]>' '^<rpc-reply message-id="101"><data/></rpc-reply>]]>]]>$'

101 
	g√w
 "Re-DeleteÉth/0/0 usingÇone should generateÉrror"

102 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" '<rpc><edit-config><target><candidate/></target><config><interfaces><interface operation="delete"><name>eth/0/0</name><type>eth</type></interface></interfaces></config><default-operation>none</default-operation> </edit-config></rpc>]]>]]>' "^<rpc-reply><rpc-error>"

104 
	g√w
 "netconfÉdit config"

105 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><interfaces><interface><name>eth/0/0</name></interface><interface><name>eth1</name><enabled>true</enabled><ipv4><address><ip>9.2.3.4</ip><prefix-length>24</prefix-length></address></ipv4></interface></interfaces></config></edit-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

107 
	g√w
 "netconf get config xpath"

108 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" '<rpc><get-config><source><candidate/></source><filterÅype="xpath" select="/interfaces/interface[name=eth1]/enabled"/></get-config></rpc>]]>]]>' "^<rpc-reply><data><interfaces><interface><name>eth1</name><enabled>true</enabled></interface></interfaces></data></rpc-reply>]]>]]>$"

110 
	g√w
 "netconf get config xpathÖarent"

111 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" '<rpc><get-config><source><candidate/></source><filterÅype="xpath" select="/interfaces/interface[name=eth1]/enabled/../.."/></get-config></rpc>]]>]]>' "^<rpc-reply><data><interfaces><interface><name>eth/0/0</name><enabled>true</enabled></interface><interface><name>eth1</name><enabled>true</enabled><ipv4><enabled>true</enabled><forwarding>false</forwarding><address><ip>9.2.3.4</ip><prefix-length>24</prefix-length></address></ipv4></interface></interfaces></data></rpc-reply>]]>]]>$"

113 
	g√w
 "netconf validate missingÅype"

114 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><validate><source><candidate/></source></validate></rpc>]]>]]>" "^<rpc-reply><rpc-error>"

116 
	g√w
 "netconf discard-changes"

117 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><discard-changes/></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

119 
	g√w
 "netconf getÉmpty config2"

120 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><get-config><source><candidate/></source></get-config></rpc>]]>]]>" "^<rpc-reply><data/></rpc-reply>]]>]]>$"

122 
	g√w
 "netconfÉditÉxtra xml"

123 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><interfaces><extra/></interfaces></config></edit-config></rpc>]]>]]>" "^<rpc-reply><rpc-error>"

125 
	g√w
 "netconf discard-changes"

126 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><discard-changes/></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

128 
	g√w
 "netconfÉdit configÉth1"

129 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><interfaces><interface><name>eth1</name><type>eth</type></interface></interfaces></config></edit-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

131 
	g√w
 "netconf validate"

132 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><validate><source><candidate/></source></validate></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

134 
	g√w
 "netconf commit"

135 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><commit/></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

137 
	g√w
 "netconfÉdit config merge"

138 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><interfaces><interface><name>eth2</name><type>eth</type></interface></interfaces></config><default-operation>merge</default-operation></edit-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

140 
	g√w
 "netconfÉditámpersandÉncoding(<&):Çame:'eth&'Åype:'t<>'"

141 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><interfaces><interface><name>eth&amp; </name><type>t&lt; &gt; </type></interface></interfaces></config></edit-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

143 
	g√w
 "netconf getÑeplaced config"

144 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><get-config><source><candidate/></source></get-config></rpc>]]>]]>" "^<rpc-reply><data><interfaces><interface><name>eth&amp; </name><type>t&lt; &gt; </type><enabled>true</enabled></interface><interface><name>eth1</name><type>eth</type><enabled>true</enabled></interface><interface><name>eth2</name><type>eth</type><enabled>true</enabled></interface></interfaces></data></rpc-reply>]]>]]>$"

146 
	g√w
 "cli show configurationÉth& -ÉncodingÅests"

147 
	gex≥˘‚
 "$clixon_cli -1 -f $cfg -y $fyang show conf cli" "interfaces interfaceÉth&ÅypeÅ<>

148 
öãrÁ˚s
 
öãrÁ˚
 
	gëh
& 
íabÀd
 
	gåue
"

150 
	g√w
 "netconf discard-changes"

151 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><discard-changes/></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

153 
	g√w
 "netconfÉdit state operation should fail"

154 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><interfaces-state><interface><name>eth1</name><type>eth</type></interface></interfaces-state></config></edit-config></rpc>]]>]]>" "^<rpc-reply><rpc-error><error-tag>invalid-value</error-tag>"

156 
	g√w
 "netconf get state operation"

157 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><get><filterÅype=\"xpath\" select=\"/interfaces-state\"/></get></rpc>]]>]]>" "^<rpc-reply><data><interfaces-state><interface><name>eth0</name><type>eth</type><if-index>42</if-index></interface></interfaces-state></data></rpc-reply>]]>]]>$"

159 
	g√w
 "netconfÜock/unlock"

160 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><lock><target><candidate/></target></lock></rpc>]]>]]><rpc><unlock><target><candidate/></target></unlock></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]><rpc-reply><ok/></rpc-reply>]]>]]>$"

162 
	g√w
 "netconfÜock/lock"

163 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><lock><target><candidate/></target></lock></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

165 
	g√w
 "netconfÜock"

166 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><lock><target><candidate/></target></lock></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

168 
	g√w
 "close-session"

169 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><close-session/></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

171 
	g√w
 "kill-session"

172 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><kill-session><session-id>44</session-id></kill-session></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

174 
	g√w
 "copy startup"

175 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><copy-config><target><startup/></target><source><candidate/></source></copy-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

177 
	g√w
 "netconf get startup"

178 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><get-config><source><startup/></source></get-config></rpc>]]>]]>" "^<rpc-reply><data><interfaces><interface><name>eth1</name><type>eth</type><enabled>true</enabled></interface></interfaces></data></rpc-reply>]]>]]>$"

180 
	g√w
 "netconf delete startup"

181 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><delete-config><target><startup/></target></delete-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

183 
	g√w
 "netconf checkÉmpty startup"

184 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><get-config><source><startup/></source></get-config></rpc>]]>]]>" "^<rpc-reply><data/></rpc-reply>]]>]]>$"

186 
	g√w
 "netconfÑpc"

187 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><rt:fib-route><routing-instance-name>ipv4</routing-instance-name><destination-address><address-family>ipv4</address-family></destination-address></rt:fib-route></rpc>]]>]]>" "^<rpc-reply><route><address-family>ipv4</address-family><next-hop><next-hop-list>"

189 
	g√w
 "netconfÑpc w/oÇamespace"

190 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><fib-route><routing-instance-name>ipv4</routing-instance-name><destination-address><address-family>ipv4</address-family></destination-address></fib-route></rpc>]]>]]>" "^<rpc-reply><route><address-family>ipv4</address-family><next-hop><next-hop-list>"

192 
	g√w
 "netconfÉmptyÑpc"

193 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><empty/></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

195 
	g√w
 "netconf client-sideÑpc"

196 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><ex:client-rpc><request>example</request></ex:client-rpc></rpc>]]>]]>" "^<rpc-reply><result>ok</result></rpc-reply>]]>]]>$"

198 
	g√w
 "netconf subscription"

199 
	gex≥˘waô
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><create-subscription><stream>ROUTING</stream></create-subscription></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]><notification><event>RoutingÇotification</event></notification>]]>]]>$" 30

201 
	g√w
 "Kill backend"

202 #Check 
°ûl
 
Æive


203 
	gpid
=`
pgªp
 
˛ix⁄_backíd
`

204 [ -
z
 "$pid" ]; 
thí


205 
	gîr
 "backendálready dead"

206 
	gfi


207 #kû»
backíd


208 
sudo
 
	g˛ix⁄_backíd
 -
zf
 
$cfg


209 [ 
$
? -
√
 0 ]; 
thí


210 
	gîr
 "kill backend"

211 
fi


213 
	grm
 -
rf
 
	g$dú


	@clixon-master/test/test_order.sh

1 #!/
bö
/
bash


2 #Ordî 
ã°
.Åe° 
‹dîed
-
by
 
u£r
 
™d
 ordîed-by 
sy°em
.

3 #F‹ 
óch
 
Àaf
 
™d
Üóf-
li°s
, 
thîe
 
¨e
 
two
Üists,

4 #⁄ê
‹dîed
-
by
 
u£r
 
™d
 
⁄e
 ordîed by 
sy°em
.

5 #Thê
‹dîed
-
by
 
u£r
 
MUST
 
be
 
the
 
‹dî
 
ô
 
is
 
íãªd
.

6 #Nÿ
ã°
 
of
 
‹dîed
-
by
 
sy°em
 
is
 
d⁄e
 
yë


7 #(
we
 
may
 
w™t
 
to
 
s‹t
 
them
 
ÆphabëiˇŒy
 
bëãr
 
≥rf‹m™˚
).

8 
	gAPPNAME
=
exam∂e


9 #ö˛udê
îr
(Ë
™d
 
√w
(Ë
fun˘i⁄s
ánd 
¸óãs
 
$dú


10 . ./
lib
.
sh


11 
cfg
=
$dú
/
c⁄f_y™g
.
xml


12 
fy™g
=
$dú
/
‹dî
.
y™g


14 #F‹ 
memcheck


17 
dbdú
=
$dú
/
‹dî


19 
√w
 "Set up $dbdir"

20 
rm
 -
rf
 
$dbdú


21 [ ! -
d
 
$dbdú
 ]; 
thí


22 
mkdú
 
$dbdú


23 
fi


25 
	gˇt
 <<
	gEOF
 > 
	g$cfg


26 <
	gc⁄fig
>

27 <
	gCLICON_CONFIGFILE
>/
	gtmp
/
	gc⁄f_y™g
.
	gxml
</CLICON_CONFIGFILE>

28 <
	gCLICON_YANG_DIR
>/
	gu§
/
	gloˇl
/
	gsh¨e
/
	g$APPNAME
/
	gy™g
</CLICON_YANG_DIR>

29 <
	gCLICON_YANG_MODULE_MAIN
>
	gexam∂e
</CLICON_YANG_MODULE_MAIN>

30 <
	gCLICON_CLISPEC_DIR
>/
	gu§
/
	gloˇl
/
	glib
/
	g$APPNAME
/
	g˛i•ec
</CLICON_CLISPEC_DIR>

31 <
	gCLICON_CLI_DIR
>/
	gu§
/
	gloˇl
/
	glib
/
	g$APPNAME
/
	g˛i
</CLICON_CLI_DIR>

32 <
	gCLICON_CLI_MODE
>
	g$APPNAME
</CLICON_CLI_MODE>

33 <
	gCLICON_SOCK
>/
	gu§
/
	gloˇl
/
	gv¨
/
	g$APPNAME
/$APPNAME.
	gsock
</CLICON_SOCK>

34 <
	gCLICON_BACKEND_PIDFILE
>/
	gu§
/
	gloˇl
/
	gv¨
/
	g$APPNAME
/$APPNAME.
	gpidfûe
</CLICON_BACKEND_PIDFILE>

35 <
	gCLICON_CLI_GENMODEL_COMPLETION
>1</CLICON_CLI_GENMODEL_COMPLETION>

36 <
	gCLICON_XMLDB_DIR
>
	g$dbdú
</CLICON_XMLDB_DIR>

37 <
	gCLICON_XMLDB_PLUGIN
>/
	gu§
/
	gloˇl
/
	glib
/
	gxmldb
/
	gãxt
.
	gso
</CLICON_XMLDB_PLUGIN>

38 <
	gCLICON_XML_SORT
>
	gåue
</CLICON_XML_SORT>

39 </
	gc⁄fig
>

40 
EOF


42 
	gˇt
 <<
	gEOF
 > 
$fy™g


43 
moduÀ
 
	gexam∂e
{

44 
c⁄èöî
 
	gc
{

45 
Àaf
 
	gd
{

46 
ty≥
 
	g°rög
;

49 
Àaf
 
	gl
{

50 
ty≥
 
	g°rög
;

52 
	gÀaf
-
li°
 
	gy0
 {

53 
	g‹dîed
-
by
 
	gu£r
;

54 
ty≥
 
	g°rög
;

56 
	gÀaf
-
li°
 
	gy1
 {

57 
	g‹dîed
-
by
 
	gsy°em
;

58 
ty≥
 
	g°rög
;

60 
li°
 
	gy2
 {

61 
	g‹dîed
-
by
 
	gu£r
;

62 
	gkey
 "k";

63 
Àaf
 
	gk
 {

64 
ty≥
 
	g°rög
;

66 
Àaf
 
	ga
 {

67 
ty≥
 
	g°rög
;

70 
li°
 
	gy3
 {

71 
	g‹dîed
-
by
 
	gsy°em
;

72 
	gkey
 "k";

73 
Àaf
 
	gk
 {

74 
ty≥
 
	g°rög
;

76 
Àaf
 
	ga
 {

77 
ty≥
 
	g°rög
;

81 
EOF


83 
	gˇt
 <<
	gEOF
 > 
	g$dbdú
/
	gru¬ög_db


84 <
	gc⁄fig
>

85 <
	gy0
>
	gd
</y0>

86 <
	gy1
>
	gd
</y1>

87 <
	gy2
><
	gk
>
	gd
</k><
	ga
>
	gb¨
</a></y2>

88 <
	gy3
><
	gk
>
	gd
</k><
	ga
>
	gb¨
</a></y3>

89 <
	gy0
>
	gb
</y0>

90 <
	gy1
>
	gb
</y1>

91 <
	gc
><
	gd
>
	ghej
</d></c>

92 <
	gy0
>
	gc
</y0>

93 <
	gy1
>
	gc
</y1>

94 <
	gy2
><
	gk
>
	ga
</k><a>
	gb¨
</a></y2>

95 <
	gy3
><
	gk
>
	ga
</k><a>
	gb¨
</a></y3>

96 <
	gl
>
	gh›p
</l>

97 <
	gy0
>
	ga
</y0>

98 <
	gy1
>
	ga
</y1>

99 <
	gy2
><
	gk
>
	gc
</k><
	ga
>
	gb¨
</a></y2>

100 <
	gy3
><
	gk
>
	gc
</k><
	ga
>
	gb¨
</a></y3>

101 <
	gy2
><
	gk
>
	gb
</k><
	ga
>
	gb¨
</a></y2>

102 <
	gy3
><
	gk
>
	gb
</k><
	ga
>
	gb¨
</a></y3>

103 </
	gc⁄fig
>

104 
	gEOF


106 #kû»
ﬁd
 
backíd
 (
™y
)

107 
	g√w
 "kill old backend"

108 
sudo
 
	g˛ix⁄_backíd
 -
zf
 
	g$cfg
 -
y
 
$fy™g


109 [ 
$
? -
√
 0 ]; 
thí


110 
îr


111 
fi


113 
	g√w
 "start backend"

114 #°¨à
√w
 
backíd


115 
sudo
 
	g˛ix⁄_backíd
 -
s
 
	gru¬ög
 -
f
 
	g$cfg
 -
y
 
$fy™g


116 [ 
$
? -
√
 0 ]; 
thí


117 
îr


118 
	gfi


120 #Check 
as
 
fûe


121 
	g√w
 "verifyÑunning from start, should be:Ü,c,y0,y1,y2,y3; y1ánd y3 sorted. NoteÅhis fails if XML_SORT setÅo false"

122 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><get-config><source><running/></source></get-config></rpc>]]>]]>" "^<rpc-reply><data><c><d>hej</d></c><l>hopp</l><y0>d</y0><y0>b</y0><y0>c</y0><y0>a</y0><y1>a</y1><y1>b</y1><y1>c</y1><y1>d</y1><y2><k>d</k><a>bar</a></y2><y2><k>a</k><a>bar</a></y2><y2><k>c</k><a>bar</a></y2><y2><k>b</k><a>bar</a></y2><y3><k>a</k><a>bar</a></y3><y3><k>b</k><a>bar</a></y3><y3><k>c</k><a>bar</a></y3><y3><k>d</k><a>bar</a></y3></data></rpc-reply>]]>]]>$"

124 
	g√w
 "getÉach ordered-by userÜeaf-list"

125 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><get-config><source><running/></source><filterÅype=\"xpath\" select=\"/y2[k=a]\"/></get-config></rpc>]]>]]>" "^<rpc-reply><data><y2><k>a</k><a>bar</a></y2></data></rpc-reply>]]>]]>$"

127 
	g√w
 "getÉach ordered-by userÜeaf-list"

128 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><get-config><source><running/></source><filterÅype=\"xpath\" select=\"/y3[k=a]\"/></get-config></rpc>]]>]]>" "^<rpc-reply><data><y3><k>a</k><a>bar</a></y3></data></rpc-reply>]]>]]>$"

130 
	g√w
 "getÉach ordered-by userÜeaf-list"

131 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><get-config><source><running/></source><filterÅype=\"xpath\" select=\"/y2[k=b]\"/></get-config></rpc>]]>]]>" "^<rpc-reply><data><y2><k>b</k><a>bar</a></y2></data></rpc-reply>]]>]]>$"

133 
	g√w
 "getÉach ordered-by userÜeaf-list"

134 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><get-config><source><running/></source><filterÅype=\"xpath\" select=\"/y3[k=b]\"/></get-config></rpc>]]>]]>" "^<rpc-reply><data><y3><k>b</k><a>bar</a></y3></data></rpc-reply>]]>]]>$"

136 
	g√w
 "delete candidate"

137 
	gex≥˘eof
 "$clixon_netconf -qf $cfg" "<rpc><delete-config><target><candidate/></target></delete-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

141 
	g√w
 "addÅwoÉntriesÅoÜeaf-list user order"

142 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><y0>c</y0><y0>b</y0></config></edit-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

144 
	g√w
 "add oneÉntryÅoÜeaf-list user order"

145 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><y0>a</y0></config></edit-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

147 
	g√w
 "netconf commit"

148 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><commit/></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

150 
	g√w
 "add oneÉntryÅoÜeaf-list user orderáfter commit"

151 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><y0>0</y0></config></edit-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

153 
	g√w
 "netconf commit"

154 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><commit/></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

156 
	g√w
 "verifyÜeaf-list user order inÑunning (asÉntered)"

157 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><get-config><source><running/></source><filterÅype=\"xpath\" select=\"/y0\"/></get-config></rpc>]]>]]>" "^<rpc-reply><data><y0>c</y0><y0>b</y0><y0>a</y0><y0>0</y0></data></rpc-reply>]]>]]>$"

161 
	g√w
 "addÅwoÉntriesÅoÜist user order"

162 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><y2><k>c</k><a>bar</a></y2><y2><k>b</k><a>foo</a></y2></config></edit-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

164 
	g√w
 "add oneÉntryÅoÜist user order"

165 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><y2><k>a</k><a>fie</a></y2></config></edit-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

167 
	g√w
 "verifyÜist user order (asÉntered)"

168 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><get-config><source><candidate/></source><filterÅype=\"xpath\" select=\"/y2\"/></get-config></rpc>]]>]]>" "^<rpc-reply><data><y2><k>c</k><a>bar</a></y2><y2><k>b</k><a>foo</a></y2><y2><k>a</k><a>fie</a></y2></data></rpc-reply>]]>]]>$"

170 
	gpid
=`
pgªp
 
˛ix⁄_backíd
`

171 [ -
z
 "$pid" ]; 
thí


172 
	gîr
 "backendálready dead"

173 
	gfi


174 #kû»
backíd


175 
sudo
 
	g˛ix⁄_backíd
 -
zf
 
$cfg


176 [ 
$
? -
√
 0 ]; 
thí


177 
	gîr
 "kill backend"

178 
fi


180 
	grm
 -
rf
 
	g$dú


	@clixon-master/test/test_perf.sh

1 #!/
bö
/
bash


2 #Sˇlög 
ã°


4 
	gnumbî
=5000

5 
ªq
=100

6 [ 
$
#0 ]; 
thí


7 
	gnumbî
=1000

8 
ñif
 [ 
$
#1 ]; 
thí


9 
	gnumbî
=
$1


10 
ñif
 [ 
$
#2 ]; 
thí


11 
	gnumbî
=
$1


12 
ªq
=
$2


14 
echo
 "Usage: $0 [<number> [<requests>]]"

15 
exô
 1

16 
fi


17 
APPNAME
=
exam∂e


18 #ö˛udê
îr
(Ë
™d
 
√w
(Ë
fun˘i⁄s
ánd 
¸óãs
 
$dú


19 . ./
lib
.
sh


21 
cfg
=
$dú
/
sˇlög
-
c⁄f
.
xml


22 
fy™g
=
$dú
/
sˇlög
.
y™g


23 
fc⁄fig
=
$dú
/
c⁄fig


25 
ˇt
 <<
EOF
 > 
$fy™g


26 
moduÀ
 
õtf
-
ù
{

27 
c⁄èöî
 
x
 {

28 
li°
 
y
 {

29 
key
 "a";

30 
Àaf
 
	ga
 {

31 
ty≥
 
	g°rög
;

33 
Àaf
 
	gb
 {

34 
ty≥
 
	g°rög
;

37 
	gÀaf
-
li°
 
	gc
 {

38 
ty≥
 
	g°rög
;

42 
EOF


44 
	gˇt
 <<
	gEOF
 > 
	g$cfg


45 <
	gc⁄fig
>

46 <
	gCLICON_CONFIGFILE
>
	g$cfg
</CLICON_CONFIGFILE>

47 <
	gCLICON_YANG_DIR
>
	g$fy™g
</CLICON_YANG_DIR>

48 <
	gCLICON_YANG_MODULE_MAIN
>
	gõtf
-
	gù
</CLICON_YANG_MODULE_MAIN>

49 <
	gCLICON_SOCK
>/
	gu§
/
	gloˇl
/
	gv¨
/
	g$APPNAME
/$APPNAME.
	gsock
</CLICON_SOCK>

50 <
	gCLICON_BACKEND_PIDFILE
>/
	gu§
/
	gloˇl
/
	gv¨
/
	g$APPNAME
/$APPNAME.
	gpidfûe
</CLICON_BACKEND_PIDFILE>

51 <
	gCLICON_RESTCONF_PRETTY
>
	gÁl£
</CLICON_RESTCONF_PRETTY>

52 <
	gCLICON_XMLDB_DIR
>/
	gu§
/
	gloˇl
/
	gv¨
/
	g$APPNAME
</CLICON_XMLDB_DIR>

53 <
	gCLICON_XMLDB_PLUGIN
>/
	gu§
/
	gloˇl
/
	glib
/
	gxmldb
/
	gãxt
.
	gso
</CLICON_XMLDB_PLUGIN>

54 </
	gc⁄fig
>

55 
	gEOF


57 #kû»
ﬁd
 
backíd
 (
™y
)

58 
	g√w
 "kill old backend"

59 
sudo
 
	g˛ix⁄_backíd
 -
zf
 
	g$cfg
 -
y
 
$fy™g


60 [ 
$
? -
√
 0 ]; 
thí


61 
îr


62 
fi


64 
	g√w
 "start backend -s init -f $cfg -y $fyang"

65 #°¨à
√w
 
backíd


66 
sudo
 
	g˛ix⁄_backíd
 -
s
 
	göô
 -
f
 
	g$cfg
 -
y
 
$fy™g


67 [ 
$
? -
√
 0 ]; 
thí


68 
îr


69 
fi


71 
	g√w
 "kill oldÑestconf daemon"

72 
sudo
 
	gpkûl
 -
u
 
	gwww
-
d©a
 
˛ix⁄_ª°c⁄f


74 
	g√w
 "startÑestconf daemon"

75 
sudo
 
	g°¨t
-
	g°›
-
	gd´m⁄
 -
	gS
 -
	gq
 -
	go
 -
	gb
 -
	gx
 /
	gwww
-
	gd©a
/
	g˛ix⁄_ª°c⁄f
 -
	gd
 /www-d©®-
c
 www-d©®-- -
f
 
	g$cfg
 -
y
 
	g$fy™g
 #-
D


77 
	g¶ìp
 1

79 
	g√w
 "generate 'large' config with $numberÜistÉntries"

80 
	gecho
 -
	gn
 "<Ωc><edô-c⁄fig><èrgë><ˇndid©e/></èrgë><c⁄fig><x>" > 
$fc⁄fig


81 –
	gi
=0; i<
	g$numbî
; i++ )); do

82 
	gecho
 -
	gn
 "<y><a>$i</a><b>$i</b></y>" >> 
$fc⁄fig


83 
d⁄e


84 
	gecho
 "</x></c⁄fig></edô-c⁄fig></Ωc>]]>]]>" >> 
	g$fc⁄fig


86 #Ju° 
m™uÆ
 
dbg


87 
	gecho
 "$clixon_netconf -qf $cfg -y $fyang"

89 
	g√w
 "netconf writeÜarge config"

90 
	gex≥˘eof_fûe
 "time -f %e $clixon_netconf -qf $cfg -y $fyang" "$fconfig" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

92 #echÿ'<Ωc><gë-c⁄fig><sour˚><ˇndid©e/></sour˚></gë-c⁄fig></Ωc>]]>]]>' | 
$˛ix⁄_√tc⁄f
 -
qf
 
$cfg
 -
y
 
$fy™g


94 
	g√w
 "netconf writeÜarge configágain"

95 
	gex≥˘eof_fûe
 "time -f %e $clixon_netconf -qf $cfg -y $fyang" "$fconfig" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

97 #echÿ'<Ωc><gë-c⁄fig><sour˚><ˇndid©e/></sour˚></gë-c⁄fig></Ωc>]]>]]>' | 
$˛ix⁄_√tc⁄f
 -
qf
 
$cfg
 -
y
 
$fy™g


99 
rm
 
$fc⁄fig


101 
	g√w
 "netconf commitÜarge config"

102 
	gex≥˘eof
 "time -f %e $clixon_netconf -qf $cfg -y $fyang" "<rpc><commit><source><candidate/></source></commit></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

104 
	g√w
 "netconf commitÜarge configágain"

105 
	gex≥˘eof
 "time -f %e $clixon_netconf -qf $cfg -y $fyang" "<rpc><commit><source><candidate/></source></commit></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

107 
	g√w
 "netconfádd small (1Éntry) config"

108 
	gex≥˘eof
 "time -f %e $clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><x><y><a>x</a><b>y</b></y></x></config></edit-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

110 
	g√w
 "netconf get $req small config"

111 
	gtime
 -
p
 –
	gi
=0; i<
	g$ªq
; i++ )); do

112 
	g∫d
=
$
(––
RANDOM
 % 
$numbî
 ) ))

113 
echo
 "<rpc><get-config><source><candidate/></source><filterÅype=\"xpath\" select=\"/x/y[a=$rnd][b=$rnd]\" /></get-config></rpc>]]>]]>"

114 
d⁄e
 | 
$˛ix⁄_√tc⁄f
 -
qf
 
$cfg
 -
y
 
$fy™g
 > /
dev
/
nuŒ


116 
√w
 "netconf get $reqÑestconf small config"

117 
time
 -
p
 –
i
=0; 
	gi
<
	g$ªq
; i++ )); do

118 
	g∫d
=
$
(––
RANDOM
 % 
$numbî
 ) ))

119 #XXX 
cuæ
 -
sX
 
PUT
 -
d
 {"y":{"a":"$∫d","b":"$∫d"}} 
hâp
:

120 
d⁄e


122 
√w
 "netconfádd $req small config"

123 
time
 -
p
 –
i
=0; 
	gi
<
	g$ªq
; i++ )); do

124 
	g∫d
=
$
(––
RANDOM
 % 
$numbî
 ) ))

125 
echo
 "<rpc><edit-config><target><candidate/></target><config><x><y><a>$rnd</a><b>$rnd</b></y></x></config></edit-config></rpc>]]>]]>"

126 
d⁄e
 | 
$˛ix⁄_√tc⁄f
 -
qf
 
$cfg
 -
y
 
$fy™g
 > /
dev
/
nuŒ


128 
√w
 "netconfádd $reqÑestconf small config"

129 
time
 -
p
 –
i
=0; 
	gi
<
	g$ªq
; i++ )); do

130 
	g∫d
=
$
(––
RANDOM
 % 
$numbî
 ) ))

131 
cuæ
 -
sG
 
hâp
:

132 
d⁄e


134 
√w
 "netconf getÜarge config"

135 
ex≥˘eof
 "time -f %e $clixon_netconf -qf $cfg -y $fyang" "<rpc><get-config><source><candidate/></source></get-config></rpc>]]>]]>" "^<rpc-reply><data><x><y><a>0</a><b>0</b></y><y><a>1</a><b>1</b>"

137 
√w
 "generateÜargeÜeaf-list config"

138 
echo
 -
n
 "<Ωc><edô-c⁄fig><èrgë><ˇndid©e/></èrgë><deÁu…-›î©i⁄>ª∂a˚</deÁu…-›î©i⁄><c⁄fig><x>" > 
$fc⁄fig


139 –
i
=0; 
	gi
<
	g$numbî
; i++ )); do

140 
	gecho
 -
	gn
 "<c>$i</c>" >> 
$fc⁄fig


141 
d⁄e


142 
	gecho
 "</x></c⁄fig></edô-c⁄fig></Ωc>]]>]]>" >> 
$fc⁄fig


144 
	g√w
 "netconfÑeplaceÜargeÜist-leaf config"

145 
	gex≥˘eof_fûe
 "time -f %e $clixon_netconf -qf $cfg -y $fyang" "$fconfig" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

147 
rm
 
$fc⁄fig


149 
	g√w
 "netconf commitÜargeÜeaf-list config"

150 
	gex≥˘eof
 "time -f %e $clixon_netconf -qf $cfg -y $fyang" "<rpc><commit><source><candidate/></source></commit></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

152 
	g√w
 "netconfádd $req smallÜeaf-list config"

153 
	gtime
 -
p
 –
	gi
=0; i<
	g$ªq
; i++ )); do

154 
	g∫d
=
$
(––
RANDOM
 % 
$numbî
 ) ))

155 
echo
 "<rpc><edit-config><target><candidate/></target><config><x><c>$rnd</c></x></config></edit-config></rpc>]]>]]>"

156 
d⁄e
 | 
$˛ix⁄_√tc⁄f
 -
qf
 
$cfg
 -
y
 
$fy™g
 > /
dev
/
nuŒ


158 
√w
 "netconfádd smallÜeaf-list config"

159 
ex≥˘eof
 "time -f %e $clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><x><c>x</c></x></config></edit-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

161 
√w
 "netconf commit smallÜeaf-list config"

162 
ex≥˘eof
 "time -f %e $clixon_netconf -qf $cfg -y $fyang" "<rpc><commit><source><candidate/></source></commit></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

164 
√w
 "netconf getÜargeÜeaf-list config"

165 
ex≥˘eof
 "time -f %e $clixon_netconf -qf $cfg -y $fyang" "<rpc><get-config><source><candidate/></source></get-config></rpc>]]>]]>" "^<rpc-reply><data><x><c>0</c><c>1</c>"

167 
√w
 "Kill backend"

168 #Check 
°ûl
 
Æive


169 
pid
=`
pgªp
 
˛ix⁄_backíd
`

170 [ -
z
 "$pid" ]; 
thí


171 
	gîr
 "backendálready dead"

172 
	gfi


173 #kû»
backíd


174 
sudo
 
	g˛ix⁄_backíd
 -
zf
 
$cfg


175 [ 
$
? -
√
 0 ]; 
thí


176 
	gîr
 "kill backend"

177 
fi


179 
	grm
 -
rf
 
	g$dú


	@clixon-master/test/test_restconf.sh

1 #!/
bö
/
bash


2 #Re°c⁄‡
basic
 
fun˘i⁄Æôy


3 #Assumê
hâp
 
£rvî
 
£tup
, 
such
 
as
 
ngöx
 
des¸ibed
 
ö
 
≠ps
/
ª°c⁄f
/
README
.
md


4 
	gAPPNAME
=
exam∂e


5 #ö˛udê
îr
(Ë
™d
 
√w
(Ë
fun˘i⁄s
ánd 
¸óãs
 
$dú


6 . ./
lib
.
sh


7 
cfg
=
$dú
/
c⁄f
.
xml


8 
fy™g
=
$dú
/
ª°c⁄f
.
y™g


10 #<
CLICON_YANG_MODULE_MAIN
>
exam∂e
</CLICON_YANG_MODULE_MAIN>

11 
ˇt
 <<
EOF
 > 
$cfg


12 <
c⁄fig
>

13 <
CLICON_CONFIGFILE
>
$cfg
</CLICON_CONFIGFILE>

14 <
CLICON_YANG_DIR
>/
u§
/
loˇl
/
sh¨e
/
$APPNAME
/
y™g
</CLICON_YANG_DIR>

15 <
CLICON_YANG_MODULE_MAIN
>
$fy™g
</CLICON_YANG_MODULE_MAIN>

16 <
CLICON_CLISPEC_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
˛i•ec
</CLICON_CLISPEC_DIR>

17 <
CLICON_BACKEND_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
backíd
</CLICON_BACKEND_DIR>

18 <
CLICON_BACKEND_REGEXP
>
exam∂e_backíd
.
so$
</CLICON_BACKEND_REGEXP>

19 <
CLICON_RESTCONF_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
ª°c⁄f
</CLICON_RESTCONF_DIR>

20 <
CLICON_RESTCONF_PRETTY
>
Ál£
</CLICON_RESTCONF_PRETTY>

21 <
CLICON_CLI_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
˛i
</CLICON_CLI_DIR>

22 <
CLICON_CLI_MODE
>
$APPNAME
</CLICON_CLI_MODE>

23 <
CLICON_SOCK
>/
u§
/
loˇl
/
v¨
/
$APPNAME
/$APPNAME.
sock
</CLICON_SOCK>

24 <
CLICON_BACKEND_PIDFILE
>/
u§
/
loˇl
/
v¨
/
$APPNAME
/$APPNAME.
pidfûe
</CLICON_BACKEND_PIDFILE>

25 <
CLICON_CLI_GENMODEL_COMPLETION
>1</CLICON_CLI_GENMODEL_COMPLETION>

26 <
CLICON_XMLDB_DIR
>/
u§
/
loˇl
/
v¨
/
$APPNAME
</CLICON_XMLDB_DIR>

27 <
CLICON_XMLDB_PLUGIN
>/
u§
/
loˇl
/
lib
/
xmldb
/
ãxt
.
so
</CLICON_XMLDB_PLUGIN>

28 </
c⁄fig
>

29 
EOF


31 
ˇt
 <<
EOF
 > 
$fy™g


32 
moduÀ
 
exam∂e
{

33 
¥efix
 
ex
;

34 
imp‹t
 
	gõtf
-
	gù
 {

35 
¥efix
 
	gù
;

37 
imp‹t
 
	gõtf
-
	groutög
 {

38 
¥efix
 
	gπ
;

40 
imp‹t
 
	gõtf
-
	göë
-
	gty≥s
 {

41 
	g¥efix
 "inet";

42 
	gªvisi⁄
-
	gd©e
 "2013-07-15";

44 
Ωc
 
	gem±y
 {

46 
Ωc
 
	göput
 {

47 
	göput
 {

50 
Ωc
 
	gouçut
 {

51 
	gouçut
 {

54 
Ωc
 
	g˛õ¡
-
	gΩc
 {

55 
	gdes¸ùti⁄
 "ExampleÜocal client-sideÑpc";

56 
	göput
 {

57 
Àaf
 
	gªque°
 {

58 
ty≥
 
	g°rög
;

61 
	gouçut
 {

62 
Àaf
 
	gªsu…
{

63 
ty≥
 
	g°rög
;

68 
	gEOF


70 #Thi†
is
 
a
 
fixed
 '°©e' 
im∂emíãd
 
ö
 
routög_backíd
. 
It
 i†
assumed
 
to
 
be
 
Æways
 
thîe


71 
	g°©e
='{"interfaces-state": {"interface": \[{"name": "eth0","type": "eth","if-index": 42}\]}}'

73 #kû»
ﬁd
 
backíd
 (
™y
)

74 
√w
 "kill old backend"

75 
sudo
 
˛ix⁄_backíd
 -
zf
 
$cfg


76 [ 
$
? -
√
 0 ]; 
thí


77 
îr


78 
fi


79 
	g√w
 "start backend -s init -f $cfg -y $fyang"

80 
sudo
 
	g˛ix⁄_backíd
 -
s
 
	göô
 -
f
 
	g$cfg
 -
y
 
	g$fy™g
 #-
	gD
 1

81 [ 
$
? -
√
 0 ]; 
thí


82 
îr


83 
fi


85 
	g√w
 "kill oldÑestconf daemon"

86 
sudo
 
	gpkûl
 -
u
 
	gwww
-
d©a
 
˛ix⁄_ª°c⁄f


88 
	g√w
 "startÑestconf daemon"

89 
sudo
 
	g°¨t
-
	g°›
-
	gd´m⁄
 -
	gS
 -
	gq
 -
	go
 -
	gb
 -
	gx
 /
	gwww
-
	gd©a
/
	g˛ix⁄_ª°c⁄f
 -
	gd
 /www-d©®-
c
 www-d©®-- -
f
 
	g$cfg
 -
y
 
	g$fy™g
 #-
D


91 
	g¶ìp
 1

93 
	g√w
 "restconfÅests"

95 
	g√w2
 "restconfÑoot discovery. RFC 8040 3.1 (xml+xrd)"

96 
	gex≥˘eq
 "$(curl -s -X GET http://localhost/.well-known/host-meta)" "<XRD xmlns='http://docs.oasis-open.org/ns/xri/xrd-1.0'>

97 <
Lök
 
	gªl
='ª°c⁄f' 
hªf
='/restconf'/>

98 </
XRD
> "

100 
√w2
 "restconf getÑestconfÑesource. RFC 8040 3.3 (json)"

101 
ex≥˘eq
 "$(curl -sG http://localhost/restconf)" '{"restconf": {"data":Çull,"operations":Çull,"yang-library-version": "2016-06-21"}}

104 
√w2
 "restconf getÑestconfÑesource. RFC 8040 3.3 (xml)"

105 #Gë 
XML
 
ö°ód
 
of
 
JSON
?

106 
ex≥˘eq
 "$(curl -s -H 'Accept:ápplication/yang-data+xml' -G http://localhost/restconf)" '<restconf><data/><operations/><yang-library-version>2016-06-21</yang-library-version></restconf>

109 
√w2
 "restconf getÑestconf/operations. RFC8040 3.3.2 (json)"

110 
ex≥˘eq
 "$(curl -sG http://localhost/restconf/operations)" '{"operations": {"ex:empty":Çull,"ex:input":Çull,"ex:output":Çull,"ex:client-rpc":Çull,"rt:fib-route":Çull,"rt:route-count":Çull}}

113 
√w
 "restconf getÑestconf/operations. RFC8040 3.3.2 (xml)"

114 
ªt
=
$
(
cuæ
 -
s
 -
H
 "Ac˚±:áµliˇti⁄/y™g-d©a+xml" -
G
 
hâp
:

115 
ex≥˘
="<operations><ex:empty/><ex:input/><ex:output/><ex:client-rpc/><rt:fib-route/><rt:route-count/></operations>"

116 
m©ch
=`
echo
 
$ªt
 | 
gªp
 -
EZo
 "$expect"`

117 [ -
z
 "$m©ch" ]; 
thí


118 
îr
 "$expect" "$ret"

119 
fi


121 
√w2
 "restconf getÑestconf/yang-library-version. RFC8040 3.3.3"

122 
ex≥˘eq
 "$(curl -sG http://localhost/restconf/yang-library-version)" '{"yang-library-version": "2016-06-21"}'

124 
√w
 "restconf getÑestconf/yang-library-version. RFC8040 3.3.3 (xml)"

125 
ªt
=
$
(
cuæ
 -
s
 -
H
 "Ac˚±:áµliˇti⁄/y™g-d©a+xml" -
G
 
hâp
:

126 
ex≥˘
="<yang-library-version>2016-06-21</yang-library-version>"

127 
m©ch
=`
echo
 
$ªt
 | 
gªp
 -
EZo
 "$expect"`

128 [ -
z
 "$m©ch" ]; 
thí


129 
îr
 "$expect" "$ret"

130 
fi


132 
√w
 "restconf options. RFC 8040 4.1"

133 
ex≥˘‚
 "curl -i -s -X OPTIONS http://localhost/restconf/data" "Allow: OPTIONS,HEAD,GET,POST,PUT,DELETE"

135 
√w
 "restconf head. RFC 8040 4.2"

136 
ex≥˘‚
 "curl -s -I http://localhost/restconf/data" "HTTP/1.1 200 OK"

137 #C⁄ã¡-
Ty≥
: 
≠∂iˇti⁄
/
y™g
-
d©a
+
js⁄
"

139 
√w2
 "restconfÉmptyÑpc"

140 
ex≥˘eq
 "$(curl -s -X POST -d {\"input\":{\"name\":\"\"}} http://localhost/restconf/operations/ex:empty)" ""

142 
√w2
 "restconf getÉmpty config + state json"

143 
ex≥˘eq
 "$(curl -sSG http://localhost/restconf/data)" '{"data": {"interfaces-state": {"interface": [{"name": "eth0","type": "eth","if-index": 42}]}}}

146 
√w
 "restconf getÉmpty config + state xml"

147 
ªt
=
$
(
cuæ
 -
s
 -
H
 "Ac˚±:áµliˇti⁄/y™g-d©a+xml" -
G
 
hâp
:

148 
ex≥˘
="<data><interfaces-state><interface><name>eth0</name><type>eth</type><if-index>42</if-index></interface></interfaces-state></data>"

149 
m©ch
=`
echo
 
$ªt
 | 
gªp
 -
EZo
 "$expect"`

150 [ -
z
 "$m©ch" ]; 
thí


151 
îr
 "$expect" "$ret"

152 
fi


154 
√w2
 "restconf get data/interfaces-state/interface=eth0 json"

155 
ex≥˘eq
 "$(curl -s -G http://localhost/restconf/data/interfaces-state/interface=eth0)" '{"interface": [{"name": "eth0","type": "eth","if-index": 42}]}

158 
√w
 "restconf get state operationÉth0 xml"

159 #C™à
gë
 
shñl
 
ma¸os
 
to
 
w‹k
, 
ölöe
 
m©chög
 
‰om
 
lib
.
sh


160 
ªt
=
$
(
cuæ
 -
s
 -
H
 "Ac˚±:áµliˇti⁄/y™g-d©a+xml" -
G
 
hâp
:

161 
ex≥˘
="<interface><name>eth0</name><type>eth</type><if-index>42</if-index></interface>"

162 
m©ch
=`
echo
 
$ªt
 | 
gªp
 -
EZo
 "$expect"`

163 [ -
z
 "$m©ch" ]; 
thí


164 
îr
 "$expect" "$ret"

165 
fi


167 
√w2
 "restconf get state operationÉth0Åype json"

168 
ex≥˘eq
 "$(curl -s -G http://localhost/restconf/data/interfaces-state/interface=eth0/type)" '{"type": "eth"}

171 
√w
 "restconf get state operationÉth0Åype xml"

172 #C™à
gë
 
shñl
 
ma¸os
 
to
 
w‹k
, 
ölöe
 
m©chög
 
‰om
 
lib
.
sh


173 
ªt
=
$
(
cuæ
 -
s
 -
H
 "Ac˚±:áµliˇti⁄/y™g-d©a+xml" -
G
 
hâp
:

174 
ex≥˘
="<type>eth</type>"

175 
m©ch
=`
echo
 
$ªt
 | 
gªp
 -
EZo
 "$expect"`

176 [ -
z
 "$m©ch" ]; 
thí


177 
îr
 "$expect" "$ret"

178 
fi


180 
√w2
 "restconf GET datastore"

181 
ex≥˘eq
 "$(curl -s -X GET http://localhost/restconf/data)" '{"data": {"interfaces-state": {"interface": [{"name": "eth0","type": "eth","if-index": 42}]}}}

184 #Exa˘ 
m©ch


185 
√w
 "restconf Add subtreeÅo datastore using POST"

186 
ex≥˘‚
 'curl -s -i -X POST -H "Accept:ápplication/yang-data+json" -d {"interfaces":{"interface":{"name":"eth/0/0","type":"eth","enabled":true}}} http://localhost/restconf/data' 'HTTP/1.1 200 OK'

188 
√w
 "restconf Re-add subtree which should giveÉrror"

189 
ex≥˘‚
 'curl -s -X POST -d {"interfaces":{"interface":{"name":"eth/0/0","type":"eth","enabled":true}}} http://localhost/restconf/data' '{"ietf-restconf:errors" : {"error": {"error-tag": "data-exists","error-type": "application","error-severity": "error","error-message": "DataálreadyÉxists; cannot createÇewÑesource"}}}'

191 #XXX 
C™t
 
gë
 
this
 
to
 
w‹k


194 
√w
 "restconf Check interfacesÉth/0/0ádded"

195 
ex≥˘‚
 "curl -s -G http://localhost/restconf/data" '{"interfaces": {"interface": \[{"name": "eth/0/0","type": "eth","enabled":Årue}\]},"interfaces-state": {"interface": \[{"name": "eth0","type": "eth","if-index": 42}\]}}

198 
√w2
 "restconf delete interfaces"

199 
ex≥˘eq
 
$
(
cuæ
 -
s
 -
X
 
DELETE
 
hâp
:

201 
√w
 "restconf CheckÉmpty config"

202 
ex≥˘‚
 "curl -sG http://localhost/restconf/data" "$state"

204 
√w
 "restconf Add interfaces subtreeÉth/0/0 using POST"

205 
ex≥˘‚
 'curl -s -X POST -d {"interface":{"name":"eth/0/0","type":"eth","enabled":true}} http://localhost/restconf/data/interfaces' ""

206 #XXX 
ˇ¡
 
gë
 
this
 
to
 
w‹k


207 #ex≥˘eq "$(cuæ -†-X POST -d '{"
öãrÁ˚
":{"
«me
":"
ëh
/0/0","
ty≥
\":"ëh","
íabÀd
":true}}' http://localhost/restconf/data/interfaces)" ""

209 
√w2
 "restconf CheckÉth/0/0ádded"

210 
ex≥˘eq
 "$(curl -s -G http://localhost/restconf/data)" '{"data": {"interfaces": {"interface": [{"name": "eth/0/0","type": "eth","enabled":Årue}]},"interfaces-state": {"interface": [{"name": "eth0","type": "eth","if-index": 42}]}}}

213 
√w2
 "restconf Re-postÉth/0/0 which should generateÉrror"

214 
ex≥˘eq
 "$(cuæ -†-X POST -d '{"
öãrÁ˚
":{"
«me
":"
ëh
/0/0","
ty≥
":"ëh","
íabÀd
":true}}' http://localhost/restconf/data/interfaces)" '{"ietf-restconf:errors" : {"error": {"error-tag": "data-exists","error-type": "application","error-severity": "error","error-message": "DataálreadyÉxists; cannot createÇewÑesource"}}}'

216 
√w
 "AddÜeaf description using POST"

217 
ex≥˘eq
 "$(cuæ -†-X POST -d '{"
des¸ùti⁄
":"
The
-
fú°
-
öãrÁ˚
"}' http://localhost/restconf/data/interfaces/interface=eth%2f0%2f0)" ""

219 
√w
 "AddÇothing using POST"

220 
ex≥˘‚
 'curl -s -X POST http://localhost/restconf/data/interfaces/interface=eth%2f0%2f0' '"ietf-restconf:errors" : {"error": {"rpc-error": {"error-tag": "malformed-message","error-type": "rpc","error-severity": "error","error-message": " onÜine 1: syntaxÉrrorát or before:'

222 
√w2
 "restconf Check descriptionádded"

223 
ex≥˘eq
 "$(curl -s -G http://localhost/restconf/data)" '{"data": {"interfaces": {"interface": [{"name": "eth/0/0","description": "The-first-interface","type": "eth","enabled":Årue}]},"interfaces-state": {"interface": [{"name": "eth0","type": "eth","if-index": 42}]}}}

226 
√w
 "restconf deleteÉth/0/0"

227 
ex≥˘eq
 "$(curl -s -X DELETE http://localhost/restconf/data/interfaces/interface=eth%2f0%2f0)" ""

229 
√w
 "Check deletedÉth/0/0"

230 
ex≥˘‚
 'cuæ -†-G hâp://loˇlho°/ª°c⁄f/d©a' 
$°©e


232 
√w2
 "restconf Re-DeleteÉth/0/0 usingÇone should generateÉrror"

233 
ex≥˘eq
 "$(curl -s -X DELETE http://localhost/restconf/data/interfaces/interface=eth%2f0%2f0)" '{"ietf-restconf:errors" : {"error": {"error-tag": "data-missing","error-type": "application","error-severity": "error","error-message": "Data doesÇotÉxist; cannot deleteÑesource"}}}'

235 
√w
 "restconf Add subtreeÉth/0/0 using PUT"

236 
ex≥˘eq
 "$(cuæ -†-X PUT -d '{"
öãrÁ˚
":{"
«me
":"
ëh
/0/0","
ty≥
":"ëh","
íabÀd
":true}}' http://localhost/restconf/data/interfaces/interface=eth%2f0%2f0)" ""

238 
√w2
 "restconf get subtree"

239 
ex≥˘eq
 "$(curl -s -G http://localhost/restconf/data)" '{"data": {"interfaces": {"interface": [{"name": "eth/0/0","type": "eth","enabled":Årue}]},"interfaces-state": {"interface": [{"name": "eth0","type": "eth","if-index": 42}]}}}

242 
√w2
 "restconfÑpc using POST json"

243 
ex≥˘eq
 "$(cuæ -†-X POST -d '{"
öput
":{"
routög
-
ö°™˚
-
«me
":"
ùv4
"}}' http://localhost/restconf/operations/rt:fib-route)" '{"output": {"route": {"address-family": "ipv4","next-hop": {"next-hop-list": "2.3.4.5"}}}}

246 #C™à
gë
 
this
 
to
 
w‹k
 
due
Åÿ
quŸög


248 #ex≥˘eq "$(cuæ -†-X POST -d '{"
öput
":{"
routög
-
ö°™˚
-
«me
":ipv4}}' http://localhost/restconf/operations/rt:fib-route)" '{"ietf-restconf:errors" : {"error": {"rpc-error": {"error-tag": "operation-failed","error-type": "protocol","error-severity": "error","error-message": " onÜine 1: syntaxÉrrorát or before: i"}}}}'

250 
√w2
 "restconfÑpc using POST json w/o mandatoryÉlement"

251 
ex≥˘eq
 "$(cuæ -†-X POST -d '{"
öput
":{"
wr⁄gñemít
":"
ùv4
"}}' http://localhost/restconf/operations/rt:fib-route)" '{"ietf-restconf:errors" : {"error": {"rpc-error": {"error-tag": "operation-failed","error-type": "protocol","error-severity": "error","error-message": "Missing mandatory variable:Ñouting-instance-name"}}}}'

252 
√w2
 "restconfÑpcÇon-existingÑpc w/oÇamespace"

253 
ex≥˘eq
 "$(curl -s -X POST -d '{}' http://localhost/restconf/operations/kalle)" '{"ietf-restconf:errors" : {"error": {"rpc-error": {"error-tag": "operation-failed","error-type": "protocol","error-severity": "error","error-message": "yangÇodeÇot found"}}}}'

255 
√w2
 "restconfÑpcÇon-existingÑpc"

256 
ex≥˘eq
 "$(curl -s -X POST -d '{}' http://localhost/restconf/operations/ex:kalle)" '{"ietf-restconf:errors" : {"error": {"rpc-error": {"error-tag": "operation-failed","error-type": "protocol","error-severity": "error","error-message": "yangÇodeÇot found"}}}}'

258 
√w2
 "restconfÑpc missingÇame"

259 
ex≥˘eq
 "$(curl -s -X POST -d '{}' http://localhost/restconf/operations)" '{"ietf-restconf:errors" : {"error": {"rpc-error": {"error-tag": "operation-failed","error-type": "protocol","error-severity": "error","error-message": "OperationÇameÉxpected"}}}}'

261 
√w2
 "restconfÑpc missing input"

262 
ex≥˘eq
 "$(curl -s -X POST -d '{}' http://localhost/restconf/operations/rt:fib-route)" '{"ietf-restconf:errors" : {"error": {"rpc-error": {"error-tag": "operation-failed","error-type": "protocol","error-severity": "error","error-message": "Missing mandatory variable:Ñouting-instance-name"}}}}'

264 
√w
 "restconfÑpc using POST xml"

265 
ªt
=
$
(
cuæ
 -
s
 -
X
 
POST
 -
H
 "Ac˚±:áµliˇti⁄/y™g-d©a+xml" -
d
 '{"öput":{"routög-ö°™˚-«me":"ùv4"}}' 
hâp
:

266 
ex≥˘
="<output><route><address-family>ipv4</address-family><next-hop><next-hop-list>2.3.4.5</next-hop-list></next-hop></route></output>"

267 
m©ch
=`
echo
 
$ªt
 | 
gªp
 -
EZo
 "$expect"`

268 [ -
z
 "$m©ch" ]; 
thí


269 
îr
 "$expect" "$ret"

270 
fi


272 
√w
 "restconfÜocal clientÑpc using POST xml"

273 
ªt
=
$
(
cuæ
 -
s
 -
X
 
POST
 -
H
 "Ac˚±:áµliˇti⁄/y™g-d©a+xml" -
d
 '{"öput":{"ªque°":"exam∂e"}}' 
hâp
:

274 
ex≥˘
="<output><result>ok</result></output>"

275 
m©ch
=`
echo
 
$ªt
 | 
gªp
 -
EZo
 "$expect"`

276 [ -
z
 "$m©ch" ]; 
thí


277 
îr
 "$expect" "$ret"

278 
fi


280 #XXX 
ˇ¡
 
gë
 -
H
 
to
 
w‹k


283 #C™à
gë
 
shñl
 
ma¸os
 
to
 
w‹k
, 
ölöe
 
m©chög
 
‰om
 
lib
.
sh


286 
√w
 "KillÑestconf daemon"

287 
sudo
 
pkûl
 -
u
 
www
-
d©a
 
˛ix⁄_ª°c⁄f


289 
√w
 "Kill backend"

290 #Check 
°ûl
 
Æive


291 
pid
=`
pgªp
 
˛ix⁄_backíd
`

292 [ -
z
 "$pid" ]; 
thí


293 
îr
 "backendálready dead"

294 
fi


295 #kû»
backíd


296 
sudo
 
˛ix⁄_backíd
 -
zf
 
$cfg


297 [ 
$
? -
√
 0 ]; 
thí


298 
îr
 "kill backend"

299 
fi


301 
rm
 -
rf
 
$dú


	@clixon-master/test/test_restconf2.sh

1 #!/
bö
/
bash


2 #Re°c⁄‡
basic
 
fun˘i⁄Æôy


3 #Assumê
hâp
 
£rvî
 
£tup
, 
such
 
as
 
ngöx
 
des¸ibed
 
ö
 
≠ps
/
ª°c⁄f
/
README
.
md


4 
	gAPPNAME
=
exam∂e


5 #ö˛udê
îr
(Ë
™d
 
√w
(Ë
fun˘i⁄s
ánd 
¸óãs
 
$dú


6 . ./
lib
.
sh


7 
cfg
=
$dú
/
c⁄f
.
xml


8 
fy™g
=
$dú
/
ª°c⁄f
.
y™g


10 #<
CLICON_YANG_MODULE_MAIN
>
exam∂e
</CLICON_YANG_MODULE_MAIN>

11 
ˇt
 <<
EOF
 > 
$cfg


12 <
c⁄fig
>

13 <
CLICON_CONFIGFILE
>
$cfg
</CLICON_CONFIGFILE>

14 <
CLICON_YANG_DIR
>/
u§
/
loˇl
/
v¨
</CLICON_YANG_DIR>

15 <
CLICON_YANG_MODULE_MAIN
>
$fy™g
</CLICON_YANG_MODULE_MAIN>

16 <
CLICON_RESTCONF_PRETTY
>
Ál£
</CLICON_RESTCONF_PRETTY>

17 <
CLICON_SOCK
>/
u§
/
loˇl
/
v¨
/
$APPNAME
/$APPNAME.
sock
</CLICON_SOCK>

18 <
CLICON_BACKEND_PIDFILE
>
$dú
/
ª°c⁄f
.
pidfûe
</CLICON_BACKEND_PIDFILE>

19 <
CLICON_XMLDB_DIR
>/
u§
/
loˇl
/
v¨
/
$APPNAME
</CLICON_XMLDB_DIR>

20 <
CLICON_XMLDB_PLUGIN
>/
u§
/
loˇl
/
lib
/
xmldb
/
ãxt
.
so
</CLICON_XMLDB_PLUGIN>

21 </
c⁄fig
>

22 
EOF


24 
ˇt
 <<
EOF
 > 
$fy™g


25 
moduÀ
 
exam∂e
{

26 
c⁄èöî
 
c⁄t1
{

27 
li°
 
öãrÁ˚
{

28 
key
 
«me
;

29 
Àaf
 
	g«me
{

30 
ty≥
 
	g°rög
;

32 
Àaf
 
	gty≥
{

33 
m™d©‹y
 
	gåue
;

34 
ty≥
 
	g°rög
;

38 
c⁄èöî
 
	gc⁄t2
{

39 
Àaf
 
	g«me
{

40 
ty≥
 
	g°rög
;

44 
	gEOF


46 #kû»
ﬁd
 
backíd
 (
™y
)

47 
	g√w
 "kill old backend"

48 
sudo
 
	g˛ix⁄_backíd
 -
zf
 
$cfg


49 [ 
$
? -
√
 0 ]; 
thí


50 
îr


51 
fi


52 
	g√w
 "start backend -s init -f $cfg -y $fyang"

53 
sudo
 
	g˛ix⁄_backíd
 -
s
 
	göô
 -
f
 
	g$cfg
 -
y
 
$fy™g


54 [ 
$
? -
√
 0 ]; 
thí


55 
îr


56 
fi


58 
	g√w
 "kill oldÑestconf daemon"

59 
sudo
 
	gpkûl
 -
u
 
	gwww
-
d©a
 
˛ix⁄_ª°c⁄f


61 
	g√w
 "startÑestconf daemon"

62 
sudo
 
	g°¨t
-
	g°›
-
	gd´m⁄
 -
	gS
 -
	gq
 -
	go
 -
	gb
 -
	gx
 /
	gwww
-
	gd©a
/
	g˛ix⁄_ª°c⁄f
 -
	gd
 /www-d©®-
c
 www-d©®-- -
f
 
	g$cfg
 #-
D


64 
	g¶ìp
 1

66 
	g√w
 "restconfÅests"

68 
	g√w
 "restconf POST initialÅree"

69 
	gex≥˘‚
 'curl -s -X POST -d {"cont1":{"interface":{"name":"local0","type":"regular"}}} http://localhost/restconf/data' ""

71 
	g√w
 "restconf GET datastore"

72 
	gex≥˘‚
 "curl -s -X GET http://localhost/restconf/data" '{"data": {"cont1": {"interface": \[{"name": "local0","type": "regular"}\]}}}'

74 
	g√w
 "restconf GET interface"

75 
	gex≥˘‚
 "curl -s -X GET http://localhost/restconf/data/cont1/interface=local0" '{"interface": \[{"name": "local0","type": "regular"}\]}'

77 
	g√w
 "restconf GET if-type"

78 
	gex≥˘‚
 "curl -s -X GET http://localhost/restconf/data/cont1/interface=local0/type" '{"type": "regular"}'

80 
	g√w
 "restconf POST interface without mandatoryÅype"

81 
	gex≥˘‚
 'curl -s -X POST -d {"interface":{"name":"TEST"}} http://localhost/restconf/data/cont1' '"error-message": "Missing mandatory variable:Åype"'

83 
	g√w
 "restconf POST interface"

84 
	gex≥˘‚
 'curl -s -X POST -d {"interface":{"name":"TEST","type":"eth0"}} http://localhost/restconf/data/cont1' ""

86 
	g√w2
 "restconf POSTágain"

87 
	gex≥˘eq
 "$(cuæ -†-X POST -d '{"
	göãrÁ˚
":{"
	g«me
":"
	gTEST
","
	gty≥
":"
	gëh0
"}}' http://localhost/restconf/data/cont1)" '{"ietf-restconf:errors" : {"error": {"error-tag": "data-exists","error-type": "application","error-severity": "error","error-message": "DataálreadyÉxists; cannot createÇewÑesource"}}}'

89 
	g√w2
 "restconf POST fromÅop"

90 
	gex≥˘eq
 "$(cuæ -†-X POST -d '{"
	gc⁄t1
":{"
	göãrÁ˚
":{"
	g«me
":"
	gTEST
","
	gty≥
":"
	gëh0
"}}}' http://localhost/restconf/data)" '{"ietf-restconf:errors" : {"error": {"error-tag": "data-exists","error-type": "application","error-severity": "error","error-message": "DataálreadyÉxists; cannot createÇewÑesource"}}}'

92 
	g√w
 "restconf DELETE"

93 
	gex≥˘‚
 'curl -s -X DELETE http://localhost/restconf/data/cont1' ""

95 
	g√w
 "restconf GETÇull datastore"

96 
	gex≥˘‚
 "curl -s -X GET http://localhost/restconf/data" '{"data":Çull}'

98 
	g√w
 "restconf POST initialÅree"

99 
	gex≥˘‚
 'curl -s -X POST -d {"cont1":{"interface":{"name":"local0","type":"regular"}}} http://localhost/restconf/data' ""

101 
	g√w
 "restconf GET initialÅree"

102 
	gex≥˘‚
 "curl -s -X GET http://localhost/restconf/data" '{"data": {"cont1": {"interface": \[{"name": "local0","type": "regular"}\]}}}'

104 
	g√w
 "restconf DELETE whole datastore"

105 
	gex≥˘‚
 'curl -s -X DELETE http://localhost/restconf/data' ""

107 
	g√w
 "restconf GETÇull datastore"

108 
	gex≥˘‚
 "curl -s -X GET http://localhost/restconf/data" '{"data":Çull}'

110 
	g√w
 "restconf PUT initial datastore"

111 
	gex≥˘‚
 'curl -s -X PUT -d {"data":{"cont1":{"interface":{"name":"local0","type":"regular"}}}} http://localhost/restconf/data' ""

113 
	g√w
 "restconf GET datastore"

114 
	gex≥˘‚
 "curl -s -X GET http://localhost/restconf/data" '{"data": {"cont1": {"interface": \[{"name": "local0","type": "regular"}\]}}}'

116 
	g√w
 "restconf PUTÑeplace datastore"

117 
	gex≥˘‚
 'curl -s -X PUT -d {"data":{"cont2":{"name":"foo"}}} http://localhost/restconf/data' ""

119 
	g√w
 "restconf GETÑeplaced datastore"

120 
	gex≥˘‚
 "curl -s -X GET http://localhost/restconf/data" '{"data": {"cont2": {"name": "foo"}}}'

123 
	g√w
 "restconf PUT initial datastoreágain"

124 
	gex≥˘‚
 'curl -s -X PUT -d {"data":{"cont1":{"interface":{"name":"local0","type":"regular"}}}} http://localhost/restconf/data' ""

126 
	g√w
 "restconf PUT change interface"

127 
	gex≥˘‚
 'curl -s -X PUT -d {"interface":{"name":"local0","type":"atm0"}} http://localhost/restconf/data/cont1/interface=local0' ""

130 
	g√w
 "restconf GET datastoreátm"

131 
	gex≥˘‚
 "curl -s -X GET http://localhost/restconf/data" '{"data": {"cont1": {"interface": \[{"name": "local0","type": "atm0"}\]}}}'

133 
	g√w
 "restconf PUTádd interface"

134 
	gex≥˘‚
 'curl -s -X PUT -d {"interface":{"name":"TEST","type":"eth0"}} http://localhost/restconf/data/cont1/interface=TEST' ""

136 
	g√w
 "restconf PUT change keyÉrror"

137 
	gex≥˘‚
 'curl -is -X PUT -d {"interface":{"name":"ALPHA","type":"eth0"}} http://localhost/restconf/data/cont1/interface=TEST' '{"ietf-restconf:errors" : {"error": {"rpc-error": {"error-tag": "operation-failed","error-type": "protocol","error-severity": "error","error-message": "api-path keys doÇot match data keys"}}}}'

139 
	g√w
 "KillÑestconf daemon"

140 
sudo
 
	gpkûl
 -
u
 
	gwww
-
d©a
 
˛ix⁄_ª°c⁄f


142 
	g√w
 "Kill backend"

143 #Check 
°ûl
 
Æive


144 
	gpid
=`
pgªp
 
˛ix⁄_backíd
`

145 [ -
z
 "$pid" ]; 
thí


146 
	gîr
 "backendálready dead"

147 
	gfi


148 #kû»
backíd


149 
sudo
 
	g˛ix⁄_backíd
 -
zf
 
$cfg


150 [ 
$
? -
√
 0 ]; 
thí


151 
	gîr
 "kill backend"

152 
fi


154 
	grm
 -
rf
 
	g$dú


	@clixon-master/test/test_startup.sh

1 #!/
bö
/
bash


2 #Sèπu∞
ã°
: 
Sèπ
 
˛ic⁄
 
d´m⁄
 
ö
 
the
 (
four
Ë
dif„ª¡
 
°¨tup
 
modes


3 #™d 
the
 
dbs
 
™d
 
fûes
 
¨e
 
£tup
 
as
 
fﬁlows
:

4 #- 
The
 
exam∂e
 
ª£t_°©e
 
ˇŒback
 
adds
 "lo" 
öãrÁ˚


5 #- 
An
 
exåa
 
xml
 
c⁄figuøti⁄
 
fûe
 
°¨ts
 
wôh
 
™
 "exåa" 
öãrÁ˚


6 #- 
ru¬ög
 
db
 
°¨ts
 
wôh
 
a
 "run" 
öãrÁ˚


7 #- 
°¨tup
 
db
 
°¨ts
 
wôh
 
a
 "°¨t" 
öãrÁ˚


8 
	gAPPNAME
=
exam∂e


9 #ö˛udê
îr
(Ë
™d
 
√w
(Ë
fun˘i⁄s
ánd 
¸óãs
 
$dú


10 . ./
lib
.
sh


11 
cfg
=
$dú
/
c⁄f_°¨tup
.
xml


13 
ˇt
 <<
EOF
 > 
$cfg


14 <
c⁄fig
>

15 <
CLICON_CONFIGFILE
>
$cfg
</CLICON_CONFIGFILE>

16 <
CLICON_YANG_DIR
>/
u§
/
loˇl
/
sh¨e
/
$APPNAME
/
y™g
</CLICON_YANG_DIR>

17 <
CLICON_YANG_MODULE_MAIN
>
exam∂e
</CLICON_YANG_MODULE_MAIN>

18 <
CLICON_CLI_MODE
>
$APPNAME
</CLICON_CLI_MODE>

19 <
CLICON_BACKEND_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
backíd
</CLICON_BACKEND_DIR>

20 <
CLICON_NETCONF_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
√tc⁄f
</CLICON_NETCONF_DIR>

21 <
CLICON_RESTCONF_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
ª°c⁄f
</CLICON_RESTCONF_DIR>

22 <
CLICON_CLI_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
˛i
</CLICON_CLI_DIR>

23 <
CLICON_CLISPEC_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
˛i•ec
</CLICON_CLISPEC_DIR>

24 <
CLICON_SOCK
>/
u§
/
loˇl
/
v¨
/
$APPNAME
/$APPNAME.
sock
</CLICON_SOCK>

25 <
CLICON_BACKEND_PIDFILE
>/
u§
/
loˇl
/
v¨
/
$APPNAME
/$APPNAME.
pidfûe
</CLICON_BACKEND_PIDFILE>

26 <
CLICON_CLI_GENMODEL_COMPLETION
>1</CLICON_CLI_GENMODEL_COMPLETION>

27 <
CLICON_XMLDB_DIR
>/
u§
/
loˇl
/
v¨
/
$APPNAME
</CLICON_XMLDB_DIR>

28 <
CLICON_XMLDB_PLUGIN
>/
u§
/
loˇl
/
lib
/
xmldb
/
ãxt
.
so
</CLICON_XMLDB_PLUGIN>

29 <
CLICON_CLI_LINESCROLLING
>0</CLICON_CLI_LINESCROLLING>

30 <
CLICON_STARTUP_MODE
>
öô
</CLICON_STARTUP_MODE>

31 <
CLICON_XML_SORT
>
åue
</CLICON_XML_SORT>

32 </
c⁄fig
>

34 
EOF


36 
	$run
(){

37 
mode
=
$1


38 
ex≥˘
=
$2


40 
dbdú
=
$dú
/
db


41 
ˇt
 <<
EOF
 > 
$dbdú


42 <
c⁄fig
>

43 <
öãrÁ˚s
>

44 <
öãrÁ˚
>

45 <
«me
>
run
</name>

46 <
ty≥
>
ëh
</type>

47 </
öãrÁ˚
>

48 </
öãrÁ˚s
>

49 </
c⁄fig
>

50 
EOF


51 
sudo
 
mv
 
$dbdú
 /
u§
/
loˇl
/
v¨
/
$APPNAME
/
ru¬ög_db


53 
ˇt
 <<
EOF
 > 
$dbdú


54 <
c⁄fig
>

55 <
öãrÁ˚s
>

56 <
öãrÁ˚
>

57 <
«me
>
°¨tup
</name>

58 <
ty≥
>
ëh
</type>

59 </
öãrÁ˚
>

60 </
öãrÁ˚s
>

61 </
c⁄fig
>

62 
EOF


63 
sudo
 
mv
 
$dbdú
 /
u§
/
loˇl
/
v¨
/
$APPNAME
/
°¨tup_db


65 
ˇt
 <<
EOF
 > 
$dú
/
c⁄fig


66 <
c⁄fig
>

67 <
öãrÁ˚s
>

68 <
öãrÁ˚
>

69 <
«me
>
exåa
</name>

70 <
ty≥
>
ëh
</type>

71 </
öãrÁ˚
>

72 </
öãrÁ˚s
>

73 </
c⁄fig
>

74 
EOF


76 #kû»
ﬁd
 
	`backíd
 (
™y
)

77 
√w
 "kill old backend"

78 
sudo
 
˛ix⁄_backíd
 -
zf
 
$cfg


79 [ 
$
? -
√
 0 ]; 
thí


80 
îr


81 
fi


83 
√w
 "start backend -f $cfg -s $mode -c $dir/config"

84 
sudo
 
˛ix⁄_backíd
 -
f
 
$cfg
 -
s
 
$mode
 -
c
 
$dú
/
c⁄fig


85 [ 
$
? -
√
 0 ]; 
thí


86 
îr


87 
fi


89 
√w
 "Check $mode"

90 
ex≥˘eof
 "$clixon_netconf -qf $cfg" '<rpc><get-config><source><running/></source></get-config></rpc>]]>]]>' "^<rpc-reply>$expect</rpc-reply>]]>]]>$"

92 
√w
 "Kill backend"

93 #Check 
°ûl
 
Æive


94 
pid
=`
pgªp
 
˛ix⁄_backíd
`

95 [ -
z
 "$pid" ]; 
thí


96 
îr
 "backendálready dead"

97 
fi


98 #kû»
backíd


99 
sudo
 
˛ix⁄_backíd
 -
zf
 
$cfg


100 [ 
$
? -
√
 0 ]; 
thí


101 
îr
 "kill backend"

102 
fi


103 
	}
}

105 
run
 
	göô
 '<data/>'

106 
run
 
	gn⁄e
 '<data><interfaces><interface><name>run</name><type>eth</type><enabled>true</enabled></interface></interfaces></data>'

107 
run
 
	gru¬ög
 '<data><interfaces><interface><name>extra</name><type>eth</type><enabled>true</enabled></interface><interface><name>lo</name><type>local</type><enabled>true</enabled></interface><interface><name>run</name><type>eth</type><enabled>true</enabled></interface></interfaces></data>'

108 
run
 
	g°¨tup
 '<data><interfaces><interface><name>extra</name><type>eth</type><enabled>true</enabled></interface><interface><name>lo</name><type>local</type><enabled>true</enabled></interface><interface><name>startup</name><type>eth</type><enabled>true</enabled></interface></interfaces></data>'

110 
	grm
 -
rf
 
	g$dú


	@clixon-master/test/test_type.sh

1 #!/
bö
/
bash


2 #Adv™˚d 
ty≥s
 
™d
 
gíî©ed
 
code


3 #™d 
w
 
vÆues


4 
	gAPPNAME
=
exam∂e


5 #ö˛udê
îr
(Ë
™d
 
√w
(Ë
fun˘i⁄s
ánd 
¸óãs
 
$dú


6 . ./
lib
.
sh


8 
cfg
=
$dú
/
c⁄f_y™g
.
xml


9 
fy™g
=
$dú
/
ty≥
.
y™g


11 
ˇt
 <<
EOF
 > 
$cfg


12 <
c⁄fig
>

13 <
CLICON_CONFIGFILE
>
$cfg
</CLICON_CONFIGFILE>

14 <
CLICON_YANG_DIR
>/
u§
/
loˇl
/
sh¨e
/
$APPNAME
/
y™g
</CLICON_YANG_DIR>

15 <
CLICON_YANG_MODULE_MAIN
>
exam∂e
</CLICON_YANG_MODULE_MAIN>

16 <
CLICON_CLISPEC_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
˛i•ec
</CLICON_CLISPEC_DIR>

17 <
CLICON_CLI_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
˛i
</CLICON_CLI_DIR>

18 <
CLICON_CLI_MODE
>
$APPNAME
</CLICON_CLI_MODE>

19 <
CLICON_SOCK
>/
u§
/
loˇl
/
v¨
/
$APPNAME
/$APPNAME.
sock
</CLICON_SOCK>

20 <
CLICON_BACKEND_PIDFILE
>/
u§
/
loˇl
/
v¨
/
$APPNAME
/$APPNAME.
pidfûe
</CLICON_BACKEND_PIDFILE>

21 <
CLICON_CLI_GENMODEL_COMPLETION
>1</CLICON_CLI_GENMODEL_COMPLETION>

22 <
CLICON_XMLDB_DIR
>/
u§
/
loˇl
/
v¨
/
$APPNAME
</CLICON_XMLDB_DIR>

23 <
CLICON_XMLDB_PLUGIN
>/
u§
/
loˇl
/
lib
/
xmldb
/
ãxt
.
so
</CLICON_XMLDB_PLUGIN>

24 </
c⁄fig
>

25 
EOF


27 
ˇt
 <<
EOF
 > 
$fy™g


28 
moduÀ
 
exam∂e
{

29 
ab
 {

30 
ty≥
 
°rög
 {

31 
∑âîn


35 
	gcd
 {

36 
ty≥
 
	g°rög
 {

37 
	g∑âîn


41 
	gef
 {

42 
ty≥
 
	g°rög
 {

43 
	g∑âîn


45 
	gÀngth
 "1..253";

48 
	gad
 {

49 
ty≥
 union {

50 
ty≥
 
	gab
;

51 
ty≥
 
	gcd
;

54 
	gaf
 {

55 
ty≥
 union {

56 
ty≥
 
	gad
;

57 
ty≥
 
	gef
;

60 
	tli°
Üist {

61 
key
 
	gù
;

62 
Àaf
 
	gù
 {

63 
ty≥
 
	gaf
;

66 
	tÀaf
 
	t°©us
 {

67 
ty≥
 
	gíumî©i⁄
 {

68 
	eup
 {

69 
	gvÆue
 1;

71 
	gdown
;

74 
	tÀaf
 
	tÀngth1
 {

75 
ty≥
 
	g°rög
 {

76 
	gÀngth
 "1";

89 
	tÀaf
 
	tÀngth4
 {

90 
ty≥
 
	g°rög
 {

91 
	gÀngth
 "4..4000";

99 
	tÀaf
 
	tnum1
 {

100 
ty≥
 
	göt32
 {

101 
	gønge
 "1";

115 
	tÀaf
 
	tnum4
 {

116 
ty≥
 
	göt32
 {

117 
	gønge
 "4..4000";

126 
	gEOF


129 #kû»
ﬁd
 
backíd
 (
™y
)

130 
	g√w
 "kill old backend"

131 
sudo
 
	g˛ix⁄_backíd
 -
zf
 
$cfg


132 [ 
$
? -
√
 0 ]; 
thí


133 
îr


134 
fi


135 
	g√w
 "start backend -s init -f $cfg -y $fyang"

136 
sudo
 
	g˛ix⁄_backíd
 -
s
 
	göô
 -
f
 
	g$cfg
 -
y
 
$fy™g


137 [ 
$
? -
√
 0 ]; 
thí


138 
îr


139 
fi


141 
	g√w
 "cli setáb"

142 
	gex≥˘‚
 "$clixon_cli -1f $cfg -l o -y $fyang setÜistá.b.a.b" "^$"

144 
	g√w
 "cli set cd"

145 
	gex≥˘‚
 "$clixon_cli -1f $cfg -l o -y $fyang setÜist c.d.c.d" "^$"

147 
	g√w
 "cli setÉf"

148 
	gex≥˘‚
 "$clixon_cli -1f $cfg -l o -y $fyang setÜistÉ.f.e.f" "^$"

150 
	g√w
 "cli setáb fail"

151 
	gex≥˘‚
 "$clixon_cli -1f $cfg -l o -y $fyang setÜistá&b&a&b" "^CLI syntaxÉrror"

153 
	g√w
 "cli setád fail"

154 
	gex≥˘‚
 "$clixon_cli -1f $cfg -l o -y $fyang setÜistá.b.c.d" "^CLI syntaxÉrror"

156 
	g√w
 "cli validate"

157 
	gex≥˘‚
 "$clixon_cli -1f $cfg -l o -y $fyang -l o validate" "^$"

159 
	g√w
 "cli commit"

160 
	gex≥˘‚
 "$clixon_cli -1f $cfg -l o -y $fyang -l o commit" "^$"

162 
	g√w
 "netconf validate ok"

163 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><validate><source><candidate/></source></validate></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

165 
	g√w
 "netconf setáb wrong"

166 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><list><ip>a.b&amp; c.d</ip></list></config></edit-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

168 
	g√w
 "netconf validate"

169 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><validate><source><candidate/></source></validate></rpc>]]>]]>" "^<rpc-reply><rpc-error>"

171 
	g√w
 "netconf discard-changes"

172 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><discard-changes/></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

174 
	g√w
 "netconf commit"

175 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><commit/></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

177 
	g√w
 "cliÉnum value"

178 
	gex≥˘‚
 "$clixon_cli -1f $cfg -l o -y $fyang set status down" "^$"

180 
	g√w
 "Kill backend"

181 #Check 
°ûl
 
Æive


182 
	gpid
=`
pgªp
 
˛ix⁄_backíd
`

183 [ -
z
 "$pid" ]; 
thí


184 
	gîr
 "backendálready dead"

185 
	gfi


186 #kû»
backíd


187 
sudo
 
	g˛ix⁄_backíd
 -
zf
 
$cfg


188 [ 
$
? -
√
 0 ]; 
thí


189 
	gîr
 "kill backend"

190 
fi


192 
	grm
 -
rf
 
	g$dú


	@clixon-master/test/test_yang.sh

1 #!/
bö
/
bash


2 #Te°4: 
Y™g
 
•ecifics
: 
mu…i
-
keys
 
™d
 
em±y
 
ty≥


3 
	gAPPNAME
=
exam∂e


4 #ö˛udê
îr
(Ë
™d
 
√w
(Ë
fun˘i⁄s
ánd 
¸óãs
 
$dú


5 . ./
lib
.
sh


7 
cfg
=
$dú
/
c⁄f_y™g
.
xml


8 
fy™g
=
$dú
/
ã°
.
y™g


9 
fy™gîr
=
$dú
/
îr
.
y™g


11 
ˇt
 <<
EOF
 > 
$cfg


12 <
c⁄fig
>

13 <
CLICON_CONFIGFILE
>
$cfg
</CLICON_CONFIGFILE>

14 <
CLICON_YANG_DIR
>/
u§
/
loˇl
/
sh¨e
/
$APPNAME
/
y™g
</CLICON_YANG_DIR>

15 <
CLICON_YANG_MODULE_MAIN
>
$APPNAME
</CLICON_YANG_MODULE_MAIN>

16 <
CLICON_CLISPEC_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
˛i•ec
</CLICON_CLISPEC_DIR>

17 <
CLICON_CLI_DIR
>/
u§
/
loˇl
/
lib
/
$APPNAME
/
˛i
</CLICON_CLI_DIR>

18 <
CLICON_CLI_MODE
>
$APPNAME
</CLICON_CLI_MODE>

19 <
CLICON_SOCK
>/
u§
/
loˇl
/
v¨
/
$APPNAME
/$APPNAME.
sock
</CLICON_SOCK>

20 <
CLICON_BACKEND_PIDFILE
>/
u§
/
loˇl
/
v¨
/
$APPNAME
/$APPNAME.
pidfûe
</CLICON_BACKEND_PIDFILE>

21 <
CLICON_CLI_GENMODEL_COMPLETION
>1</CLICON_CLI_GENMODEL_COMPLETION>

22 <
CLICON_XMLDB_DIR
>/
u§
/
loˇl
/
v¨
/
$APPNAME
</CLICON_XMLDB_DIR>

23 <
CLICON_XMLDB_PLUGIN
>/
u§
/
loˇl
/
lib
/
xmldb
/
ãxt
.
so
</CLICON_XMLDB_PLUGIN>

24 </
c⁄fig
>

25 
EOF


27 
ˇt
 <<
EOF
 > 
$fy™g


28 
moduÀ
 
$APPNAME
{

29 
¥efix
 
ex
;

30 
exãnsi⁄
 
	gc
-
	gdeföe
 {

31 
	gdes¸ùti⁄
 "Example from RFC 6020";

32 
	g¨gumít
 "name";

34 
	gex
:
c
-
deföe
 "MY_INTERFACES";

35 
c⁄èöî
 
	gx
 {

36 
li°
 
	gy
 {

37 
	gkey
 "a b c";

38 
Àaf
 
	ga
 {

39 
ty≥
 
	g°rög
;

41 
Àaf
 
	gb
 {

42 
ty≥
 
	g°rög
;

44 
Àaf
 
	gc
 {

45 
ty≥
 
	g°rög
;

47 
Àaf
 
	gvÆ
 {

48 
ty≥
 
	g°rög
;

51 
Àaf
 
	gd
 {

52 
ty≥
 
	gem±y
;

54 
c⁄èöî
 
	gf
 {

55 
	gÀaf
-
li°
 
	ge
 {

56 
ty≥
 
	g°rög
;

59 
Àaf
 
	gg
 {

60 
ty≥
 
	g°rög
;

62 
c⁄èöî
 
	gn›ª£n˚
 {

63 
	gdes¸ùti⁄
 "NoÖresence should beÑemoved ifÇo children";

64 
Àaf
 
	gj
 {

65 
ty≥
 
	g°rög
;

68 
c⁄èöî
 
	g¥e£n˚
 {

69 
	gdes¸ùti⁄
 "Presence shouldÇot beÑemovedÉven ifÇo children";

70 
	g¥e£n˚
 "even ifÉmpty shouldÑemain";

71 
Àaf
 
	gj
 {

72 
ty≥
 
	g°rög
;

75 
™yxml
 
	g™y
{

76 
	gdes¸ùti⁄
 "testing ofányxml";

79 
c⁄èöî
 
	g°©e
 {

80 
c⁄fig
 
	gÁl£
;

81 
	gÀaf
-
li°
 
	g›
 {

82 
ty≥
 
	g°rög
;

86 
	gEOF


88 #Thi†
y™g
 
deföôi⁄
 
u£s
 
™
 
exãnsi⁄
 
which
 
is
 
nŸ
 
deföed
. 
Eº‹
 
whí
 
lﬂdög


89 
	gˇt
 <<
	gEOF
 > 
$fy™gîr


90 
moduÀ
 
	g$APPNAME
{

91 
¥efix
 
	gex
;

92 
exãnsi⁄
 
	gc
-
	gdeföe
 {

93 
	gdes¸ùti⁄
 "Example from RFC 6020";

94 
	g¨gumít
 "name";

96 
	gex
:
nŸ
-
deföed
 
ARGUMENT
;

98 
	gEOF


99 #kû»
ﬁd
 
backíd
 (
™y
)

100 
	g√w
 "kill old backend"

101 
sudo
 
	g˛ix⁄_backíd
 -
zf
 
	g$cfg
 -
y
 
$fy™g


102 [ 
$
? -
√
 0 ]; 
thí


103 
îr


104 
fi


106 
	g√w
 "start backend -s init -f $cfg -y $fyang"

107 #°¨à
√w
 
backíd


108 
sudo
 
	g˛ix⁄_backíd
 -
s
 
	göô
 -
f
 
	g$cfg
 -
y
 
$fy™g


109 [ 
$
? -
√
 0 ]; 
thí


110 
îr


111 
fi


113 
	g√w
 "cli definedÉxtension"

114 
	gex≥˘‚
 "$clixon_cli -1f $cfg -y $fyang show version" "3."

116 
	g√w
 "cliÇot definedÉxtension"

117 #Thi†
ãxt
 
yõlds
 
™
 
îr‹
, 
but
 
the
 
ã°
 
ˇ¬Ÿ
 
dëe˘
Åhêîr‹ 
mesßge
 
yë


120 
	g√w
 "netconfÉdit config"

121 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><x><y><a>1</a><b>2</b><c>5</c><val>one</val></y><d/></x></config></edit-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

123 
	g√w
 "netconf commit"

124 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><commit/></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

126 #ãxà
em±y
 
ty≥
 
ö
 
ru¬ög


127 
	g√w
 "netconf commit 2nd"

128 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><commit/></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

130 
	g√w
 "netconf get config xpath"

131 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><get-config><source><candidate/></source><filterÅype=\"xpath\" select=\"/x/y[a=1][b=2][c=5]\"/></get-config></rpc>]]>]]>" "^<rpc-reply><data><x><y><a>1</a><b>2</b><c>5</c><val>one</val></y></x></data></rpc-reply>]]>]]>$"

133 
	g√w
 "netconfÉditÜeaf-list"

134 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><x><f><e>hej</e><e>hopp</e></f></x></config></edit-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

136 
	g√w
 "netconf getÜeaf-list"

137 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><get-config><source><candidate/></source><filterÅype=\"xpath\" select=\"/x/f/e\"/></get-config></rpc>]]>]]>" "^<rpc-reply><data><x><f><e>hej</e><e>hopp</e></f></x></data></rpc-reply>]]>]]>$"

139 
	g√w
 "netconf getÜeaf-listÖath"

140 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><get-config><source><candidate/></source><filterÅype=\"xpath\" select=\"/x/f[e=hej]\"/></get-config></rpc>]]>]]>" "^<rpc-reply><data><x><f><e>hej</e><e>hopp</e></f></x></data></rpc-reply>]]>]]>$"

142 
	g√w
 "netconf get (should be some)"

143 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><get><filterÅype=\"xpath\" select=\"/\"/></get></rpc>]]>]]>" "^<rpc-reply><data><x><y><a>1</a><b>2</b><c>5</c><val>one</val></y><d/></x></data></rpc-reply>]]>]]>$"

145 
	g√w
 "cli setÜeaf-list"

146 
	gex≥˘‚
 "$clixon_cli -1f $cfg -y $fyang set x fÉ foo" ""

148 
	g√w
 "cli showÜeaf-list"

149 
	gex≥˘‚
 "$clixon_cli -1f $cfg -y $fyang show xpath /x/f/e" "<e>foo</e>"

150 
	g√w
 "netconf set state data (notállowed)"

151 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><state><op>42</op></state></config></edit-config></rpc>]]>]]>" "^<rpc-reply><rpc-error><error-tag>invalid-value"

153 
	g√w
 "netconf setÖresenceándÇotÖresent"

154 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><x><nopresence/><presence/></x></config></edit-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

156 
	g√w
 "netconf getÖresence only"

157 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" '<rpc><get-config><source><candidate/></source><filterÅype="xpath" select="/x/*presence"/></get-config></rpc>]]>]]>' "^<rpc-reply><data><x><presence/></x></data></rpc-reply>]]>]]>$"

159 
	g√w
 "netconf discard-changes"

160 
	gex≥˘eof
 "$clixon_netconf -qf $cfg" "<rpc><discard-changes/></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

162 
	g√w
 "netconfányxml"

163 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><x><any><foo><bará=\"nisse\"/></foo></any></x></config></edit-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

165 
	g√w
 "netconf validateányxml"

166 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><validate><source><candidate/></source></validate></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

168 
	g√w
 "netconf delete candidate"

169 
	gex≥˘eof
 "$clixon_netconf -qf $cfg" "<rpc><delete-config><target><candidate/></target></delete-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

171 #Check 3-
keys


172 
	g√w
 "netconfádd one 3-keyÉntry"

173 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><x><y><a>1</a><b>1</b><c>1</c><val>one</val></y></x></config></edit-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

175 
	g√w
 "netconf checkádd one 3-key"

176 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" '<rpc><get-config><source><candidate/></source></get-config></rpc>]]>]]>' '<rpc-reply><data><x><y><a>1</a><b>1</b><c>1</c><val>one</val></y></x></data></rpc-reply>]]>]]>'

178 
	g√w
 "netconfáddánother (with same 1st key)"

179 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><x><y><a>1</a><b>2</b><c>1</c><val>two</val></y></x></config></edit-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

181 
	g√w
 "netconf checkáddánother"

182 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" '<rpc><get-config><source><candidate/></source></get-config></rpc>]]>]]>' '<rpc-reply><data><x><y><a>1</a><b>1</b><c>1</c><val>one</val></y><y><a>1</a><b>2</b><c>1</c><val>two</val></y></x></data></rpc-reply>]]>]]>'

184 
	g√w
 "netconfÑeplace first"

185 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" "<rpc><edit-config><target><candidate/></target><config><x><y><a>1</a><b>1</b><c>1</c><val>replace</val></y></x></config></edit-config></rpc>]]>]]>" "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

187 
	g√w
 "netconf checkÑeplace"

188 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" '<rpc><get-config><source><candidate/></source></get-config></rpc>]]>]]>' '<rpc-reply><data><x><y><a>1</a><b>1</b><c>1</c><val>replace</val></y><y><a>1</a><b>2</b><c>1</c><val>two</val></y></x></data></rpc-reply>]]>]]>'

190 
	g√w
 "netconf delete first"

191 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" '<rpc><edit-config><target><candidate/></target><config><x><y operation="remove"><a>1</a><b>1</b><c>1</c></y></x></config></edit-config></rpc>]]>]]>' "^<rpc-reply><ok/></rpc-reply>]]>]]>$"

193 
	g√w
 "netconf check delete"

194 
	gex≥˘eof
 "$clixon_netconf -qf $cfg -y $fyang" '<rpc><get-config><source><candidate/></source></get-config></rpc>]]>]]>' '<rpc-reply><data><x><y><a>1</a><b>2</b><c>1</c><val>two</val></y></x></data></rpc-reply>]]>]]>'

196 #Check 
°ûl
 
Æive


197 
	gpid
=`
pgªp
 
˛ix⁄_backíd
`

198 [ -
z
 "$pid" ]; 
thí


199 
	gîr
 "backendálready dead"

200 
	gfi


201 #kû»
backíd


202 
sudo
 
	g˛ix⁄_backíd
 -
zf
 
$cfg


203 [ 
$
? -
√
 0 ]; 
thí


204 
	gîr
 "kill backend"

205 
fi


207 
	grm
 -
rf
 
	g$dú


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/arpa/inet.h

18 #i‚de‡
_ARPA_INET_H


19 
	#_ARPA_INET_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<√töë/ö.h
>

25 #i‚de‡
__sockÀn_t_deföed


26 
__sockÀn_t
 
	tsockÀn_t
;

27 
	#__sockÀn_t_deföed


	)

30 
__BEGIN_DECLS


34 
ö_addr_t
 
	$öë_addr
 (c⁄° *
__˝
Ë
__THROW
;

37 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

41 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

42 
__THROW
;

45 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

49 
ö_addr_t
 
	$öë_√tw‹k
 (c⁄° *
__˝
Ë
__THROW
;

53 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

58 
	$öë_±⁄
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

59 *
__ª°ri˘
 
__buf
Ë
__THROW
;

64 c⁄° *
	$öë_¡›
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

65 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

66 
__THROW
;

70 #ifde‡
__USE_MISC


73 
	$öë_©⁄
 (c⁄° *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

77 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

82 *
	$öë_√t_¡›
 (
__af
, c⁄° *
__˝
, 
__bôs
,

83 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

88 
	$öë_√t_±⁄
 (
__af
, c⁄° *
__˝
,

89 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

94 
	$öë_nßp_addr
 (c⁄° *
__˝
,

95 *
__buf
, 
__Àn
Ë
__THROW
;

99 *
	$öë_nßp_¡ﬂ
 (
__Àn
, c⁄° *
__˝
,

100 *
__buf
Ë
__THROW
;

103 
__END_DECLS


	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


119 #unde‡
°©ic_as£π


120 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/crypt.h

24 #i‚de‡
_CRYPT_H


25 
	#_CRYPT_H
 1

	)

27 
	~<„©uªs.h
>

29 
__BEGIN_DECLS


32 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

33 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

36 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

40 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

41 
__THROW
 
	`__n⁄nuŒ
 ((1));

43 #ifde‡
__USE_GNU


46 
	s¸y±_d©a


48 
keysched
[16 * 8];

49 
sb0
[32768];

50 
sb1
[32768];

51 
sb2
[32768];

52 
sb3
[32768];

54 
¸y±_3_buf
[14];

55 
cuºít_ß…
[2];

56 
cuºít_ß…bôs
;

57 
dúe˘i⁄
, 
öôülized
;

60 *
	$¸y±_r
 (c⁄° *
__key
, c⁄° *
__ß…
,

61 
¸y±_d©a
 * 
__ª°ri˘
 
__d©a
)

62 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

64 
	$£tkey_r
 (c⁄° *
__key
,

65 
¸y±_d©a
 * 
__ª°ri˘
 
__d©a
)

66 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

68 
	$í¸y±_r
 (*
__glibc_block
, 
__edÊag
,

69 
¸y±_d©a
 * 
__ª°ri˘
 
__d©a
)

70 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

73 
__END_DECLS


	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #ifde‡
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #ifde‡
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/curl/curl.h

1 #i‚de‡
__CURL_CURL_H


2 
	#__CURL_CURL_H


	)

33 
	~"cuævî.h
"

34 
	~"cuæbuûd.h
"

35 
	~"cuæruÀs.h
"

41 #i‡(
deföed
(
_WIN32
Ë|| deföed(
__WIN32__
)) && \

42 !
deföed
(
WIN32
Ë&& !
	$deföed
(
__SYMBIAN32__
)

43 
	#WIN32


	)

46 
	~<°dio.h
>

47 
	~<limôs.h
>

49 #i‡
	`deföed
(
__FªeBSD__
) && (__FreeBSD__ >= 2)

51 
	~<o§ñd©e.h
>

55 
	~<sys/ty≥s.h
>

56 
	~<time.h
>

58 #i‡
	`deföed
(
WIN32
Ë&& !deföed(
_WIN32_WCE
Ë&& !deföed(
__CYGWIN__
)

59 #i‡!(
	`deföed
(
_WINSOCKAPI_
Ë|| deföed(
_WINSOCK_H
) || \

60 
	`deföed
(
__LWIP_OPT_H__
Ë|| 
	$deföed
(
LWIP_HDR_OPT_H
))

63 
	~<wösock2.h
>

64 
	~<ws2t˝ù.h
>

71 #i‡
	`deföed
(
_AIX
Ë|| deföed(
__NOVELL_LIBC__
Ë|| deföed(
__NëBSD__
) || \

72 
	`deföed
(
__möix
Ë|| deföed(
__SYMBIAN32__
Ë|| deföed(
__INTEGRITY
) || \

73 
	`deföed
(
ANDROID
Ë|| deföed(
__ANDROID__
Ë|| deföed(
__O≥nBSD__
) || \

74 (
	`deföed
(
__FªeBSD_vîsi⁄
) && (__FreeBSD_version < 800000))

75 
	~<sys/£À˘.h
>

78 #i‡!
	`deföed
(
WIN32
Ë&& !deföed(
_WIN32_WCE
)

79 
	~<sys/sockë.h
>

82 #i‡!
	`deföed
(
WIN32
Ë&& !deföed(
__WATCOMC__
Ë&& !deföed(
__VXWORKS__
)

83 
	~<sys/time.h
>

86 #ifde‡
__BEOS__


87 
	~<suµ‹t/Suµ‹tDefs.h
>

90 #ifde‡ 
__˝lu•lus


94 
	tCURL
;

100 #ifde‡
CURL_STATICLIB


101 
	#CURL_EXTERN


	)

102 #ñi‡
	`deföed
(
WIN32
Ë|| deföed(
_WIN32
Ë|| deföed(
__SYMBIAN32__
)

103 #i‡
	`deföed
(
BUILDING_LIBCURL
)

104 
	#CURL_EXTERN
 
	`__de˛•ec
(
dŒexp‹t
)

	)

106 
	#CURL_EXTERN
 
	`__de˛•ec
(
dŒimp‹t
)

	)

108 #ñi‡
	`deföed
(
BUILDING_LIBCURL
Ë&& deföed(
CURL_HIDDEN_SYMBOLS
)

109 
	#CURL_EXTERN
 
CURL_EXTERN_SYMBOL


	)

111 
	#CURL_EXTERN


	)

114 #i‚de‡
cuæ_sockë_ty≥def


116 #i‡
	`deföed
(
WIN32
Ë&& !deföed(
__LWIP_OPT_H__
Ë&& !deföed(
LWIP_HDR_OPT_H
)

117 
SOCKET
 
	tcuæ_sockë_t
;

118 
	#CURL_SOCKET_BAD
 
INVALID_SOCKET


	)

120 
	tcuæ_sockë_t
;

121 
	#CURL_SOCKET_BAD
 -1

	)

123 
	#cuæ_sockë_ty≥def


	)

126 
	scuæ_hâµo°
 {

127 
cuæ_hâµo°
 *
√xt
;

128 *
«me
;

129 
«mñígth
;

130 *
c⁄ã¡s
;

131 
c⁄ã¡¶ígth
;

133 *
buf„r
;

134 
buf„æígth
;

135 *
c⁄ã¡ty≥
;

136 
cuæ_¶i°
* 
c⁄ã¡hódî
;

137 
cuæ_hâµo°
 *
m‹e
;

140 
Êags
;

143 
	#CURL_HTTPPOST_FILENAME
 (1<<0)

	)

145 
	#CURL_HTTPPOST_READFILE
 (1<<1)

	)

147 
	#CURL_HTTPPOST_PTRNAME
 (1<<2)

	)

149 
	#CURL_HTTPPOST_PTRCONTENTS
 (1<<3)

	)

151 
	#CURL_HTTPPOST_BUFFER
 (1<<4)

	)

153 
	#CURL_HTTPPOST_PTRBUFFER
 (1<<5)

	)

156 
	#CURL_HTTPPOST_CALLBACK
 (1<<6)

	)

158 
	#CURL_HTTPPOST_LARGE
 (1<<7)

	)

160 *
showfûíame
;

163 *
u£Ω
;

165 
cuæ_off_t
 
c⁄ã¡Àn
;

172 (*
	tcuæ_¥ogªss_ˇŒback
)(*
	t˛õ¡p
,

173 
	td…ŸÆ
,

174 
	td ow
,

175 
	tu…ŸÆ
,

176 
	tu ow
);

180 (*
	tcuæ_x„röfo_ˇŒback
)(*
	t˛õ¡p
,

181 
	tcuæ_off_t
 
	td…ŸÆ
,

182 
	tcuæ_off_t
 
	td ow
,

183 
	tcuæ_off_t
 
	tu…ŸÆ
,

184 
	tcuæ_off_t
 
	tu ow
);

186 #i‚de‡
CURL_MAX_WRITE_SIZE


193 
	#CURL_MAX_WRITE_SIZE
 16384

	)

196 #i‚de‡
CURL_MAX_HTTP_HEADER


200 
	#CURL_MAX_HTTP_HEADER
 (100*1024)

	)

205 
	#CURL_WRITEFUNC_PAUSE
 0x10000001

	)

207 
	`size_t
 (*
	tcuæ_wrôe_ˇŒback
)(*
	tbuf„r
,

208 
	tsize_t
 
	tsize
,

209 
	tsize_t
 
	tnôems
,

210 *
	tout°ªam
);

216 
CURLFILETYPE_FILE
 = 0,

217 
CURLFILETYPE_DIRECTORY
,

218 
CURLFILETYPE_SYMLINK
,

219 
CURLFILETYPE_DEVICE_BLOCK
,

220 
CURLFILETYPE_DEVICE_CHAR
,

221 
CURLFILETYPE_NAMEDPIPE
,

222 
CURLFILETYPE_SOCKET
,

223 
CURLFILETYPE_DOOR
,

225 
CURLFILETYPE_UNKNOWN


226 } 
	tcuæfûëy≥
;

228 
	#CURLFINFOFLAG_KNOWN_FILENAME
 (1<<0)

	)

229 
	#CURLFINFOFLAG_KNOWN_FILETYPE
 (1<<1)

	)

230 
	#CURLFINFOFLAG_KNOWN_TIME
 (1<<2)

	)

231 
	#CURLFINFOFLAG_KNOWN_PERM
 (1<<3)

	)

232 
	#CURLFINFOFLAG_KNOWN_UID
 (1<<4)

	)

233 
	#CURLFINFOFLAG_KNOWN_GID
 (1<<5)

	)

234 
	#CURLFINFOFLAG_KNOWN_SIZE
 (1<<6)

	)

235 
	#CURLFINFOFLAG_KNOWN_HLINKCOUNT
 (1<<7)

	)

241 
	scuæ_fûeöfo
 {

242 *
fûíame
;

243 
cuæfûëy≥
 
fûëy≥
;

244 
time_t
 
time
;

245 
≥rm
;

246 
uid
;

247 
gid
;

248 
cuæ_off_t
 
size
;

249 
h¨dlöks
;

253 *
time
;

254 *
≥rm
;

255 *
u£r
;

256 *
group
;

257 *
èrgë
;

258 } 
°rögs
;

260 
Êags
;

263 * 
b_d©a
;

264 
size_t
 
b_size
;

265 
size_t
 
b_u£d
;

269 
	#CURL_CHUNK_BGN_FUNC_OK
 0

	)

270 
	#CURL_CHUNK_BGN_FUNC_FAIL
 1

	)

271 
	#CURL_CHUNK_BGN_FUNC_SKIP
 2

	)

276 (*
	tcuæ_chunk_bgn_ˇŒback
)(c⁄° *
	tå™s„r_öfo
,

277 *
	t±r
,

278 
	tªmaös
);

281 
	#CURL_CHUNK_END_FUNC_OK
 0

	)

282 
	#CURL_CHUNK_END_FUNC_FAIL
 1

	)

290 (*
	tcuæ_chunk_íd_ˇŒback
)(*
	t±r
);

293 
	#CURL_FNMATCHFUNC_MATCH
 0

	)

294 
	#CURL_FNMATCHFUNC_NOMATCH
 1

	)

295 
	#CURL_FNMATCHFUNC_FAIL
 2

	)

299 (*
	tcuæ_‚m©ch_ˇŒback
)(*
	t±r
,

300 c⁄° *
	t∑âîn
,

301 c⁄° *
	t°rög
);

304 
	#CURL_SEEKFUNC_OK
 0

	)

305 
	#CURL_SEEKFUNC_FAIL
 1

	)

306 
	#CURL_SEEKFUNC_CANTSEEK
 2

	)

308 (*
	tcuæ_£ek_ˇŒback
)(*
	tö°ªam
,

309 
	tcuæ_off_t
 
	toff£t
,

310 
	t‹igö
);

314 
	#CURL_READFUNC_ABORT
 0x10000000

	)

317 
	#CURL_READFUNC_PAUSE
 0x10000001

	)

319 
	`size_t
 (*
	tcuæ_ªad_ˇŒback
)(*
	tbuf„r
,

320 
	tsize_t
 
	tsize
,

321 
	tsize_t
 
	tnôems
,

322 *
	tö°ªam
);

325 
CURLSOCKTYPE_IPCXN
,

326 
CURLSOCKTYPE_ACCEPT
,

327 
CURLSOCKTYPE_LAST


328 } 
	tcuæsockty≥
;

332 
	#CURL_SOCKOPT_OK
 0

	)

333 
	#CURL_SOCKOPT_ERROR
 1

	)

335 
	#CURL_SOCKOPT_ALREADY_CONNECTED
 2

	)

337 (*
	tcuæ_sock›t_ˇŒback
)(*
	t˛õ¡p
,

338 
	tcuæ_sockë_t
 
	tcuæfd
,

339 
	tcuæsockty≥
 
	tpuΩo£
);

341 
	scuæ_sockaddr
 {

342 
Ámûy
;

343 
sockty≥
;

344 
¥Ÿocﬁ
;

345 
addæí
;

348 
sockaddr
 
addr
;

351 
cuæ_sockë_t


352 (*
	tcuæ_›ísockë_ˇŒback
)(*
	t˛õ¡p
,

353 
	tcuæsockty≥
 
	tpuΩo£
,

354 
	tcuæ_sockaddr
 *
	taddªss
);

357 (*
	tcuæ_˛o£sockë_ˇŒback
)(*
	t˛õ¡p
, 
	tcuæ_sockë_t
 
	tôem
);

360 
CURLIOE_OK
,

361 
CURLIOE_UNKNOWNCMD
,

362 
CURLIOE_FAILRESTART
,

363 
CURLIOE_LAST


364 } 
	tcuæi€º
;

367 
CURLIOCMD_NOP
,

368 
CURLIOCMD_RESTARTREAD
,

369 
CURLIOCMD_LAST


370 } 
	tcuæiocmd
;

372 
	`cuæi€º
 (*
	tcuæ_io˘l_ˇŒback
)(
	tCURL
 *
	th™dÀ
,

373 
	tcmd
,

374 *
	t˛õ¡p
);

382 *(*
	tcuæ_mÆloc_ˇŒback
)(
	tsize_t
 
	tsize
);

383 (*
	tcuæ_‰ì_ˇŒback
)(*
	t±r
);

384 *(*
	tcuæ_ªÆloc_ˇŒback
)(*
	t±r
, 
	tsize_t
 
	tsize
);

385 *(*
	tcuæ_°rdup_ˇŒback
)(c⁄° *
	t°r
);

386 *(*
	tcuæ_ˇŒoc_ˇŒback
)(
	tsize_t
 
	tnmemb
, size_à
	tsize
);

390 
CURLINFO_TEXT
 = 0,

391 
CURLINFO_HEADER_IN
,

392 
CURLINFO_HEADER_OUT
,

393 
CURLINFO_DATA_IN
,

394 
CURLINFO_DATA_OUT
,

395 
CURLINFO_SSL_DATA_IN
,

396 
CURLINFO_SSL_DATA_OUT
,

397 
CURLINFO_END


398 } 
	tcuæ_öfŸy≥
;

400 (*
	tcuæ_debug_ˇŒback
)

401 (
	tCURL
 *
	th™dÀ
,

402 
	tcuæ_öfŸy≥
 
	tty≥
,

403 *
	td©a
,

404 
	tsize_t
 
	tsize
,

405 *
	tu£Ωå
);

415 
CURLE_OK
 = 0,

416 
CURLE_UNSUPPORTED_PROTOCOL
,

417 
CURLE_FAILED_INIT
,

418 
CURLE_URL_MALFORMAT
,

419 
CURLE_NOT_BUILT_IN
,

421 
CURLE_COULDNT_RESOLVE_PROXY
,

422 
CURLE_COULDNT_RESOLVE_HOST
,

423 
CURLE_COULDNT_CONNECT
,

424 
CURLE_FTP_WEIRD_SERVER_REPLY
,

425 
CURLE_REMOTE_ACCESS_DENIED
,

428 
CURLE_FTP_ACCEPT_FAILED
,

430 
CURLE_FTP_WEIRD_PASS_REPLY
,

431 
CURLE_FTP_ACCEPT_TIMEOUT
,

434 
CURLE_FTP_WEIRD_PASV_REPLY
,

435 
CURLE_FTP_WEIRD_227_FORMAT
,

436 
CURLE_FTP_CANT_GET_HOST
,

437 
CURLE_HTTP2
,

440 
CURLE_FTP_COULDNT_SET_TYPE
,

441 
CURLE_PARTIAL_FILE
,

442 
CURLE_FTP_COULDNT_RETR_FILE
,

443 
CURLE_OBSOLETE20
,

444 
CURLE_QUOTE_ERROR
,

445 
CURLE_HTTP_RETURNED_ERROR
,

446 
CURLE_WRITE_ERROR
,

447 
CURLE_OBSOLETE24
,

448 
CURLE_UPLOAD_FAILED
,

449 
CURLE_READ_ERROR
,

450 
CURLE_OUT_OF_MEMORY
,

455 
CURLE_OPERATION_TIMEDOUT
,

456 
CURLE_OBSOLETE29
,

457 
CURLE_FTP_PORT_FAILED
,

458 
CURLE_FTP_COULDNT_USE_REST
,

459 
CURLE_OBSOLETE32
,

460 
CURLE_RANGE_ERROR
,

461 
CURLE_HTTP_POST_ERROR
,

462 
CURLE_SSL_CONNECT_ERROR
,

463 
CURLE_BAD_DOWNLOAD_RESUME
,

464 
CURLE_FILE_COULDNT_READ_FILE
,

465 
CURLE_LDAP_CANNOT_BIND
,

466 
CURLE_LDAP_SEARCH_FAILED
,

467 
CURLE_OBSOLETE40
,

468 
CURLE_FUNCTION_NOT_FOUND
,

469 
CURLE_ABORTED_BY_CALLBACK
,

470 
CURLE_BAD_FUNCTION_ARGUMENT
,

471 
CURLE_OBSOLETE44
,

472 
CURLE_INTERFACE_FAILED
,

473 
CURLE_OBSOLETE46
,

474 
CURLE_TOO_MANY_REDIRECTS
 ,

475 
CURLE_UNKNOWN_OPTION
,

476 
CURLE_TELNET_OPTION_SYNTAX
 ,

477 
CURLE_OBSOLETE50
,

478 
CURLE_PEER_FAILED_VERIFICATION
,

480 
CURLE_GOT_NOTHING
,

481 
CURLE_SSL_ENGINE_NOTFOUND
,

482 
CURLE_SSL_ENGINE_SETFAILED
,

484 
CURLE_SEND_ERROR
,

485 
CURLE_RECV_ERROR
,

486 
CURLE_OBSOLETE57
,

487 
CURLE_SSL_CERTPROBLEM
,

488 
CURLE_SSL_CIPHER
,

489 
CURLE_SSL_CACERT
,

490 
CURLE_BAD_CONTENT_ENCODING
,

491 
CURLE_LDAP_INVALID_URL
,

492 
CURLE_FILESIZE_EXCEEDED
,

493 
CURLE_USE_SSL_FAILED
,

494 
CURLE_SEND_FAIL_REWIND
,

496 
CURLE_SSL_ENGINE_INITFAILED
,

497 
CURLE_LOGIN_DENIED
,

499 
CURLE_TFTP_NOTFOUND
,

500 
CURLE_TFTP_PERM
,

501 
CURLE_REMOTE_DISK_FULL
,

502 
CURLE_TFTP_ILLEGAL
,

503 
CURLE_TFTP_UNKNOWNID
,

504 
CURLE_REMOTE_FILE_EXISTS
,

505 
CURLE_TFTP_NOSUCHUSER
,

506 
CURLE_CONV_FAILED
,

507 
CURLE_CONV_REQD
,

512 
CURLE_SSL_CACERT_BADFILE
,

514 
CURLE_REMOTE_FILE_NOT_FOUND
,

515 
CURLE_SSH
,

519 
CURLE_SSL_SHUTDOWN_FAILED
,

521 
CURLE_AGAIN
,

524 
CURLE_SSL_CRL_BADFILE
,

526 
CURLE_SSL_ISSUER_ERROR
,

528 
CURLE_FTP_PRET_FAILED
,

529 
CURLE_RTSP_CSEQ_ERROR
,

530 
CURLE_RTSP_SESSION_ERROR
,

531 
CURLE_FTP_BAD_FILE_LIST
,

532 
CURLE_CHUNK_FAILED
,

533 
CURLE_NO_CONNECTION_AVAILABLE
,

535 
CURLE_SSL_PINNEDPUBKEYNOTMATCH
,

537 
CURLE_SSL_INVALIDCERTSTATUS
,

538 
CURL_LAST


539 } 
	tCURLcode
;

541 #i‚de‡
CURL_NO_OLDIES


545 
	#CURLE_OBSOLETE16
 
CURLE_HTTP2


	)

548 
	#CURLE_OBSOLETE10
 
CURLE_FTP_ACCEPT_FAILED


	)

549 
	#CURLE_OBSOLETE12
 
CURLE_FTP_ACCEPT_TIMEOUT


	)

552 
	#CURLOPT_ENCODING
 
CURLOPT_ACCEPT_ENCODING


	)

555 
	#CURLE_UNKNOWN_TELNET_OPTION
 
CURLE_UNKNOWN_OPTION


	)

559 
	#CURLE_SSL_PEER_CERTIFICATE
 
CURLE_PEER_FAILED_VERIFICATION


	)

563 
	#CURLE_OBSOLETE
 
CURLE_OBSOLETE50


	)

564 
	#CURLE_BAD_PASSWORD_ENTERED
 
CURLE_OBSOLETE46


	)

565 
	#CURLE_BAD_CALLING_ORDER
 
CURLE_OBSOLETE44


	)

566 
	#CURLE_FTP_USER_PASSWORD_INCORRECT
 
CURLE_OBSOLETE10


	)

567 
	#CURLE_FTP_CANT_RECONNECT
 
CURLE_OBSOLETE16


	)

568 
	#CURLE_FTP_COULDNT_GET_SIZE
 
CURLE_OBSOLETE32


	)

569 
	#CURLE_FTP_COULDNT_SET_ASCII
 
CURLE_OBSOLETE29


	)

570 
	#CURLE_FTP_WEIRD_USER_REPLY
 
CURLE_OBSOLETE12


	)

571 
	#CURLE_FTP_WRITE_ERROR
 
CURLE_OBSOLETE20


	)

572 
	#CURLE_LIBRARY_NOT_FOUND
 
CURLE_OBSOLETE40


	)

573 
	#CURLE_MALFORMAT_USER
 
CURLE_OBSOLETE24


	)

574 
	#CURLE_SHARE_IN_USE
 
CURLE_OBSOLETE57


	)

575 
	#CURLE_URL_MALFORMAT_USER
 
CURLE_NOT_BUILT_IN


	)

577 
	#CURLE_FTP_ACCESS_DENIED
 
CURLE_REMOTE_ACCESS_DENIED


	)

578 
	#CURLE_FTP_COULDNT_SET_BINARY
 
CURLE_FTP_COULDNT_SET_TYPE


	)

579 
	#CURLE_FTP_QUOTE_ERROR
 
CURLE_QUOTE_ERROR


	)

580 
	#CURLE_TFTP_DISKFULL
 
CURLE_REMOTE_DISK_FULL


	)

581 
	#CURLE_TFTP_EXISTS
 
CURLE_REMOTE_FILE_EXISTS


	)

582 
	#CURLE_HTTP_RANGE_ERROR
 
CURLE_RANGE_ERROR


	)

583 
	#CURLE_FTP_SSL_FAILED
 
CURLE_USE_SSL_FAILED


	)

587 
	#CURLE_OPERATION_TIMEOUTED
 
CURLE_OPERATION_TIMEDOUT


	)

589 
	#CURLE_HTTP_NOT_FOUND
 
CURLE_HTTP_RETURNED_ERROR


	)

590 
	#CURLE_HTTP_PORT_FAILED
 
CURLE_INTERFACE_FAILED


	)

591 
	#CURLE_FTP_COULDNT_STOR_FILE
 
CURLE_UPLOAD_FAILED


	)

593 
	#CURLE_FTP_PARTIAL_FILE
 
CURLE_PARTIAL_FILE


	)

594 
	#CURLE_FTP_BAD_DOWNLOAD_RESUME
 
CURLE_BAD_DOWNLOAD_RESUME


	)

599 
	#CURLE_ALREADY_COMPLETE
 99999

	)

602 
	#CURLOPT_FILE
 
CURLOPT_WRITEDATA


	)

603 
	#CURLOPT_INFILE
 
CURLOPT_READDATA


	)

604 
	#CURLOPT_WRITEHEADER
 
CURLOPT_HEADERDATA


	)

608 
	#CURLOPT_WRITEINFO
 
CURLOPT_OBSOLETE40


	)

609 
	#CURLOPT_CLOSEPOLICY
 
CURLOPT_OBSOLETE72


	)

614 
	`CURLcode
 (*
	tcuæ_c⁄v_ˇŒback
)(*
	tbuf„r
, 
	tsize_t
 
	tÀngth
);

616 
	`CURLcode
 (*
	tcuæ_s¶_˘x_ˇŒback
)(
	tCURL
 *
	tcuæ
,

617 *
	ts¶_˘x
,

619 *
	tu£Ωå
);

622 
CURLPROXY_HTTP
 = 0,

624 
CURLPROXY_HTTP_1_0
 = 1,

626 
CURLPROXY_SOCKS4
 = 4,

628 
CURLPROXY_SOCKS5
 = 5,

629 
CURLPROXY_SOCKS4A
 = 6,

630 
CURLPROXY_SOCKS5_HOSTNAME
 = 7

633 } 
	tcuæ_¥oxyty≥
;

652 
	#CURLAUTH_NONE
 (()0)

	)

653 
	#CURLAUTH_BASIC
 ((()1)<<0)

	)

654 
	#CURLAUTH_DIGEST
 ((()1)<<1)

	)

655 
	#CURLAUTH_NEGOTIATE
 ((()1)<<2)

	)

657 
	#CURLAUTH_GSSNEGOTIATE
 
CURLAUTH_NEGOTIATE


	)

658 
	#CURLAUTH_NTLM
 ((()1)<<3)

	)

659 
	#CURLAUTH_DIGEST_IE
 ((()1)<<4)

	)

660 
	#CURLAUTH_NTLM_WB
 ((()1)<<5)

	)

661 
	#CURLAUTH_ONLY
 ((()1)<<31)

	)

662 
	#CURLAUTH_ANY
 (~
CURLAUTH_DIGEST_IE
)

	)

663 
	#CURLAUTH_ANYSAFE
 (~(
CURLAUTH_BASIC
|
CURLAUTH_DIGEST_IE
))

	)

665 
	#CURLSSH_AUTH_ANY
 ~0

	)

666 
	#CURLSSH_AUTH_NONE
 0

	)

667 
	#CURLSSH_AUTH_PUBLICKEY
 (1<<0Ë

	)

668 
	#CURLSSH_AUTH_PASSWORD
 (1<<1Ë

	)

669 
	#CURLSSH_AUTH_HOST
 (1<<2Ë

	)

670 
	#CURLSSH_AUTH_KEYBOARD
 (1<<3Ë

	)

671 
	#CURLSSH_AUTH_AGENT
 (1<<4Ë

	)

672 
	#CURLSSH_AUTH_DEFAULT
 
CURLSSH_AUTH_ANY


	)

674 
	#CURLGSSAPI_DELEGATION_NONE
 0

	)

675 
	#CURLGSSAPI_DELEGATION_POLICY_FLAG
 (1<<0Ë

	)

676 
	#CURLGSSAPI_DELEGATION_FLAG
 (1<<1Ë

	)

678 
	#CURL_ERROR_SIZE
 256

	)

680 
	ecuæ_khty≥
 {

681 
CURLKHTYPE_UNKNOWN
,

682 
CURLKHTYPE_RSA1
,

683 
CURLKHTYPE_RSA
,

684 
CURLKHTYPE_DSS


687 
	scuæ_khkey
 {

688 c⁄° *
key
;

690 
size_t
 
Àn
;

691 
cuæ_khty≥
 
keyty≥
;

696 
	ecuæ_kh°©
 {

697 
CURLKHSTAT_FINE_ADD_TO_FILE
,

698 
CURLKHSTAT_FINE
,

699 
CURLKHSTAT_REJECT
,

700 
CURLKHSTAT_DEFER
,

703 
CURLKHSTAT_LAST


707 
	ecuæ_khm©ch
 {

708 
CURLKHMATCH_OK
,

709 
CURLKHMATCH_MISMATCH
,

710 
CURLKHMATCH_MISSING
,

711 
CURLKHMATCH_LAST


715 (*
	tcuæ_sshkeyˇŒback
Ë(
	tCURL
 *
	tósy
,

716 c⁄° 
	tcuæ_khkey
 *
	tknownkey
,

717 c⁄° 
	tcuæ_khkey
 *
	tfoundkey
,

718 
	tcuæ_khm©ch
,

719 *
	t˛õ¡p
);

723 
CURLUSESSL_NONE
,

724 
CURLUSESSL_TRY
,

725 
CURLUSESSL_CONTROL
,

726 
CURLUSESSL_ALL
,

727 
CURLUSESSL_LAST


728 } 
	tcuæ_u£s¶
;

737 
	#CURLSSLOPT_ALLOW_BEAST
 (1<<0)

	)

741 
	#CURLSSLOPT_NO_REVOKE
 (1<<1)

	)

743 #i‚de‡
CURL_NO_OLDIES


749 
	#CURLFTPSSL_NONE
 
CURLUSESSL_NONE


	)

750 
	#CURLFTPSSL_TRY
 
CURLUSESSL_TRY


	)

751 
	#CURLFTPSSL_CONTROL
 
CURLUSESSL_CONTROL


	)

752 
	#CURLFTPSSL_ALL
 
CURLUSESSL_ALL


	)

753 
	#CURLFTPSSL_LAST
 
CURLUSESSL_LAST


	)

754 
	#cuæ_·ps¶
 
cuæ_u£s¶


	)

759 
CURLFTPSSL_CCC_NONE
,

760 
CURLFTPSSL_CCC_PASSIVE
,

761 
CURLFTPSSL_CCC_ACTIVE
,

762 
CURLFTPSSL_CCC_LAST


763 } 
	tcuæ_·pccc
;

767 
CURLFTPAUTH_DEFAULT
,

768 
CURLFTPAUTH_SSL
,

769 
CURLFTPAUTH_TLS
,

770 
CURLFTPAUTH_LAST


771 } 
	tcuæ_·∑uth
;

775 
CURLFTP_CREATE_DIR_NONE
,

776 
CURLFTP_CREATE_DIR
,

779 
CURLFTP_CREATE_DIR_RETRY
,

781 
CURLFTP_CREATE_DIR_LAST


782 } 
	tcuæ_·p¸óãdú
;

786 
CURLFTPMETHOD_DEFAULT
,

787 
CURLFTPMETHOD_MULTICWD
,

788 
CURLFTPMETHOD_NOCWD
,

789 
CURLFTPMETHOD_SINGLECWD
,

790 
CURLFTPMETHOD_LAST


791 } 
	tcuæ_·pmëhod
;

794 
	#CURLHEADER_UNIFIED
 0

	)

795 
	#CURLHEADER_SEPARATE
 (1<<0)

	)

798 
	#CURLPROTO_HTTP
 (1<<0)

	)

799 
	#CURLPROTO_HTTPS
 (1<<1)

	)

800 
	#CURLPROTO_FTP
 (1<<2)

	)

801 
	#CURLPROTO_FTPS
 (1<<3)

	)

802 
	#CURLPROTO_SCP
 (1<<4)

	)

803 
	#CURLPROTO_SFTP
 (1<<5)

	)

804 
	#CURLPROTO_TELNET
 (1<<6)

	)

805 
	#CURLPROTO_LDAP
 (1<<7)

	)

806 
	#CURLPROTO_LDAPS
 (1<<8)

	)

807 
	#CURLPROTO_DICT
 (1<<9)

	)

808 
	#CURLPROTO_FILE
 (1<<10)

	)

809 
	#CURLPROTO_TFTP
 (1<<11)

	)

810 
	#CURLPROTO_IMAP
 (1<<12)

	)

811 
	#CURLPROTO_IMAPS
 (1<<13)

	)

812 
	#CURLPROTO_POP3
 (1<<14)

	)

813 
	#CURLPROTO_POP3S
 (1<<15)

	)

814 
	#CURLPROTO_SMTP
 (1<<16)

	)

815 
	#CURLPROTO_SMTPS
 (1<<17)

	)

816 
	#CURLPROTO_RTSP
 (1<<18)

	)

817 
	#CURLPROTO_RTMP
 (1<<19)

	)

818 
	#CURLPROTO_RTMPT
 (1<<20)

	)

819 
	#CURLPROTO_RTMPE
 (1<<21)

	)

820 
	#CURLPROTO_RTMPTE
 (1<<22)

	)

821 
	#CURLPROTO_RTMPS
 (1<<23)

	)

822 
	#CURLPROTO_RTMPTS
 (1<<24)

	)

823 
	#CURLPROTO_GOPHER
 (1<<25)

	)

824 
	#CURLPROTO_SMB
 (1<<26)

	)

825 
	#CURLPROTO_SMBS
 (1<<27)

	)

826 
	#CURLPROTO_ALL
 (~0Ë

	)

830 
	#CURLOPTTYPE_LONG
 0

	)

831 
	#CURLOPTTYPE_OBJECTPOINT
 10000

	)

832 
	#CURLOPTTYPE_STRINGPOINT
 10000

	)

833 
	#CURLOPTTYPE_FUNCTIONPOINT
 20000

	)

834 
	#CURLOPTTYPE_OFF_T
 30000

	)

842 #ifde‡
CINIT


843 #unde‡
CINIT


846 #ifde‡
CURL_ISOCPP


847 
	#CINIT
(
«
,
t
,
nu
Ë
CURLOPT_
 ##Ç®
CURLOPTTYPE_
 ##Å + 
	)
nu

850 
	#LONG
 
CURLOPTTYPE_LONG


	)

851 
	#OBJECTPOINT
 
CURLOPTTYPE_OBJECTPOINT


	)

852 
	#STRINGPOINT
 
CURLOPTTYPE_OBJECTPOINT


	)

853 
	#FUNCTIONPOINT
 
CURLOPTTYPE_FUNCTIONPOINT


	)

854 
	#OFF_T
 
CURLOPTTYPE_OFF_T


	)

855 
	#CINIT
(
«me
,
ty≥
,
numbî
Ë
CURLOPT_
Çamêty≥ + 
	)
number

866 
	`CINIT
(
WRITEDATA
, 
OBJECTPOINT
, 1),

869 
	`CINIT
(
URL
, 
STRINGPOINT
, 2),

872 
	`CINIT
(
PORT
, 
LONG
, 3),

875 
	`CINIT
(
PROXY
, 
STRINGPOINT
, 4),

878 
	`CINIT
(
USERPWD
, 
STRINGPOINT
, 5),

881 
	`CINIT
(
PROXYUSERPWD
, 
STRINGPOINT
, 6),

884 
	`CINIT
(
RANGE
, 
STRINGPOINT
, 7),

889 
	`CINIT
(
READDATA
, 
OBJECTPOINT
, 9),

893 
	`CINIT
(
ERRORBUFFER
, 
OBJECTPOINT
, 10),

897 
	`CINIT
(
WRITEFUNCTION
, 
FUNCTIONPOINT
, 11),

901 
	`CINIT
(
READFUNCTION
, 
FUNCTIONPOINT
, 12),

904 
	`CINIT
(
TIMEOUT
, 
LONG
, 13),

915 
	`CINIT
(
INFILESIZE
, 
LONG
, 14),

918 
	`CINIT
(
POSTFIELDS
, 
OBJECTPOINT
, 15),

921 
	`CINIT
(
REFERER
, 
STRINGPOINT
, 16),

925 
	`CINIT
(
FTPPORT
, 
STRINGPOINT
, 17),

928 
	`CINIT
(
USERAGENT
, 
STRINGPOINT
, 18),

937 
	`CINIT
(
LOW_SPEED_LIMIT
, 
LONG
, 19),

940 
	`CINIT
(
LOW_SPEED_TIME
, 
LONG
, 20),

948 
	`CINIT
(
RESUME_FROM
, 
LONG
, 21),

951 
	`CINIT
(
COOKIE
, 
STRINGPOINT
, 22),

955 
	`CINIT
(
HTTPHEADER
, 
OBJECTPOINT
, 23),

958 
	`CINIT
(
HTTPPOST
, 
OBJECTPOINT
, 24),

961 
	`CINIT
(
SSLCERT
, 
STRINGPOINT
, 25),

964 
	`CINIT
(
KEYPASSWD
, 
STRINGPOINT
, 26),

967 
	`CINIT
(
CRLF
, 
LONG
, 27),

970 
	`CINIT
(
QUOTE
, 
OBJECTPOINT
, 28),

974 
	`CINIT
(
HEADERDATA
, 
OBJECTPOINT
, 29),

978 
	`CINIT
(
COOKIEFILE
, 
STRINGPOINT
, 31),

982 
	`CINIT
(
SSLVERSION
, 
LONG
, 32),

985 
	`CINIT
(
TIMECONDITION
, 
LONG
, 33),

989 
	`CINIT
(
TIMEVALUE
, 
LONG
, 34),

997 
	`CINIT
(
CUSTOMREQUEST
, 
STRINGPOINT
, 36),

1000 
	`CINIT
(
STDERR
, 
OBJECTPOINT
, 37),

1005 
	`CINIT
(
POSTQUOTE
, 
OBJECTPOINT
, 39),

1007 
	`CINIT
(
OBSOLETE40
, 
OBJECTPOINT
, 40),

1009 
	`CINIT
(
VERBOSE
, 
LONG
, 41),

1010 
	`CINIT
(
HEADER
, 
LONG
, 42),

1011 
	`CINIT
(
NOPROGRESS
, 
LONG
, 43),

1012 
	`CINIT
(
NOBODY
, 
LONG
, 44),

1013 
	`CINIT
(
FAILONERROR
, 
LONG
, 45),

1014 
	`CINIT
(
UPLOAD
, 
LONG
, 46),

1015 
	`CINIT
(
POST
, 
LONG
, 47),

1016 
	`CINIT
(
DIRLISTONLY
, 
LONG
, 48),

1018 
	`CINIT
(
APPEND
, 
LONG
, 50),

1022 
	`CINIT
(
NETRC
, 
LONG
, 51),

1024 
	`CINIT
(
FOLLOWLOCATION
, 
LONG
, 52),

1026 
	`CINIT
(
TRANSFERTEXT
, 
LONG
, 53),

1027 
	`CINIT
(
PUT
, 
LONG
, 54),

1035 
	`CINIT
(
PROGRESSFUNCTION
, 
FUNCTIONPOINT
, 56),

1039 
	`CINIT
(
PROGRESSDATA
, 
OBJECTPOINT
, 57),

1040 
	#CURLOPT_XFERINFODATA
 
CURLOPT_PROGRESSDATA


	)

1043 
	`CINIT
(
AUTOREFERER
, 
LONG
, 58),

1047 
	`CINIT
(
PROXYPORT
, 
LONG
, 59),

1050 
	`CINIT
(
POSTFIELDSIZE
, 
LONG
, 60),

1053 
	`CINIT
(
HTTPPROXYTUNNEL
, 
LONG
, 61),

1056 
	`CINIT
(
INTERFACE
, 
STRINGPOINT
, 62),

1061 
	`CINIT
(
KRBLEVEL
, 
STRINGPOINT
, 63),

1064 
	`CINIT
(
SSL_VERIFYPEER
, 
LONG
, 64),

1068 
	`CINIT
(
CAINFO
, 
STRINGPOINT
, 65),

1074 
	`CINIT
(
MAXREDIRS
, 
LONG
, 68),

1078 
	`CINIT
(
FILETIME
, 
LONG
, 69),

1081 
	`CINIT
(
TELNETOPTIONS
, 
OBJECTPOINT
, 70),

1084 
	`CINIT
(
MAXCONNECTS
, 
LONG
, 71),

1086 
	`CINIT
(
OBSOLETE72
, 
LONG
, 72),

1093 
	`CINIT
(
FRESH_CONNECT
, 
LONG
, 74),

1098 
	`CINIT
(
FORBID_REUSE
, 
LONG
, 75),

1102 
	`CINIT
(
RANDOM_FILE
, 
STRINGPOINT
, 76),

1105 
	`CINIT
(
EGDSOCKET
, 
STRINGPOINT
, 77),

1109 
	`CINIT
(
CONNECTTIMEOUT
, 
LONG
, 78),

1113 
	`CINIT
(
HEADERFUNCTION
, 
FUNCTIONPOINT
, 79),

1118 
	`CINIT
(
HTTPGET
, 
LONG
, 80),

1123 
	`CINIT
(
SSL_VERIFYHOST
, 
LONG
, 81),

1127 
	`CINIT
(
COOKIEJAR
, 
STRINGPOINT
, 82),

1130 
	`CINIT
(
SSL_CIPHER_LIST
, 
STRINGPOINT
, 83),

1134 
	`CINIT
(
HTTP_VERSION
, 
LONG
, 84),

1139 
	`CINIT
(
FTP_USE_EPSV
, 
LONG
, 85),

1142 
	`CINIT
(
SSLCERTTYPE
, 
STRINGPOINT
, 86),

1145 
	`CINIT
(
SSLKEY
, 
STRINGPOINT
, 87),

1148 
	`CINIT
(
SSLKEYTYPE
, 
STRINGPOINT
, 88),

1151 
	`CINIT
(
SSLENGINE
, 
STRINGPOINT
, 89),

1156 
	`CINIT
(
SSLENGINE_DEFAULT
, 
LONG
, 90),

1159 
	`CINIT
(
DNS_USE_GLOBAL_CACHE
, 
LONG
, 91),

1162 
	`CINIT
(
DNS_CACHE_TIMEOUT
, 
LONG
, 92),

1165 
	`CINIT
(
PREQUOTE
, 
OBJECTPOINT
, 93),

1168 
	`CINIT
(
DEBUGFUNCTION
, 
FUNCTIONPOINT
, 94),

1171 
	`CINIT
(
DEBUGDATA
, 
OBJECTPOINT
, 95),

1174 
	`CINIT
(
COOKIESESSION
, 
LONG
, 96),

1178 
	`CINIT
(
CAPATH
, 
STRINGPOINT
, 97),

1181 
	`CINIT
(
BUFFERSIZE
, 
LONG
, 98),

1186 
	`CINIT
(
NOSIGNAL
, 
LONG
, 99),

1189 
	`CINIT
(
SHARE
, 
OBJECTPOINT
, 100),

1193 
	`CINIT
(
PROXYTYPE
, 
LONG
, 101),

1198 
	`CINIT
(
ACCEPT_ENCODING
, 
STRINGPOINT
, 102),

1201 
	`CINIT
(
PRIVATE
, 
OBJECTPOINT
, 103),

1204 
	`CINIT
(
HTTP200ALIASES
, 
OBJECTPOINT
, 104),

1209 
	`CINIT
(
UNRESTRICTED_AUTH
, 
LONG
, 105),

1214 
	`CINIT
(
FTP_USE_EPRT
, 
LONG
, 106),

1219 
	`CINIT
(
HTTPAUTH
, 
LONG
, 107),

1224 
	`CINIT
(
SSL_CTX_FUNCTION
, 
FUNCTIONPOINT
, 108),

1228 
	`CINIT
(
SSL_CTX_DATA
, 
OBJECTPOINT
, 109),

1234 
	`CINIT
(
FTP_CREATE_MISSING_DIRS
, 
LONG
, 110),

1239 
	`CINIT
(
PROXYAUTH
, 
LONG
, 111),

1245 
	`CINIT
(
FTP_RESPONSE_TIMEOUT
, 
LONG
, 112),

1246 
	#CURLOPT_SERVER_RESPONSE_TIMEOUT
 
CURLOPT_FTP_RESPONSE_TIMEOUT


	)

1251 
	`CINIT
(
IPRESOLVE
, 
LONG
, 113),

1258 
	`CINIT
(
MAXFILESIZE
, 
LONG
, 114),

1263 
	`CINIT
(
INFILESIZE_LARGE
, 
OFF_T
, 115),

1268 
	`CINIT
(
RESUME_FROM_LARGE
, 
OFF_T
, 116),

1273 
	`CINIT
(
MAXFILESIZE_LARGE
, 
OFF_T
, 117),

1279 
	`CINIT
(
NETRC_FILE
, 
STRINGPOINT
, 118),

1286 
	`CINIT
(
USE_SSL
, 
LONG
, 119),

1289 
	`CINIT
(
POSTFIELDSIZE_LARGE
, 
OFF_T
, 120),

1292 
	`CINIT
(
TCP_NODELAY
, 
LONG
, 121),

1312 
	`CINIT
(
FTPSSLAUTH
, 
LONG
, 129),

1314 
	`CINIT
(
IOCTLFUNCTION
, 
FUNCTIONPOINT
, 130),

1315 
	`CINIT
(
IOCTLDATA
, 
OBJECTPOINT
, 131),

1322 
	`CINIT
(
FTP_ACCOUNT
, 
STRINGPOINT
, 134),

1325 
	`CINIT
(
COOKIELIST
, 
STRINGPOINT
, 135),

1328 
	`CINIT
(
IGNORE_CONTENT_LENGTH
, 
LONG
, 136),

1334 
	`CINIT
(
FTP_SKIP_PASV_IP
, 
LONG
, 137),

1338 
	`CINIT
(
FTP_FILEMETHOD
, 
LONG
, 138),

1341 
	`CINIT
(
LOCALPORT
, 
LONG
, 139),

1346 
	`CINIT
(
LOCALPORTRANGE
, 
LONG
, 140),

1350 
	`CINIT
(
CONNECT_ONLY
, 
LONG
, 141),

1354 
	`CINIT
(
CONV_FROM_NETWORK_FUNCTION
, 
FUNCTIONPOINT
, 142),

1358 
	`CINIT
(
CONV_TO_NETWORK_FUNCTION
, 
FUNCTIONPOINT
, 143),

1363 
	`CINIT
(
CONV_FROM_UTF8_FUNCTION
, 
FUNCTIONPOINT
, 144),

1367 
	`CINIT
(
MAX_SEND_SPEED_LARGE
, 
OFF_T
, 145),

1368 
	`CINIT
(
MAX_RECV_SPEED_LARGE
, 
OFF_T
, 146),

1371 
	`CINIT
(
FTP_ALTERNATIVE_TO_USER
, 
STRINGPOINT
, 147),

1374 
	`CINIT
(
SOCKOPTFUNCTION
, 
FUNCTIONPOINT
, 148),

1375 
	`CINIT
(
SOCKOPTDATA
, 
OBJECTPOINT
, 149),

1379 
	`CINIT
(
SSL_SESSIONID_CACHE
, 
LONG
, 150),

1382 
	`CINIT
(
SSH_AUTH_TYPES
, 
LONG
, 151),

1385 
	`CINIT
(
SSH_PUBLIC_KEYFILE
, 
STRINGPOINT
, 152),

1386 
	`CINIT
(
SSH_PRIVATE_KEYFILE
, 
STRINGPOINT
, 153),

1389 
	`CINIT
(
FTP_SSL_CCC
, 
LONG
, 154),

1392 
	`CINIT
(
TIMEOUT_MS
, 
LONG
, 155),

1393 
	`CINIT
(
CONNECTTIMEOUT_MS
, 
LONG
, 156),

1397 
	`CINIT
(
HTTP_TRANSFER_DECODING
, 
LONG
, 157),

1398 
	`CINIT
(
HTTP_CONTENT_DECODING
, 
LONG
, 158),

1402 
	`CINIT
(
NEW_FILE_PERMS
, 
LONG
, 159),

1403 
	`CINIT
(
NEW_DIRECTORY_PERMS
, 
LONG
, 160),

1407 
	`CINIT
(
POSTREDIR
, 
LONG
, 161),

1410 
	`CINIT
(
SSH_HOST_PUBLIC_KEY_MD5
, 
STRINGPOINT
, 162),

1416 
	`CINIT
(
OPENSOCKETFUNCTION
, 
FUNCTIONPOINT
, 163),

1417 
	`CINIT
(
OPENSOCKETDATA
, 
OBJECTPOINT
, 164),

1420 
	`CINIT
(
COPYPOSTFIELDS
, 
OBJECTPOINT
, 165),

1423 
	`CINIT
(
PROXY_TRANSFER_MODE
, 
LONG
, 166),

1426 
	`CINIT
(
SEEKFUNCTION
, 
FUNCTIONPOINT
, 167),

1427 
	`CINIT
(
SEEKDATA
, 
OBJECTPOINT
, 168),

1430 
	`CINIT
(
CRLFILE
, 
STRINGPOINT
, 169),

1433 
	`CINIT
(
ISSUERCERT
, 
STRINGPOINT
, 170),

1436 
	`CINIT
(
ADDRESS_SCOPE
, 
LONG
, 171),

1440 
	`CINIT
(
CERTINFO
, 
LONG
, 172),

1443 
	`CINIT
(
USERNAME
, 
STRINGPOINT
, 173),

1444 
	`CINIT
(
PASSWORD
, 
STRINGPOINT
, 174),

1447 
	`CINIT
(
PROXYUSERNAME
, 
STRINGPOINT
, 175),

1448 
	`CINIT
(
PROXYPASSWORD
, 
STRINGPOINT
, 176),

1457 
	`CINIT
(
NOPROXY
, 
STRINGPOINT
, 177),

1460 
	`CINIT
(
TFTP_BLKSIZE
, 
LONG
, 178),

1463 
	`CINIT
(
SOCKS5_GSSAPI_SERVICE
, 
STRINGPOINT
, 179),

1466 
	`CINIT
(
SOCKS5_GSSAPI_NEC
, 
LONG
, 180),

1472 
	`CINIT
(
PROTOCOLS
, 
LONG
, 181),

1478 
	`CINIT
(
REDIR_PROTOCOLS
, 
LONG
, 182),

1481 
	`CINIT
(
SSH_KNOWNHOSTS
, 
STRINGPOINT
, 183),

1485 
	`CINIT
(
SSH_KEYFUNCTION
, 
FUNCTIONPOINT
, 184),

1488 
	`CINIT
(
SSH_KEYDATA
, 
OBJECTPOINT
, 185),

1491 
	`CINIT
(
MAIL_FROM
, 
STRINGPOINT
, 186),

1494 
	`CINIT
(
MAIL_RCPT
, 
OBJECTPOINT
, 187),

1497 
	`CINIT
(
FTP_USE_PRET
, 
LONG
, 188),

1500 
	`CINIT
(
RTSP_REQUEST
, 
LONG
, 189),

1503 
	`CINIT
(
RTSP_SESSION_ID
, 
STRINGPOINT
, 190),

1506 
	`CINIT
(
RTSP_STREAM_URI
, 
STRINGPOINT
, 191),

1509 
	`CINIT
(
RTSP_TRANSPORT
, 
STRINGPOINT
, 192),

1512 
	`CINIT
(
RTSP_CLIENT_CSEQ
, 
LONG
, 193),

1515 
	`CINIT
(
RTSP_SERVER_CSEQ
, 
LONG
, 194),

1518 
	`CINIT
(
INTERLEAVEDATA
, 
OBJECTPOINT
, 195),

1521 
	`CINIT
(
INTERLEAVEFUNCTION
, 
FUNCTIONPOINT
, 196),

1524 
	`CINIT
(
WILDCARDMATCH
, 
LONG
, 197),

1528 
	`CINIT
(
CHUNK_BGN_FUNCTION
, 
FUNCTIONPOINT
, 198),

1532 
	`CINIT
(
CHUNK_END_FUNCTION
, 
FUNCTIONPOINT
, 199),

1535 
	`CINIT
(
FNMATCH_FUNCTION
, 
FUNCTIONPOINT
, 200),

1538 
	`CINIT
(
CHUNK_DATA
, 
OBJECTPOINT
, 201),

1541 
	`CINIT
(
FNMATCH_DATA
, 
OBJECTPOINT
, 202),

1544 
	`CINIT
(
RESOLVE
, 
OBJECTPOINT
, 203),

1547 
	`CINIT
(
TLSAUTH_USERNAME
, 
STRINGPOINT
, 204),

1550 
	`CINIT
(
TLSAUTH_PASSWORD
, 
STRINGPOINT
, 205),

1553 
	`CINIT
(
TLSAUTH_TYPE
, 
STRINGPOINT
, 206),

1565 
	`CINIT
(
TRANSFER_ENCODING
, 
LONG
, 207),

1569 
	`CINIT
(
CLOSESOCKETFUNCTION
, 
FUNCTIONPOINT
, 208),

1570 
	`CINIT
(
CLOSESOCKETDATA
, 
OBJECTPOINT
, 209),

1573 
	`CINIT
(
GSSAPI_DELEGATION
, 
LONG
, 210),

1576 
	`CINIT
(
DNS_SERVERS
, 
STRINGPOINT
, 211),

1580 
	`CINIT
(
ACCEPTTIMEOUT_MS
, 
LONG
, 212),

1583 
	`CINIT
(
TCP_KEEPALIVE
, 
LONG
, 213),

1586 
	`CINIT
(
TCP_KEEPIDLE
, 
LONG
, 214),

1587 
	`CINIT
(
TCP_KEEPINTVL
, 
LONG
, 215),

1590 
	`CINIT
(
SSL_OPTIONS
, 
LONG
, 216),

1593 
	`CINIT
(
MAIL_AUTH
, 
STRINGPOINT
, 217),

1596 
	`CINIT
(
SASL_IR
, 
LONG
, 218),

1601 
	`CINIT
(
XFERINFOFUNCTION
, 
FUNCTIONPOINT
, 219),

1604 
	`CINIT
(
XOAUTH2_BEARER
, 
STRINGPOINT
, 220),

1609 
	`CINIT
(
DNS_INTERFACE
, 
STRINGPOINT
, 221),

1613 
	`CINIT
(
DNS_LOCAL_IP4
, 
STRINGPOINT
, 222),

1617 
	`CINIT
(
DNS_LOCAL_IP6
, 
STRINGPOINT
, 223),

1620 
	`CINIT
(
LOGIN_OPTIONS
, 
STRINGPOINT
, 224),

1623 
	`CINIT
(
SSL_ENABLE_NPN
, 
LONG
, 225),

1626 
	`CINIT
(
SSL_ENABLE_ALPN
, 
LONG
, 226),

1630 
	`CINIT
(
EXPECT_100_TIMEOUT_MS
, 
LONG
, 227),

1634 
	`CINIT
(
PROXYHEADER
, 
OBJECTPOINT
, 228),

1637 
	`CINIT
(
HEADEROPT
, 
LONG
, 229),

1641 
	`CINIT
(
PINNEDPUBLICKEY
, 
STRINGPOINT
, 230),

1644 
	`CINIT
(
UNIX_SOCKET_PATH
, 
STRINGPOINT
, 231),

1647 
	`CINIT
(
SSL_VERIFYSTATUS
, 
LONG
, 232),

1650 
	`CINIT
(
SSL_FALSESTART
, 
LONG
, 233),

1653 
	`CINIT
(
PATH_AS_IS
, 
LONG
, 234),

1656 
	`CINIT
(
PROXY_SERVICE_NAME
, 
STRINGPOINT
, 235),

1659 
	`CINIT
(
SERVICE_NAME
, 
STRINGPOINT
, 236),

1662 
	`CINIT
(
PIPEWAIT
, 
LONG
, 237),

1665 
	`CINIT
(
DEFAULT_PROTOCOL
, 
STRINGPOINT
, 238),

1668 
	`CINIT
(
STREAM_WEIGHT
, 
LONG
, 239),

1671 
	`CINIT
(
STREAM_DEPENDS
, 
OBJECTPOINT
, 240),

1674 
	`CINIT
(
STREAM_DEPENDS_E
, 
OBJECTPOINT
, 241),

1676 
CURLOPT_LASTENTRY


1677 } 
	tCURL›ti⁄
;

1679 #i‚de‡
CURL_NO_OLDIES


1686 
	#CURLOPT_POST301
 
CURLOPT_POSTREDIR


	)

1691 
	#CURLOPT_SSLKEYPASSWD
 
CURLOPT_KEYPASSWD


	)

1692 
	#CURLOPT_FTPAPPEND
 
CURLOPT_APPEND


	)

1693 
	#CURLOPT_FTPLISTONLY
 
CURLOPT_DIRLISTONLY


	)

1694 
	#CURLOPT_FTP_SSL
 
CURLOPT_USE_SSL


	)

1698 
	#CURLOPT_SSLCERTPASSWD
 
CURLOPT_KEYPASSWD


	)

1699 
	#CURLOPT_KRB4LEVEL
 
CURLOPT_KRBLEVEL


	)

1703 #unde‡
CURLOPT_DNS_USE_GLOBAL_CACHE


1710 
	#CURL_IPRESOLVE_WHATEVER
 0

	)

1712 
	#CURL_IPRESOLVE_V4
 1

	)

1713 
	#CURL_IPRESOLVE_V6
 2

	)

1716 
	#CURLOPT_RTSPHEADER
 
CURLOPT_HTTPHEADER


	)

1720 
CURL_HTTP_VERSION_NONE
,

1723 
CURL_HTTP_VERSION_1_0
,

1724 
CURL_HTTP_VERSION_1_1
,

1725 
CURL_HTTP_VERSION_2_0
,

1726 
CURL_HTTP_VERSION_2TLS
,

1728 
CURL_HTTP_VERSION_LAST


1734 
	#CURL_HTTP_VERSION_2
 
CURL_HTTP_VERSION_2_0


	)

1740 
CURL_RTSPREQ_NONE
,

1741 
CURL_RTSPREQ_OPTIONS
,

1742 
CURL_RTSPREQ_DESCRIBE
,

1743 
CURL_RTSPREQ_ANNOUNCE
,

1744 
CURL_RTSPREQ_SETUP
,

1745 
CURL_RTSPREQ_PLAY
,

1746 
CURL_RTSPREQ_PAUSE
,

1747 
CURL_RTSPREQ_TEARDOWN
,

1748 
CURL_RTSPREQ_GET_PARAMETER
,

1749 
CURL_RTSPREQ_SET_PARAMETER
,

1750 
CURL_RTSPREQ_RECORD
,

1751 
CURL_RTSPREQ_RECEIVE
,

1752 
CURL_RTSPREQ_LAST


1756 
	eCURL_NETRC_OPTION
 {

1757 
CURL_NETRC_IGNORED
,

1759 
CURL_NETRC_OPTIONAL
,

1761 
CURL_NETRC_REQUIRED
,

1764 
CURL_NETRC_LAST


1768 
CURL_SSLVERSION_DEFAULT
,

1769 
CURL_SSLVERSION_TLSv1
,

1770 
CURL_SSLVERSION_SSLv2
,

1771 
CURL_SSLVERSION_SSLv3
,

1772 
CURL_SSLVERSION_TLSv1_0
,

1773 
CURL_SSLVERSION_TLSv1_1
,

1774 
CURL_SSLVERSION_TLSv1_2
,

1776 
CURL_SSLVERSION_LAST


1779 
	eCURL_TLSAUTH
 {

1780 
CURL_TLSAUTH_NONE
,

1781 
CURL_TLSAUTH_SRP
,

1782 
CURL_TLSAUTH_LAST


1790 
	#CURL_REDIR_GET_ALL
 0

	)

1791 
	#CURL_REDIR_POST_301
 1

	)

1792 
	#CURL_REDIR_POST_302
 2

	)

1793 
	#CURL_REDIR_POST_303
 4

	)

1794 
	#CURL_REDIR_POST_ALL
 \

1795 (
CURL_REDIR_POST_301
|
CURL_REDIR_POST_302
|
CURL_REDIR_POST_303
)

	)

1798 
CURL_TIMECOND_NONE
,

1800 
CURL_TIMECOND_IFMODSINCE
,

1801 
CURL_TIMECOND_IFUNMODSINCE
,

1802 
CURL_TIMECOND_LASTMOD
,

1804 
CURL_TIMECOND_LAST


1805 } 
	tcuæ_TimeC⁄d
;

1810 
CURL_EXTERN
 (
cuæ_°ªquÆ
)(c⁄° *
s1
, c⁄° *
s2
);

1811 
CURL_EXTERN
 (
cuæ_°∫equÆ
)(c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
n
);

1814 #ifde‡
CFINIT


1815 #unde‡
CFINIT


1818 #ifde‡
CURL_ISOCPP


1819 
	#CFINIT
(
«me
Ë
CURLFORM_
 ## 
	)
name

1822 
	#CFINIT
(
«me
Ë
CURLFORM_
 
	)
name

1826 
	`CFINIT
(
NOTHING
),

1829 
	`CFINIT
(
COPYNAME
),

1830 
	`CFINIT
(
PTRNAME
),

1831 
	`CFINIT
(
NAMELENGTH
),

1832 
	`CFINIT
(
COPYCONTENTS
),

1833 
	`CFINIT
(
PTRCONTENTS
),

1834 
	`CFINIT
(
CONTENTSLENGTH
),

1835 
	`CFINIT
(
FILECONTENT
),

1836 
	`CFINIT
(
ARRAY
),

1837 
	`CFINIT
(
OBSOLETE
),

1838 
	`CFINIT
(
FILE
),

1840 
	`CFINIT
(
BUFFER
),

1841 
	`CFINIT
(
BUFFERPTR
),

1842 
	`CFINIT
(
BUFFERLENGTH
),

1844 
	`CFINIT
(
CONTENTTYPE
),

1845 
	`CFINIT
(
CONTENTHEADER
),

1846 
	`CFINIT
(
FILENAME
),

1847 
	`CFINIT
(
END
),

1848 
	`CFINIT
(
OBSOLETE2
),

1850 
	`CFINIT
(
STREAM
),

1851 
	`CFINIT
(
CONTENTLEN
),

1853 
CURLFORM_LASTENTRY


1854 } 
	tCURLf‹m›ti⁄
;

1856 #unde‡
CFINIT


1859 
	scuæ_f‹ms
 {

1860 
CURLf‹m›ti⁄
 
›ti⁄
;

1861 c⁄° *
vÆue
;

1881 
CURL_FORMADD_OK
,

1883 
CURL_FORMADD_MEMORY
,

1884 
CURL_FORMADD_OPTION_TWICE
,

1885 
CURL_FORMADD_NULL
,

1886 
CURL_FORMADD_UNKNOWN_OPTION
,

1887 
CURL_FORMADD_INCOMPLETE
,

1888 
CURL_FORMADD_ILLEGAL_ARRAY
,

1889 
CURL_FORMADD_DISABLED
,

1891 
CURL_FORMADD_LAST


1892 } 
	tCURLFORMcode
;

1903 
CURL_EXTERN
 
CURLFORMcode
 
	`cuæ_f‹madd
(
cuæ_hâµo°
 **
hâµo°
,

1904 
cuæ_hâµo°
 **
œ°_po°
,

1915 
	`size_t
 (*
	tcuæ_f‹mgë_ˇŒback
)(*
	t¨g
, c⁄° *
	tbuf
,

1916 
	tsize_t
 
	tÀn
);

1928 
CURL_EXTERN
 
	`cuæ_f‹mgë
(
cuæ_hâµo°
 *
f‹m
, *
¨g
,

1929 
cuæ_f‹mgë_ˇŒback
 
≠≥nd
);

1937 
CURL_EXTERN
 
	`cuæ_f‹m‰ì
(
cuæ_hâµo°
 *
f‹m
);

1947 
CURL_EXTERN
 *
	`cuæ_gëív
(c⁄° *
v¨übÀ
);

1956 
CURL_EXTERN
 *
	`cuæ_vîsi⁄
();

1967 
CURL_EXTERN
 *
	`cuæ_ósy_esˇ≥
(
CURL
 *
h™dÀ
,

1968 c⁄° *
°rög
,

1969 
Àngth
);

1972 
CURL_EXTERN
 *
	`cuæ_esˇ≥
(c⁄° *
°rög
,

1973 
Àngth
);

1987 
CURL_EXTERN
 *
	`cuæ_ósy_u√sˇ≥
(
CURL
 *
h™dÀ
,

1988 c⁄° *
°rög
,

1989 
Àngth
,

1990 *
ouéígth
);

1993 
CURL_EXTERN
 *
	`cuæ_u√sˇ≥
(c⁄° *
°rög
,

1994 
Àngth
);

2004 
CURL_EXTERN
 
	`cuæ_‰ì
(*
p
);

2016 
CURL_EXTERN
 
CURLcode
 
	`cuæ_globÆ_öô
(
Êags
);

2031 
CURL_EXTERN
 
CURLcode
 
	`cuæ_globÆ_öô_mem
(
Êags
,

2032 
cuæ_mÆloc_ˇŒback
 
m
,

2033 
cuæ_‰ì_ˇŒback
 
f
,

2034 
cuæ_ªÆloc_ˇŒback
 
r
,

2035 
cuæ_°rdup_ˇŒback
 
s
,

2036 
cuæ_ˇŒoc_ˇŒback
 
c
);

2046 
CURL_EXTERN
 
	`cuæ_globÆ_˛ónup
();

2049 
	scuæ_¶i°
 {

2050 *
d©a
;

2051 
cuæ_¶i°
 *
√xt
;

2062 
CURL_EXTERN
 
cuæ_¶i°
 *
	`cuæ_¶i°_≠≥nd
(curl_slist *,

2072 
CURL_EXTERN
 
	`cuæ_¶i°_‰ì_Æl
(
cuæ_¶i°
 *);

2083 
CURL_EXTERN
 
time_t
 
	`cuæ_gëd©e
(c⁄° *
p
, c⁄°Åime_à*
unu£d
);

2087 
	scuæ_˚πöfo
 {

2088 
num_of_˚πs
;

2089 
cuæ_¶i°
 **
˚πöfo
;

2096 
CURLSSLBACKEND_NONE
 = 0,

2097 
CURLSSLBACKEND_OPENSSL
 = 1,

2098 
CURLSSLBACKEND_GNUTLS
 = 2,

2099 
CURLSSLBACKEND_NSS
 = 3,

2100 
CURLSSLBACKEND_OBSOLETE4
 = 4,

2101 
CURLSSLBACKEND_GSKIT
 = 5,

2102 
CURLSSLBACKEND_POLARSSL
 = 6,

2103 
CURLSSLBACKEND_CYASSL
 = 7,

2104 
CURLSSLBACKEND_SCHANNEL
 = 8,

2105 
CURLSSLBACKEND_DARWINSSL
 = 9,

2106 
CURLSSLBACKEND_AXTLS
 = 10,

2107 
CURLSSLBACKEND_MBEDTLS
 = 11

2108 } 
	tcuæ_s¶backíd
;

2113 
	scuæ_és£ssi⁄öfo
 {

2114 
cuæ_s¶backíd
 
backíd
;

2115 *
öã∫Æs
;

2118 
	#CURLINFO_STRING
 0x100000

	)

2119 
	#CURLINFO_LONG
 0x200000

	)

2120 
	#CURLINFO_DOUBLE
 0x300000

	)

2121 
	#CURLINFO_SLIST
 0x400000

	)

2122 
	#CURLINFO_SOCKET
 0x500000

	)

2123 
	#CURLINFO_MASK
 0x0fffff

	)

2124 
	#CURLINFO_TYPEMASK
 0xf00000

	)

2127 
CURLINFO_NONE
,

2128 
CURLINFO_EFFECTIVE_URL
 = 
CURLINFO_STRING
 + 1,

2129 
CURLINFO_RESPONSE_CODE
 = 
CURLINFO_LONG
 + 2,

2130 
CURLINFO_TOTAL_TIME
 = 
CURLINFO_DOUBLE
 + 3,

2131 
CURLINFO_NAMELOOKUP_TIME
 = 
CURLINFO_DOUBLE
 + 4,

2132 
CURLINFO_CONNECT_TIME
 = 
CURLINFO_DOUBLE
 + 5,

2133 
CURLINFO_PRETRANSFER_TIME
 = 
CURLINFO_DOUBLE
 + 6,

2134 
CURLINFO_SIZE_UPLOAD
 = 
CURLINFO_DOUBLE
 + 7,

2135 
CURLINFO_SIZE_DOWNLOAD
 = 
CURLINFO_DOUBLE
 + 8,

2136 
CURLINFO_SPEED_DOWNLOAD
 = 
CURLINFO_DOUBLE
 + 9,

2137 
CURLINFO_SPEED_UPLOAD
 = 
CURLINFO_DOUBLE
 + 10,

2138 
CURLINFO_HEADER_SIZE
 = 
CURLINFO_LONG
 + 11,

2139 
CURLINFO_REQUEST_SIZE
 = 
CURLINFO_LONG
 + 12,

2140 
CURLINFO_SSL_VERIFYRESULT
 = 
CURLINFO_LONG
 + 13,

2141 
CURLINFO_FILETIME
 = 
CURLINFO_LONG
 + 14,

2142 
CURLINFO_CONTENT_LENGTH_DOWNLOAD
 = 
CURLINFO_DOUBLE
 + 15,

2143 
CURLINFO_CONTENT_LENGTH_UPLOAD
 = 
CURLINFO_DOUBLE
 + 16,

2144 
CURLINFO_STARTTRANSFER_TIME
 = 
CURLINFO_DOUBLE
 + 17,

2145 
CURLINFO_CONTENT_TYPE
 = 
CURLINFO_STRING
 + 18,

2146 
CURLINFO_REDIRECT_TIME
 = 
CURLINFO_DOUBLE
 + 19,

2147 
CURLINFO_REDIRECT_COUNT
 = 
CURLINFO_LONG
 + 20,

2148 
CURLINFO_PRIVATE
 = 
CURLINFO_STRING
 + 21,

2149 
CURLINFO_HTTP_CONNECTCODE
 = 
CURLINFO_LONG
 + 22,

2150 
CURLINFO_HTTPAUTH_AVAIL
 = 
CURLINFO_LONG
 + 23,

2151 
CURLINFO_PROXYAUTH_AVAIL
 = 
CURLINFO_LONG
 + 24,

2152 
CURLINFO_OS_ERRNO
 = 
CURLINFO_LONG
 + 25,

2153 
CURLINFO_NUM_CONNECTS
 = 
CURLINFO_LONG
 + 26,

2154 
CURLINFO_SSL_ENGINES
 = 
CURLINFO_SLIST
 + 27,

2155 
CURLINFO_COOKIELIST
 = 
CURLINFO_SLIST
 + 28,

2156 
CURLINFO_LASTSOCKET
 = 
CURLINFO_LONG
 + 29,

2157 
CURLINFO_FTP_ENTRY_PATH
 = 
CURLINFO_STRING
 + 30,

2158 
CURLINFO_REDIRECT_URL
 = 
CURLINFO_STRING
 + 31,

2159 
CURLINFO_PRIMARY_IP
 = 
CURLINFO_STRING
 + 32,

2160 
CURLINFO_APPCONNECT_TIME
 = 
CURLINFO_DOUBLE
 + 33,

2161 
CURLINFO_CERTINFO
 = 
CURLINFO_SLIST
 + 34,

2162 
CURLINFO_CONDITION_UNMET
 = 
CURLINFO_LONG
 + 35,

2163 
CURLINFO_RTSP_SESSION_ID
 = 
CURLINFO_STRING
 + 36,

2164 
CURLINFO_RTSP_CLIENT_CSEQ
 = 
CURLINFO_LONG
 + 37,

2165 
CURLINFO_RTSP_SERVER_CSEQ
 = 
CURLINFO_LONG
 + 38,

2166 
CURLINFO_RTSP_CSEQ_RECV
 = 
CURLINFO_LONG
 + 39,

2167 
CURLINFO_PRIMARY_PORT
 = 
CURLINFO_LONG
 + 40,

2168 
CURLINFO_LOCAL_IP
 = 
CURLINFO_STRING
 + 41,

2169 
CURLINFO_LOCAL_PORT
 = 
CURLINFO_LONG
 + 42,

2170 
CURLINFO_TLS_SESSION
 = 
CURLINFO_SLIST
 + 43,

2171 
CURLINFO_ACTIVESOCKET
 = 
CURLINFO_SOCKET
 + 44,

2174 
CURLINFO_LASTONE
 = 44

2175 } 
	tCURLINFO
;

2179 
	#CURLINFO_HTTP_CODE
 
CURLINFO_RESPONSE_CODE


	)

2182 
CURLCLOSEPOLICY_NONE
,

2184 
CURLCLOSEPOLICY_OLDEST
,

2185 
CURLCLOSEPOLICY_LEAST_RECENTLY_USED
,

2186 
CURLCLOSEPOLICY_LEAST_TRAFFIC
,

2187 
CURLCLOSEPOLICY_SLOWEST
,

2188 
CURLCLOSEPOLICY_CALLBACK
,

2190 
CURLCLOSEPOLICY_LAST


2191 } 
	tcuæ_˛o£pﬁicy
;

2193 
	#CURL_GLOBAL_SSL
 (1<<0)

	)

2194 
	#CURL_GLOBAL_WIN32
 (1<<1)

	)

2195 
	#CURL_GLOBAL_ALL
 (
CURL_GLOBAL_SSL
|
CURL_GLOBAL_WIN32
)

	)

2196 
	#CURL_GLOBAL_NOTHING
 0

	)

2197 
	#CURL_GLOBAL_DEFAULT
 
CURL_GLOBAL_ALL


	)

2198 
	#CURL_GLOBAL_ACK_EINTR
 (1<<2)

	)

2207 
CURL_LOCK_DATA_NONE
 = 0,

2212 
CURL_LOCK_DATA_SHARE
,

2213 
CURL_LOCK_DATA_COOKIE
,

2214 
CURL_LOCK_DATA_DNS
,

2215 
CURL_LOCK_DATA_SSL_SESSION
,

2216 
CURL_LOCK_DATA_CONNECT
,

2217 
CURL_LOCK_DATA_LAST


2218 } 
	tcuæ_lock_d©a
;

2222 
CURL_LOCK_ACCESS_NONE
 = 0,

2223 
CURL_LOCK_ACCESS_SHARED
 = 1,

2224 
CURL_LOCK_ACCESS_SINGLE
 = 2,

2225 
CURL_LOCK_ACCESS_LAST


2226 } 
	tcuæ_lock_ac˚ss
;

2228 (*
	tcuæ_lock_fun˘i⁄
)(
	tCURL
 *
	th™dÀ
,

2229 
	tcuæ_lock_d©a
 
	td©a
,

2230 
	tcuæ_lock_ac˚ss
 
	tlockty≥
,

2231 *
	tu£Ωå
);

2232 (*
	tcuæ_u∆ock_fun˘i⁄
)(
	tCURL
 *
	th™dÀ
,

2233 
	tcuæ_lock_d©a
 
	td©a
,

2234 *
	tu£Ωå
);

2236 
	tCURLSH
;

2239 
CURLSHE_OK
,

2240 
CURLSHE_BAD_OPTION
,

2241 
CURLSHE_IN_USE
,

2242 
CURLSHE_INVALID
,

2243 
CURLSHE_NOMEM
,

2244 
CURLSHE_NOT_BUILT_IN
,

2245 
CURLSHE_LAST


2246 } 
	tCURLSHcode
;

2249 
CURLSHOPT_NONE
,

2250 
CURLSHOPT_SHARE
,

2251 
CURLSHOPT_UNSHARE
,

2252 
CURLSHOPT_LOCKFUNC
,

2253 
CURLSHOPT_UNLOCKFUNC
,

2254 
CURLSHOPT_USERDATA
,

2256 
CURLSHOPT_LAST


2257 } 
	tCURLSH›ti⁄
;

2259 
CURL_EXTERN
 
CURLSH
 *
	`cuæ_sh¨e_öô
();

2260 
CURL_EXTERN
 
CURLSHcode
 
	`cuæ_sh¨e_£t›t
(
CURLSH
 *, 
CURLSH›ti⁄
 
›ti⁄
, ...);

2261 
CURL_EXTERN
 
CURLSHcode
 
	`cuæ_sh¨e_˛ónup
(
CURLSH
 *);

2268 
CURLVERSION_FIRST
,

2269 
CURLVERSION_SECOND
,

2270 
CURLVERSION_THIRD
,

2271 
CURLVERSION_FOURTH
,

2272 
CURLVERSION_LAST


2273 } 
	tCURLvîsi⁄
;

2280 
	#CURLVERSION_NOW
 
CURLVERSION_FOURTH


	)

2283 
CURLvîsi⁄
 
age
;

2284 c⁄° *
vîsi⁄
;

2285 
vîsi⁄_num
;

2286 c⁄° *
ho°
;

2287 
„©uªs
;

2288 c⁄° *
s¶_vîsi⁄
;

2289 
s¶_vîsi⁄_num
;

2290 c⁄° *
libz_vîsi⁄
;

2292 c⁄° * c⁄° *
¥Ÿocﬁs
;

2295 c⁄° *
¨es
;

2296 
¨es_num
;

2299 c⁄° *
libidn
;

2304 
ic⁄v_vî_num
;

2306 c⁄° *
libssh_vîsi⁄
;

2308 } 
	tcuæ_vîsi⁄_öfo_d©a
;

2310 
	#CURL_VERSION_IPV6
 (1<<0Ë

	)

2311 
	#CURL_VERSION_KERBEROS4
 (1<<1Ë

	)

2313 
	#CURL_VERSION_SSL
 (1<<2Ë

	)

2314 
	#CURL_VERSION_LIBZ
 (1<<3Ë

	)

2315 
	#CURL_VERSION_NTLM
 (1<<4Ë

	)

2316 
	#CURL_VERSION_GSSNEGOTIATE
 (1<<5Ë

	)

2318 
	#CURL_VERSION_DEBUG
 (1<<6Ë

	)

2319 
	#CURL_VERSION_ASYNCHDNS
 (1<<7Ë

	)

2320 
	#CURL_VERSION_SPNEGO
 (1<<8Ë

	)

2321 
	#CURL_VERSION_LARGEFILE
 (1<<9Ë

	)

2322 
	#CURL_VERSION_IDN
 (1<<10Ë

	)

2324 
	#CURL_VERSION_SSPI
 (1<<11Ë

	)

2325 
	#CURL_VERSION_CONV
 (1<<12Ë

	)

2326 
	#CURL_VERSION_CURLDEBUG
 (1<<13Ë

	)

2327 
	#CURL_VERSION_TLSAUTH_SRP
 (1<<14Ë

	)

2328 
	#CURL_VERSION_NTLM_WB
 (1<<15Ë

	)

2330 
	#CURL_VERSION_HTTP2
 (1<<16Ë

	)

2331 
	#CURL_VERSION_GSSAPI
 (1<<17Ë

	)

2332 
	#CURL_VERSION_KERBEROS5
 (1<<18Ë

	)

2333 
	#CURL_VERSION_UNIX_SOCKETS
 (1<<19Ë

	)

2334 
	#CURL_VERSION_PSL
 (1<<20Ë

	)

2345 
CURL_EXTERN
 
cuæ_vîsi⁄_öfo_d©a
 *
	`cuæ_vîsi⁄_öfo
(
CURLvîsi⁄
);

2356 
CURL_EXTERN
 c⁄° *
	`cuæ_ósy_°ªº‹
(
CURLcode
);

2367 
CURL_EXTERN
 c⁄° *
	`cuæ_sh¨e_°ªº‹
(
CURLSHcode
);

2378 
CURL_EXTERN
 
CURLcode
 
	`cuæ_ósy_∑u£
(
CURL
 *
h™dÀ
, 
bômask
);

2380 
	#CURLPAUSE_RECV
 (1<<0)

	)

2381 
	#CURLPAUSE_RECV_CONT
 (0)

	)

2383 
	#CURLPAUSE_SEND
 (1<<2)

	)

2384 
	#CURLPAUSE_SEND_CONT
 (0)

	)

2386 
	#CURLPAUSE_ALL
 (
CURLPAUSE_RECV
|
CURLPAUSE_SEND
)

	)

2387 
	#CURLPAUSE_CONT
 (
CURLPAUSE_RECV_CONT
|
CURLPAUSE_SEND_CONT
)

	)

2389 #ifde‡ 
__˝lu•lus


2390 
	}
}

2395 
	~"ósy.h
"

2396 
	~"mu…i.h
"

2399 #i‡
deföed
(
__GNUC__
Ë&& deföed(
__GNUC_MINOR__
) && \

2400 ((
__GNUC__
 > 4Ë|| (__GNUC__ =4 && 
__GNUC_MINOR__
 >= 3)) && \

2401 !
deföed
(
__˝lu•lus
Ë&& !
	$deföed
(
CURL_DISABLE_TYPECHECK
)

2402 
	~"ty≥check-gcc.h
"

2404 #i‡
	`deföed
(
__STDC__
) && (__STDC__ >= 1)

2408 
	#cuæ_ósy_£t›t
(
h™dÀ
,
›t
,
∑øm
Ë
	`cuæ_ósy_£t›t
(h™dÀ,›t,∑øm)

	)

2409 
	#cuæ_ósy_gëöfo
(
h™dÀ
,
öfo
,
¨g
Ë
	`cuæ_ósy_gëöfo
(h™dÀ,öfo,¨g)

	)

2410 
	#cuæ_sh¨e_£t›t
(
sh¨e
,
›t
,
∑øm
Ë
	`cuæ_sh¨e_£t›t
(sh¨e,›t,∑øm)

	)

2411 
	#cuæ_mu…i_£t›t
(
h™dÀ
,
›t
,
∑øm
Ë
	`cuæ_mu…i_£t›t
(h™dÀ,›t,∑øm)

	)

	@/usr/include/dirent.h

22 #i‚def 
_DIRENT_H


23 
	#_DIRENT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifde‡
__USE_XOPEN


32 #i‚de‡
__öo_t_deföed


33 #i‚de‡
__USE_FILE_OFFSET64


34 
__öo_t
 
	töo_t
;

36 
__öo64_t
 
	töo_t
;

38 
	#__öo_t_deföed


	)

40 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


41 
__öo64_t
 
	töo64_t
;

42 
	#__öo64_t_deföed


	)

61 
	~<bôs/dúít.h
>

63 #i‡
deföed
 
__USE_MISC
 && !deföed 
d_fûío


64 
	#d_öo
 
d_fûío


	)

81 #ifde‡
_DIRENT_HAVE_D_NAMLEN


82 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

83 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

85 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

86 #ifde‡
_DIRENT_HAVE_D_RECLEN


87 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

89 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

90 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

95 #ifde‡
__USE_MISC


99 
	mDT_UNKNOWN
 = 0,

100 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

101 
	mDT_FIFO
 = 1,

102 
	#DT_FIFO
 
DT_FIFO


	)

103 
	mDT_CHR
 = 2,

104 
	#DT_CHR
 
DT_CHR


	)

105 
	mDT_DIR
 = 4,

106 
	#DT_DIR
 
DT_DIR


	)

107 
	mDT_BLK
 = 6,

108 
	#DT_BLK
 
DT_BLK


	)

109 
	mDT_REG
 = 8,

110 
	#DT_REG
 
DT_REG


	)

111 
	mDT_LNK
 = 10,

112 
	#DT_LNK
 
DT_LNK


	)

113 
	mDT_SOCK
 = 12,

114 
	#DT_SOCK
 
DT_SOCK


	)

115 
	mDT_WHT
 = 14

116 
	#DT_WHT
 
DT_WHT


	)

120 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

121 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

127 
__dú°ªam
 
	tDIR
;

134 
DIR
 *
	$›ídú
 (c⁄° *
__«me
Ë
	`__n⁄nuŒ
 ((1));

136 #ifde‡
__USE_XOPEN2K8


141 
DIR
 *
	`fd›ídú
 (
__fd
);

149 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

161 #i‚de‡
__USE_FILE_OFFSET64


162 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

164 #ifde‡
__REDIRECT


165 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

166 
	`__n⁄nuŒ
 ((1));

168 
	#ªaddú
 
ªaddú64


	)

172 #ifde‡
__USE_LARGEFILE64


173 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

176 #ifde‡
__USE_POSIX


182 #i‚de‡
__USE_FILE_OFFSET64


183 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

184 
dúít
 *
__ª°ri˘
 
__íåy
,

185 
dúít
 **
__ª°ri˘
 
__ªsu…
)

186 
	`__n⁄nuŒ
 ((1, 2, 3));

188 #ifde‡
__REDIRECT


189 
	`__REDIRECT
 (
ªaddú_r
,

190 (
DIR
 *
__ª°ri˘
 
__dúp
,

191 
dúít
 *
__ª°ri˘
 
__íåy
,

192 
dúít
 **
__ª°ri˘
 
__ªsu…
),

193 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

195 
	#ªaddú_r
 
ªaddú64_r


	)

199 #ifde‡
__USE_LARGEFILE64


200 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

201 
dúít64
 *
__ª°ri˘
 
__íåy
,

202 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

203 
	`__n⁄nuŒ
 ((1, 2, 3));

208 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

210 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


211 
	~<bôs/ty≥s.h
>

214 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

220 #ifde‡
__USE_XOPEN2K8


223 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


226 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

229 #ifde‡
__USE_MISC


230 #i‚de‡
MAXNAMLEN


232 
	~<bôs/posix1_lim.h
>

235 #ifde‡
NAME_MAX


236 
	#MAXNAMLEN
 
NAME_MAX


	)

238 
	#MAXNAMLEN
 255

	)

243 
	#__√ed_size_t


	)

244 
	~<°ddef.h
>

253 #i‚de‡
__USE_FILE_OFFSET64


254 
	$sˇndú
 (c⁄° *
__ª°ri˘
 
__dú
,

255 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

256 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

257 (*
__cmp
Ë(c⁄° 
dúít
 **,

258 c⁄° 
dúít
 **))

259 
	`__n⁄nuŒ
 ((1, 2));

261 #ifde‡
__REDIRECT


262 
	`__REDIRECT
 (
sˇndú
,

263 (c⁄° *
__ª°ri˘
 
__dú
,

264 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

265 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

266 (*
__cmp
Ë(c⁄° 
dúít
 **,

267 c⁄° 
dúít
 **)),

268 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

270 
	#sˇndú
 
sˇndú64


	)

274 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


277 
	$sˇndú64
 (c⁄° *
__ª°ri˘
 
__dú
,

278 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

279 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

280 (*
__cmp
Ë(c⁄° 
dúít64
 **,

281 c⁄° 
dúít64
 **))

282 
	`__n⁄nuŒ
 ((1, 2));

285 #ifde‡
__USE_GNU


291 #i‚de‡
__USE_FILE_OFFSET64


292 
	$sˇndú©
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

293 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

294 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

295 (*
__cmp
Ë(c⁄° 
dúít
 **,

296 c⁄° 
dúít
 **))

297 
	`__n⁄nuŒ
 ((2, 3));

299 #ifde‡
__REDIRECT


300 
	`__REDIRECT
 (
sˇndú©
,

301 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

302 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

303 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

304 (*
__cmp
Ë(c⁄° 
dúít
 **,

305 c⁄° 
dúít
 **)),

306 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

308 
	#sˇndú©
 
sˇndú©64


	)

314 
	$sˇndú©64
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

315 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

316 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

317 (*
__cmp
Ë(c⁄° 
dúít64
 **,

318 c⁄° 
dúít64
 **))

319 
	`__n⁄nuŒ
 ((2, 3));

323 #i‚de‡
__USE_FILE_OFFSET64


324 
	$Æphas‹t
 (c⁄° 
dúít
 **
__e1
,

325 c⁄° 
dúít
 **
__e2
)

326 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

328 #ifde‡
__REDIRECT


329 
	`__REDIRECT_NTH
 (
Æphas‹t
,

330 (c⁄° 
dúít
 **
__e1
,

331 c⁄° 
dúít
 **
__e2
),

332 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

334 
	#Æphas‹t
 
Æphas‹t64


	)

338 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


339 
	$Æphas‹t64
 (c⁄° 
dúít64
 **
__e1
,

340 c⁄° 
dúít64
 **
__e2
)

341 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

346 #ifde‡
__USE_MISC


351 #i‚de‡
__USE_FILE_OFFSET64


352 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

353 
size_t
 
__nbyãs
,

354 
__off_t
 *
__ª°ri˘
 
__ba£p
)

355 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

357 #ifde‡
__REDIRECT


358 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

359 (
__fd
, *
__ª°ri˘
 
__buf
,

360 
size_t
 
__nbyãs
,

361 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

362 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

364 
	#gëdúíåõs
 
gëdúíåõs64


	)

368 #ifde‡
__USE_LARGEFILE64


369 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

370 
size_t
 
__nbyãs
,

371 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

372 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

376 #ifde‡
__USE_GNU


378 #i‚de‡
__USE_FILE_OFFSET64


379 
	$vîsi⁄s‹t
 (c⁄° 
dúít
 **
__e1
,

380 c⁄° 
dúít
 **
__e2
)

381 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

383 #ifde‡
__REDIRECT


384 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

385 (c⁄° 
dúít
 **
__e1
,

386 c⁄° 
dúít
 **
__e2
),

387 
vîsi⁄s‹t64
)

388 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

390 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

394 #ifde‡
__USE_LARGEFILE64


395 
	$vîsi⁄s‹t64
 (c⁄° 
dúít64
 **
__e1
,

396 c⁄° 
dúít64
 **
__e2
)

397 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

401 
__END_DECLS


	@/usr/include/dlfcn.h

19 #i‚def 
_DLFCN_H


20 
	#_DLFCN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
	~<bôs/dlf˙.h
>

30 #ifde‡
__USE_GNU


35 
	#RTLD_NEXT
 ((*Ë-1l)

	)

40 
	#RTLD_DEFAULT
 ((*Ë0)

	)

44 
	tLmid_t
;

47 
	#LM_ID_BASE
 0

	)

48 
	#LM_ID_NEWLM
 -1

	)

52 
__BEGIN_DECLS


56 *
	$dl›í
 (c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

60 
	$dl˛o£
 (*
__h™dÀ
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1));

64 *
	$dlsym
 (*
__ª°ri˘
 
__h™dÀ
,

65 c⁄° *
__ª°ri˘
 
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

67 #ifde‡
__USE_GNU


69 *
	$dlm›í
 (
Lmid_t
 
__nsid
, c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

73 *
	$dlvsym
 (*
__ª°ri˘
 
__h™dÀ
,

74 c⁄° *
__ª°ri˘
 
__«me
,

75 c⁄° *
__ª°ri˘
 
__vîsi⁄
)

76 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

82 *
	$dÀº‹
 (Ë
__THROW
;

85 #ifde‡
__USE_GNU


90 c⁄° *
dli_‚ame
;

91 *
dli_fba£
;

92 c⁄° *
dli_¢ame
;

93 *
dli_ßddr
;

94 } 
	tDl_öfo
;

98 
	$dœddr
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
)

99 
__THROW
 
	`__n⁄nuŒ
 ((2));

102 
	$dœddr1
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
,

103 **
__exåa_öfo
, 
__Êags
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

111 
RTLD_DL_SYMENT
 = 1,

114 
RTLD_DL_LINKMAP
 = 2

123 
	$dlöfo
 (*
__ª°ri˘
 
__h™dÀ
,

124 
__ªque°
, *
__ª°ri˘
 
__¨g
)

125 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

131 
RTLD_DI_LMID
 = 1,

135 
RTLD_DI_LINKMAP
 = 2,

137 
RTLD_DI_CONFIGADDR
 = 3,

144 
RTLD_DI_SERINFO
 = 4,

145 
RTLD_DI_SERINFOSIZE
 = 5,

149 
RTLD_DI_ORIGIN
 = 6,

151 
RTLD_DI_PROFILENAME
 = 7,

152 
RTLD_DI_PROFILEOUT
 = 8,

157 
RTLD_DI_TLS_MODID
 = 9,

163 
RTLD_DI_TLS_DATA
 = 10,

165 
RTLD_DI_MAX
 = 10

173 *
dls_«me
;

174 
dls_Êags
;

175 } 
	tDl_£Ω©h
;

181 
size_t
 
dls_size
;

182 
dls_˙t
;

183 
Dl_£Ω©h
 
dls_£Ω©h
[1];

184 } 
	tDl_£röfo
;

188 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/fcgi_stdio.h

15 #i‚de‡
_FCGI_STDIO


16 
	#_FCGI_STDIO
 1

	)

18 
	~<°dio.h
>

19 
	~<sys/ty≥s.h
>

20 
	~"fcgüµ.h
"

22 #i‡
deföed
 (
c_∂u•lus
Ë|| deföed (
__˝lu•lus
)

26 #i‚de‡
DLLAPI


27 #ifde‡
_WIN32


28 
	#DLLAPI
 
	`__de˛•ec
(
dŒimp‹t
)

	)

30 
	#DLLAPI


	)

39 
FILE
 *
°dio_°ªam
;

40 
FCGX_Såóm
 *
fcgx_°ªam
;

41 } 
	tFCGI_FILE
;

47 
DLLAPI
 
FCGI_Ac˚±
();

48 
DLLAPI
 
FCGI_Föish
();

49 
DLLAPI
 
FCGI_SèπFûãrD©a
();

50 
DLLAPI
 
FCGI_SëExôSètus
(
°©us
);

52 
	#FCGI_ToFILE
(
fcgi_fûe
Ë(fcgi_fûe->
°dio_°ªam
)

	)

53 
	#FCGI_ToFcgiSåóm
(
fcgi_fûe
Ë(fcgi_fûe->
fcgx_°ªam
)

	)

59 
DLLAPI
 
FCGI_FILE
 
_fcgi_sF
[];

60 
	#FCGI_°dö
 (&
_fcgi_sF
[0])

	)

61 
	#FCGI_°dout
 (&
_fcgi_sF
[1])

	)

62 
	#FCGI_°dîr
 (&
_fcgi_sF
[2])

	)

70 
DLLAPI
 
FCGI_≥º‹
(c⁄° *
°r
);

72 
DLLAPI
 
FCGI_FILE
 *
FCGI_f›í
(c⁄° *
∑th
, c⁄° *
mode
);

73 
DLLAPI
 
FCGI_f˛o£
(
FCGI_FILE
 *
Â
);

74 
DLLAPI
 
FCGI_fÊush
(
FCGI_FILE
 *
Â
);

75 
DLLAPI
 
FCGI_FILE
 *
FCGI_‰e›í
(c⁄° *
∑th
, c⁄° *
mode
, FCGI_FILE *
Â
);

77 
DLLAPI
 
FCGI_£tvbuf
(
FCGI_FILE
 *
Â
, *
buf
, 
bufmode
, 
size_t
 
size
);

78 
DLLAPI
 
FCGI_£tbuf
(
FCGI_FILE
 *
Â
, *
buf
);

80 
DLLAPI
 
FCGI_f£ek
(
FCGI_FILE
 *
Â
, 
off£t
, 
whí˚
);

81 
DLLAPI
 
FCGI_·ñl
(
FCGI_FILE
 *
Â
);

82 
DLLAPI
 
FCGI_ªwöd
(
FCGI_FILE
 *
Â
);

83 #ifde‡
HAVE_FPOS


84 
DLLAPI
 
FCGI_fgëpos
(
FCGI_FILE
 *
Â
, 
Âos_t
 *
pos
);

85 
DLLAPI
 
FCGI_f£ços
(
FCGI_FILE
 *
Â
, c⁄° 
Âos_t
 *
pos
);

87 
DLLAPI
 
FCGI_fgëc
(
FCGI_FILE
 *
Â
);

88 
DLLAPI
 
FCGI_gëch¨
();

89 
DLLAPI
 
FCGI_ungëc
(
c
, 
FCGI_FILE
 *
Â
);

91 
DLLAPI
 *
FCGI_fgës
(*
°r
, 
size
, 
FCGI_FILE
 *
Â
);

92 
DLLAPI
 *
FCGI_gës
(*
°r
);

102 
DLLAPI
 
FCGI_Âutc
(
c
, 
FCGI_FILE
 *
Â
);

103 
DLLAPI
 
FCGI_putch¨
(
c
);

105 
DLLAPI
 
FCGI_Âuts
(c⁄° *
°r
, 
FCGI_FILE
 *
Â
);

106 
DLLAPI
 
FCGI_puts
(c⁄° *
°r
);

108 
DLLAPI
 
FCGI_Ârötf
(
FCGI_FILE
 *
Â
, c⁄° *
f‹m©
, ...);

109 
DLLAPI
 
FCGI_¥ötf
(c⁄° *
f‹m©
, ...);

111 
DLLAPI
 
FCGI_vÂrötf
(
FCGI_FILE
 *
Â
, c⁄° *
f‹m©
, 
va_li°
 
≠
);

112 
DLLAPI
 
FCGI_v¥ötf
(c⁄° *
f‹m©
, 
va_li°
 
≠
);

114 
DLLAPI
 
size_t
 
FCGI_‰ód
(*
±r
, size_à
size
, size_à
nmemb
, 
FCGI_FILE
 *
Â
);

115 
DLLAPI
 
size_t
 
FCGI_fwrôe
(*
±r
, size_à
size
, size_à
nmemb
, 
FCGI_FILE
 *
Â
);

117 
DLLAPI
 
FCGI_„of
(
FCGI_FILE
 *
Â
);

118 
DLLAPI
 
FCGI_„º‹
(
FCGI_FILE
 *
Â
);

119 
DLLAPI
 
FCGI_˛óªº
(
FCGI_FILE
 *
Â
);

121 
DLLAPI
 
FCGI_FILE
 *
FCGI_tmpfûe
();

123 
DLLAPI
 
FCGI_fûío
(
FCGI_FILE
 *
Â
);

124 
DLLAPI
 
FCGI_FILE
 *
FCGI_fd›í
(
fd
, c⁄° *
mode
);

125 
DLLAPI
 
FCGI_FILE
 *
FCGI_p›í
(c⁄° *
cmd
, c⁄° *
ty≥
);

126 
DLLAPI
 
FCGI_p˛o£
(
FCGI_FILE
 *);

133 #i‚de‡
NO_FCGI_DEFINES


140 #unde‡
FILE


141 
	#FILE
 
FCGI_FILE


	)

143 #unde‡
°dö


144 
	#°dö
 
FCGI_°dö


	)

145 #unde‡
°dout


146 
	#°dout
 
FCGI_°dout


	)

147 #unde‡
°dîr


148 
	#°dîr
 
FCGI_°dîr


	)

150 #unde‡
≥º‹


151 
	#≥º‹
 
FCGI_≥º‹


	)

153 #unde‡
f›í


154 
	#f›í
 
FCGI_f›í


	)

155 #unde‡
f˛o£


156 
	#f˛o£
 
FCGI_f˛o£


	)

157 #unde‡
fÊush


158 
	#fÊush
 
FCGI_fÊush


	)

159 #unde‡
‰e›í


160 
	#‰e›í
 
FCGI_‰e›í


	)

162 #unde‡
£tvbuf


163 
	#£tvbuf
 
FCGI_£tvbuf


	)

164 #unde‡
£tbuf


165 
	#£tbuf
 
FCGI_£tbuf


	)

167 #unde‡
f£ek


168 
	#f£ek
 
FCGI_f£ek


	)

169 #unde‡
·ñl


170 
	#·ñl
 
FCGI_·ñl


	)

171 #unde‡
ªwöd


172 
	#ªwöd
 
FCGI_ªwöd


	)

173 #unde‡
fgëpos


174 
	#fgëpos
 
FCGI_fgëpos


	)

175 #unde‡
f£ços


176 
	#f£ços
 
FCGI_f£ços


	)

178 #unde‡
fgëc


179 
	#fgëc
 
FCGI_fgëc


	)

180 #unde‡
gëc


181 
	#gëc
 
FCGI_fgëc


	)

182 #unde‡
gëch¨


183 
	#gëch¨
 
FCGI_gëch¨


	)

184 #unde‡
ungëc


185 
	#ungëc
 
FCGI_ungëc


	)

187 #unde‡
fgës


188 
	#fgës
 
FCGI_fgës


	)

189 #unde‡
gës


190 
	#gës
 
FCGI_gës


	)

192 #unde‡
Âutc


193 
	#Âutc
 
FCGI_Âutc


	)

194 #unde‡
putc


195 
	#putc
 
FCGI_Âutc


	)

196 #unde‡
putch¨


197 
	#putch¨
 
FCGI_putch¨


	)

199 #unde‡
Âuts


200 
	#Âuts
 
FCGI_Âuts


	)

201 #unde‡
puts


202 
	#puts
 
FCGI_puts


	)

204 #unde‡
Ârötf


205 
	#Ârötf
 
FCGI_Ârötf


	)

206 #unde‡
¥ötf


207 
	#¥ötf
 
FCGI_¥ötf


	)

209 #unde‡
vÂrötf


210 
	#vÂrötf
 
FCGI_vÂrötf


	)

211 #unde‡
v¥ötf


212 
	#v¥ötf
 
FCGI_v¥ötf


	)

214 #unde‡
‰ód


215 
	#‰ód
 
FCGI_‰ód


	)

216 #unde‡
fwrôe


217 
	#fwrôe
 
FCGI_fwrôe


	)

219 #unde‡
„of


220 
	#„of
 
FCGI_„of


	)

221 #unde‡
„º‹


222 
	#„º‹
 
FCGI_„º‹


	)

223 #unde‡
˛óªº


224 
	#˛óªº
 
FCGI_˛óªº


	)

226 #unde‡
tmpfûe


227 
	#tmpfûe
 
FCGI_tmpfûe


	)

229 #unde‡
fûío


230 
	#fûío
 
FCGI_fûío


	)

231 #unde‡
fd›í


232 
	#fd›í
 
FCGI_fd›í


	)

233 #unde‡
p›í


234 
	#p›í
 
FCGI_p›í


	)

235 #unde‡
p˛o£


236 
	#p˛o£
 
FCGI_p˛o£


	)

240 #i‡
deföed
 (
__˝lu•lus
Ë|| deföed (
c_∂u•lus
)

	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

39 #ifde‡
__O_TMPFILE


40 
	#__OPEN_NEEDS_MODE
(
oÊag
) \

41 (((
oÊag
Ë& 
O_CREAT
Ë!0 || ((oÊagË& 
__O_TMPFILE
Ë=__O_TMPFILE)

	)

43 
	#__OPEN_NEEDS_MODE
(
oÊag
Ë(((oÊagË& 
O_CREAT
Ë!0)

	)

49 #i‚de‡
__mode_t_deföed


50 
__mode_t
 
	tmode_t
;

51 
	#__mode_t_deföed


	)

54 #i‚de‡
__off_t_deföed


55 #i‚de‡
__USE_FILE_OFFSET64


56 
__off_t
 
	toff_t
;

58 
__off64_t
 
	toff_t
;

60 
	#__off_t_deföed


	)

63 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


64 
__off64_t
 
	toff64_t
;

65 
	#__off64_t_deföed


	)

68 #i‚de‡
__pid_t_deföed


69 
__pid_t
 
	tpid_t
;

70 
	#__pid_t_deföed


	)

74 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

77 
	~<bôs/°©.h
>

79 
	#S_IFMT
 
__S_IFMT


	)

80 
	#S_IFDIR
 
__S_IFDIR


	)

81 
	#S_IFCHR
 
__S_IFCHR


	)

82 
	#S_IFBLK
 
__S_IFBLK


	)

83 
	#S_IFREG
 
__S_IFREG


	)

84 #ifde‡
__S_IFIFO


85 
	#S_IFIFO
 
__S_IFIFO


	)

87 #ifde‡
__S_IFLNK


88 
	#S_IFLNK
 
__S_IFLNK


	)

90 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


91 
	#S_IFSOCK
 
__S_IFSOCK


	)

96 
	#S_ISUID
 
__S_ISUID


	)

97 
	#S_ISGID
 
__S_ISGID


	)

99 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


101 
	#S_ISVTX
 
__S_ISVTX


	)

104 
	#S_IRUSR
 
__S_IREAD


	)

105 
	#S_IWUSR
 
__S_IWRITE


	)

106 
	#S_IXUSR
 
__S_IEXEC


	)

108 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

110 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

111 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

112 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

114 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

116 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

117 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

118 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

120 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

123 #ifdef 
__USE_MISC


124 #i‚de‡
R_OK


127 
	#R_OK
 4

	)

128 
	#W_OK
 2

	)

129 
	#X_OK
 1

	)

130 
	#F_OK
 0

	)

135 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


136 
	#SEEK_SET
 0

	)

137 
	#SEEK_CUR
 1

	)

138 
	#SEEK_END
 2

	)

146 
f˙é
 (
__fd
, 
__cmd
, ...);

155 #i‚de‡
__USE_FILE_OFFSET64


156 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

158 #ifde‡
__REDIRECT


159 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

160 
	`__n⁄nuŒ
 ((1));

162 
	#›í
 
›í64


	)

165 #ifde‡
__USE_LARGEFILE64


166 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

169 #ifde‡
__USE_ATFILE


179 #i‚de‡
__USE_FILE_OFFSET64


180 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

181 
	`__n⁄nuŒ
 ((2));

183 #ifde‡
__REDIRECT


184 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

185 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

187 
	#›í©
 
›í©64


	)

190 #ifde‡
__USE_LARGEFILE64


191 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

192 
	`__n⁄nuŒ
 ((2));

201 #i‚de‡
__USE_FILE_OFFSET64


202 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

204 #ifde‡
__REDIRECT


205 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

206 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

208 
	#¸ót
 
¸ót64


	)

211 #ifde‡
__USE_LARGEFILE64


212 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

215 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

216 && !
deföed
 
__USE_POSIX
))

225 
	#F_ULOCK
 0

	)

226 
	#F_LOCK
 1

	)

227 
	#F_TLOCK
 2

	)

228 
	#F_TEST
 3

	)

230 #i‚de‡
__USE_FILE_OFFSET64


231 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

233 #ifde‡
__REDIRECT


234 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

236 
	#lockf
 
lockf64


	)

239 #ifde‡
__USE_LARGEFILE64


240 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

244 #ifde‡
__USE_XOPEN2K


247 #i‚de‡
__USE_FILE_OFFSET64


248 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

249 
__advi£
Ë
__THROW
;

251 #ifde‡
__REDIRECT_NTH


252 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

253 
__off64_t
 
__Àn
, 
__advi£
),

254 
posix_Ádvi£64
);

256 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

259 #ifde‡
__USE_LARGEFILE64


260 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

261 
__advi£
Ë
__THROW
;

269 #i‚de‡
__USE_FILE_OFFSET64


270 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

272 #ifde‡
__REDIRECT


273 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

274 
__off64_t
 
__Àn
),

275 
posix_ÁŒoˇã64
);

277 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

280 #ifde‡
__USE_LARGEFILE64


281 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

287 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

288 && 
deföed
 
__va_¨g_∑ck_Àn


289 
	~<bôs/f˙é2.h
>

292 
__END_DECLS


	@/usr/include/fnmatch.h

18 #i‚def 
_FNMATCH_H


19 
	#_FNMATCH_H
 1

	)

21 #ifdef 
__˝lu•lus


27 #unde‡
FNM_PATHNAME


28 #unde‡
FNM_NOESCAPE


29 #unde‡
FNM_PERIOD


32 
	#FNM_PATHNAME
 (1 << 0Ë

	)

33 
	#FNM_NOESCAPE
 (1 << 1Ë

	)

34 
	#FNM_PERIOD
 (1 << 2Ë

	)

36 #i‡!
deföed
 
_POSIX_C_SOURCE
 || _POSIX_C_SOURCE < 2 || deföed 
_GNU_SOURCE


37 
	#FNM_FILE_NAME
 
FNM_PATHNAME


	)

38 
	#FNM_LEADING_DIR
 (1 << 3Ë

	)

39 
	#FNM_CASEFOLD
 (1 << 4Ë

	)

40 
	#FNM_EXTMATCH
 (1 << 5Ë

	)

44 
	#FNM_NOMATCH
 1

	)

50 #ifde‡
_XOPEN_SOURCE


51 
	#FNM_NOSYS
 (-1)

	)

56 
‚m©ch
 (c⁄° *
__∑âîn
, c⁄° *
__«me
, 
__Êags
);

58 #ifdef 
__˝lu•lus


	@/usr/include/grp.h

22 #i‚def 
_GRP_H


23 
	#_GRP_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 
	#__√ed_size_t


	)

32 
	~<°ddef.h
>

36 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
Ë&& !deföed 
__gid_t_deföed


37 
__gid_t
 
	tgid_t
;

38 
	#__gid_t_deföed


	)

42 
	sgroup


44 *
	mgr_«me
;

45 *
	mgr_∑sswd
;

46 
__gid_t
 
	mgr_gid
;

47 **
	mgr_mem
;

51 #ifde‡
__USE_MISC


52 
	#__√ed_FILE


	)

53 
	~<°dio.h
>

57 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


62 
£tgª¡
 ();

68 
ídgª¡
 ();

74 
group
 *
gëgª¡
 ();

77 #ifdef 
__USE_MISC


84 
group
 *
fgëgª¡
 (
FILE
 *
__°ªam
);

87 #ifde‡
__USE_GNU


94 
putgª¡
 (c⁄° 
group
 *
__ª°ri˘
 
__p
,

95 
FILE
 *
__ª°ri˘
 
__f
);

102 
group
 *
gëgrgid
 (
__gid_t
 
__gid
);

108 
group
 *
gëg∫am
 (c⁄° *
__«me
);

110 #ifde‡
__USE_POSIX


112 #ifde‡
__USE_MISC


115 
	#NSS_BUFLEN_GROUP
 1024

	)

131 #ifde‡
__USE_GNU


132 
gëgª¡_r
 (
group
 *
__ª°ri˘
 
__ªsu…buf
,

133 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

134 
group
 **
__ª°ri˘
 
__ªsu…
);

141 
gëgrgid_r
 (
__gid_t
 
__gid
, 
group
 *
__ª°ri˘
 
__ªsu…buf
,

142 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

143 
group
 **
__ª°ri˘
 
__ªsu…
);

149 
gëg∫am_r
 (c⁄° *
__ª°ri˘
 
__«me
,

150 
group
 *
__ª°ri˘
 
__ªsu…buf
,

151 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

152 
group
 **
__ª°ri˘
 
__ªsu…
);

154 #ifdef 
__USE_MISC


162 
fgëgª¡_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

163 
group
 *
__ª°ri˘
 
__ªsu…buf
,

164 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

165 
group
 **
__ª°ri˘
 
__ªsu…
);

171 #ifdef 
__USE_MISC


173 
	#__√ed_size_t


	)

174 
	~<°ddef.h
>

177 
	$£tgroups
 (
size_t
 
__n
, c⁄° 
__gid_t
 *
__groups
Ë
__THROW
;

187 
	`gëgrou∂i°
 (c⁄° *
__u£r
, 
__gid_t
 
__group
,

188 
__gid_t
 *
__groups
, *
__ngroups
);

198 
	`öôgroups
 (c⁄° *
__u£r
, 
__gid_t
 
__group
);

202 
__END_DECLS


	@/usr/include/ifaddrs.h

19 #i‚de‡
_IFADDRS_H


20 
	#_IFADDRS_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sys/sockë.h
>

25 
__BEGIN_DECLS


29 
	siÁddrs


31 
iÁddrs
 *
	miÁ_√xt
;

33 *
	miÁ_«me
;

34 
	miÁ_Êags
;

36 
sockaddr
 *
	miÁ_addr
;

37 
sockaddr
 *
	miÁ_√tmask
;

44 
sockaddr
 *
	mifu_brﬂdaddr
;

45 
sockaddr
 *
	mifu_d°addr
;

46 } 
	miÁ_ifu
;

49 #i‚de‡
iÁ_brﬂdaddr


50 
	#iÁ_brﬂdaddr
 
iÁ_ifu
.
ifu_brﬂdaddr


	)

52 #i‚de‡
iÁ_d°addr


53 
	#iÁ_d°addr
 
iÁ_ifu
.
ifu_d°addr


	)

56 *
	miÁ_d©a
;

66 
	$gëiÁddrs
 (
iÁddrs
 **
__iÁp
Ë
__THROW
;

69 
	$‰ìiÁddrs
 (
iÁddrs
 *
__iÁ
Ë
__THROW
;

71 
__END_DECLS


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 #ifde‡
__USE_EXTERN_INLINES


316 #i‡
__WORDSIZE
 == 64

318 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

319 **
__ª°ri˘
 
__íd±r
,

320 
__ba£
, 
__group
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

323 
__exã∫_ölöe
 
ötmax_t


324 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

325 
ba£
))

327  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

328 
	}
}

330 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 ** 
__ª°ri˘
 
__íd±r
,

332 
__ba£
, 
__group
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

335 
__exã∫_ölöe
 
uötmax_t


336 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

337 
ba£
))

339  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

340 
	}
}

342 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

343 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

344 
__ba£
, 
__group
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

347 
__exã∫_ölöe
 
ötmax_t


348 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

349 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

351  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

352 
	}
}

354 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

355 
__ª°ri˘
 
__≈å
,

356 
__gwch¨_t
 **

357 
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
__group
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

361 
__exã∫_ölöe
 
uötmax_t


362 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

363 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

365  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

366 
	}
}

370 
__exãnsi⁄__


371 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
__group
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

376 
__exã∫_ölöe
 
ötmax_t


377 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

378 
ba£
))

380  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

381 
	}
}

383 
__exãnsi⁄__


384 
	$__°πouŒ_öã∫Æ
 (const *

385 
__ª°ri˘
 
__≈å
,

387 
__ª°ri˘
 
__íd±r
,

388 
__ba£
,

389 
__group
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

392 
__exã∫_ölöe
 
uötmax_t


393 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

394 
ba£
))

396  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

397 
	}
}

399 
__exãnsi⁄__


400 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
, 
__group
)

403 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

405 
__exã∫_ölöe
 
ötmax_t


406 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

407 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

409  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

410 
	}
}

413 
__exãnsi⁄__


414 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

415 
__ª°ri˘
 
__≈å
,

416 
__gwch¨_t
 **

417 
__ª°ri˘
 
__íd±r
,

418 
__ba£
,

419 
__group
)

420 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

422 
__exã∫_ölöe
 
uötmax_t


423 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

424 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

426  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

427 
	}
}

432 
	g__END_DECLS


	@/usr/include/libgen.h

18 #i‚de‡
_LIBGEN_H


19 
	#_LIBGEN_H
 1

	)

21 
	~<„©uªs.h
>

23 
__BEGIN_DECLS


26 *
	$dú«me
 (*
__∑th
Ë
__THROW
;

34 *
	$__xpg_ba£«me
 (*
__∑th
Ë
__THROW
;

35 
	#ba£«me
 
__xpg_ba£«me


	)

37 
__END_DECLS


	@/usr/include/libintl.h

20 #i‚de‡
_LIBINTL_H


21 
	#_LIBINTL_H
 1

	)

23 
	~<„©uªs.h
>

27 
	#__USE_GNU_GETTEXT
 1

	)

31 
	#__GNU_GETTEXT_SUPPORTED_REVISION
(
maj‹
) \

32 ((
maj‹
Ë=0 ? 1 : -1)

	)

34 
__BEGIN_DECLS


39 *
	$gëãxt
 (c⁄° *
__msgid
)

40 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (1);

44 *
	$dgëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid
)

45 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

46 *
	$__dgëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid
)

47 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

51 *
	$dcgëãxt
 (c⁄° *
__domaö«me
,

52 c⁄° *
__msgid
, 
__ˇãg‹y
)

53 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

54 *
	$__dcgëãxt
 (c⁄° *
__domaö«me
,

55 c⁄° *
__msgid
, 
__ˇãg‹y
)

56 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

61 *
	$ngëãxt
 (c⁄° *
__msgid1
, c⁄° *
__msgid2
,

62 
__n
)

63 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (1Ë
	`__©åibuã_f‹m©_¨g__
 (2);

67 *
	$dngëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid1
,

68 c⁄° *
__msgid2
, 
__n
)

69 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

73 *
	$d˙gëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid1
,

74 c⁄° *
__msgid2
, 
__n
,

75 
__ˇãg‹y
)

76 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

82 *
	$ãxtdomaö
 (c⁄° *
__domaö«me
Ë
__THROW
;

86 *
	$bödãxtdomaö
 (c⁄° *
__domaö«me
,

87 c⁄° *
__dú«me
Ë
__THROW
;

91 *
	$böd_ãxtdomaö_code£t
 (c⁄° *
__domaö«me
,

92 c⁄° *
__code£t
Ë
__THROW
;

96 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


99 
	#__√ed_NULL


	)

100 
	~<°ddef.h
>

103 
	~<loˇÀ.h
>

109 
	#gëãxt
(
msgid
Ë
	`dgëãxt
 (
NULL
, msgid)

	)

111 
	#dgëãxt
(
domaö«me
, 
msgid
) \

112 
	`dcgëãxt
 (
domaö«me
, 
msgid
, 
LC_MESSAGES
)

	)

114 
	#ngëãxt
(
msgid1
, 
msgid2
, 
n
Ë
	`dngëãxt
 (
NULL
, msgid1, msgid2,Ç)

	)

116 
	#dngëãxt
(
domaö«me
, 
msgid1
, 
msgid2
, 
n
) \

117 
	`d˙gëãxt
 (
domaö«me
, 
msgid1
, 
msgid2
, 
n
, 
LC_MESSAGES
)

	)

121 
__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/malloc.h

19 #i‚de‡
_MALLOC_H


20 
	#_MALLOC_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°ddef.h
>

24 
	~<°dio.h
>

26 #ifde‡
_LIBC


27 
	#__MALLOC_HOOK_VOLATILE


	)

28 
	#__MALLOC_DEPRECATED


	)

30 
	#__MALLOC_HOOK_VOLATILE
 vﬁ©ûe

	)

31 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

35 
__BEGIN_DECLS


38 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

41 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

42 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

49 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

50 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

53 
	$‰ì
 (*
__±r
Ë
__THROW
;

56 
	$c‰ì
 (*
__±r
Ë
__THROW
;

59 *
	$memÆign
 (
size_t
 
__Æignmít
, size_à
__size
)

60 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

63 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

67 *
	$pvÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

71 *(*
__m‹ec‹e
Ë(
±rdiff_t
 
__size
);

74 *
	$__deÁu…_m‹ec‹e
 (
±rdiff_t
 
__size
)

75 
__THROW
 
__©åibuã_mÆloc__
;

79 
	smÆlöfo


81 
¨ía
;

82 
‹dblks
;

83 
smblks
;

84 
hblks
;

85 
hblkhd
;

86 
usmblks
;

87 
fsmblks
;

88 
u‹dblks
;

89 
f‹dblks
;

90 
kìpco°
;

94 
mÆlöfo
 
	$mÆlöfo
 (Ë
__THROW
;

97 #i‚de‡
M_MXFAST


98 
	#M_MXFAST
 1

	)

100 #i‚de‡
M_NLBLKS


101 
	#M_NLBLKS
 2

	)

103 #i‚de‡
M_GRAIN


104 
	#M_GRAIN
 3

	)

106 #i‚de‡
M_KEEP


107 
	#M_KEEP
 4

	)

111 
	#M_TRIM_THRESHOLD
 -1

	)

112 
	#M_TOP_PAD
 -2

	)

113 
	#M_MMAP_THRESHOLD
 -3

	)

114 
	#M_MMAP_MAX
 -4

	)

115 
	#M_CHECK_ACTION
 -5

	)

116 
	#M_PERTURB
 -6

	)

117 
	#M_ARENA_TEST
 -7

	)

118 
	#M_ARENA_MAX
 -8

	)

121 
	$mÆl›t
 (
__∑øm
, 
__vÆ
Ë
__THROW
;

125 
	$mÆloc_åim
 (
size_t
 
__∑d
Ë
__THROW
;

129 
size_t
 
	$mÆloc_ußbÀ_size
 (*
__±r
Ë
__THROW
;

132 
	$mÆloc_°©s
 (Ë
__THROW
;

135 
	$mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
Ë
__THROW
;

138 *
	$mÆloc_gë_°©e
 (Ë
__THROW
;

142 
	$mÆloc_£t_°©e
 (*
__±r
Ë
__THROW
;

147 (*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_öôülize_hook
) ()

148 
__MALLOC_DEPRECATED
;

150 (*
__MALLOC_HOOK_VOLATILE
 
__‰ì_hook
Ë(*
__±r
,

152 
__MALLOC_DEPRECATED
;

153 *(*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_hook
)(
size_t
 
__size
,

155 
__MALLOC_DEPRECATED
;

156 *(*
__MALLOC_HOOK_VOLATILE
 
__ªÆloc_hook
)(*
__±r
,

157 
size_t
 
__size
,

159 
__MALLOC_DEPRECATED
;

160 *(*
__MALLOC_HOOK_VOLATILE
 
__memÆign_hook
)(
size_t
 
__Æignmít
,

161 
size_t
 
__size
,

163 
__MALLOC_DEPRECATED
;

164 (*
__MALLOC_HOOK_VOLATILE
 
__a·î_m‹ec‹e_hook
) ();

167 
	$__mÆloc_check_öô
 (Ë
__THROW
 
__MALLOC_DEPRECATED
;

170 
__END_DECLS


	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/m©h-ve˘‹.h
>

35 
	~<bôs/huge_vÆ.h
>

36 #ifde‡
__USE_ISOC99


37 
	~<bôs/huge_vÆf.h
>

38 
	~<bôs/huge_vÆl.h
>

41 
	~<bôs/öf.h
>

44 
	~<bôs/«n.h
>

48 
	~<bôs/m©hdef.h
>

55 
	#__SIMD_DECL
(
fun˘i⁄
Ë
	`__CONCAT
 (
__DECL_SIMD_
, fun˘i⁄)

	)

57 
	#__MATHCALL_VEC
(
fun˘i⁄
, 
suffix
, 
¨gs
) \

58 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

59 
	`__MATHCALL
 (
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

61 
	#__MATHDECL_VEC
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

62 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

63 
	`__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
)

	)

65 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

66 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

67 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

68 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

69 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

70 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

71 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

72 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

73 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

74 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

75 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

76 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

78 
	#_MdoubÀ_
 

	)

79 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

80 
	#__MATH_DECLARING_DOUBLE
 1

	)

81 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

82 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

83 
	~<bôs/m©hˇŒs.h
>

84 #unde‡
_MdoubÀ_


85 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


86 #unde‡
_MdoubÀ_END_NAMESPACE


87 #unde‡
__MATH_PRECNAME


88 #unde‡
__MATH_DECLARING_DOUBLE


90 #ifde‡
__USE_ISOC99


96 #i‚de‡
_MÊﬂt_


97 
	#_MÊﬂt_
 

	)

99 
	#_MdoubÀ_
 
_MÊﬂt_


	)

100 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

101 
	#__MATH_DECLARING_DOUBLE
 0

	)

102 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

103 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

104 
	~<bôs/m©hˇŒs.h
>

105 #unde‡
_MdoubÀ_


106 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


107 #unde‡
_MdoubÀ_END_NAMESPACE


108 #unde‡
__MATH_PRECNAME


109 #unde‡
__MATH_DECLARING_DOUBLE


111 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

112 || 
deföed
 
__LDBL_COMPAT
 \

113 || 
deföed
 
_LIBC_TEST


114 #ifde‡
__LDBL_COMPAT


116 #ifde‡
__USE_ISOC99


117 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

118 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

119 #ifde‡
__REDIRECT_NTH


120 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

121 
__∆dbl_√xâow¨df
)

122 
	`__©åibuã__
 ((
__c⁄°__
));

123 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

124 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

125 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

126 (
__x
, 
__y
),

127 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

131 #unde‡
__MATHDECL_1


132 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

133 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

134 
¨gs
, 
Æüs
)

	)

135 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

136 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

142 #i‚de‡
_Ml⁄g_doubÀ_


143 
	#_Ml⁄g_doubÀ_
 

	)

145 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

146 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

147 
	#__MATH_DECLARING_DOUBLE
 0

	)

148 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

149 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

150 
	#__MATH_DECLARE_LDOUBLE
 1

	)

151 
	~<bôs/m©hˇŒs.h
>

152 #unde‡
_MdoubÀ_


153 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


154 #unde‡
_MdoubÀ_END_NAMESPACE


155 #unde‡
__MATH_PRECNAME


156 #unde‡
__MATH_DECLARING_DOUBLE


161 #unde‡
__MATHDECL_1


162 #unde‡
__MATHDECL


163 #unde‡
__MATHCALL


166 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


168 
signgam
;

173 #ifde‡
__USE_ISOC99


211 
FP_NAN
 =

212 
	#FP_NAN
 0

	)

213 
FP_NAN
,

214 
FP_INFINITE
 =

215 
	#FP_INFINITE
 1

	)

216 
FP_INFINITE
,

217 
FP_ZERO
 =

218 
	#FP_ZERO
 2

	)

219 
FP_ZERO
,

220 
FP_SUBNORMAL
 =

221 
	#FP_SUBNORMAL
 3

	)

222 
FP_SUBNORMAL
,

223 
FP_NORMAL
 =

224 
	#FP_NORMAL
 4

	)

225 
FP_NORMAL


233 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
 \

234 && !
deföed
 
__OPTIMIZE_SIZE__


235 
	#Â˛assify
(
x
Ë
	`__buûtö_Â˛assify
 (
FP_NAN
, 
FP_INFINITE
, \

236 
FP_NORMAL
, 
FP_SUBNORMAL
, 
FP_ZERO
, 
x
)

	)

237 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


238 
	#Â˛assify
(
x
) \

239 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

241 
	#Â˛assify
(
x
) \

242 ( (
x
) ==  () \

243 ? 
	`__Â˛assifyf
 (
x
) \

244 :  (
x
) ==  () \

245 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

249 #i‡
	`__GNUC_PREREQ
 (4,0)

250 
	#signbô
(
x
) \

251 ( (
x
) ==  () \

252 ? 
	`__buûtö_signbôf
 (
x
) \

253 :  (
x
) ==  () \

254 ? 
	`__buûtö_signbô
 (
x
Ë: 
	`__buûtö_signbôl
 (x))

	)

256 #ifde‡
__NO_LONG_DOUBLE_MATH


257 
	#signbô
(
x
) \

258 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

260 
	#signbô
(
x
) \

261 ( (
x
) ==  () \

262 ? 
	`__signbôf
 (
x
) \

263 :  (
x
) ==  () \

264 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

269 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


270 
	#isföôe
(
x
Ë
	`__buûtö_isföôe
 (x)

	)

271 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


272 
	#isföôe
(
x
) \

273 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

275 
	#isföôe
(
x
) \

276 ( (
x
) ==  () \

277 ? 
	`__föôef
 (
x
) \

278 :  (
x
) ==  () \

279 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

283 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


284 
	#i¢‹mÆ
(
x
Ë
	`__buûtö_i¢‹mÆ
 (x)

	)

286 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

291 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


292 
	#i¢™
(
x
Ë
	`__buûtö_i¢™
 (x)

	)

293 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


294 
	#i¢™
(
x
) \

295 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

297 
	#i¢™
(
x
) \

298 ( (
x
) ==  () \

299 ? 
	`__i¢™f
 (
x
) \

300 :  (
x
) ==  () \

301 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

305 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


306 
	#isöf
(
x
Ë
	`__buûtö_isöf_sign
 (x)

	)

307 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


308 
	#isöf
(
x
) \

309 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

311 
	#isöf
(
x
) \

312 ( (
x
) ==  () \

313 ? 
	`__isöff
 (
x
) \

314 :  (
x
) ==  () \

315 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

319 
	#MATH_ERRNO
 1

	)

320 
	#MATH_ERREXCEPT
 2

	)

325 #i‚de‡
__FAST_MATH__


326 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

331 #ifde‡
__USE_GNU


333 #ifde‡
__NO_LONG_DOUBLE_MATH


334 
	#issig«lög
(
x
) \

335 ( (
x
Ë= (Ë? 
	`__issig«lögf
 (xË: 
	`__issig«lög
 (x))

	)

337 
	#issig«lög
(
x
) \

338 ( (
x
) ==  () \

339 ? 
	`__issig«lögf
 (
x
) \

340 :  (
x
) ==  () \

341 ? 
	`__issig«lög
 (
x
Ë: 
	`__issig«lögl
 (x))

	)

345 #ifdef 
__USE_MISC


349 
_IEEE_
 = -1,

350 
_SVID_
,

351 
_XOPEN_
,

352 
_POSIX_
,

353 
_ISOC_


354 } 
	t_LIB_VERSION_TYPE
;

359 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

363 #ifde‡
__USE_MISC


369 #ifde‡
__˝lu•lus


370 
__ex˚±i⁄


372 
ex˚±i⁄


375 
ty≥
;

376 *
«me
;

377 
¨g1
;

378 
¨g2
;

379 
ªtvÆ
;

380 
	}
};

382 #ifde‡
__˝lu•lus


383 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

385 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

388 
	#X_TLOSS
 1.41484755040568800000e+16

	)

391 
	#DOMAIN
 1

	)

392 
	#SING
 2

	)

393 
	#OVERFLOW
 3

	)

394 
	#UNDERFLOW
 4

	)

395 
	#TLOSS
 5

	)

396 
	#PLOSS
 6

	)

399 
	#HUGE
 3.40282347e+38F

	)

403 #ifde‡
__USE_XOPEN


405 
	#MAXFLOAT
 3.40282347e+38F

	)

412 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


413 
	#M_E
 2.7182818284590452354

	)

414 
	#M_LOG2E
 1.4426950408889634074

	)

415 
	#M_LOG10E
 0.43429448190325182765

	)

416 
	#M_LN2
 0.69314718055994530942

	)

417 
	#M_LN10
 2.30258509299404568402

	)

418 
	#M_PI
 3.14159265358979323846

	)

419 
	#M_PI_2
 1.57079632679489661923

	)

420 
	#M_PI_4
 0.78539816339744830962

	)

421 
	#M_1_PI
 0.31830988618379067154

	)

422 
	#M_2_PI
 0.63661977236758134308

	)

423 
	#M_2_SQRTPI
 1.12837916709551257390

	)

424 
	#M_SQRT2
 1.41421356237309504880

	)

425 
	#M_SQRT1_2
 0.70710678118654752440

	)

431 #ifde‡
__USE_GNU


432 
	#M_El
 2.718281828459045235360287471352662498L

	)

433 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

434 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

435 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

436 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

437 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

438 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

439 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

440 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

441 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

442 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

443 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

444 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

451 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


452 
	#__NO_MATH_INLINES
 1

	)

455 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

462 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

463 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

464 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

465 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

466 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

467 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

471 #ifde‡
__USE_EXTERN_INLINES


472 
	~<bôs/m©hölöe.h
>

477 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

478 
	~<bôs/m©h-föôe.h
>

481 #ifde‡
__USE_ISOC99


485 #i‚de‡
isgª©î


486 
	#isgª©î
(
x
, 
y
) \

487 (
__exãnsi⁄__
 \

488 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

489 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

493 #i‚de‡
isgª©îequÆ


494 
	#isgª©îequÆ
(
x
, 
y
) \

495 (
__exãnsi⁄__
 \

496 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

497 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

501 #i‚de‡
i¶ess


502 
	#i¶ess
(
x
, 
y
) \

503 (
__exãnsi⁄__
 \

504 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

505 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

509 #i‚de‡
i¶es£quÆ


510 
	#i¶es£quÆ
(
x
, 
y
) \

511 (
__exãnsi⁄__
 \

512 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

513 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

517 #i‚de‡
i¶essgª©î


518 
	#i¶essgª©î
(
x
, 
y
) \

519 (
__exãnsi⁄__
 \

520 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

521 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

525 #i‚de‡
isun‹dîed


526 
	#isun‹dîed
(
u
, 
v
) \

527 (
__exãnsi⁄__
 \

528 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

529 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

534 
	g__END_DECLS


	@/usr/include/net/if.h

19 #i‚de‡
_NET_IF_H


20 
	#_NET_IF_H
 1

	)

22 
	~<„©uªs.h
>

24 #ifde‡
__USE_MISC


25 
	~<sys/ty≥s.h
>

26 
	~<sys/sockë.h
>

31 
	#IF_NAMESIZE
 16

	)

33 
	sif_«meödex


35 
	mif_ödex
;

36 *
	mif_«me
;

40 #ifde‡
__USE_MISC


44 
	mIFF_UP
 = 0x1,

45 
	#IFF_UP
 
IFF_UP


	)

46 
	mIFF_BROADCAST
 = 0x2,

47 
	#IFF_BROADCAST
 
IFF_BROADCAST


	)

48 
	mIFF_DEBUG
 = 0x4,

49 
	#IFF_DEBUG
 
IFF_DEBUG


	)

50 
	mIFF_LOOPBACK
 = 0x8,

51 
	#IFF_LOOPBACK
 
IFF_LOOPBACK


	)

52 
	mIFF_POINTOPOINT
 = 0x10,

53 
	#IFF_POINTOPOINT
 
IFF_POINTOPOINT


	)

54 
	mIFF_NOTRAILERS
 = 0x20,

55 
	#IFF_NOTRAILERS
 
IFF_NOTRAILERS


	)

56 
	mIFF_RUNNING
 = 0x40,

57 
	#IFF_RUNNING
 
IFF_RUNNING


	)

58 
	mIFF_NOARP
 = 0x80,

59 
	#IFF_NOARP
 
IFF_NOARP


	)

60 
	mIFF_PROMISC
 = 0x100,

61 
	#IFF_PROMISC
 
IFF_PROMISC


	)

64 
	mIFF_ALLMULTI
 = 0x200,

65 
	#IFF_ALLMULTI
 
IFF_ALLMULTI


	)

67 
	mIFF_MASTER
 = 0x400,

68 
	#IFF_MASTER
 
IFF_MASTER


	)

69 
	mIFF_SLAVE
 = 0x800,

70 
	#IFF_SLAVE
 
IFF_SLAVE


	)

72 
	mIFF_MULTICAST
 = 0x1000,

73 
	#IFF_MULTICAST
 
IFF_MULTICAST


	)

75 
	mIFF_PORTSEL
 = 0x2000,

76 
	#IFF_PORTSEL
 
IFF_PORTSEL


	)

77 
	mIFF_AUTOMEDIA
 = 0x4000,

78 
	#IFF_AUTOMEDIA
 
IFF_AUTOMEDIA


	)

79 
	mIFF_DYNAMIC
 = 0x8000

80 
	#IFF_DYNAMIC
 
IFF_DYNAMIC


	)

88 
	siÁddr


90 
sockaddr
 
	miÁ_addr
;

93 
sockaddr
 
	mifu_brﬂdaddr
;

94 
sockaddr
 
	mifu_d°addr
;

95 } 
	miÁ_ifu
;

96 
iÁ˚
 *
	miÁ_iÂ
;

97 
iÁddr
 *
	miÁ_√xt
;

100 
	#iÁ_brﬂdaddr
 
iÁ_ifu
.
ifu_brﬂdaddr


	)

101 
	#iÁ_d°addr
 
iÁ_ifu
.
ifu_d°addr


	)

111 
	sifm≠


113 
	mmem_°¨t
;

114 
	mmem_íd
;

115 
	mba£_addr
;

116 
	múq
;

117 
	mdma
;

118 
	mp‹t
;

126 
	si‰eq


128 
	#IFHWADDRLEN
 6

	)

129 
	#IFNAMSIZ
 
IF_NAMESIZE


	)

132 
	mi‰n_«me
[
IFNAMSIZ
];

133 } 
	mi‰_i‰n
;

137 
sockaddr
 
	mi‰u_addr
;

138 
sockaddr
 
	mi‰u_d°addr
;

139 
sockaddr
 
	mi‰u_brﬂdaddr
;

140 
sockaddr
 
	mi‰u_√tmask
;

141 
sockaddr
 
	mi‰u_hwaddr
;

142 
	mi‰u_Êags
;

143 
	mi‰u_ivÆue
;

144 
	mi‰u_mtu
;

145 
ifm≠
 
	mi‰u_m≠
;

146 
	mi‰u_¶ave
[
IFNAMSIZ
];

147 
	mi‰u_√w«me
[
IFNAMSIZ
];

148 
__ˇddr_t
 
	mi‰u_d©a
;

149 } 
	mi‰_i‰u
;

151 
	#i‰_«me
 
i‰_i‰n
.
i‰n_«me


	)

152 
	#i‰_hwaddr
 
i‰_i‰u
.
i‰u_hwaddr


	)

153 
	#i‰_addr
 
i‰_i‰u
.
i‰u_addr


	)

154 
	#i‰_d°addr
 
i‰_i‰u
.
i‰u_d°addr


	)

155 
	#i‰_brﬂdaddr
 
i‰_i‰u
.
i‰u_brﬂdaddr


	)

156 
	#i‰_√tmask
 
i‰_i‰u
.
i‰u_√tmask


	)

157 
	#i‰_Êags
 
i‰_i‰u
.
i‰u_Êags


	)

158 
	#i‰_mëric
 
i‰_i‰u
.
i‰u_ivÆue


	)

159 
	#i‰_mtu
 
i‰_i‰u
.
i‰u_mtu


	)

160 
	#i‰_m≠
 
i‰_i‰u
.
i‰u_m≠


	)

161 
	#i‰_¶ave
 
i‰_i‰u
.
i‰u_¶ave


	)

162 
	#i‰_d©a
 
i‰_i‰u
.
i‰u_d©a


	)

163 
	#i‰_ifödex
 
i‰_i‰u
.
i‰u_ivÆue


	)

164 
	#i‰_b™dwidth
 
i‰_i‰u
.
i‰u_ivÆue


	)

165 
	#i‰_qÀn
 
i‰_i‰u
.
i‰u_ivÆue


	)

166 
	#i‰_√w«me
 
i‰_i‰u
.
i‰u_√w«me


	)

167 
	#_IOT_i‰eq
 
	`_IOT
(
	`_IOTS
(),
IFNAMSIZ
,_IOTS(),16,0,0)

	)

168 
	#_IOT_i‰eq_sh‹t
 
	`_IOT
(
	`_IOTS
(),
IFNAMSIZ
,_IOTS(),1,0,0)

	)

169 
	#_IOT_i‰eq_öt
 
	`_IOT
(
	`_IOTS
(),
IFNAMSIZ
,_IOTS(),1,0,0)

	)

176 
	sifc⁄f


178 
	mifc_Àn
;

181 
__ˇddr_t
 
	mifcu_buf
;

182 
i‰eq
 *
	mifcu_ªq
;

183 } 
	mifc_ifcu
;

185 
	#ifc_buf
 
ifc_ifcu
.
ifcu_buf


	)

186 
	#ifc_ªq
 
ifc_ifcu
.
ifcu_ªq


	)

187 
	#_IOT_ifc⁄f
 
	`_IOT
(
	`_IOTS
(
ifc⁄f
),1,0,0,0,0Ë

	)

190 
__BEGIN_DECLS


193 
	$if_«mëoödex
 (c⁄° *
__i‚ame
Ë
__THROW
;

194 *
	$if_ödext⁄ame
 (
__ifödex
, *
__i‚ame
Ë
__THROW
;

197 
if_«meödex
 *
	$if_«meödex
 (Ë
__THROW
;

200 
	$if_‰ì«meödex
 (
if_«meödex
 *
__±r
Ë
__THROW
;

202 
__END_DECLS


	@/usr/include/netdb.h

22 #i‚def 
_NETDB_H


23 
	#_NETDB_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<√töë/ö.h
>

28 
	~<°döt.h
>

29 #ifde‡
__USE_MISC


32 
	~<Ωc/√tdb.h
>

35 #ifde‡
__USE_GNU


36 
	#__√ed_sigevít_t


	)

37 
	~<bôs/sigöfo.h
>

38 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 
	~<bôs/√tdb.h
>

45 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

46 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

47 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

48 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

49 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

50 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

53 
	g__BEGIN_DECLS


55 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


58 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

61 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

65 
	#HOST_NOT_FOUND
 1

	)

66 
	#TRY_AGAIN
 2

	)

68 
	#NO_RECOVERY
 3

	)

70 
	#NO_DATA
 4

	)

73 #ifde‡
__USE_MISC


74 
	#NETDB_INTERNAL
 -1

	)

75 
	#NETDB_SUCCESS
 0

	)

76 
	#NO_ADDRESS
 
NO_DATA


	)

79 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_XOPEN_EXTENDED


81 
	#IPPORT_RESERVED
 1024

	)

84 #ifde‡
__USE_GNU


86 
	#SCOPE_DELIMITER
 '%'

	)

89 #ifde‡
__USE_MISC


92 
	$hîr‹
 (c⁄° *
__°r
Ë
__THROW
;

95 c⁄° *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

100 
	sho°ít


102 *
h_«me
;

103 **
h_Æü£s
;

104 
h_addπy≥
;

105 
h_Àngth
;

106 **
h_addr_li°
;

107 #ifde‡
__USE_MISC


108 
	#h_addr
 
h_addr_li°
[0]

	)

117 
	`£tho°ít
 (
__°ay_›í
);

123 
	`ídho°ít
 ();

130 
ho°ít
 *
	`gëho°ít
 ();

137 
ho°ít
 *
	`gëho°byaddr
 (c⁄° *
__addr
, 
__sockÀn_t
 
__Àn
,

138 
__ty≥
);

144 
ho°ít
 *
	`gëho°by«me
 (c⁄° *
__«me
);

146 #ifde‡
__USE_MISC


155 
ho°ít
 *
	`gëho°by«me2
 (c⁄° *
__«me
, 
__af
);

167 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

168 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

169 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

170 *
__ª°ri˘
 
__h_î∫›
);

172 
	`gëho°byaddr_r
 (c⁄° *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

173 
__ty≥
,

174 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

176 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

177 *
__ª°ri˘
 
__h_î∫›
);

179 
	`gëho°by«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

180 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

181 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

182 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

183 *
__ª°ri˘
 
__h_î∫›
);

185 
	`gëho°by«me2_r
 (c⁄° *
__ª°ri˘
 
__«me
, 
__af
,

186 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

187 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

188 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

189 *
__ª°ri˘
 
__h_î∫›
);

198 
	`£äëít
 (
__°ay_›í
);

204 
	`íd√ã¡
 ();

211 
√ã¡
 *
	`gë√ã¡
 ();

218 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

224 
√ã¡
 *
	`gë√tby«me
 (c⁄° *
__«me
);

226 #ifdef 
__USE_MISC


237 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

238 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

239 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

240 *
__ª°ri˘
 
__h_î∫›
);

242 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

243 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

244 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

245 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

246 *
__ª°ri˘
 
__h_î∫›
);

248 
	`gë√tby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

249 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

250 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

251 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

252 *
__ª°ri˘
 
__h_î∫›
);

257 
	s£rvít


259 *
s_«me
;

260 **
s_Æü£s
;

261 
s_p‹t
;

262 *
s_¥Ÿo
;

270 
	`£t£rvít
 (
__°ay_›í
);

276 
	`íd£rvít
 ();

283 
£rvít
 *
	`gë£rvít
 ();

290 
£rvít
 *
	`gë£rvby«me
 (c⁄° *
__«me
, c⁄° *
__¥Ÿo
);

297 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, c⁄° *
__¥Ÿo
);

300 #ifdef 
__USE_MISC


308 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

309 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

310 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

312 
	`gë£rvby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

313 c⁄° *
__ª°ri˘
 
__¥Ÿo
,

314 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

315 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

316 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

318 
	`gë£rvbyp‹t_r
 (
__p‹t
, c⁄° *
__ª°ri˘
 
__¥Ÿo
,

319 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

320 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

321 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

326 
	s¥Ÿ€¡


328 *
p_«me
;

329 **
p_Æü£s
;

330 
p_¥Ÿo
;

338 
	`£çrŸ€¡
 (
__°ay_›í
);

344 
	`íd¥Ÿ€¡
 ();

351 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

357 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (c⁄° *
__«me
);

363 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

366 #ifdef 
__USE_MISC


374 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

375 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

376 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

378 
	`gë¥Ÿoby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

379 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

380 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

381 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

383 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

384 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

385 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

386 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

395 
	`£äëgª¡
 (c⁄° *
__√tgroup
);

403 
	`íd√tgª¡
 ();

412 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

413 **
__ª°ri˘
 
__u£Ω
,

414 **
__ª°ri˘
 
__domaöp
);

423 
	`ö√tgr
 (c⁄° *
__√tgroup
, c⁄° *
__ho°
,

424 c⁄° *
__u£r
, c⁄° *
__domaö
);

432 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

433 **
__ª°ri˘
 
__u£Ω
,

434 **
__ª°ri˘
 
__domaöp
,

435 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

439 #ifde‡
__USE_MISC


451 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

452 c⁄° *
__ª°ri˘
 
__locu£r
,

453 c⁄° *
__ª°ri˘
 
__ªmu£r
,

454 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

463 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

464 c⁄° *
__ª°ri˘
 
__locu£r
,

465 c⁄° *
__ª°ri˘
 
__ªmu£r
,

466 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

467 
ß_Ámûy_t
 
__af
);

479 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

480 c⁄° *
__ª°ri˘
 
__«me
,

481 c⁄° *
__ª°ri˘
 
__∑ss
,

482 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

491 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

492 c⁄° *
__ª°ri˘
 
__«me
,

493 c⁄° *
__ª°ri˘
 
__∑ss
,

494 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

495 
ß_Ámûy_t
 
__af
);

505 
	`ru£rok
 (c⁄° *
__rho°
, 
__su£r
,

506 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

515 
	`ru£rok_af
 (c⁄° *
__rho°
, 
__su£r
,

516 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

517 
ß_Ámûy_t
 
__af
);

528 
	`úu£rok
 (
uöt32_t
 
__øddr
, 
__su£r
,

529 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

539 
	`úu£rok_af
 (c⁄° *
__øddr
, 
__su£r
,

540 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

541 
ß_Ámûy_t
 
__af
);

551 
	`ºesvp‹t
 (*
__Æp‹t
);

560 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

565 #ifde‡
__USE_XOPEN2K


567 
	saddröfo


569 
ai_Êags
;

570 
ai_Ámûy
;

571 
ai_sockty≥
;

572 
ai_¥Ÿocﬁ
;

573 
sockÀn_t
 
ai_addæí
;

574 
sockaddr
 *
ai_addr
;

575 *
ai_ˇn⁄«me
;

576 
addröfo
 *
ai_√xt
;

579 #ifde‡
__USE_GNU


581 
	sgaicb


583 c⁄° *
¨_«me
;

584 c⁄° *
¨_£rvi˚
;

585 c⁄° 
addröfo
 *
¨_ªque°
;

586 
addröfo
 *
¨_ªsu…
;

588 
__ªtu∫
;

589 
__glibc_ª£rved
[5];

593 
	#GAI_WAIT
 0

	)

594 
	#GAI_NOWAIT
 1

	)

598 
	#AI_PASSIVE
 0x0001

	)

599 
	#AI_CANONNAME
 0x0002

	)

600 
	#AI_NUMERICHOST
 0x0004

	)

601 
	#AI_V4MAPPED
 0x0008

	)

602 
	#AI_ALL
 0x0010

	)

603 
	#AI_ADDRCONFIG
 0x0020

	)

605 #ifde‡
__USE_GNU


606 
	#AI_IDN
 0x0040

	)

609 
	#AI_CANONIDN
 0x0080

	)

610 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

612 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

615 
	#AI_NUMERICSERV
 0x0400

	)

618 
	#EAI_BADFLAGS
 -1

	)

619 
	#EAI_NONAME
 -2

	)

620 
	#EAI_AGAIN
 -3

	)

621 
	#EAI_FAIL
 -4

	)

622 
	#EAI_FAMILY
 -6

	)

623 
	#EAI_SOCKTYPE
 -7

	)

624 
	#EAI_SERVICE
 -8

	)

625 
	#EAI_MEMORY
 -10

	)

626 
	#EAI_SYSTEM
 -11

	)

627 
	#EAI_OVERFLOW
 -12

	)

628 #ifde‡
__USE_GNU


629 
	#EAI_NODATA
 -5

	)

630 
	#EAI_ADDRFAMILY
 -9

	)

631 
	#EAI_INPROGRESS
 -100

	)

632 
	#EAI_CANCELED
 -101

	)

633 
	#EAI_NOTCANCELED
 -102

	)

634 
	#EAI_ALLDONE
 -103

	)

635 
	#EAI_INTR
 -104

	)

636 
	#EAI_IDN_ENCODE
 -105

	)

639 #ifde‡
__USE_MISC


640 
	#NI_MAXHOST
 1025

	)

641 
	#NI_MAXSERV
 32

	)

644 
	#NI_NUMERICHOST
 1

	)

645 
	#NI_NUMERICSERV
 2

	)

646 
	#NI_NOFQDN
 4

	)

647 
	#NI_NAMEREQD
 8

	)

648 
	#NI_DGRAM
 16

	)

649 #ifde‡
__USE_GNU


650 
	#NI_IDN
 32

	)

651 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

653 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

662 
	`gëaddröfo
 (c⁄° *
__ª°ri˘
 
__«me
,

663 c⁄° *
__ª°ri˘
 
__£rvi˚
,

664 c⁄° 
addröfo
 *
__ª°ri˘
 
__ªq
,

665 
addröfo
 **
__ª°ri˘
 
__∑i
);

668 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

671 c⁄° *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

677 
	`gë«meöfo
 (c⁄° 
sockaddr
 *
__ª°ri˘
 
__ß
,

678 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

679 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

680 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

683 #ifde‡
__USE_GNU


692 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

693 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

703 
	`gai_su•íd
 (c⁄° 
gaicb
 *c⁄° 
__li°
[], 
__ít
,

704 c⁄° 
time•ec
 *
__timeout
);

707 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

710 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

713 
__END_DECLS


	@/usr/include/netinet/in.h

18 #i‚def 
_NETINET_IN_H


19 
	#_NETINET_IN_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<°döt.h
>

23 
	~<sys/sockë.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


30 
uöt32_t
 
	tö_addr_t
;

31 
	sö_addr


33 
ö_addr_t
 
	ms_addr
;

37 
	~<bôs/ö.h
>

42 
	mIPPROTO_IP
 = 0,

43 
	#IPPROTO_IP
 
IPPROTO_IP


	)

44 
	mIPPROTO_ICMP
 = 1,

45 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

46 
	mIPPROTO_IGMP
 = 2,

47 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

48 
	mIPPROTO_IPIP
 = 4,

49 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

50 
	mIPPROTO_TCP
 = 6,

51 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

52 
	mIPPROTO_EGP
 = 8,

53 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

54 
	mIPPROTO_PUP
 = 12,

55 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

56 
	mIPPROTO_UDP
 = 17,

57 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

58 
	mIPPROTO_IDP
 = 22,

59 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

60 
	mIPPROTO_TP
 = 29,

61 
	#IPPROTO_TP
 
IPPROTO_TP


	)

62 
	mIPPROTO_DCCP
 = 33,

63 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

64 
	mIPPROTO_IPV6
 = 41,

65 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

66 
	mIPPROTO_RSVP
 = 46,

67 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

68 
	mIPPROTO_GRE
 = 47,

69 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

70 
	mIPPROTO_ESP
 = 50,

71 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

72 
	mIPPROTO_AH
 = 51,

73 
	#IPPROTO_AH
 
IPPROTO_AH


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_BEETPH
 = 94,

77 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_UDPLITE
 = 136,

87 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

88 
	mIPPROTO_MPLS
 = 137,

89 
	#IPPROTO_MPLS
 
IPPROTO_MPLS


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


98 #i‚de‡
__USE_KERNEL_IPV6_DEFS


101 
	mIPPROTO_HOPOPTS
 = 0,

102 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

103 
	mIPPROTO_ROUTING
 = 43,

104 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

105 
	mIPPROTO_FRAGMENT
 = 44,

106 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

107 
	mIPPROTO_ICMPV6
 = 58,

108 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

109 
	mIPPROTO_NONE
 = 59,

110 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

111 
	mIPPROTO_DSTOPTS
 = 60,

112 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

113 
	mIPPROTO_MH
 = 135

114 
	#IPPROTO_MH
 
IPPROTO_MH


	)

119 
uöt16_t
 
	tö_p‹t_t
;

124 
	mIPPORT_ECHO
 = 7,

125 
	mIPPORT_DISCARD
 = 9,

126 
	mIPPORT_SYSTAT
 = 11,

127 
	mIPPORT_DAYTIME
 = 13,

128 
	mIPPORT_NETSTAT
 = 15,

129 
	mIPPORT_FTP
 = 21,

130 
	mIPPORT_TELNET
 = 23,

131 
	mIPPORT_SMTP
 = 25,

132 
	mIPPORT_TIMESERVER
 = 37,

133 
	mIPPORT_NAMESERVER
 = 42,

134 
	mIPPORT_WHOIS
 = 43,

135 
	mIPPORT_MTP
 = 57,

137 
	mIPPORT_TFTP
 = 69,

138 
	mIPPORT_RJE
 = 77,

139 
	mIPPORT_FINGER
 = 79,

140 
	mIPPORT_TTYLINK
 = 87,

141 
	mIPPORT_SUPDUP
 = 95,

144 
	mIPPORT_EXECSERVER
 = 512,

145 
	mIPPORT_LOGINSERVER
 = 513,

146 
	mIPPORT_CMDSERVER
 = 514,

147 
	mIPPORT_EFSSERVER
 = 520,

150 
	mIPPORT_BIFFUDP
 = 512,

151 
	mIPPORT_WHOSERVER
 = 513,

152 
	mIPPORT_ROUTESERVER
 = 520,

155 
	mIPPORT_RESERVED
 = 1024,

158 
	mIPPORT_USERRESERVED
 = 5000

166 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

167 
	#IN_CLASSA_NET
 0xff000000

	)

168 
	#IN_CLASSA_NSHIFT
 24

	)

169 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

170 
	#IN_CLASSA_MAX
 128

	)

172 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

173 
	#IN_CLASSB_NET
 0xffff0000

	)

174 
	#IN_CLASSB_NSHIFT
 16

	)

175 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

176 
	#IN_CLASSB_MAX
 65536

	)

178 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

179 
	#IN_CLASSC_NET
 0xffffff00

	)

180 
	#IN_CLASSC_NSHIFT
 8

	)

181 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

183 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

184 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

186 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

187 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

190 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

192 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

194 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

197 
	#IN_LOOPBACKNET
 127

	)

199 #i‚de‡
INADDR_LOOPBACK


200 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

204 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

205 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

206 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

207 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

209 #i‚de‡
__USE_KERNEL_IPV6_DEFS


211 
	sö6_addr


215 
uöt8_t
 
	m__u6_addr8
[16];

216 #ifde‡
__USE_MISC


217 
uöt16_t
 
	m__u6_addr16
[8];

218 
uöt32_t
 
	m__u6_addr32
[4];

220 } 
	m__ö6_u
;

221 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

222 #ifde‡
__USE_MISC


223 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

224 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

229 c⁄° 
ö6_addr
 
ö6addr_™y
;

230 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

231 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

232 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

234 
	#INET_ADDRSTRLEN
 16

	)

235 
	#INET6_ADDRSTRLEN
 46

	)

239 
	ssockaddr_ö


241 
__SOCKADDR_COMMON
 (
sö_
);

242 
ö_p‹t_t
 
	msö_p‹t
;

243 
ö_addr
 
	msö_addr
;

246 
	msö_zîo
[ (
sockaddr
) -

247 
__SOCKADDR_COMMON_SIZE
 -

248  (
ö_p‹t_t
) -

249  (
ö_addr
)];

252 #i‚de‡
__USE_KERNEL_IPV6_DEFS


254 
	ssockaddr_ö6


256 
__SOCKADDR_COMMON
 (
sö6_
);

257 
ö_p‹t_t
 
	msö6_p‹t
;

258 
uöt32_t
 
	msö6_Êowöfo
;

259 
ö6_addr
 
	msö6_addr
;

260 
uöt32_t
 
	msö6_sc›e_id
;

264 #ifde‡
__USE_MISC


266 
	sù_mªq


269 
ö_addr
 
	mimr_mu…üddr
;

272 
ö_addr
 
	mimr_öãrÁ˚
;

275 
	sù_mªq_sour˚


278 
ö_addr
 
	mimr_mu…üddr
;

281 
ö_addr
 
	mimr_öãrÁ˚
;

284 
ö_addr
 
	mimr_sour˚addr
;

288 #i‚de‡
__USE_KERNEL_IPV6_DEFS


290 
	sùv6_mªq


293 
ö6_addr
 
	mùv6mr_mu…üddr
;

296 
	mùv6mr_öãrÁ˚
;

300 #ifde‡
__USE_MISC


302 
	sgroup_ªq


305 
uöt32_t
 
	mgr_öãrÁ˚
;

308 
sockaddr_°‹age
 
	mgr_group
;

311 
	sgroup_sour˚_ªq


314 
uöt32_t
 
	mg§_öãrÁ˚
;

317 
sockaddr_°‹age
 
	mg§_group
;

320 
sockaddr_°‹age
 
	mg§_sour˚
;

325 
	sù_msfûãr


328 
ö_addr
 
	mimsf_mu…üddr
;

331 
ö_addr
 
	mimsf_öãrÁ˚
;

334 
uöt32_t
 
	mimsf_fmode
;

337 
uöt32_t
 
	mimsf_num§c
;

339 
ö_addr
 
	mimsf_¶i°
[1];

342 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

343 -  (
ö_addr
) \

344 + (
num§c
Ë*  (
ö_addr
))

	)

346 
	sgroup_fûãr


349 
uöt32_t
 
	mgf_öãrÁ˚
;

352 
sockaddr_°‹age
 
	mgf_group
;

355 
uöt32_t
 
	mgf_fmode
;

358 
uöt32_t
 
	mgf_num§c
;

360 
sockaddr_°‹age
 
	mgf_¶i°
[1];

363 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

364 -  (
sockaddr_°‹age
) \

365 + ((
num§c
) \

366 *  (
sockaddr_°‹age
)))

	)

376 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

377 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

378 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

379 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

380 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

381 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

382 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

384 
	~<ídün.h
>

387 
	~<bôs/byãsw≠.h
>

389 #ifde‡
__OPTIMIZE__


393 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


396 
	#¡ohl
(
x
Ë(x)

	)

397 
	#¡ohs
(
x
Ë(x)

	)

398 
	#ht⁄l
(
x
Ë(x)

	)

399 
	#ht⁄s
(
x
Ë(x)

	)

401 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


402 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

403 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

404 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

405 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

410 #ifde‡
__GNUC__


411 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

412 (
__exãnsi⁄__
 \

413 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

414 
__a
->
s6_addr32
[0] == 0 \

415 && 
__a
->
s6_addr32
[1] == 0 \

416 && 
__a
->
s6_addr32
[2] == 0 \

417 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

419 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

420 (
__exãnsi⁄__
 \

421 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

422 
__a
->
s6_addr32
[0] == 0 \

423 && 
__a
->
s6_addr32
[1] == 0 \

424 && 
__a
->
s6_addr32
[2] == 0 \

425 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

427 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

428 (
__exãnsi⁄__
 \

429 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

430 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

432 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

433 (
__exãnsi⁄__
 \

434 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

435 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

437 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

438 (
__exãnsi⁄__
 \

439 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

440 
__a
->
s6_addr32
[0] == 0 \

441 && 
__a
->
s6_addr32
[1] == 0 \

442 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

444 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

445 (
__exãnsi⁄__
 \

446 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

447 
__a
->
s6_addr32
[0] == 0 \

448 && 
__a
->
s6_addr32
[1] == 0 \

449 && 
__a
->
s6_addr32
[2] == 0 \

450 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

452 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

453 (
__exãnsi⁄__
 \

454 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

455 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

456 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

457 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

458 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

459 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

461 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

462 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

463 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

464 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

465 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

467 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

468 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

469 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

470 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

471 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

473 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

474 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

475 =
	`ht⁄l
 (0x„800000))

	)

477 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

478 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

479 =
	`ht⁄l
 (0x„c00000))

	)

481 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

482 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

483 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

484 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

486 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

487 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

488 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

489 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

490 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

492 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

493 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

494 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

495 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

496 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

499 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

501 #ifde‡
__USE_MISC


503 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

506 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

507 
__THROW
;

511 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

512 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

513 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

515 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

516 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

517 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

519 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

520 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

521 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

523 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

524 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

525 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

527 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

528 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

529 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

532 #ifde‡
__USE_GNU


533 
cmsghdr
;

535 #i‚de‡
__USE_KERNEL_IPV6_DEFS


537 
	sö6_pktöfo


539 
ö6_addr
 
ùi6_addr
;

540 
ùi6_ifödex
;

544 
	sù6_mtuöfo


546 
sockaddr_ö6
 
ù6m_addr
;

547 
uöt32_t
 
ù6m_mtu
;

552 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

553 
__THROW
 
__©åibuã_dïªˇãd__
;

554 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

555 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

556 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

557 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

558 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

559 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

560 
__mu…x
, 
__∂usy
)

561 
__THROW
 
__©åibuã_dïªˇãd__
;

562 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

563 
uöt8_t
 **
__çåp
)

564 
__THROW
 
__©åibuã_dïªˇãd__
;

565 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

566 
uöt8_t
 **
__çåp
, 
__ty≥
)

567 
__THROW
 
__©åibuã_dïªˇãd__
;

571 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

572 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

573 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

574 **
__d©abuÂ
Ë
__THROW
;

575 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

576 
__THROW
;

577 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

578 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

579 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

580 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

581 **
__d©abuÂ
Ë
__THROW
;

582 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

583 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

584 **
__d©abuÂ
Ë
__THROW
;

585 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

586 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

590 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

591 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

592 
__£gmíts
Ë
__THROW
;

593 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

594 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

595 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

596 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

597 
__THROW
;

603 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

604 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

605 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

606 
__THROW
;

609 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

610 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

611 
uöt32_t
 
__num§c
,

612 c⁄° 
ö_addr
 *
__¶i°
)

613 
__THROW
;

617 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

618 c⁄° 
sockaddr
 *
__group
,

619 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

620 
uöt32_t
 *
__num§c
,

621 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

624 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

625 c⁄° 
sockaddr
 *
__group
,

626 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

627 
uöt32_t
 
__num§c
,

628 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

631 
__END_DECLS


	@/usr/include/pwd.h

22 #i‚def 
_PWD_H


23 
	#_PWD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 
	#__√ed_size_t


	)

32 
	~<°ddef.h
>

34 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


37 #i‚de‡
__gid_t_deföed


38 
__gid_t
 
	tgid_t
;

39 
	#__gid_t_deföed


	)

42 #i‚de‡
__uid_t_deföed


43 
__uid_t
 
	tuid_t
;

44 
	#__uid_t_deföed


	)

49 
	s∑sswd


51 *
	mpw_«me
;

52 *
	mpw_∑sswd
;

53 
__uid_t
 
	mpw_uid
;

54 
__gid_t
 
	mpw_gid
;

55 *
	mpw_gecos
;

56 *
	mpw_dú
;

57 *
	mpw_shñl
;

61 #ifde‡
__USE_MISC


62 
	#__√ed_FILE


	)

63 
	~<°dio.h
>

67 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


72 
£çwít
 ();

78 
ídpwít
 ();

84 
∑sswd
 *
gëpwít
 ();

87 #ifdef 
__USE_MISC


94 
∑sswd
 *
	$fgëpwít
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

102 
	`puçwít
 (c⁄° 
∑sswd
 *
__ª°ri˘
 
__p
,

103 
FILE
 *
__ª°ri˘
 
__f
);

110 
∑sswd
 *
	`gëpwuid
 (
__uid_t
 
__uid
);

116 
∑sswd
 *
	$gëpw«m
 (c⁄° *
__«me
Ë
	`__n⁄nuŒ
 ((1));

118 #ifde‡
__USE_POSIX


120 #ifde‡
__USE_MISC


123 
	#NSS_BUFLEN_PASSWD
 1024

	)

134 #ifde‡
__USE_MISC


139 
	$gëpwít_r
 (
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

140 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

141 
∑sswd
 **
__ª°ri˘
 
__ªsu…
)

142 
	`__n⁄nuŒ
 ((1, 2, 4));

145 
	$gëpwuid_r
 (
__uid_t
 
__uid
,

146 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

147 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

148 
∑sswd
 **
__ª°ri˘
 
__ªsu…
)

149 
	`__n⁄nuŒ
 ((2, 3, 5));

151 
	$gëpw«m_r
 (c⁄° *
__ª°ri˘
 
__«me
,

152 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

153 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

154 
∑sswd
 **
__ª°ri˘
 
__ªsu…
)

155 
	`__n⁄nuŒ
 ((1, 2, 3, 5));

158 #ifdef 
__USE_MISC


166 
	$fgëpwít_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

167 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

168 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

169 
∑sswd
 **
__ª°ri˘
 
__ªsu…
)

170 
	`__n⁄nuŒ
 ((1, 2, 3, 5));

175 #ifde‡
__USE_GNU


184 
	`gëpw
 (
__uid_t
 
__uid
, *
__buf„r
);

187 
__END_DECLS


	@/usr/include/regex.h

20 #i‚de‡
_REGEX_H


21 
	#_REGEX_H
 1

	)

23 
	~<sys/ty≥s.h
>

26 #ifde‡
__˝lu•lus


34 
	ts_ªg_t
;

35 
	ta˘ive_ªg_t
;

42 
	tªg_sy¡ax_t
;

44 #ifde‡
__USE_GNU


47 
	#RE_BACKSLASH_ESCAPE_IN_LISTS
 ((Ë1)

	)

52 
	#RE_BK_PLUS_QM
 (
RE_BACKSLASH_ESCAPE_IN_LISTS
 << 1)

	)

58 
	#RE_CHAR_CLASSES
 (
RE_BK_PLUS_QM
 << 1)

	)

72 
	#RE_CONTEXT_INDEP_ANCHORS
 (
RE_CHAR_CLASSES
 << 1)

	)

80 
	#RE_CONTEXT_INDEP_OPS
 (
RE_CONTEXT_INDEP_ANCHORS
 << 1)

	)

84 
	#RE_CONTEXT_INVALID_OPS
 (
RE_CONTEXT_INDEP_OPS
 << 1)

	)

88 
	#RE_DOT_NEWLINE
 (
RE_CONTEXT_INVALID_OPS
 << 1)

	)

92 
	#RE_DOT_NOT_NULL
 (
RE_DOT_NEWLINE
 << 1)

	)

96 
	#RE_HAT_LISTS_NOT_NEWLINE
 (
RE_DOT_NOT_NULL
 << 1)

	)

101 
	#RE_INTERVALS
 (
RE_HAT_LISTS_NOT_NEWLINE
 << 1)

	)

105 
	#RE_LIMITED_OPS
 (
RE_INTERVALS
 << 1)

	)

109 
	#RE_NEWLINE_ALT
 (
RE_LIMITED_OPS
 << 1)

	)

114 
	#RE_NO_BK_BRACES
 (
RE_NEWLINE_ALT
 << 1)

	)

118 
	#RE_NO_BK_PARENS
 (
RE_NO_BK_BRACES
 << 1)

	)

122 
	#RE_NO_BK_REFS
 (
RE_NO_BK_PARENS
 << 1)

	)

126 
	#RE_NO_BK_VBAR
 (
RE_NO_BK_REFS
 << 1)

	)

132 
	#RE_NO_EMPTY_RANGES
 (
RE_NO_BK_VBAR
 << 1)

	)

136 
	#RE_UNMATCHED_RIGHT_PAREN_ORD
 (
RE_NO_EMPTY_RANGES
 << 1)

	)

140 
	#RE_NO_POSIX_BACKTRACKING
 (
RE_UNMATCHED_RIGHT_PAREN_ORD
 << 1)

	)

144 
	#RE_NO_GNU_OPS
 (
RE_NO_POSIX_BACKTRACKING
 << 1)

	)

152 
	#RE_DEBUG
 (
RE_NO_GNU_OPS
 << 1)

	)

157 
	#RE_INVALID_INTERVAL_ORD
 (
RE_DEBUG
 << 1)

	)

161 
	#RE_ICASE
 (
RE_INVALID_INTERVAL_ORD
 << 1)

	)

166 
	#RE_CARET_ANCHORS_HERE
 (
RE_ICASE
 << 1)

	)

170 
	#RE_CONTEXT_INVALID_DUP
 (
RE_CARET_ANCHORS_HERE
 << 1)

	)

174 
	#RE_NO_SUB
 (
RE_CONTEXT_INVALID_DUP
 << 1)

	)

181 
ªg_sy¡ax_t
 
ª_sy¡ax_›ti⁄s
;

183 #ifde‡
__USE_GNU


188 
	#RE_SYNTAX_EMACS
 0

	)

190 
	#RE_SYNTAX_AWK
 \

191 (
RE_BACKSLASH_ESCAPE_IN_LISTS
 | 
RE_DOT_NOT_NULL
 \

192 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_REFS
 \

193 | 
RE_NO_BK_VBAR
 | 
RE_NO_EMPTY_RANGES
 \

194 | 
RE_DOT_NEWLINE
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

195 | 
RE_CHAR_CLASSES
 \

196 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
 | 
RE_NO_GNU_OPS
)

	)

198 
	#RE_SYNTAX_GNU_AWK
 \

199 ((
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_BACKSLASH_ESCAPE_IN_LISTS
 \

200 | 
RE_INVALID_INTERVAL_ORD
) \

201 & ~(
RE_DOT_NOT_NULL
 | 
RE_CONTEXT_INDEP_OPS
 \

202 | 
RE_CONTEXT_INVALID_OPS
 ))

	)

204 
	#RE_SYNTAX_POSIX_AWK
 \

205 (
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_BACKSLASH_ESCAPE_IN_LISTS
 \

206 | 
RE_INTERVALS
 | 
RE_NO_GNU_OPS
 \

207 | 
RE_INVALID_INTERVAL_ORD
)

	)

209 
	#RE_SYNTAX_GREP
 \

210 (
RE_BK_PLUS_QM
 | 
RE_CHAR_CLASSES
 \

211 | 
RE_HAT_LISTS_NOT_NEWLINE
 | 
RE_INTERVALS
 \

212 | 
RE_NEWLINE_ALT
)

	)

214 
	#RE_SYNTAX_EGREP
 \

215 (
RE_CHAR_CLASSES
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

216 | 
RE_CONTEXT_INDEP_OPS
 | 
RE_HAT_LISTS_NOT_NEWLINE
 \

217 | 
RE_NEWLINE_ALT
 | 
RE_NO_BK_PARENS
 \

218 | 
RE_NO_BK_VBAR
)

	)

220 
	#RE_SYNTAX_POSIX_EGREP
 \

221 (
RE_SYNTAX_EGREP
 | 
RE_INTERVALS
 | 
RE_NO_BK_BRACES
 \

222 | 
RE_INVALID_INTERVAL_ORD
)

	)

225 
	#RE_SYNTAX_ED
 
RE_SYNTAX_POSIX_BASIC


	)

227 
	#RE_SYNTAX_SED
 
RE_SYNTAX_POSIX_BASIC


	)

230 
	#_RE_SYNTAX_POSIX_COMMON
 \

231 (
RE_CHAR_CLASSES
 | 
RE_DOT_NEWLINE
 | 
RE_DOT_NOT_NULL
 \

232 | 
RE_INTERVALS
 | 
RE_NO_EMPTY_RANGES
)

	)

234 
	#RE_SYNTAX_POSIX_BASIC
 \

235 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_BK_PLUS_QM
 | 
RE_CONTEXT_INVALID_DUP
)

	)

240 
	#RE_SYNTAX_POSIX_MINIMAL_BASIC
 \

241 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_LIMITED_OPS
)

	)

243 
	#RE_SYNTAX_POSIX_EXTENDED
 \

244 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

245 | 
RE_CONTEXT_INDEP_OPS
 | 
RE_NO_BK_BRACES
 \

246 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_VBAR
 \

247 | 
RE_CONTEXT_INVALID_OPS
 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
)

	)

251 
	#RE_SYNTAX_POSIX_MINIMAL_EXTENDED
 \

252 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

253 | 
RE_CONTEXT_INVALID_OPS
 | 
RE_NO_BK_BRACES
 \

254 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_REFS
 \

255 | 
RE_NO_BK_VBAR
 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
)

	)

261 #ifde‡
RE_DUP_MAX


262 #unde‡
RE_DUP_MAX


265 
	#RE_DUP_MAX
 (0x7fff)

	)

273 
	#REG_EXTENDED
 1

	)

277 
	#REG_ICASE
 (
REG_EXTENDED
 << 1)

	)

282 
	#REG_NEWLINE
 (
REG_ICASE
 << 1)

	)

286 
	#REG_NOSUB
 (
REG_NEWLINE
 << 1)

	)

296 
	#REG_NOTBOL
 1

	)

299 
	#REG_NOTEOL
 (1 << 1)

	)

303 
	#REG_STARTEND
 (1 << 2)

	)

310 #i‡
deföed
 
_XOPEN_SOURCE
 || deföed 
__USE_XOPEN2K


311 
	gREG_ENOSYS
 = -1,

314 
	gREG_NOERROR
 = 0,

315 
	gREG_NOMATCH
,

319 
	gREG_BADPAT
,

320 
	gREG_ECOLLATE
,

321 
	gREG_ECTYPE
,

322 
	gREG_EESCAPE
,

323 
	gREG_ESUBREG
,

324 
	gREG_EBRACK
,

325 
	gREG_EPAREN
,

326 
	gREG_EBRACE
,

327 
	gREG_BADBR
,

328 
	gREG_ERANGE
,

329 
	gREG_ESPACE
,

330 
	gREG_BADRPT
,

333 
	gREG_EEND
,

334 
	gREG_ESIZE
,

335 
	gREG_ERPAREN


336 } 
	tªg_îrcode_t
;

344 #i‚de‡
RE_TRANSLATE_TYPE


345 
	#__RE_TRANSLATE_TYPE
 *

	)

346 #ifde‡
__USE_GNU


347 
	#RE_TRANSLATE_TYPE
 
__RE_TRANSLATE_TYPE


	)

351 #ifde‡
__USE_GNU


352 
	#__REPB_PREFIX
(
«me
Ë
	)
name

354 
	#__REPB_PREFIX
(
«me
Ë
__
##
	)
name

357 
	sª_∑âîn_buf„r


362 *
__REPB_PREFIX
(
buf„r
);

365 
__REPB_PREFIX
(
Æloˇãd
);

368 
__REPB_PREFIX
(
u£d
);

371 
ªg_sy¡ax_t
 
__REPB_PREFIX
(
sy¡ax
);

376 *
__REPB_PREFIX
(
Á°m≠
);

382 
__RE_TRANSLATE_TYPE
 
__REPB_PREFIX
(
å™¶©e
);

385 
size_t
 
	gª_nsub
;

391 
__REPB_PREFIX
(
ˇn_be_nuŒ
) : 1;

397 #ifde‡
__USE_GNU


398 
	#REGS_UNALLOCATED
 0

	)

399 
	#REGS_REALLOCATE
 1

	)

400 
	#REGS_FIXED
 2

	)

402 
__REPB_PREFIX
(
ªgs_Æloˇãd
) : 2;

406 
__REPB_PREFIX
(
Á°m≠_accuøã
) : 1;

410 
__REPB_PREFIX
(
no_sub
) : 1;

414 
__REPB_PREFIX
(
nŸ_bﬁ
) : 1;

417 
__REPB_PREFIX
(
nŸ_eﬁ
) : 1;

420 
__REPB_PREFIX
(
√wlöe_™ch‹
) : 1;

423 
ª_∑âîn_buf„r
 
	tªgex_t
;

426 
	tªgoff_t
;

429 #ifde‡
__USE_GNU


432 
	sª_ªgi°îs


434 
	gnum_ªgs
;

435 
ªgoff_t
 *
	g°¨t
;

436 
ªgoff_t
 *
	gíd
;

443 #i‚de‡
RE_NREGS


444 
	#RE_NREGS
 30

	)

454 
ªgoff_t
 
	grm_so
;

455 
ªgoff_t
 
	grm_eo
;

456 } 
	tªgm©ch_t
;

460 #ifde‡
__USE_GNU


463 
ªg_sy¡ax_t
 
ª_£t_sy¡ax
 (ªg_sy¡ax_à
__sy¡ax
);

473 c⁄° *
ª_compûe_∑âîn
 (c⁄° *
__∑âîn
, 
size_t
 
__Àngth
,

474 
ª_∑âîn_buf„r
 *
__buf„r
);

480 
ª_compûe_Á°m≠
 (
ª_∑âîn_buf„r
 *
__buf„r
);

488 
ª_£¨ch
 (
ª_∑âîn_buf„r
 *
__buf„r
, c⁄° *
__°rög
,

489 
__Àngth
, 
__°¨t
, 
__ønge
,

490 
ª_ªgi°îs
 *
__ªgs
);

495 
ª_£¨ch_2
 (
ª_∑âîn_buf„r
 *
__buf„r
,

496 c⁄° *
__°rög1
, 
__Àngth1
,

497 c⁄° *
__°rög2
, 
__Àngth2
, 
__°¨t
,

498 
__ønge
, 
ª_ªgi°îs
 *
__ªgs
, 
__°›
);

503 
ª_m©ch
 (
ª_∑âîn_buf„r
 *
__buf„r
, c⁄° *
__°rög
,

504 
__Àngth
, 
__°¨t
, 
ª_ªgi°îs
 *
__ªgs
);

508 
ª_m©ch_2
 (
ª_∑âîn_buf„r
 *
__buf„r
,

509 c⁄° *
__°rög1
, 
__Àngth1
,

510 c⁄° *
__°rög2
, 
__Àngth2
, 
__°¨t
,

511 
ª_ªgi°îs
 *
__ªgs
, 
__°›
);

526 
ª_£t_ªgi°îs
 (
ª_∑âîn_buf„r
 *
__buf„r
,

527 
ª_ªgi°îs
 *
__ªgs
,

528 
__num_ªgs
,

529 
ªgoff_t
 *
__°¨ts
,Ñegoff_à*
__íds
);

532 #i‡
deföed
 
_REGEX_RE_COMP
 || (deföed 
_LIBC
 && deföed 
__USE_MISC
)

533 #i‚de‡
_CRAY


535 *
ª_comp
 (const *);

536 
ª_exec
 (const *);

542 #i‚de‡
__ª°ri˘


543 #i‡! (2 < 
__GNUC__
 || (2 =__GNUC__ && 95 <
__GNUC_MINOR__
))

544 #i‡
deföed
 
ª°ri˘
 || 199901L <
__STDC_VERSION__


545 
	#__ª°ri˘
 
ª°ri˘


	)

547 
	#__ª°ri˘


	)

552 #i‚de‡
__ª°ri˘_¨r


553 #i‡(
__GNUC__
 > 3 || (__GNUC__ =3 && 
__GNUC_MINOR__
 >= 1)) \

554 && !
deföed
 
	g__GNUG__


555 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

557 
	#__ª°ri˘_¨r


	)

562 
ªgcomp
 (
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

563 c⁄° *
__ª°ri˘
 
__∑âîn
,

564 
__cÊags
);

566 
ªgexec
 (c⁄° 
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

567 c⁄° *
__ª°ri˘
 
__°rög
, 
size_t
 
__nm©ch
,

568 
ªgm©ch_t
 
__pm©ch
[
__ª°ri˘_¨r
],

569 
__eÊags
);

571 
size_t
 
ªgîr‹
 (
__îrcode
, c⁄° 
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

572 *
__ª°ri˘
 
__îrbuf
, 
size_t
 
__îrbuf_size
);

574 
ªg‰ì
 (
ªgex_t
 *
__¥eg
);

577 #ifde‡
__˝lu•lus


	@/usr/include/sgtty.h

18 #i‚def 
_SGTTY_H


19 
	#_SGTTY_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<sys/io˘l.h
>

27 
	gsgâyb
;

29 
__BEGIN_DECLS


32 
	$gây
 (
__fd
, 
sgâyb
 *
__∑øms
Ë
__THROW
;

35 
	$°ty
 (
__fd
, c⁄° 
sgâyb
 *
__∑øms
Ë
__THROW
;

38 
__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_MISC


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_MISC


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #ifde‡
__USE_XOPEN2K8


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

166 #ifde‡
__USE_XOPEN


167 #ifde‡
__GNUC__


168 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

170 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

172 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

177 #ifde‡
__USE_MISC


184 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

187 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

190 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

193 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

197 #ifde‡
__USE_MISC


198 
	#NSIG
 
_NSIG


	)

201 #ifde‡
__USE_GNU


202 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

206 #ifde‡
__USE_MISC


207 
__sigh™dÀr_t
 
	tsig_t
;

210 #ifde‡
__USE_POSIX


213 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

216 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

226 
__THROW
 
	`__n⁄nuŒ
 ((1));

228 #ifde‡
__USE_GNU


230 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

233 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

234 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

237 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

238 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

243 
	~<bôs/siga˘i⁄.h
>

246 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

247 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

254 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

257 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

258 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

261 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

268 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

269 
	`__n⁄nuŒ
 ((1, 2));

271 #ifde‡
__USE_POSIX199309


276 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

277 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

284 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

285 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

286 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

287 
	`__n⁄nuŒ
 ((1));

291 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

292 
__THROW
;

297 #ifde‡
__USE_MISC


301 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

302 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

306 
	~<bôs/sigc⁄ãxt.h
>

309 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

314 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


315 
	#__√ed_size_t


	)

316 
	~<°ddef.h
>

321 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

323 
	~<bôs/sig°ack.h
>

324 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


326 
	~<sys/uc⁄ãxt.h
>

332 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

333 
__THROW
 
__©åibuã_dïªˇãd__
;

337 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

338 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

342 #ifde‡
__USE_XOPEN_EXTENDED


346 
	$sighﬁd
 (
__sig
Ë
__THROW
;

349 
	$sigªl£
 (
__sig
Ë
__THROW
;

352 
	$sigign‹e
 (
__sig
Ë
__THROW
;

355 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

358 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


361 
	~<bôs/±hªadty≥s.h
>

362 
	~<bôs/sigthªad.h
>

369 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

371 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

375 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 #ifde‡
__WORDSIZE32_SIZE_ULONG


264 
	#SIZE_MAX
 (4294967295UL)

	)

266 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

282 
	#INT8_C
(
c
Ë
	)
c

283 
	#INT16_C
(
c
Ë
	)
c

284 
	#INT32_C
(
c
Ë
	)
c

285 #i‡
__WORDSIZE
 == 64

286 
	#INT64_C
(
c
Ë¯## 
L


	)

288 
	#INT64_C
(
c
Ë¯## 
LL


	)

292 
	#UINT8_C
(
c
Ë
	)
c

293 
	#UINT16_C
(
c
Ë
	)
c

294 
	#UINT32_C
(
c
Ë¯## 
U


	)

295 #i‡
__WORDSIZE
 == 64

296 
	#UINT64_C
(
c
Ë¯## 
UL


	)

298 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#INTMAX_C
(
c
Ë¯## 
L


	)

304 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

306 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

307 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_MISC


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #ifde‡
__USE_POSIX


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #ifde‡
__USE_POSIX


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #ifde‡
__USE_POSIX2


872 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

878 
	`p˛o£
 (
FILE
 *
__°ªam
);

882 #ifdef 
__USE_POSIX


884 *
	$˘îmid
 (*
__s
Ë
__THROW
;

888 #ifde‡
__USE_XOPEN


890 *
	`cu£rid
 (*
__s
);

894 #ifdef 
__USE_GNU


895 
ob°ack
;

898 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

899 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

900 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

901 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

902 c⁄° *
__ª°ri˘
 
__f‹m©
,

903 
_G_va_li°
 
__¨gs
)

904 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

908 #ifde‡
__USE_POSIX


912 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

919 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

922 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


926 
	#__√ed_gë›t


	)

927 
	~<gë›t.h
>

932 #ifde‡
__USE_EXTERN_INLINES


933 
	~<bôs/°dio.h
>

935 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


936 
	~<bôs/°dio2.h
>

938 #ifde‡
__LDBL_COMPAT


939 
	~<bôs/°dio-ldbl.h
>

942 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_MISC


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #ifde‡
__USE_ISOC99


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_MISC


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #ifde‡
__USE_ISOC99


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #ifde‡
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #ifde‡
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_MISC


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	$©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #ifde‡
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #ifde‡
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

758 #ifde‡
__USE_EXTERN_INLINES


759 
	~<bôs/°dlib-b£¨ch.h
>

764 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

766 #ifde‡
__USE_GNU


767 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

768 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

769 
	`__n⁄nuŒ
 ((1, 4));

774 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

775 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__END_NAMESPACE_STD


778 #ifde‡
__USE_ISOC99


779 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

780 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__BEGIN_NAMESPACE_STD


788 
div_t
 
	$div
 (
__numî
, 
__díom
)

789 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

790 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

791 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

792 
__END_NAMESPACE_STD


794 #ifde‡
__USE_ISOC99


795 
__BEGIN_NAMESPACE_C99


796 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

797 
__díom
)

798 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

799 
__END_NAMESPACE_C99


803 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

804 || 
deföed
 
__USE_MISC


811 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

812 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

817 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

818 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

824 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

827 #ifde‡
__USE_MISC


829 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

833 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

834 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

835 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

836 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

841 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

845 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

846 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

852 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

853 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

854 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

855 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

859 
__BEGIN_NAMESPACE_STD


862 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

865 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

866 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

869 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

873 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

874 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

876 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

877 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

878 
__THROW
;

879 
__END_NAMESPACE_STD


882 #ifde‡
__USE_MISC


887 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


898 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

899 *c⁄° *
__ª°ri˘
 
__tokís
,

900 **
__ª°ri˘
 
__vÆuï
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

905 #ifde‡
__USE_XOPEN


907 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

913 #ifde‡
__USE_XOPEN2KXSI


915 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

918 #ifde‡
__USE_XOPEN


923 
	$gø¡±
 (
__fd
Ë
__THROW
;

927 
	$u∆ock±
 (
__fd
Ë
__THROW
;

932 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

935 #ifde‡
__USE_GNU


939 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

940 
__THROW
 
	`__n⁄nuŒ
 ((2));

943 
	`gë±
 ();

946 #ifde‡
__USE_MISC


950 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

951 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 
	~<bôs/°dlib-Êﬂt.h
>

957 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


958 
	~<bôs/°dlib.h
>

960 #ifde‡
__LDBL_COMPAT


961 
	~<bôs/°dlib-ldbl.h
>

965 #unde‡
__√ed_mÆloc_™d_ˇŒoc


967 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


171 *
	$°rdup
 (c⁄° *
__s
)

172 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_XOPEN2K8


179 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

180 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


185 
	#°rdu∑
(
s
) \

186 (
__exãnsi⁄__
 \

188 c⁄° *
__ﬁd
 = (
s
); \

189 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

190 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

191 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

192 
	}
}))

	)

195 
	#°∫du∑
(
s
, 
n
) \

196 (
__exãnsi⁄__
 \

198 c⁄° *
__ﬁd
 = (
s
); \

199 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

200 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

201 
__√w
[
__Àn
] = '\0'; \

202 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

203 }))

	)

206 
	g__BEGIN_NAMESPACE_STD


208 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


211 *
°rchr
 (*
__s
, 
__c
)

212 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

213 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

216 #ifde‡
__OPTIMIZE__


217 
__exã∫_Æways_ölöe
 *

218 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

223 
__exã∫_Æways_ölöe
 const *

224 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


226  
__buûtö_°rchr
 (
__s
, 
__c
);

231 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

232 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


238 *
	`°ºchr
 (*
__s
, 
__c
)

239 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

243 #ifde‡
__OPTIMIZE__


244 
__exã∫_Æways_ölöe
 *

245 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
__exã∫_Æways_ölöe
 const *

251 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


253  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

256 
	}
}

258 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

259 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

261 
__END_NAMESPACE_STD


263 #ifde‡
__USE_GNU


266 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


267 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

268 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

269 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 
__BEGIN_NAMESPACE_STD


280 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

281 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


290 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

291 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 #ifde‡
__OPTIMIZE__


296 
__exã∫_Æways_ölöe
 *

297 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


299  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

302 
__exã∫_Æways_ölöe
 const *

303 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


305  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

308 
	}
}

310 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

311 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


317 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

318 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

322 #ifde‡
__OPTIMIZE__


323 
__exã∫_Æways_ölöe
 *

324 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


326  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

329 
__exã∫_Æways_ölöe
 const *

330 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


332  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

335 
	}
}

337 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

343 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
__END_NAMESPACE_STD


349 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

350 c⁄° *
__ª°ri˘
 
__dñim
,

351 **
__ª°ri˘
 
__ßve_±r
)

352 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

353 #ifde‡
__USE_POSIX


354 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

355 **
__ª°ri˘
 
__ßve_±r
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

359 #ifde‡
__USE_GNU


361 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


362 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

363 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

365 c⁄° *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

368 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

369 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 #ifde‡
__USE_GNU


377 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

378 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

379 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

383 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

384 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

385 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

387 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

392 
__BEGIN_NAMESPACE_STD


394 
size_t
 
	$°æí
 (c⁄° *
__s
)

395 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 
__END_NAMESPACE_STD


398 #ifdef 
__USE_XOPEN2K8


401 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

402 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

406 
__BEGIN_NAMESPACE_STD


408 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

409 
__END_NAMESPACE_STD


410 #ifde‡
__USE_XOPEN2K


418 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


421 #ifde‡
__REDIRECT_NTH


422 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

423 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

424 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

426 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

427 
__THROW
 
	`__n⁄nuŒ
 ((2));

428 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

433 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

434 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

438 #ifde‡
__USE_XOPEN2K8


440 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

446 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

448 #ifde‡
__USE_MISC


450 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

457 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

458 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

461 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


464 *
	`ödex
 (*
__s
, 
__c
)

465 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

466 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

467 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


470 
__exã∫_Æways_ölöe
 *

471 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


473  
	`__buûtö_ödex
 (
__s
, 
__c
);

476 
__exã∫_Æways_ölöe
 const *

477 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


479  
	`__buûtö_ödex
 (
__s
, 
__c
);

482 
	}
}

484 *
	$ödex
 (c⁄° *
__s
, 
__c
)

485 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

489 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


492 *
	`rödex
 (*
__s
, 
__c
)

493 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

495 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


498 
__exã∫_Æways_ölöe
 *

499 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


501  
	`__buûtö_rödex
 (
__s
, 
__c
);

504 
__exã∫_Æways_ölöe
 const *

505 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


507  
	`__buûtö_rödex
 (
__s
, 
__c
);

510 
	}
}

512 *
	$rödex
 (c⁄° *
__s
, 
__c
)

513 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

518 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

522 #ifdef 
__USE_GNU


523 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

524 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

525 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

530 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

534 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

537 #ifdef 
__USE_GNU


540 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

541 
__loˇÀ_t
 
__loc
)

542 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

544 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

545 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

546 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

549 #ifdef 
__USE_MISC


552 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

553 c⁄° *
__ª°ri˘
 
__dñim
)

554 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifdef 
__USE_XOPEN2K8


559 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

562 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

563 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

570 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 #ifdef 
__USE_GNU


579 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

580 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

583 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

586 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

588 #i‚de‡
ba£«me


593 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


594 "C++" *
	$ba£«me
 (*
__fûíame
)

595 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

596 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

597 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

605 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

606 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

607 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


627 
	~<bôs/°rög.h
>

630 
	~<bôs/°rög2.h
>

633 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


635 
	~<bôs/°rög3.h
>

639 #i‡
deföed
 
__USE_GNU
 && deföed 
__OPTIMIZE__
 \

640 && 
deföed
 
__exã∫_Æways_ölöe
 && 
	$__GNUC_PREREQ
 (3,2)

641 #i‡!
deföed
 
_FORCE_INLINES
 && !deföed 
_HAVE_STRING_ARCH_memp˝y


643 #unde‡
memp˝y


644 #unde‡
__memp˝y


645 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

646 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

648 
__exã∫_Æways_ölöe
 *

649 
	$__memp˝y_ölöe
 (*
__ª°ri˘
 
__de°
,

650 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

652  (*Ë
	`mem˝y
 (
__de°
, 
__§c
, 
__n
) + __n;

653 
	}
}

658 
	g__END_DECLS


	@/usr/include/syslog.h

1 
	~<sys/sy¶og.h
>

	@/usr/include/termio.h

5 
	~<ãrmios.h
>

6 
	~<sys/io˘l.h
>

	@/usr/include/termios.h

22 #i‚def 
_TERMIOS_H


23 
	#_TERMIOS_H
 1

	)

25 
	~<„©uªs.h
>

26 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


28 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__pid_t_deföed


30 
__pid_t
 
	tpid_t
;

31 
	#__pid_t_deföed


	)

35 
	g__BEGIN_DECLS


39 
	~<bôs/ãrmios.h
>

41 #ifde‡
__USE_MISC


44 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

48 
•ìd_t
 
	$cfgëo•ìd
 (c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

51 
•ìd_t
 
	$cfgëi•ìd
 (c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

54 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

57 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

59 #ifdef 
__USE_MISC


61 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

66 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

70 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

71 c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

74 #ifdef 
__USE_MISC


76 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

80 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

86 
	`tcdøö
 (
__fd
);

90 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

94 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

97 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


99 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

103 #ifde‡
__USE_MISC


104 
	~<sys/âydeÁu…s.h
>

107 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #ifde‡
__USE_POSIX


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_MISC


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_POSIX


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_POSIX


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_MISC


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

111 
	#_XOPEN_CRYPT
 1

	)

115 
	#_XOPEN_ENH_I18N
 1

	)

118 
	#_XOPEN_LEGACY
 1

	)

205 
	~<bôs/posix_›t.h
>

208 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


209 
	~<bôs/ívú⁄míts.h
>

213 
	#STDIN_FILENO
 0

	)

214 
	#STDOUT_FILENO
 1

	)

215 
	#STDERR_FILENO
 2

	)

220 
	~<bôs/ty≥s.h
>

222 #i‚def 
__ssize_t_deföed


223 
__ssize_t
 
	tssize_t
;

224 
	#__ssize_t_deföed


	)

227 
	#__√ed_size_t


	)

228 
	#__√ed_NULL


	)

229 
	~<°ddef.h
>

231 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


234 #i‚de‡
__gid_t_deföed


235 
__gid_t
 
	tgid_t
;

236 
	#__gid_t_deföed


	)

239 #i‚de‡
__uid_t_deföed


240 
__uid_t
 
	tuid_t
;

241 
	#__uid_t_deföed


	)

244 #i‚de‡
__off_t_deföed


245 #i‚de‡
__USE_FILE_OFFSET64


246 
__off_t
 
	toff_t
;

248 
__off64_t
 
	toff_t
;

250 
	#__off_t_deföed


	)

252 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


253 
__off64_t
 
	toff64_t
;

254 
	#__off64_t_deföed


	)

257 #i‚de‡
__u£c⁄ds_t_deföed


258 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

259 
	#__u£c⁄ds_t_deföed


	)

262 #i‚de‡
__pid_t_deföed


263 
__pid_t
 
	tpid_t
;

264 
	#__pid_t_deföed


	)

268 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


269 #i‚de‡
__öçå_t_deföed


270 
__öçå_t
 
	töçå_t
;

271 
	#__öçå_t_deföed


	)

275 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


276 #i‚de‡
__sockÀn_t_deföed


277 
__sockÀn_t
 
	tsockÀn_t
;

278 
	#__sockÀn_t_deföed


	)

284 
	#R_OK
 4

	)

285 
	#W_OK
 2

	)

286 
	#X_OK
 1

	)

287 
	#F_OK
 0

	)

290 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

292 #ifde‡
__USE_GNU


295 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

296 
__THROW
 
	`__n⁄nuŒ
 ((1));

299 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1));

303 #ifde‡
__USE_ATFILE


307 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

308 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

313 #i‚def 
_STDIO_H


314 
	#SEEK_SET
 0

	)

315 
	#SEEK_CUR
 1

	)

316 
	#SEEK_END
 2

	)

317 #ifde‡
__USE_GNU


318 
	#SEEK_DATA
 3

	)

319 
	#SEEK_HOLE
 4

	)

323 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


325 
	#L_SET
 
SEEK_SET


	)

326 
	#L_INCR
 
SEEK_CUR


	)

327 
	#L_XTND
 
SEEK_END


	)

336 #i‚de‡
__USE_FILE_OFFSET64


337 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

339 #ifde‡
__REDIRECT_NTH


340 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

341 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

342 
l£ek64
);

344 
	#l£ek
 
l£ek64


	)

347 #ifde‡
__USE_LARGEFILE64


348 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

349 
__THROW
;

356 
	`˛o£
 (
__fd
);

363 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

369 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

371 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


372 #i‚de‡
__USE_FILE_OFFSET64


379 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

380 
__off_t
 
__off£t
Ë
__wur
;

387 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

388 
__off_t
 
__off£t
Ë
__wur
;

390 #ifde‡
__REDIRECT


391 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

392 
__off64_t
 
__off£t
),

393 
¥ód64
Ë
__wur
;

394 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

395 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

396 
pwrôe64
Ë
__wur
;

398 
	#¥ód
 
¥ód64


	)

399 
	#pwrôe
 
pwrôe64


	)

403 #ifde‡
__USE_LARGEFILE64


407 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

408 
__off64_t
 
__off£t
Ë
__wur
;

411 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

412 
__off64_t
 
__off£t
Ë
__wur
;

420 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

422 #ifde‡
__USE_GNU


425 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

435 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

447 
	`¶ìp
 (
__£c⁄ds
);

449 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

450 || 
deföed
 
__USE_MISC


455 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

456 
__THROW
;

463 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

472 
	`∑u£
 ();

476 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

477 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

479 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


481 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

486 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

487 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

491 #ifde‡
__USE_ATFILE


494 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

495 
__gid_t
 
__group
, 
__Êag
)

496 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

500 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

502 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


504 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

514 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

516 #ifdef 
__USE_GNU


520 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

523 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

524 || 
deföed
 
__USE_MISC


528 *
	$gëwd
 (*
__buf
)

529 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

534 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

537 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

539 #ifde‡
__USE_GNU


542 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

546 **
__ívú⁄
;

547 #ifde‡
__USE_GNU


548 **
ívú⁄
;

554 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

555 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifde‡
__USE_XOPEN2K8


560 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((2));

566 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

567 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

577 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

588 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

590 #ifde‡
__USE_GNU


593 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

594 *c⁄° 
__ívp
[])

595 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


601 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

606 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

612 
	~<bôs/c⁄‚ame.h
>

615 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

616 
__THROW
 
	`__n⁄nuŒ
 ((1));

619 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

622 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

624 #ifdef 
__USE_POSIX2


626 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

631 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

640 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

641 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


642 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

649 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

651 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


663 
	$£çgΩ
 (Ë
__THROW
;

670 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

672 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


674 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

678 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

681 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

687 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

692 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

694 #ifdef 
__USE_GNU


696 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

703 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

705 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


708 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

711 #ifde‡
__USE_XOPEN2K


713 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

720 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

722 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


725 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

728 #ifde‡
__USE_XOPEN2K


730 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

733 #ifde‡
__USE_GNU


736 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

737 
__THROW
;

741 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

742 
__THROW
;

746 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

747 
__THROW
 
__wur
;

751 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

752 
__THROW
 
__wur
;

759 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

761 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

762 || 
deföed
 
__USE_MISC


767 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

773 *
	$ây«me
 (
__fd
Ë
__THROW
;

777 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

778 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

782 
	$ißây
 (
__fd
Ë
__THROW
;

784 #i‡
deföed
 
__USE_MISC
 \

785 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

788 
	$ây¶Ÿ
 (Ë
__THROW
;

793 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

794 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

796 #ifde‡
__USE_ATFILE


799 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

800 c⁄° *
__to
, 
__Êags
)

801 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

804 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


806 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

812 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

813 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

817 #ifde‡
__USE_ATFILE


819 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

820 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

823 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

824 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

825 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

829 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

831 #ifde‡
__USE_ATFILE


833 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

834 
__THROW
 
	`__n⁄nuŒ
 ((2));

838 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

842 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

845 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

852 *
	`gëlogö
 ();

853 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


860 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

863 #ifdef 
__USE_MISC


865 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 #ifdef 
__USE_POSIX2


873 
	#__√ed_gë›t


	)

874 
	~<gë›t.h
>

878 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


882 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #i‡
deföed
 
__USE_MISC


889 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

890 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

894 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

900 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

902 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

903 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

909 
	$vh™gup
 (Ë
__THROW
;

912 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

920 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

921 
size_t
 
__off£t
, 
__sˇÀ
)

922 
__THROW
 
	`__n⁄nuŒ
 ((1));

928 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

932 *
	$gëu£rshñl
 (Ë
__THROW
;

933 
	$ídu£rshñl
 (Ë
__THROW
;

934 
	$£tu£rshñl
 (Ë
__THROW
;

940 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

944 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

947 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

951 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

959 
	`fsync
 (
__fd
);

962 #ifde‡
__USE_GNU


965 
	$syncfs
 (
__fd
Ë
__THROW
;

969 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


972 
	`gëho°id
 ();

975 
	$sync
 (Ë
__THROW
;

978 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


981 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

986 
	$gëdèbÀsize
 (Ë
__THROW
;

992 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


995 #i‚de‡
__USE_FILE_OFFSET64


996 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

999 #ifde‡
__REDIRECT_NTH


1000 
	`__REDIRECT_NTH
 (
åunˇã
,

1001 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1002 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1004 
	#åunˇã
 
åunˇã64


	)

1007 #ifde‡
__USE_LARGEFILE64


1008 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1009 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1014 #i‡
deföed
 
__USE_POSIX199309
 \

1015 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1018 #i‚de‡
__USE_FILE_OFFSET64


1019 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1023 
·runˇã64
Ë
__wur
;

1025 
	#·runˇã
 
·runˇã64


	)

1028 #ifde‡
__USE_LARGEFILE64


1029 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1035 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1036 || 
deföed
 
__USE_MISC


1040 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1046 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1050 #ifde‡
__USE_MISC


1061 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1066 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1078 
	#F_ULOCK
 0

	)

1079 
	#F_LOCK
 1

	)

1080 
	#F_TLOCK
 2

	)

1081 
	#F_TEST
 3

	)

1083 #i‚de‡
__USE_FILE_OFFSET64


1084 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1086 #ifde‡
__REDIRECT


1087 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1088 
lockf64
Ë
__wur
;

1090 
	#lockf
 
lockf64


	)

1093 #ifde‡
__USE_LARGEFILE64


1094 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1099 #ifde‡
__USE_GNU


1104 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1105 (
__exãnsi⁄__
 \

1106 ({ 
__ªsu…
; \

1107 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1108 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1109 
__ªsu…
; 
	}
}))

	)

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1121 #ifdef 
__USE_XOPEN


1123 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1124 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1129 
__THROW
 
	`__n⁄nuŒ
 ((1));

1136 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1137 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1143 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1145 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1150 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1151 
	~<bôs/uni°d.h
>

1154 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/fcgiapp.h

15 #i‚de‡
_FCGIAPP_H


16 
	#_FCGIAPP_H


	)

19 #i‚de‡
TCL_LIBRARY


20 
	~<°d¨g.h
>

22 
	~<v¨¨gs.h
>

25 #i‚de‡
DLLAPI


26 #ifde‡
_WIN32


27 
	#DLLAPI
 
	`__de˛•ec
(
dŒimp‹t
)

	)

29 
	#DLLAPI


	)

33 #i‡
deföed
 (
c_∂u•lus
Ë|| deföed (
__˝lu•lus
)

40 
	#FCGX_UNSUPPORTED_VERSION
 -2

	)

41 
	#FCGX_PROTOCOL_ERROR
 -3

	)

42 
	#FCGX_PARAMS_ERROR
 -4

	)

43 
	#FCGX_CALL_SEQ_ERROR
 -5

	)

53 
	sFCGX_Såóm
 {

54 *
rdNext
;

56 *
wrNext
;

58 *
°›
;

60 *
°›Ungë
;

63 
isRódî
;

64 
isClo£d
;

65 
wasFClo£CÆÀd
;

66 
FCGI_î∫o
;

67 (*
fûlBuffProc
Ë(
FCGX_Såóm
 *
°ªam
);

68 (*
em±yBuffProc
Ë(
FCGX_Såóm
 *
°ªam
, 
doClo£
);

69 *
d©a
;

70 } 
	tFCGX_Såóm
;

76 **
	tFCGX_P¨amAºay
;

84 
	#FCGI_FAIL_ACCEPT_ON_INTR
 1

	)

91 
	sFCGX_Reque°
 {

92 
ªque°Id
;

93 
rﬁe
;

94 
FCGX_Såóm
 *
ö
;

95 
FCGX_Såóm
 *
out
;

96 
FCGX_Såóm
 *
îr
;

97 **
ívp
;

101 
P¨ams
 *
∑ømsPå
;

102 
ùcFd
;

103 
isBegöPro˚s£d
;

104 
kìpC⁄√˘i⁄
;

105 
≠pSètus
;

106 
nWrôîs
;

107 
Êags
;

108 
li°í_sock
;

109 } 
	tFCGX_Reque°
;

128 
DLLAPI
 
FCGX_IsCGI
();

142 
DLLAPI
 
FCGX_Inô
();

160 
DLLAPI
 
FCGX_O≥nSockë
(c⁄° *
∑th
, 
backlog
);

175 
DLLAPI
 
FCGX_InôReque°
(
FCGX_Reque°
 *
ªque°
, 
sock
, 
Êags
);

207 
DLLAPI
 
FCGX_Ac˚±_r
(
FCGX_Reque°
 *
ªque°
);

228 
DLLAPI
 
FCGX_Föish_r
(
FCGX_Reque°
 *
ªque°
);

240 
DLLAPI
 
FCGX_Fªe
(
FCGX_Reque°
 * 
ªque°
, 
˛o£
);

269 
DLLAPI
 
FCGX_Ac˚±
(

270 
FCGX_Såóm
 **
ö
,

271 
FCGX_Såóm
 **
out
,

272 
FCGX_Såóm
 **
îr
,

273 
FCGX_P¨amAºay
 *
ívp
);

294 
DLLAPI
 
FCGX_Föish
();

313 
DLLAPI
 
FCGX_SèπFûãrD©a
(
FCGX_Såóm
 *
°ªam
);

328 
DLLAPI
 
FCGX_SëExôSètus
(
°©us
, 
FCGX_Såóm
 *
°ªam
);

349 
DLLAPI
 *
FCGX_GëP¨am
(c⁄° *
«me
, 
FCGX_P¨amAºay
 
ívp
);

369 
DLLAPI
 
FCGX_GëCh¨
(
FCGX_Såóm
 *
°ªam
);

385 
DLLAPI
 
FCGX_UnGëCh¨
(
c
, 
FCGX_Såóm
 *
°ªam
);

402 
DLLAPI
 
FCGX_GëSå
(*
°r
, 
n
, 
FCGX_Såóm
 *
°ªam
);

421 
DLLAPI
 *
FCGX_GëLöe
(*
°r
, 
n
, 
FCGX_Såóm
 *
°ªam
);

442 
DLLAPI
 
FCGX_HasSìnEOF
(
FCGX_Såóm
 *
°ªam
);

462 
DLLAPI
 
FCGX_PutCh¨
(
c
, 
FCGX_Såóm
 *
°ªam
);

479 
DLLAPI
 
FCGX_PutSå
(c⁄° *
°r
, 
n
, 
FCGX_Såóm
 *
°ªam
);

494 
DLLAPI
 
FCGX_PutS
(c⁄° *
°r
, 
FCGX_Såóm
 *
°ªam
);

510 
DLLAPI
 
FCGX_FPrötF
(
FCGX_Såóm
 *
°ªam
, c⁄° *
f‹m©
, ...);

512 
DLLAPI
 
FCGX_VFPrötF
(
FCGX_Såóm
 *
°ªam
, c⁄° *
f‹m©
, 
va_li°
 
¨g
);

531 
DLLAPI
 
FCGX_FFlush
(
FCGX_Såóm
 *
°ªam
);

557 
DLLAPI
 
FCGX_FClo£
(
FCGX_Såóm
 *
°ªam
);

569 
DLLAPI
 
FCGX_GëEº‹
(
FCGX_Såóm
 *
°ªam
);

580 
DLLAPI
 
FCGX_CÀ¨Eº‹
(
FCGX_Såóm
 *
°ªam
);

592 
DLLAPI
 
FCGX_Såóm
 *
FCGX_Cª©eWrôî
(

593 
sockë
,

594 
ªque°Id
,

595 
bufÊí
,

596 
°ªamTy≥
);

608 
DLLAPI
 
FCGX_FªeSåóm
(
FCGX_Såóm
 **
°ªam
);

616 
DLLAPI
 
FCGX_ShutdownPídög
();

618 #i‡
deföed
 (
__˝lu•lus
Ë|| deföed (
c_∂u•lus
)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


152 #unde‡
_DEFAULT_SOURCE


153 
	#_DEFAULT_SOURCE
 1

	)

157 #ifde‡
_GNU_SOURCE


158 #unde‡
_ISOC95_SOURCE


159 
	#_ISOC95_SOURCE
 1

	)

160 #unde‡
_ISOC99_SOURCE


161 
	#_ISOC99_SOURCE
 1

	)

162 #unde‡
_ISOC11_SOURCE


163 
	#_ISOC11_SOURCE
 1

	)

164 #unde‡
_POSIX_SOURCE


165 
	#_POSIX_SOURCE
 1

	)

166 #unde‡
_POSIX_C_SOURCE


167 
	#_POSIX_C_SOURCE
 200809L

	)

168 #unde‡
_XOPEN_SOURCE


169 
	#_XOPEN_SOURCE
 700

	)

170 #unde‡
_XOPEN_SOURCE_EXTENDED


171 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

172 #unde‡
_LARGEFILE64_SOURCE


173 
	#_LARGEFILE64_SOURCE
 1

	)

174 #unde‡
_DEFAULT_SOURCE


175 
	#_DEFAULT_SOURCE
 1

	)

176 #unde‡
_ATFILE_SOURCE


177 
	#_ATFILE_SOURCE
 1

	)

182 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

183 || (!
deföed
 
	g__STRICT_ANSI__
 \

184 && !
deföed
 
	g_ISOC99_SOURCE
 \

185 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

186 && !
deföed
 
	g_XOPEN_SOURCE
))

187 #unde‡
_DEFAULT_SOURCE


188 
	#_DEFAULT_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC11_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

194 
	#__USE_ISOC11
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

200 
	#__USE_ISOC99
 1

	)

204 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

205 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

206 
	#__USE_ISOC95
 1

	)

213 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

214 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

215 
	#__USE_ISOCXX11
 1

	)

221 #ifde‡
_DEFAULT_SOURCE


222 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


223 
	#__USE_POSIX_IMPLICITLY
 1

	)

225 #unde‡
_POSIX_SOURCE


226 
	#_POSIX_SOURCE
 1

	)

227 #unde‡
_POSIX_C_SOURCE


228 
	#_POSIX_C_SOURCE
 200809L

	)

230 #i‡((!
deföed
 
__STRICT_ANSI__
 \

231 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

232 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

233 
	#_POSIX_SOURCE
 1

	)

234 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

235 
	#_POSIX_C_SOURCE
 2

	)

236 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

237 
	#_POSIX_C_SOURCE
 199506L

	)

238 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

239 
	#_POSIX_C_SOURCE
 200112L

	)

241 
	#_POSIX_C_SOURCE
 200809L

	)

243 
	#__USE_POSIX_IMPLICITLY
 1

	)

246 #i‡(
deföed
 
_POSIX_SOURCE
 \

247 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

248 || 
deföed
 
_XOPEN_SOURCE
)

249 
	#__USE_POSIX
 1

	)

252 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


253 
	#__USE_POSIX2
 1

	)

256 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

257 
	#__USE_POSIX199309
 1

	)

260 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

261 
	#__USE_POSIX199506
 1

	)

264 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

265 
	#__USE_XOPEN2K
 1

	)

266 #unde‡
__USE_ISOC95


267 
	#__USE_ISOC95
 1

	)

268 #unde‡
__USE_ISOC99


269 
	#__USE_ISOC99
 1

	)

272 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

273 
	#__USE_XOPEN2K8
 1

	)

274 #unde‡
_ATFILE_SOURCE


275 
	#_ATFILE_SOURCE
 1

	)

278 #ifdef 
_XOPEN_SOURCE


279 
	#__USE_XOPEN
 1

	)

280 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

281 
	#__USE_XOPEN_EXTENDED
 1

	)

282 
	#__USE_UNIX98
 1

	)

283 #unde‡
_LARGEFILE_SOURCE


284 
	#_LARGEFILE_SOURCE
 1

	)

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

286 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

287 
	#__USE_XOPEN2K8
 1

	)

288 
	#__USE_XOPEN2K8XSI
 1

	)

290 
	#__USE_XOPEN2K
 1

	)

291 
	#__USE_XOPEN2KXSI
 1

	)

292 #unde‡
__USE_ISOC95


293 
	#__USE_ISOC95
 1

	)

294 #unde‡
__USE_ISOC99


295 
	#__USE_ISOC99
 1

	)

298 #ifde‡
_XOPEN_SOURCE_EXTENDED


299 
	#__USE_XOPEN_EXTENDED
 1

	)

304 #ifde‡
_LARGEFILE_SOURCE


305 
	#__USE_LARGEFILE
 1

	)

308 #ifde‡
_LARGEFILE64_SOURCE


309 
	#__USE_LARGEFILE64
 1

	)

312 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

313 
	#__USE_FILE_OFFSET64
 1

	)

316 #i‡
deföed
 
_DEFAULT_SOURCE


317 
	#__USE_MISC
 1

	)

320 #ifdef 
_ATFILE_SOURCE


321 
	#__USE_ATFILE
 1

	)

324 #ifdef 
_GNU_SOURCE


325 
	#__USE_GNU
 1

	)

328 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


329 
	#__USE_REENTRANT
 1

	)

332 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

333 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

334 #i‡
_FORTIFY_SOURCE
 > 1

335 
	#__USE_FORTIFY_LEVEL
 2

	)

337 
	#__USE_FORTIFY_LEVEL
 1

	)

340 
	#__USE_FORTIFY_LEVEL
 0

	)

345 
	~<°dc-¥edef.h
>

353 #unde‡
__GNU_LIBRARY__


354 
	#__GNU_LIBRARY__
 6

	)

358 
	#__GLIBC__
 2

	)

359 
	#__GLIBC_MINOR__
 23

	)

361 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

362 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

365 #i‚de‡
__ASSEMBLER__


366 #i‚de‡
_SYS_CDEFS_H


367 
	~<sys/cdefs.h
>

372 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


373 
	#__USE_LARGEFILE
 1

	)

374 
	#__USE_LARGEFILE64
 1

	)

380 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

381 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

382 && 
deföed
 
	g__exã∫_ölöe


383 
	#__USE_EXTERN_INLINES
 1

	)

391 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


150 
	t_IO_lock_t
;

156 
	s_IO_m¨kî
 {

157 
_IO_m¨kî
 *
	m_√xt
;

158 
_IO_FILE
 *
	m_sbuf
;

162 
	m_pos
;

164 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

165 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

166 
	mpublic
:

167 
°ªamm¨kî
(
°ªambuf
 *
sb
);

168 ~
°ªamm¨kî
();

169 
ßvög
(Ë{  
	m_•os
 == -2; }

170 
dñè
(
°ªamm¨kî
&);

171 
dñè
();

176 
	e__codecvt_ªsu…


178 
	m__codecvt_ok
,

179 
	m__codecvt_∑πül
,

180 
	m__codecvt_îr‹
,

181 
	m__codecvt_noc⁄v


184 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


187 
	s_IO_codecvt


189 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

190 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

191 
	m__mb°©e_t
 *,

192 c⁄° 
	mwch¨_t
 *,

193 c⁄° 
	mwch¨_t
 *,

194 c⁄° 
	mwch¨_t
 **, *,

196 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

197 
	m__mb°©e_t
 *, *,

199 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

200 
	m__mb°©e_t
 *,

202 c⁄° **, 
	mwch¨_t
 *,

203 
	mwch¨_t
 *, wchar_t **);

204 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

205 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

206 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

207 c⁄° *, c⁄° *, 
	m_IO_size_t
);

208 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

210 
_IO_ic⁄v_t
 
	m__cd_ö
;

211 
_IO_ic⁄v_t
 
	m__cd_out
;

215 
	s_IO_wide_d©a


217 
wch¨_t
 *
	m_IO_ªad_±r
;

218 
wch¨_t
 *
	m_IO_ªad_íd
;

219 
wch¨_t
 *
	m_IO_ªad_ba£
;

220 
wch¨_t
 *
	m_IO_wrôe_ba£
;

221 
wch¨_t
 *
	m_IO_wrôe_±r
;

222 
wch¨_t
 *
	m_IO_wrôe_íd
;

223 
wch¨_t
 *
	m_IO_buf_ba£
;

224 
wch¨_t
 *
	m_IO_buf_íd
;

226 
wch¨_t
 *
	m_IO_ßve_ba£
;

227 
wch¨_t
 *
	m_IO_backup_ba£
;

229 
wch¨_t
 *
	m_IO_ßve_íd
;

231 
__mb°©e_t
 
	m_IO_°©e
;

232 
__mb°©e_t
 
	m_IO_œ°_°©e
;

233 
_IO_codecvt
 
	m_codecvt
;

235 
wch¨_t
 
	m_sh‹tbuf
[1];

237 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

241 
	s_IO_FILE
 {

242 
	m_Êags
;

243 
	#_IO_fûe_Êags
 
_Êags


	)

247 * 
	m_IO_ªad_±r
;

248 * 
	m_IO_ªad_íd
;

249 * 
	m_IO_ªad_ba£
;

250 * 
	m_IO_wrôe_ba£
;

251 * 
	m_IO_wrôe_±r
;

252 * 
	m_IO_wrôe_íd
;

253 * 
	m_IO_buf_ba£
;

254 * 
	m_IO_buf_íd
;

256 *
	m_IO_ßve_ba£
;

257 *
	m_IO_backup_ba£
;

258 *
	m_IO_ßve_íd
;

260 
_IO_m¨kî
 *
	m_m¨kîs
;

262 
_IO_FILE
 *
	m_chaö
;

264 
	m_fûío
;

266 
	m_blksize
;

268 
	m_Êags2
;

270 
_IO_off_t
 
	m_ﬁd_off£t
;

272 
	#__HAVE_COLUMN


	)

274 
	m_cur_cﬁumn
;

275 sig√d 
	m_vèbÀ_off£t
;

276 
	m_sh‹tbuf
[1];

280 
_IO_lock_t
 *
	m_lock
;

281 #ifde‡
_IO_USE_OLD_IO_FILE


284 
	s_IO_FILE_com∂ëe


286 
_IO_FILE
 
	m_fûe
;

288 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

289 
_IO_off64_t
 
	m_off£t
;

290 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


292 
_IO_codecvt
 *
	m_codecvt
;

293 
_IO_wide_d©a
 *
	m_wide_d©a
;

294 
_IO_FILE
 *
	m_‰ìªs_li°
;

295 *
	m_‰ìªs_buf
;

297 *
	m__∑d1
;

298 *
	m__∑d2
;

299 *
	m__∑d3
;

300 *
	m__∑d4
;

302 
size_t
 
	m__∑d5
;

303 
	m_mode
;

305 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

309 #i‚de‡
__˝lu•lus


310 
_IO_FILE
 
	t_IO_FILE
;

313 
	g_IO_FILE_∂us
;

315 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

316 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

317 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

318 #i‚de‡
_LIBC


319 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

320 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

321 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

323 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

324 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

325 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

333 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

341 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

342 
	tsize_t
 
	t__n
);

350 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

353 
	t__io_˛o£_‚
 (*
	t__cookõ
);

356 #ifde‡
_GNU_SOURCE


358 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

359 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

360 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

361 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

366 
__io_ªad_‚
 *
	mªad
;

367 
__io_wrôe_‚
 *
	mwrôe
;

368 
__io_£ek_‚
 *
	m£ek
;

369 
__io_˛o£_‚
 *
	m˛o£
;

370 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

371 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

373 
	g_IO_cookõ_fûe
;

376 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

377 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

381 #ifde‡
__˝lu•lus


385 
__undîÊow
 (
_IO_FILE
 *);

386 
__uÊow
 (
_IO_FILE
 *);

387 
__ovîÊow
 (
_IO_FILE
 *, );

388 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


389 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

390 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

391 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

394 #i‡ 
__GNUC__
 >= 3

395 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

397 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

400 
	#_IO_gëc_u∆ocked
(
_Â
) \

401 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

402 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

403 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

404 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

405 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

406 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

407 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

408 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

409 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

410 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

412 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


413 
	#_IO_gëwc_u∆ocked
(
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

415 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

416 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

417 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

418 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

422 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

423 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

426 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

427 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

429 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

430 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

431 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

432 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

434 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

437 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

438 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

440 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

441 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

442 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

444 #ifde‡
_IO_MTSAFE_IO


445 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

446 
	#_IO_Êockfûe
(
_Â
) \

447 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

448 
	#_IO_fu∆ockfûe
(
_Â
) \

449 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
Ë

	)

453 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

454 
	#_IO_·rylockfûe
(
_Â
Ë

	)

455 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

456 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

459 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

460 
_IO_va_li°
, *
__ª°ri˘
);

461 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

462 
_IO_va_li°
);

463 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

464 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

466 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

467 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

469 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

471 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


472 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

473 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

474 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

475 #i‡
__GNUC__
 >= 2

478 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


479 
	~<shlib-com∑t.h
>

480 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

481 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

482 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

483 c⁄° 
_IO_°dö_u£d
;

484 
wók_exã∫
 (
_IO_°dö_u£d
);

487 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


488 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

492 
	#_IO_fwide
(
__Â
, 
__mode
) \

493 ({ 
__ªsu…
 = (
__mode
); \

494 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

496 i‡((
__Â
)->
_mode
 == 0) \

498 (
__Â
)->
_mode
 = -1; \

499 
__ªsu…
 = (
__Â
)->
_mode
; \

501 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

502 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

504 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

505 
__ªsu…
; })

	)

508 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

509 
_IO_va_li°
, *
__ª°ri˘
);

510 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

511 
_IO_va_li°
);

512 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

513 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

516 #ifde‡
__LDBL_COMPAT


517 
	~<bôs/libio-ldbl.h
>

520 #ifde‡
__˝lu•lus


	@/usr/include/locale.h

22 #i‚def 
_LOCALE_H


23 
	#_LOCALE_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_NULL


	)

28 
	~<°ddef.h
>

29 
	~<bôs/loˇÀ.h
>

31 
	g__BEGIN_DECLS


35 
	#LC_CTYPE
 
__LC_CTYPE


	)

36 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

37 
	#LC_TIME
 
__LC_TIME


	)

38 
	#LC_COLLATE
 
__LC_COLLATE


	)

39 
	#LC_MONETARY
 
__LC_MONETARY


	)

40 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

41 
	#LC_ALL
 
__LC_ALL


	)

42 
	#LC_PAPER
 
__LC_PAPER


	)

43 
	#LC_NAME
 
__LC_NAME


	)

44 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

45 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

46 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

47 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

50 
__BEGIN_NAMESPACE_STD


53 
	slc⁄v


57 *
	mdecimÆ_poöt
;

58 *
	mthoußnds_£p
;

64 *
	mgroupög
;

70 *
	möt_cuº_symbﬁ
;

71 *
	mcuºícy_symbﬁ
;

72 *
	mm⁄_decimÆ_poöt
;

73 *
	mm⁄_thoußnds_£p
;

74 *
	mm⁄_groupög
;

75 *
	mposôive_sign
;

76 *
	m√g©ive_sign
;

77 
	möt_‰ac_digôs
;

78 
	m‰ac_digôs
;

80 
	mp_cs_¥e˚des
;

82 
	mp_£p_by_•a˚
;

84 
	mn_cs_¥e˚des
;

86 
	mn_£p_by_•a˚
;

93 
	mp_sign_po¢
;

94 
	mn_sign_po¢
;

95 #ifde‡
__USE_ISOC99


97 
	möt_p_cs_¥e˚des
;

99 
	möt_p_£p_by_•a˚
;

101 
	möt_n_cs_¥e˚des
;

103 
	möt_n_£p_by_•a˚
;

110 
	möt_p_sign_po¢
;

111 
	möt_n_sign_po¢
;

113 
	m__öt_p_cs_¥e˚des
;

114 
	m__öt_p_£p_by_•a˚
;

115 
	m__öt_n_cs_¥e˚des
;

116 
	m__öt_n_£p_by_•a˚
;

117 
	m__öt_p_sign_po¢
;

118 
	m__öt_n_sign_po¢
;

124 *
	$£éoˇÀ
 (
__ˇãg‹y
, c⁄° *
__loˇÀ
Ë
__THROW
;

127 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

129 
__END_NAMESPACE_STD


132 #ifdef 
__USE_XOPEN2K8


145 
	~<xloˇÀ.h
>

151 
__loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, c⁄° *
__loˇÀ
,

152 
__loˇÀ_t
 
__ba£
Ë
__THROW
;

158 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

159 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

160 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

161 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

162 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

163 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

164 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

165 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

166 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

167 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

168 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

169 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

170 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

171 | 
LC_NUMERIC_MASK
 \

172 | 
LC_TIME_MASK
 \

173 | 
LC_COLLATE_MASK
 \

174 | 
LC_MONETARY_MASK
 \

175 | 
LC_MESSAGES_MASK
 \

176 | 
LC_PAPER_MASK
 \

177 | 
LC_NAME_MASK
 \

178 | 
LC_ADDRESS_MASK
 \

179 | 
LC_TELEPHONE_MASK
 \

180 | 
LC_MEASUREMENT_MASK
 \

181 | 
LC_IDENTIFICATION_MASK
 \

182 )

	)

186 
__loˇÀ_t
 
	$du∂oˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

190 
	$‰ìloˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

197 
__loˇÀ_t
 
	$u£loˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

201 
	#LC_GLOBAL_LOCALE
 ((
__loˇÀ_t
Ë-1L)

	)

205 
__END_DECLS


	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (c⁄° *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (c⁄° *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

55 
	#__STDC_ISO_10646__
 201505L

	)

58 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004,

60 
	m__GCONV_TRANSLIT
 = 0x0008

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 
	s__gc⁄v_°ï


86 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

87 c⁄° *
__mod«me
;

89 
__cou¡î
;

91 *
__‰om_«me
;

92 *
__to_«me
;

94 
__gc⁄v_f˘
 
__f˘
;

95 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

96 
__gc⁄v_öô_f˘
 
__öô_f˘
;

97 
__gc⁄v_íd_f˘
 
__íd_f˘
;

101 
__mö_√eded_‰om
;

102 
__max_√eded_‰om
;

103 
__mö_√eded_to
;

104 
__max_√eded_to
;

107 
__°©eful
;

109 *
__d©a
;

114 
	s__gc⁄v_°ï_d©a


116 *
__outbuf
;

117 *
__outbu„nd
;

121 
__Êags
;

125 
__övoˇti⁄_cou¡î
;

129 
__öã∫Æ_u£
;

131 
__mb°©e_t
 *
__°©ï
;

132 
__mb°©e_t
 
__°©e
;

138 
	s__gc⁄v_öfo


140 
size_t
 
__n°ïs
;

141 
__gc⁄v_°ï
 *
__°ïs
;

142 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

143 } *
	t__gc⁄v_t
;

146 
	`__gc⁄v_å™¶ôî©e
 (
__gc⁄v_°ï
 *
°ï
,

147 
__gc⁄v_°ï_d©a
 *
°ï_d©a
,

148 c⁄° *
öbuf°¨t
,

149 c⁄° **
öbuÂ
,

150 c⁄° *
öbu„nd
,

151 **
outbuf°¨t
,

152 
size_t
 *
úªvîsibÀ
);

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

152 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

157 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

158 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

159 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

161 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

163 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

166 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

169 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

170 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

171 
__END_NAMESPACE_STD


173 #ifde‡
__USE_XOPEN2K8


175 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

178 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

179 
size_t
 
__n
Ë
__THROW
;

183 
	~<xloˇÀ.h
>

185 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
__loˇÀ_t
 
__loc
Ë
__THROW
;

188 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

189 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

192 
__BEGIN_NAMESPACE_STD


195 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

199 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

200 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

201 
__END_NAMESPACE_STD


203 #ifde‡
__USE_XOPEN2K8


209 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

210 
__loˇÀ_t
 
__loc
Ë
__THROW
;

215 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

216 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

219 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

222 
__BEGIN_NAMESPACE_STD


224 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


225 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

226 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

230 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

231 
__THROW
 
__©åibuã_puª__
;

234 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


235 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

236 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

240 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

241 
__THROW
 
__©åibuã_puª__
;

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_GNU


248 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

249 
__THROW
 
__©åibuã_puª__
;

252 
__BEGIN_NAMESPACE_STD


255 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

256 
__THROW
 
__©åibuã_puª__
;

259 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

260 
__THROW
 
__©åibuã_puª__
;

262 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


263 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

265 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

266 c⁄° 
wch¨_t
 *
__ac˚±
)

267 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

269 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

270 
__THROW
 
__©åibuã_puª__
;

273 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


274 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

276 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

277 c⁄° 
wch¨_t
 *
__√edÀ
)

278 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

280 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

281 
__THROW
 
__©åibuã_puª__
;

285 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

287 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

290 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

291 
__END_NAMESPACE_STD


293 #ifde‡
__USE_XOPEN


295 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


296 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

298 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

299 c⁄° 
wch¨_t
 *
__√edÀ
)

300 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

302 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

303 
__THROW
 
__©åibuã_puª__
;

307 #ifde‡
__USE_XOPEN2K8


309 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

310 
__THROW
 
__©åibuã_puª__
;

314 
__BEGIN_NAMESPACE_STD


316 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


317 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

319 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

320 
size_t
 
__n
)

321 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

323 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

328 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

329 
__THROW
 
__©åibuã_puª__
;

332 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

333 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

337 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

338 
__THROW
;

341 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

342 
__END_NAMESPACE_STD


344 #ifde‡
__USE_GNU


347 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

348 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

349 
__THROW
;

353 
__BEGIN_NAMESPACE_STD


356 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

360 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

364 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

368 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

369 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

370 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

373 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

377 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

378 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

379 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

380 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

381 
__END_NAMESPACE_STD


383 #ifde‡
__USE_EXTERN_INLINES


389 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

390 
__exã∫_ölöe
 
wöt_t


391 
	`__NTH
 (
	$btowc
 (
__c
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

393 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

395 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

396 
__exã∫_ölöe
 

397 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

398 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

399 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

401 
__exã∫_ölöe
 
size_t


402 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

403 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

404 {  (
__ps
 !
NULL


405 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

408 
__BEGIN_NAMESPACE_STD


411 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

412 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

418 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

419 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

420 
__END_NAMESPACE_STD


423 #ifdef 
__USE_XOPEN2K8


426 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

427 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

428 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

432 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

433 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

434 
size_t
 
__nwc
, size_à
__Àn
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

440 #ifde‡
__USE_XOPEN


442 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

446 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

450 
__BEGIN_NAMESPACE_STD


453 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

454 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

455 
__END_NAMESPACE_STD


457 #ifde‡
__USE_ISOC99


458 
__BEGIN_NAMESPACE_C99


460 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

461 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

462 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

463 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

464 
__END_NAMESPACE_C99


468 
__BEGIN_NAMESPACE_STD


471 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

476 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

477 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

478 
__THROW
;

479 
__END_NAMESPACE_STD


481 #ifde‡
__USE_ISOC99


482 
__BEGIN_NAMESPACE_C99


485 
__exãnsi⁄__


486 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

488 
__THROW
;

492 
__exãnsi⁄__


493 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

494 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

495 
__ba£
Ë
__THROW
;

496 
__END_NAMESPACE_C99


499 #ifde‡
__USE_GNU


502 
__exãnsi⁄__


503 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

504 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

505 
__THROW
;

509 
__exãnsi⁄__


510 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

511 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

512 
__ba£
Ë
__THROW
;

515 #ifde‡
__USE_GNU


529 
	~<xloˇÀ.h
>

533 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

534 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

535 
__loˇÀ_t
 
__loc
Ë
__THROW
;

537 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

546 
__exãnsi⁄__


547 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

549 
__ba£
, 
__loˇÀ_t
 
__loc
)

550 
__THROW
;

552 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

553 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

554 
__THROW
;

556 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

557 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

558 
__THROW
;

560 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

561 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

562 
__loˇÀ_t
 
__loc
Ë
__THROW
;

566 #ifde‡
__USE_XOPEN2K8


569 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

570 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

574 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

575 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
;

583 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

586 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


587 
__BEGIN_NAMESPACE_STD


590 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

597 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

598 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

607 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

608 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

609 
__THROW
 ;

615 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

616 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

617 
__gnuc_va_li°
 
__¨g
)

623 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

628 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

629 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

630 
__gnuc_va_li°
 
__¨g
)

631 
__THROW
 ;

638 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

639 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

648 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

649 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

650 
__THROW
 ;

652 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

653 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

654 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

655 #ifde‡
__REDIRECT


659 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

660 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_fwsˇnf
)

663 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

664 
__isoc99_wsˇnf
)

666 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

667 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

668 ...), 
__isoc99_swsˇnf
)

671 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

673 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

674 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

675 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

676 
__THROW
;

677 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

678 
	#wsˇnf
 
__isoc99_wsˇnf


	)

679 
	#swsˇnf
 
__isoc99_swsˇnf


	)

683 
__END_NAMESPACE_STD


686 #ifde‡
__USE_ISOC99


687 
__BEGIN_NAMESPACE_C99


692 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

693 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

694 
__gnuc_va_li°
 
__¨g
)

700 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

704 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

705 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

706 
__gnuc_va_li°
 
__¨g
)

707 
__THROW
 ;

709 #i‡!
deföed
 
__USE_GNU
 \

710 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

711 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

712 #ifde‡
__REDIRECT


713 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

714 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

717 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

718 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

720 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

721 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

725 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

726 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
);

728 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
);

730 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

731 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

732 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

733 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

734 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

735 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

739 
__END_NAMESPACE_C99


743 
__BEGIN_NAMESPACE_STD


748 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

755 
wöt_t
 
	`gëwch¨
 ();

762 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

769 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

777 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

778 
__FILE
 *
__ª°ri˘
 
__°ªam
);

784 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

792 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

793 
__END_NAMESPACE_STD


796 #ifde‡
__USE_GNU


804 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

805 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

813 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

821 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

830 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

831 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

840 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

841 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

850 
__FILE
 *
__ª°ri˘
 
__°ªam
);

854 
__BEGIN_NAMESPACE_C99


858 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

859 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

860 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

861 
__END_NAMESPACE_C99


863 #ifde‡
__USE_GNU


864 
	~<xloˇÀ.h
>

868 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

869 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

870 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

871 
__loˇÀ_t
 
__loc
Ë
__THROW
;

880 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


881 
	#__√ed_iswxxx


	)

882 
	~<w˘y≥.h
>

886 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


887 
	~<bôs/wch¨2.h
>

890 #ifde‡
__LDBL_COMPAT


891 
	~<bôs/wch¨-ldbl.h
>

894 
__END_DECLS


902 #unde‡
__√ed_mb°©e_t


903 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
227
7785
cligen-master/build.c
cligen-master/cligen.h
cligen-master/cligen_buf.c
cligen-master/cligen_buf.h
cligen-master/cligen_config.h
cligen-master/cligen_custom.h
cligen-master/cligen_cv.h
cligen-master/cligen_cvec.c
cligen-master/cligen_cvec.h
cligen-master/cligen_expand.c
cligen-master/cligen_expand.h
cligen-master/cligen_file.c
cligen-master/cligen_gen.c
cligen-master/cligen_gen.h
cligen-master/cligen_handle.c
cligen-master/cligen_handle.h
cligen-master/cligen_hello.c
cligen-master/cligen_io.c
cligen-master/cligen_io.h
cligen-master/cligen_match.c
cligen-master/cligen_match.h
cligen-master/cligen_parse.h
cligen-master/cligen_parse.tab.c
cligen-master/cligen_parse.tab.h
cligen-master/cligen_print.c
cligen-master/cligen_print.h
cligen-master/cligen_read.c
cligen-master/cligen_read.h
cligen-master/cligen_syntax.c
cligen-master/cligen_syntax.h
cligen-master/cligen_tutorial.c
cligen-master/cligen_util.c
cligen-master/cligen_util.h
cligen-master/cligen_var.c
cligen-master/cligen_var.h
cligen-master/getline.c
cligen-master/getline.h
cligen-master/lex.cligen_parse.c
clixon-master/apps/backend/backend_client.c
clixon-master/apps/backend/backend_client.h
clixon-master/apps/backend/backend_commit.c
clixon-master/apps/backend/backend_commit.h
clixon-master/apps/backend/backend_handle.h
clixon-master/apps/backend/backend_main.c
clixon-master/apps/backend/backend_plugin.c
clixon-master/apps/backend/backend_plugin.h
clixon-master/apps/backend/backend_socket.c
clixon-master/apps/backend/backend_socket.h
clixon-master/apps/backend/clixon_backend.h
clixon-master/apps/backend/clixon_backend_handle.c
clixon-master/apps/backend/clixon_backend_handle.h
clixon-master/apps/backend/clixon_backend_transaction.c
clixon-master/apps/backend/clixon_backend_transaction.h
clixon-master/apps/backend/test.c
clixon-master/apps/cli/cli_common.c
clixon-master/apps/cli/cli_common.h
clixon-master/apps/cli/cli_generate.c
clixon-master/apps/cli/cli_generate.h
clixon-master/apps/cli/cli_handle.c
clixon-master/apps/cli/cli_handle.h
clixon-master/apps/cli/cli_main.c
clixon-master/apps/cli/cli_plugin.c
clixon-master/apps/cli/cli_plugin.h
clixon-master/apps/cli/cli_show.c
clixon-master/apps/cli/clixon_cli.h
clixon-master/apps/cli/clixon_cli_api.h
clixon-master/apps/cli/test.c
clixon-master/apps/netconf/clixon_netconf.h
clixon-master/apps/netconf/netconf_filter.c
clixon-master/apps/netconf/netconf_filter.h
clixon-master/apps/netconf/netconf_hello.c
clixon-master/apps/netconf/netconf_hello.h
clixon-master/apps/netconf/netconf_lib.c
clixon-master/apps/netconf/netconf_lib.h
clixon-master/apps/netconf/netconf_main.c
clixon-master/apps/netconf/netconf_rpc.c
clixon-master/apps/netconf/netconf_rpc.h
clixon-master/apps/restconf/clixon_restconf.h
clixon-master/apps/restconf/restconf_lib.c
clixon-master/apps/restconf/restconf_lib.h
clixon-master/apps/restconf/restconf_main.c
clixon-master/apps/restconf/restconf_methods.c
clixon-master/apps/restconf/restconf_methods.h
clixon-master/clixon.mk.cpp
clixon-master/datastore/datastore_client.c
clixon-master/datastore/keyvalue/clixon_chunk.c
clixon-master/datastore/keyvalue/clixon_chunk.h
clixon-master/datastore/keyvalue/clixon_keyvalue.c
clixon-master/datastore/keyvalue/clixon_keyvalue.h
clixon-master/datastore/keyvalue/clixon_qdb.c
clixon-master/datastore/keyvalue/clixon_qdb.h
clixon-master/datastore/text/clixon_xmldb_text.c
clixon-master/datastore/text/clixon_xmldb_text.h
clixon-master/example/docker/run.sh
clixon-master/example/example_backend.c
clixon-master/example/example_backend_nacm.c
clixon-master/example/example_cli.c
clixon-master/example/example_netconf.c
clixon-master/example/example_restconf.c
clixon-master/include/clixon_config.h
clixon-master/include/clixon_custom.h
clixon-master/lib/clixon/clixon.h
clixon-master/lib/clixon/clixon_err.h
clixon-master/lib/clixon/clixon_event.h
clixon-master/lib/clixon/clixon_file.h
clixon-master/lib/clixon/clixon_handle.h
clixon-master/lib/clixon/clixon_hash.h
clixon-master/lib/clixon/clixon_json.h
clixon-master/lib/clixon/clixon_log.h
clixon-master/lib/clixon/clixon_netconf_lib.h
clixon-master/lib/clixon/clixon_options.h
clixon-master/lib/clixon/clixon_plugin.h
clixon-master/lib/clixon/clixon_proto.h
clixon-master/lib/clixon/clixon_proto_client.h
clixon-master/lib/clixon/clixon_queue.h
clixon-master/lib/clixon/clixon_sha1.h
clixon-master/lib/clixon/clixon_sig.h
clixon-master/lib/clixon/clixon_string.h
clixon-master/lib/clixon/clixon_xml.h
clixon-master/lib/clixon/clixon_xml_db.h
clixon-master/lib/clixon/clixon_xml_map.h
clixon-master/lib/clixon/clixon_xml_sort.h
clixon-master/lib/clixon/clixon_xsl.h
clixon-master/lib/clixon/clixon_yang.h
clixon-master/lib/clixon/clixon_yang_type.h
clixon-master/lib/src/build.c
clixon-master/lib/src/clixon_err.c
clixon-master/lib/src/clixon_event.c
clixon-master/lib/src/clixon_file.c
clixon-master/lib/src/clixon_handle.c
clixon-master/lib/src/clixon_hash.c
clixon-master/lib/src/clixon_json.c
clixon-master/lib/src/clixon_json_parse.h
clixon-master/lib/src/clixon_json_parse.tab.c
clixon-master/lib/src/clixon_json_parse.tab.h
clixon-master/lib/src/clixon_log.c
clixon-master/lib/src/clixon_netconf_lib.c
clixon-master/lib/src/clixon_options.c
clixon-master/lib/src/clixon_plugin.c
clixon-master/lib/src/clixon_proto.c
clixon-master/lib/src/clixon_proto_client.c
clixon-master/lib/src/clixon_sha1.c
clixon-master/lib/src/clixon_sig.c
clixon-master/lib/src/clixon_string.c
clixon-master/lib/src/clixon_xml.c
clixon-master/lib/src/clixon_xml_db.c
clixon-master/lib/src/clixon_xml_map.c
clixon-master/lib/src/clixon_xml_parse.h
clixon-master/lib/src/clixon_xml_parse.tab.c
clixon-master/lib/src/clixon_xml_parse.tab.h
clixon-master/lib/src/clixon_xml_sort.c
clixon-master/lib/src/clixon_xsl.c
clixon-master/lib/src/clixon_yang.c
clixon-master/lib/src/clixon_yang_parse.h
clixon-master/lib/src/clixon_yang_parse.tab.c
clixon-master/lib/src/clixon_yang_parse.tab.h
clixon-master/lib/src/clixon_yang_type.c
clixon-master/lib/src/json_xpath.c
clixon-master/lib/src/lex.clixon_json_parse.c
clixon-master/lib/src/lex.clixon_xml_parse.c
clixon-master/lib/src/lex.clixon_yang_parse.c
clixon-master/test/all.sh
clixon-master/test/lib.sh
clixon-master/test/plot_perf.sh
clixon-master/test/test_auth.sh
clixon-master/test/test_auth_ext.sh
clixon-master/test/test_cli.sh
clixon-master/test/test_datastore.sh
clixon-master/test/test_install.sh
clixon-master/test/test_leafref.sh
clixon-master/test/test_netconf.sh
clixon-master/test/test_order.sh
clixon-master/test/test_perf.sh
clixon-master/test/test_restconf.sh
clixon-master/test/test_restconf2.sh
clixon-master/test/test_startup.sh
clixon-master/test/test_type.sh
clixon-master/test/test_yang.sh
/usr/include/alloca.h
/usr/include/arpa/inet.h
/usr/include/assert.h
/usr/include/crypt.h
/usr/include/ctype.h
/usr/include/curl/curl.h
/usr/include/dirent.h
/usr/include/dlfcn.h
/usr/include/errno.h
/usr/include/fcgi_stdio.h
/usr/include/fcntl.h
/usr/include/fnmatch.h
/usr/include/grp.h
/usr/include/ifaddrs.h
/usr/include/inttypes.h
/usr/include/libgen.h
/usr/include/libintl.h
/usr/include/limits.h
/usr/include/malloc.h
/usr/include/math.h
/usr/include/net/if.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/pwd.h
/usr/include/regex.h
/usr/include/sgtty.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/syslog.h
/usr/include/termio.h
/usr/include/termios.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/endian.h
/usr/include/fcgiapp.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/locale.h
/usr/include/rpc/netdb.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/stdc-predef.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
